const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":833,\"nextId\":833,\"documentIds\":{\"0\":\"v-6a6653d3\",\"1\":\"v-08abad86\",\"2\":\"v-08abad86#开博前言\",\"3\":\"v-08abad86#博客内容\",\"4\":\"v-08abad86#开博结束语\",\"5\":\"v-2e25198a\",\"6\":\"v-bf22edb8\",\"7\":\"v-7e1f989b\",\"8\":\"v-f0f3bc2c\",\"9\":\"v-f0f3bc2c#引起注意\",\"10\":\"v-f0f3bc2c#分析源码\",\"11\":\"v-f0f3bc2c#结论\",\"12\":\"v-7630e300\",\"13\":\"v-14e6501c\",\"14\":\"v-14e6501c#工具\",\"15\":\"v-17a8b280\",\"16\":\"v-17a8b280#工具链接\",\"17\":\"v-17a8b280#友情链接-1\",\"18\":\"v-050f76d5\",\"19\":\"v-050f76d5#安装插件\",\"20\":\"v-050f76d5#插件注册\",\"21\":\"v-050f76d5#插件配置\",\"22\":\"v-050f76d5#_1-开启离线模式\",\"23\":\"v-050f76d5#_2-打开自动编译\",\"24\":\"v-050f76d5#_3-使用-jrebel\",\"25\":\"v-f4fc65cc\",\"26\":\"v-f4fc65cc#前言\",\"27\":\"v-f4fc65cc#开始破解\",\"28\":\"v-1559ca3e\",\"29\":\"v-02144ce0\",\"30\":\"v-02144ce0#java简介\",\"31\":\"v-02144ce0#什么是编程\",\"32\":\"v-02144ce0#java语言\",\"33\":\"v-02144ce0#跨平台原理\",\"34\":\"v-02144ce0#_1、多次编译-到处运行\",\"35\":\"v-02144ce0#_2、一次编译-到处运行\",\"36\":\"v-02144ce0#总结java-跨平台原因\",\"37\":\"v-02144ce0#jdk\",\"38\":\"v-02144ce0#数据类型\",\"39\":\"v-02144ce0#基本数据类型转换\",\"40\":\"v-02144ce0#包装类\",\"41\":\"v-02144ce0#缓存池\",\"42\":\"v-02144ce0#运算符\",\"43\":\"v-02144ce0#jvm内存模型\",\"44\":\"v-02144ce0#数组类型\",\"45\":\"v-02144ce0#数组的定义\",\"46\":\"v-02144ce0#静态初始化\",\"47\":\"v-02144ce0#动态初始化\",\"48\":\"v-02144ce0#数组初始化内存图分析\",\"49\":\"v-02144ce0#数组特点\",\"50\":\"v-02144ce0#object-常用方法\",\"51\":\"v-02144ce0#方法摘要\",\"52\":\"v-02144ce0#tostring\",\"53\":\"v-02144ce0#源码分析\",\"54\":\"v-02144ce0#演示\",\"55\":\"v-02144ce0#equals\",\"56\":\"v-02144ce0#源码分析-1\",\"57\":\"v-02144ce0#equals-与-的区别\",\"58\":\"v-02144ce0#演示-1\",\"59\":\"v-02144ce0#hashcode\",\"60\":\"v-02144ce0#演示代码\",\"61\":\"v-02144ce0#clone\",\"62\":\"v-02144ce0#_1-cloneable\",\"63\":\"v-02144ce0#_2-浅拷贝\",\"64\":\"v-02144ce0#_3-深拷贝\",\"65\":\"v-02144ce0#_4-重写-clone-的规则\",\"66\":\"v-02144ce0#_5-clone-的代替方案\",\"67\":\"v-02144ce0#关键字\",\"68\":\"v-02144ce0#this\",\"69\":\"v-02144ce0#内存图\",\"70\":\"v-02144ce0#super\",\"71\":\"v-02144ce0#static\",\"72\":\"v-02144ce0#_1-静态变量\",\"73\":\"v-02144ce0#_2-静态方法\",\"74\":\"v-02144ce0#_3-静态语句块\",\"75\":\"v-02144ce0#_4-静态内部类\",\"76\":\"v-02144ce0#_5-静态导包\",\"77\":\"v-02144ce0#_6-初始化顺序\",\"78\":\"v-02144ce0#final\",\"79\":\"v-02144ce0#内部类\",\"80\":\"v-02144ce0#内部类概念\",\"81\":\"v-02144ce0#实例内部类\",\"82\":\"v-02144ce0#静态内部类\",\"83\":\"v-02144ce0#方法内部类\",\"84\":\"v-02144ce0#匿名内部类\",\"85\":\"v-02144ce0#参考资料\",\"86\":\"v-0b6534c8\",\"87\":\"v-0b6534c8#封装\",\"88\":\"v-0b6534c8#封装好处\",\"89\":\"v-0b6534c8#javabean的三个规范\",\"90\":\"v-0b6534c8#继承\",\"91\":\"v-0b6534c8#访问修饰符\",\"92\":\"v-0b6534c8#_1-什么是抽象类\",\"93\":\"v-0b6534c8#_2-什么是接口\",\"94\":\"v-0b6534c8#接口特性\",\"95\":\"v-0b6534c8#接口实现方式\",\"96\":\"v-0b6534c8#_3-抽象与接口的区别\",\"97\":\"v-0b6534c8#相同点\",\"98\":\"v-0b6534c8#不同点\",\"99\":\"v-0b6534c8#_4-何时使用抽象、接口\",\"100\":\"v-0b6534c8#多态\",\"101\":\"v-0b6534c8#_1、分类\",\"102\":\"v-0b6534c8#_2、必要条件\",\"103\":\"v-0b6534c8#_3、继承关系\",\"104\":\"v-0b6534c8#_4、实现关系\",\"105\":\"v-0b6534c8#_5、多态时方法调用问题\",\"106\":\"v-0b6534c8#_6、多态中的类型转换\",\"107\":\"v-0b6534c8#类型转换\",\"108\":\"v-0b6534c8#instanceof\",\"109\":\"v-0b6534c8#_7、多态总结\",\"110\":\"v-0b6534c8#参考资料\",\"111\":\"v-dcd7eb30\",\"112\":\"v-dcd7eb30#时间戳-timestamp-概念\",\"113\":\"v-dcd7eb30#date-类\",\"114\":\"v-dcd7eb30#常用方法\",\"115\":\"v-dcd7eb30#simpledateformat-类\",\"116\":\"v-dcd7eb30#calendar-类\",\"117\":\"v-dcd7eb30#常用方法-1\",\"118\":\"v-24ce0ae1\",\"119\":\"v-24ce0ae1#带着bat大厂的面试问题去理解\",\"120\":\"v-24ce0ae1#什么是反射机制\",\"121\":\"v-24ce0ae1#class-字节码对象\",\"122\":\"v-24ce0ae1#获取字节码对象的三种方式\",\"123\":\"v-24ce0ae1#反射前言\",\"124\":\"v-24ce0ae1#反射-api\",\"125\":\"v-24ce0ae1#newinstance\",\"126\":\"v-24ce0ae1#accessibleobject\",\"127\":\"v-24ce0ae1#获取构造器-constructor\",\"128\":\"v-24ce0ae1#获取方法-method\",\"129\":\"v-24ce0ae1#获取字段-field\",\"130\":\"v-24ce0ae1#内省-introspector\",\"131\":\"v-24ce0ae1#介绍\",\"132\":\"v-24ce0ae1#内省的作用\",\"133\":\"v-24ce0ae1#内省相关类以及api\",\"134\":\"v-24ce0ae1#内省实战\",\"135\":\"v-24ce0ae1#javabean-to-map-实现\",\"136\":\"v-3377a7b5\",\"137\":\"v-3377a7b5#参考资料\",\"138\":\"v-3377a7b5#string-概念\",\"139\":\"v-3377a7b5#不可变的好处\",\"140\":\"v-3377a7b5#_1-string-pool-字符缓存池\",\"141\":\"v-3377a7b5#_2-线程安全\",\"142\":\"v-3377a7b5#string-stringbuffer-stringbuilder\",\"143\":\"v-3377a7b5#_1-可变性\",\"144\":\"v-3377a7b5#_2-线程安全-1\",\"145\":\"v-3377a7b5#stringbuffer\",\"146\":\"v-3377a7b5#stringbuffer-构造方法\",\"147\":\"v-3377a7b5#stringbuffer和stringbuilder-常用方法\",\"148\":\"v-3377a7b5#自动扩容源码分析\",\"149\":\"v-3377a7b5#append\",\"150\":\"v-3377a7b5#ensurecapacityinternal\",\"151\":\"v-3377a7b5#newcapacity\",\"152\":\"v-3377a7b5#总结\",\"153\":\"v-3377a7b5#string-intern\",\"154\":\"v-3377a7b5#string-常量池\",\"155\":\"v-3377a7b5#intern-分析\",\"156\":\"v-3377a7b5#总结-1\",\"157\":\"v-2e80a82c\",\"158\":\"v-2e80a82c#枚举类的介绍\",\"159\":\"v-2e80a82c#枚举类的使用规则\",\"160\":\"v-2e80a82c#枚举类的应用场景\",\"161\":\"v-2e80a82c#使用案例\",\"162\":\"v-38e624d6\",\"163\":\"v-ea50ac3a\",\"164\":\"v-ea50ac3a#数据结构概述\",\"165\":\"v-ea50ac3a#常见的数据结构\",\"166\":\"v-ea50ac3a#线性数据结构\",\"167\":\"v-ea50ac3a#数组-array\",\"168\":\"v-ea50ac3a#链表-linked\",\"169\":\"v-ea50ac3a#队列-queue\",\"170\":\"v-ea50ac3a#栈-stack\",\"171\":\"v-ea50ac3a#集合框架体系\",\"172\":\"v-ea50ac3a#iterable-接口\",\"173\":\"v-ea50ac3a#collection-顶层接口\",\"174\":\"v-ea50ac3a#list-接口\",\"175\":\"v-ea50ac3a#常用实现类\",\"176\":\"v-ea50ac3a#常用-api\",\"177\":\"v-ea50ac3a#arraylist\",\"178\":\"v-ea50ac3a#vector\",\"179\":\"v-ea50ac3a#linkedlist\",\"180\":\"v-ea50ac3a#常用-api-1\",\"181\":\"v-ea50ac3a#stack\",\"182\":\"v-ea50ac3a#set-接口\",\"183\":\"v-ea50ac3a#常用实现类-1\",\"184\":\"v-ea50ac3a#常用-api-2\",\"185\":\"v-ea50ac3a#hashset\",\"186\":\"v-ea50ac3a#底层工作原理\",\"187\":\"v-ea50ac3a#hashcode-和-equals\",\"188\":\"v-ea50ac3a#treeset\",\"189\":\"v-ea50ac3a#comparable-接口\",\"190\":\"v-ea50ac3a#comparator-接口\",\"191\":\"v-ea50ac3a#map-接口\",\"192\":\"v-ea50ac3a#常用实现类-2\",\"193\":\"v-ea50ac3a#常用-api-3\",\"194\":\"v-ea50ac3a#hashmap\",\"195\":\"v-ea50ac3a#treemap\",\"196\":\"v-ea50ac3a#集合框架-工具类\",\"197\":\"v-ea50ac3a#arrays\",\"198\":\"v-ea50ac3a#collections\",\"199\":\"v-7ae9a406\",\"200\":\"v-6a2abaab\",\"201\":\"v-6a2abaab#带着bat大厂的面试问题去理解\",\"202\":\"v-6a2abaab#进程的发明\",\"203\":\"v-6a2abaab#并发和并行的概念\",\"204\":\"v-6a2abaab#线程的出现\",\"205\":\"v-6a2abaab#进程和线程的区别\",\"206\":\"v-6a2abaab#线程不安全实例\",\"207\":\"v-6a2abaab#实现线程安全\",\"208\":\"v-6a2abaab#_1-互斥同步\",\"209\":\"v-17cdc827\",\"210\":\"v-17cdc827#带着bat大厂的面试题去理解\",\"211\":\"v-17cdc827#线程状态\",\"212\":\"v-17cdc827#新生状态\",\"213\":\"v-17cdc827#就绪状态\",\"214\":\"v-17cdc827#运行状态\",\"215\":\"v-17cdc827#阻塞状态\",\"216\":\"v-17cdc827#死亡状态\",\"217\":\"v-17cdc827#线程使用\",\"218\":\"v-17cdc827#继承-thread-类\",\"219\":\"v-17cdc827#实现-runnable-接口\",\"220\":\"v-17cdc827#线程常用方式\",\"221\":\"v-17cdc827#sleep\",\"222\":\"v-17cdc827#wait\",\"223\":\"v-17cdc827#yield\",\"224\":\"v-17cdc827#daemon\",\"225\":\"v-17cdc827#join\",\"226\":\"v-17cdc827#setpriority\",\"227\":\"v-17cdc827#线程互斥同步\",\"228\":\"v-17cdc827#synchronized\",\"229\":\"v-17cdc827#_1-同步代码块\",\"230\":\"v-17cdc827#_2-同步方法\",\"231\":\"v-17cdc827#_3-同步类\",\"232\":\"v-17cdc827#_4-同步静态方法\",\"233\":\"v-17cdc827#reentrantlock\",\"234\":\"v-5619a060\",\"235\":\"v-1bb1bfb9\",\"236\":\"v-1bb1bfb9#file-类\",\"237\":\"v-1bb1bfb9#字符编码\",\"238\":\"v-1bb1bfb9#常见的字符集\",\"239\":\"v-1bb1bfb9#编码解码操作\",\"240\":\"v-1bb1bfb9#四大基流\",\"241\":\"v-1bb1bfb9#字节输入-字节输出流\",\"242\":\"v-1bb1bfb9#inputstream-字节输入流\",\"243\":\"v-1bb1bfb9#outputstream-字节输出流\",\"244\":\"v-1bb1bfb9#文件字节流\",\"245\":\"v-1bb1bfb9#字符输入-输出流\",\"246\":\"v-1bb1bfb9#reader-字符输入流\",\"247\":\"v-1bb1bfb9#writer-字符输出流\",\"248\":\"v-1bb1bfb9#文件字符流\",\"249\":\"v-1bb1bfb9#补充知识点\",\"250\":\"v-1bb1bfb9#按资源分类i-o流\",\"251\":\"v-1bb1bfb9#缓冲流\",\"252\":\"v-1bb1bfb9#字节缓冲流\",\"253\":\"v-1bb1bfb9#字符缓冲流\",\"254\":\"v-1bb1bfb9#serializable-对象序列化\",\"255\":\"v-ebb1cc28\",\"256\":\"v-ebb1cc28#装饰器模式\",\"257\":\"v-ebb1cc28#抽象装饰者-decorator\",\"258\":\"v-9073e716\",\"259\":\"v-0118db57\",\"260\":\"v-0118db57#开发环境\",\"261\":\"v-0118db57#实际场景\",\"262\":\"v-0118db57#问题解决\",\"263\":\"v-12885482\",\"264\":\"v-3a73ff48\",\"265\":\"v-3a73ff48#相关文章\",\"266\":\"v-3a73ff48#参考资料\",\"267\":\"v-28da2009\",\"268\":\"v-28da2009#什么是-elasticsearch\",\"269\":\"v-28da2009#为什么使用-elasticsearch\",\"270\":\"v-28da2009#elasticsearch-的特点\",\"271\":\"v-28da2009#主要功能以及使用场景\",\"272\":\"v-28da2009#elasticsearch-的基础概念\",\"273\":\"v-28da2009#索引-index\",\"274\":\"v-28da2009#类型-type\",\"275\":\"v-28da2009#文档-document\",\"276\":\"v-28da2009#集群相关\",\"277\":\"v-28da2009#倒排索引\",\"278\":\"v-28da2009#参考资料\",\"279\":\"v-9256a06e\",\"280\":\"v-9256a06e#官方教程\",\"281\":\"v-9256a06e#安装-elasticsearch\",\"282\":\"v-9256a06e#配置文件-elasticsearch-yaml\",\"283\":\"v-9256a06e#安装-kibana\",\"284\":\"v-9256a06e#kibana-设置中文\",\"285\":\"v-c58902b8\",\"286\":\"v-c58902b8#参考资料\",\"287\":\"v-c58902b8#elasticsearch-基础-api\",\"288\":\"v-c58902b8#cat-操作\",\"289\":\"v-c58902b8#索引一个文档-保存\",\"290\":\"v-c58902b8#查询文档\",\"291\":\"v-c58902b8#更新文档\",\"292\":\"v-c58902b8#删除文档或索引\",\"293\":\"v-c58902b8#bulk-批量-api\",\"294\":\"v-c58902b8#学习准备-导入测试数据\",\"295\":\"v-c58902b8#下载测试数据\",\"296\":\"v-c58902b8#批量插入数据\",\"297\":\"v-c58902b8#查询数据-kibana\",\"298\":\"v-c58902b8#进阶检索\",\"299\":\"v-c58902b8#检索信息\",\"300\":\"v-c58902b8#uri-请求体进行检索\",\"301\":\"v-c58902b8#query-dsl\",\"302\":\"v-c58902b8#基本语法格式\",\"303\":\"v-c58902b8#查询语句结构\",\"304\":\"v-c58902b8#返回部分字段\",\"305\":\"v-c58902b8#match【匹配查询】\",\"306\":\"v-c58902b8#match-phrase【短语匹配】\",\"307\":\"v-c58902b8#multi-match【多字段匹配】\",\"308\":\"v-c58902b8#bool【复合查询】\",\"309\":\"v-c58902b8#range【区间查询】\",\"310\":\"v-c58902b8#filter【结果过滤】\",\"311\":\"v-c58902b8#term-查询\",\"312\":\"v-c58902b8#aggregation【聚合查询】\",\"313\":\"v-c58902b8#简单聚合\",\"314\":\"v-c58902b8#复杂查询-聚合排序\",\"315\":\"v-1ab5c8cd\",\"316\":\"v-1ab5c8cd#elasticsearch-内置分词器\",\"317\":\"v-1ab5c8cd#安装-ik-分词器\",\"318\":\"v-1ab5c8cd#ik-分词使用\",\"319\":\"v-1ab5c8cd#默认分词拆分\",\"320\":\"v-1ab5c8cd#ik-smart-分词\",\"321\":\"v-1ab5c8cd#ik-max-word-分词\",\"322\":\"v-1ab5c8cd#自定义词库\",\"323\":\"v-1ab5c8cd#新建词库文件\",\"324\":\"v-1ab5c8cd#引入自定义词库\",\"325\":\"v-1ab5c8cd#重启es\",\"326\":\"v-1ab5c8cd#演示效果\",\"327\":\"v-291a5006\",\"328\":\"v-291a5006#配置环境\",\"329\":\"v-291a5006#导入-pom-文件\",\"330\":\"v-291a5006#配置文件\",\"331\":\"v-291a5006#开启注解\",\"332\":\"v-291a5006#编写对应的-javabean\",\"333\":\"v-291a5006#documnet-注解\",\"334\":\"v-291a5006#field-注解\",\"335\":\"v-291a5006#创建-repository\",\"336\":\"v-291a5006#crud-操作\",\"337\":\"v-291a5006#elasticsearchresttemplate\",\"338\":\"v-291a5006#crud-索引\",\"339\":\"v-4f768a74\",\"340\":\"v-4f768a74#例子🌰\",\"341\":\"v-4f768a74#映射结构\",\"342\":\"v-4f768a74#高亮设置\",\"343\":\"v-4f768a74#number-of-fragments\",\"344\":\"v-4f768a74#fragment-size\",\"345\":\"v-4f768a74#pre-tags\",\"346\":\"v-4f768a74#post-tags\",\"347\":\"v-4f768a74#order\",\"348\":\"v-4f768a74#java-代码实现高亮查询\",\"349\":\"v-037fd512\",\"350\":\"v-037fd512#查询条件对象\",\"351\":\"v-037fd512#数据准备\",\"352\":\"v-037fd512#基本分词查询\",\"353\":\"v-037fd512#分页查询\",\"354\":\"v-037fd512#排序\",\"355\":\"v-037fd512#聚合\",\"356\":\"v-037fd512#嵌套聚合-求平均值\",\"357\":\"v-1b51a13c\",\"358\":\"v-1b51a13c#相关文章\",\"359\":\"v-1b51a13c#学习资料\",\"360\":\"v-47ee9845\",\"361\":\"v-47ee9845#mongo-的基本概念\",\"362\":\"v-47ee9845#mongodb与rdbms区别\",\"363\":\"v-47ee9845#mongo-的术语\",\"364\":\"v-47ee9845#mongo-的数据类型\",\"365\":\"v-b9691aae\",\"366\":\"v-b9691aae#mongodb-下载\",\"367\":\"v-b9691aae#window-平台的安装\",\"368\":\"v-b9691aae#配置mongodb\",\"369\":\"v-b9691aae#运行-mongodb\",\"370\":\"v-b9691aae#linux-平台的安装\",\"371\":\"v-b9691aae#_1-导入包管理系统使用的公钥\",\"372\":\"v-b9691aae#_2-为-mongodb-创建一个列表文件\",\"373\":\"v-b9691aae#_3-重新加载本地包数据库\",\"374\":\"v-b9691aae#_4-安装-mongodb-包\",\"375\":\"v-b9691aae#_5-运行-mongodb\",\"376\":\"v-b9691aae#_6-卸载-mongodb\",\"377\":\"v-b9691aae#mac-平台的安装\",\"378\":\"v-1170ab4f\",\"379\":\"v-1170ab4f#导入-pom-文件\",\"380\":\"v-1170ab4f#配置文件\",\"381\":\"v-1170ab4f#开启注解\",\"382\":\"v-1170ab4f#编写对应的-javabean\",\"383\":\"v-1170ab4f#创建-repository\",\"384\":\"v-1170ab4f#mongotemplate-api-方法大全\",\"385\":\"v-1170ab4f#is-查询\",\"386\":\"v-1170ab4f#模糊查询-正则\",\"387\":\"v-1170ab4f#lt和gt\",\"388\":\"v-1170ab4f#结果排序\",\"389\":\"v-1170ab4f#分页\",\"390\":\"v-1170ab4f#repository-使用\",\"391\":\"v-1170ab4f#findbyx\",\"392\":\"v-1170ab4f#startingwith-and-endingwith\",\"393\":\"v-1170ab4f#between\",\"394\":\"v-1170ab4f#like和orderby\",\"395\":\"v-1170ab4f#原始查询\",\"396\":\"v-1170ab4f#findby\",\"397\":\"v-1170ab4f#regex\",\"398\":\"v-755cf353\",\"399\":\"v-755cf353#演示类-venue\",\"400\":\"v-755cf353#circle-查询\",\"401\":\"v-755cf353#box-查询\",\"402\":\"v-755cf353#point-查询\",\"403\":\"v-755cf353#地理附近查询\",\"404\":\"v-755cf353#参考资料\",\"405\":\"v-76624c84\",\"406\":\"v-76624c84#创建用户\",\"407\":\"v-76624c84#修改密码\",\"408\":\"v-76624c84#_1-update-user表\",\"409\":\"v-76624c84#_2-alter-user-修改\",\"410\":\"v-76624c84#_3-set-password-命令\",\"411\":\"v-76624c84#忘记-root-密码\",\"412\":\"v-76624c84#查看用户权限\",\"413\":\"v-76624c84#用户授权命令-grant\",\"414\":\"v-76624c84#_1-授权用户-增删改查数据中所有表的权利\",\"415\":\"v-76624c84#_2-授权用户-创建、删除、视图等权限\",\"416\":\"v-76624c84#_3-授权用户所有权限\",\"417\":\"v-76624c84#_4-grant-可用的权限列表\",\"418\":\"v-76624c84#取消授权命令-revoke\",\"419\":\"v-76624c84#删除用户\",\"420\":\"v-76624c84#常用命令组\",\"421\":\"v-59e71a4a\",\"422\":\"v-59e71a4a#查看-mysql-全局的-sql-mode\",\"423\":\"v-59e71a4a#修改-my-cnf-配置文件\",\"424\":\"v-59e71a4a#sql-mode常用值\",\"425\":\"v-6e9f571b\",\"426\":\"v-6e9f571b#知识体系图\",\"427\":\"v-6e9f571b#相关文章\",\"428\":\"v-6e9f571b#学习资料\",\"429\":\"v-043fe082\",\"430\":\"v-043fe082#什么是-redis\",\"431\":\"v-043fe082#redis-有什么优势\",\"432\":\"v-043fe082#redis-的使用场景\",\"433\":\"v-043fe082#缓存热点数据\",\"434\":\"v-043fe082#限时业务\",\"435\":\"v-043fe082#点赞、好友等相互关系的存储\",\"436\":\"v-043fe082#参考文章\",\"437\":\"v-9bbb333c\",\"438\":\"v-9bbb333c#redis-数据结构简介\",\"439\":\"v-9bbb333c#基础数据结构详解\",\"440\":\"v-9bbb333c#字符串类型-string\",\"441\":\"v-9bbb333c#散列类型-hash\",\"442\":\"v-9bbb333c#列表类型-list\",\"443\":\"v-9bbb333c#集合类型-set\",\"444\":\"v-9bbb333c#有序集合类型-zset\",\"445\":\"v-9bbb333c#参考文章\",\"446\":\"v-c530905c\",\"447\":\"v-c530905c#前言\",\"448\":\"v-c530905c#rdb-持久化\",\"449\":\"v-c530905c#手动触发\",\"450\":\"v-c530905c#自动触发\",\"451\":\"v-c530905c#redis-conf中配置rdb\",\"452\":\"v-c530905c#rdb-的优缺点\",\"453\":\"v-c530905c#aof-持久化\",\"454\":\"v-c530905c#如何实现-aof\",\"455\":\"v-c530905c#conf-配置aof\",\"456\":\"v-c530905c#rdb和aof混合方式\",\"457\":\"v-c530905c#参考文档\",\"458\":\"v-3ca5a0d0\",\"459\":\"v-3ca5a0d0#key-过期策略\",\"460\":\"v-3ca5a0d0#惰性删除\",\"461\":\"v-3ca5a0d0#定时删除\",\"462\":\"v-3ca5a0d0#定期删除\",\"463\":\"v-3ca5a0d0#redis-内存淘汰机制-1\",\"464\":\"v-3ca5a0d0#maxmemory-policy-配置选项\",\"465\":\"v-3ca5a0d0#参考资料\",\"466\":\"v-116890b4\",\"467\":\"v-116890b4#为什么要使用设计模式\",\"468\":\"v-116890b4#设计模式的七大原则\",\"469\":\"v-116890b4#_23-种设计模式\",\"470\":\"v-116890b4#一、创建型模式\",\"471\":\"v-116890b4#二、结构型模式\",\"472\":\"v-116890b4#三、行为型模式\",\"473\":\"v-116890b4#参考资料\",\"474\":\"v-0c84f533\",\"475\":\"v-0c84f533#装饰器模式介绍\",\"476\":\"v-0c84f533#装饰器的结构\",\"477\":\"v-0c84f533#装饰器的案例模拟\",\"478\":\"v-0c84f533#装饰器模式的应用场景\",\"479\":\"v-0c84f533#参考资料\",\"480\":\"v-26910afd\",\"481\":\"v-26910afd#责任链-优缺点\",\"482\":\"v-26910afd#责任链模式的结构与实现\",\"483\":\"v-26910afd#责任链模式的结构\",\"484\":\"v-26910afd#代码实现\",\"485\":\"v-0ec3d077\",\"486\":\"v-0ec3d077#一、activiti7-介绍\",\"487\":\"v-0ec3d077#二、activiti7-使用\",\"488\":\"v-0ec3d077#业务流程建模\",\"489\":\"v-0ec3d077#部署业务流程\",\"490\":\"v-0ec3d077#启动流程实例\",\"491\":\"v-0ec3d077#查询待办任务\",\"492\":\"v-0ec3d077#处理待办任务\",\"493\":\"v-0ec3d077#结束流程\",\"494\":\"v-0ec3d077#三、集成-activiti7-环境\",\"495\":\"v-0ec3d077#_1-普通-maven-项目集成\",\"496\":\"v-0ec3d077#_2-springboot-集成\",\"497\":\"v-0ec3d077#排除spring-security配置\",\"498\":\"v-0ec3d077#四、绘制流程图\",\"499\":\"v-0ec3d077#生成png格式流程图\",\"500\":\"v-0ec3d077#五、流程引擎-api\",\"501\":\"v-0ec3d077#六、activiti7-api-使用\",\"502\":\"v-0ec3d077#部署流程定义\",\"503\":\"v-0ec3d077#启动流程实例-1\",\"504\":\"v-0ec3d077#查找用户任务\",\"505\":\"v-0ec3d077#处理任务、以及添加批注\",\"506\":\"v-0ec3d077#查询历史批注信息\",\"507\":\"v-03234e92\",\"508\":\"v-03234e92#流程定义相关\",\"509\":\"v-03234e92#查询流程定义\",\"510\":\"v-03234e92#删除流程定义\",\"511\":\"v-03234e92#流程资源下载\",\"512\":\"v-03234e92#流程实例相关\",\"513\":\"v-03234e92#业务标识-businesskey\",\"514\":\"v-03234e92#流程挂起、激活\",\"515\":\"v-03234e92#任务分配负责人\",\"516\":\"v-03234e92#固定分配\",\"517\":\"v-03234e92#uel-表达式分配\",\"518\":\"v-03234e92#监听器分配-使用麻烦-极少使用\",\"519\":\"v-03234e92#流程变量\",\"520\":\"v-03234e92#流程变量类型\",\"521\":\"v-03234e92#流程变量的作用域\",\"522\":\"v-03234e92#流程变量的使用方法\",\"523\":\"v-03234e92#使用global变量控制流程\",\"524\":\"v-03234e92#执行task-设置流程变量\",\"525\":\"v-03234e92#任务候选人\",\"526\":\"v-03234e92#设置任务候选人\",\"527\":\"v-03234e92#查询候选人任务\",\"528\":\"v-03234e92#领取、完成候选人任务\",\"529\":\"v-03234e92#网关相关\",\"530\":\"v-03234e92#排他网关\",\"531\":\"v-03234e92#并行网关\",\"532\":\"v-03234e92#包含网关\",\"533\":\"v-56297dae\",\"534\":\"v-56297dae#_1-act-re-deployment-流程部署表\",\"535\":\"v-56297dae#_2-act-re-procdef-流程定义表\",\"536\":\"v-56297dae#_3-act-procdef-info-流程定义信息表\",\"537\":\"v-56297dae#_4-act-re-model-流程模型表\",\"538\":\"v-56297dae#_5-act-ge-bytearray-二进制资源表\",\"539\":\"v-56297dae#_6-act-ge-property-引擎属性表\",\"540\":\"v-56297dae#_7-act-ru-execution-运行时执行实例表\",\"541\":\"v-56297dae#_8-act-ru-identitylink-运行时身份连接表\",\"542\":\"v-56297dae#_9-act-ru-task-运行时任务表\",\"543\":\"v-56297dae#_10-act-ru-timer-job-运行时定时作业表\",\"544\":\"v-56297dae#_11-act-ru-variable-运行时流程变量表\",\"545\":\"v-56297dae#_12-act-ru-suspended-job-运行时挂起的定时作业表\",\"546\":\"v-56297dae#_13-act-ru-job-运行时作业表\",\"547\":\"v-56297dae#_14-act-ru-integration-运行时积分表\",\"548\":\"v-56297dae#_15-act-ru-event-subscr-运行时事件订阅表\",\"549\":\"v-56297dae#_16-act-ru-deadletter-job-运行时死信作业表\",\"550\":\"v-56297dae#_17-act-evt-log-事件日志表\",\"551\":\"v-56297dae#_18-act-hi-actinst-历史活动信息表\",\"552\":\"v-56297dae#_19-act-hi-attachment-历史流程附件表\",\"553\":\"v-56297dae#_20-act-hi-comment-历史审批意见表\",\"554\":\"v-56297dae#_21-act-hi-detail-历史详情表\",\"555\":\"v-56297dae#_22-act-hi-identitylink-历史身份连接表\",\"556\":\"v-56297dae#_23-act-hi-procinst-历史流程实例表\",\"557\":\"v-56297dae#_24-act-hi-taskinst-历史任务表\",\"558\":\"v-56297dae#_25-act-hi-varinst-历史流程变量表\",\"559\":\"v-25671ece\",\"560\":\"v-25671ece#error-usernamenotfoundexception\",\"561\":\"v-25671ece#异常原因\",\"562\":\"v-25671ece#解决方案\",\"563\":\"v-5e89e992\",\"564\":\"v-5e89e992#一、流程定义相关-api\",\"565\":\"v-5e89e992#根据流程定义-key查询流程\",\"566\":\"v-5e89e992#根据部署-id-查询流程\",\"567\":\"v-5e89e992#获取流程-xml-文件\",\"568\":\"v-5e89e992#获取当前流程的流程图-高亮显示\",\"569\":\"v-5e89e992#获取流程中的所有节点信息\",\"570\":\"v-5e89e992#二、流程实例相关-api\",\"571\":\"v-5e89e992#获取流程实例\",\"572\":\"v-5e89e992#删除流程实例\",\"573\":\"v-5e89e992#根据流程实例获取目前活动节点\",\"574\":\"v-5e89e992#获取历史流程实例\",\"575\":\"v-5e89e992#获取历史批注信息\",\"576\":\"v-5e89e992#获取流程实例的历史任务\",\"577\":\"v-5e89e992#三、查询任务相关-api\",\"578\":\"v-5e89e992#根据流程实例-id-查询当前-task\",\"579\":\"v-5e89e992#task-添加候选人\",\"580\":\"v-5e89e992#查询候选人待办任务\",\"581\":\"v-5e89e992#根据-taskid-获取-task\",\"582\":\"v-5e89e992#领取任务以及完成任务添加批注\",\"583\":\"v-5e89e992#task-添加流程变量\",\"584\":\"v-5e89e992#查询用户已办任务列表\",\"585\":\"v-2664e678\",\"586\":\"v-2664e678#golang-反射注意\",\"587\":\"v-2664e678#type-和-typeof\",\"588\":\"v-2664e678#_1-理解-type-和-种类-kind\",\"589\":\"v-2664e678#_2-获取类型名以及-kind\",\"590\":\"v-2664e678#_3-type-常用方法\",\"591\":\"v-2664e678#_4-获取成员反射信息\",\"592\":\"v-2664e678#_5-通过类型信息创建实例\",\"593\":\"v-2664e678#value-和-valueof\",\"594\":\"v-2664e678#_1-生成原始类型的对象\",\"595\":\"v-2664e678#_2-操作结构体成员的值\",\"596\":\"v-2664e678#通过反射调用函数\",\"597\":\"v-2664e678#通过反射调用对象中的方法\",\"598\":\"v-2664e678#反射实现-map-转-struct\",\"599\":\"v-2664e678#反射实现-struct-转-map\",\"600\":\"v-d708c00a\",\"601\":\"v-d708c00a#深度比较-deepequal\",\"602\":\"v-34fb567e\",\"603\":\"v-ddacf20e\",\"604\":\"v-ddacf20e#handlermethodargumentresolver\",\"605\":\"v-ddacf20e#使用自定义的注解来区分\",\"606\":\"v-ddacf20e#将自定义参数解析器添加到spring容器中\",\"607\":\"v-ddacf20e#使用案例\",\"608\":\"v-0900d579\",\"609\":\"v-0900d579#介绍\",\"610\":\"v-0900d579#服务\",\"611\":\"v-0900d579#重要的组件\",\"612\":\"v-0900d579#技术\",\"613\":\"v-0900d579#spring-cloud-alibaba和spring-cloud-的区别和联系\",\"614\":\"v-0900d579#springcloud-的几大痛点\",\"615\":\"v-0900d579#springcloud-alibaba-的优势\",\"616\":\"v-5c962ad6\",\"617\":\"v-5c962ad6#nacos-搭建\",\"618\":\"v-5c962ad6#获取-nacos\",\"619\":\"v-5c962ad6#启动、关闭服务\",\"620\":\"v-5c962ad6#访问-nacos-后台界面\",\"621\":\"v-5c962ad6#环境说明\",\"622\":\"v-5c962ad6#服务发现是什么\",\"623\":\"v-5c962ad6#服务提供者与服务消费者\",\"624\":\"v-5c962ad6#服务发现原理\",\"625\":\"v-5c962ad6#启动服务发现\",\"626\":\"v-5c962ad6#添加依赖\",\"627\":\"v-5c962ad6#添加配置\",\"628\":\"v-5c962ad6#添加注解\",\"629\":\"v-5c962ad6#启动配置管理\",\"630\":\"v-5c962ad6#添加依赖-1\",\"631\":\"v-5c962ad6#添加配置-1\",\"632\":\"v-5c962ad6#nacos-控制台添加配置文件\",\"633\":\"v-5c962ad6#读取-nacos-变量配置\",\"634\":\"v-799957de\",\"635\":\"v-799957de#_2020-版本说明以及坑\",\"636\":\"v-799957de#演示环境说明\",\"637\":\"v-799957de#启动类\",\"638\":\"v-799957de#配置文件\",\"639\":\"v-799957de#openfeign-接口的开发\",\"640\":\"v-799957de#调用openfeign-的接口\",\"641\":\"v-799957de#启动测试\",\"642\":\"v-799957de#负载均衡\",\"643\":\"v-799957de#ribbon-已弃用\",\"644\":\"v-799957de#spring-cloud-loadbalancer\",\"645\":\"v-799957de#负载均衡器在哪里使用\",\"646\":\"v-799957de#openfeign-负载均衡策略\",\"647\":\"v-799957de#编写配置类\",\"648\":\"v-799957de#使用-loadbalancerclient\",\"649\":\"v-799957de#feignclient注解\",\"650\":\"v-799957de#openfeign-开始gzip压缩\",\"651\":\"v-799957de#openfeign-超时配置\",\"652\":\"v-a96a2eda\",\"653\":\"v-a96a2eda#gateway-简介\",\"654\":\"v-a96a2eda#核心概念\",\"655\":\"v-a96a2eda#搭建-gateway-环境\",\"656\":\"v-a96a2eda#基础-uri-路由配置方式\",\"657\":\"v-a96a2eda#基于代码的路由配置方式\",\"658\":\"v-a96a2eda#注册中心相结合的路由配置方式\",\"659\":\"v-a96a2eda#gateway-匹配规则\",\"660\":\"v-a96a2eda#通过请求参数匹配\",\"661\":\"v-a96a2eda#通过-cookie-匹配\",\"662\":\"v-a96a2eda#通过-header-属性匹配\",\"663\":\"v-a96a2eda#通过请求方式匹配\",\"664\":\"v-a96a2eda#过滤器-filter\",\"665\":\"v-a96a2eda#定义局部过滤器\",\"666\":\"v-a96a2eda#自定义全局过滤器\",\"667\":\"v-a96a2eda#gateway-实现动态路由刷新\",\"668\":\"v-a96a2eda#nacos-配置文件\",\"669\":\"v-a96a2eda#动态更新配置文件\",\"670\":\"v-a96a2eda#动态路由监听\",\"671\":\"v-a96a2eda#动态路由服务实现\",\"672\":\"v-3ef3ae1a\",\"673\":\"v-3ef3ae1a#spring-cloud-2020-bootstrap-配置文件失效\",\"674\":\"v-3ef3ae1a#查找原因\",\"675\":\"v-3ef3ae1a#解决方案\",\"676\":\"v-3ef3ae1a#springcloud-2020版本-gateway-nacos-服务报错503-service-unavailable\",\"677\":\"v-3ef3ae1a#no-feign-client-for-loadbalancing-defined-did-you-forget-to-include-spring-cloud-starter-loadbalancer\",\"678\":\"v-9a6d0ce8\",\"679\":\"v-9a6d0ce8#_1-安装方式\",\"680\":\"v-9a6d0ce8#_2-在线安装\",\"681\":\"v-9a6d0ce8#_3-离线安装\",\"682\":\"v-9a6d0ce8#_3-1-解压缩二进制包\",\"683\":\"v-9a6d0ce8#_3-2-systemd管理docker\",\"684\":\"v-9a6d0ce8#_3-3-创建配置文件\",\"685\":\"v-9a6d0ce8#_3-4-启动并设置开机启动\",\"686\":\"v-9a6d0ce8#_4-更换-docker-源\",\"687\":\"v-9a6d0ce8#设置方法\",\"688\":\"v-b805f110\",\"689\":\"v-b805f110#常用命令\",\"690\":\"v-b71bbc0a\",\"691\":\"v-b71bbc0a#拉取-mysql-镜像\",\"692\":\"v-b71bbc0a#启动-mysql-容器\",\"693\":\"v-b71bbc0a#查看容器是否启动\",\"694\":\"v-b71bbc0a#mysql-相关设置\",\"695\":\"v-b71bbc0a#_1-进入-mysql-容器\",\"696\":\"v-b71bbc0a#_2-连接-mysql\",\"697\":\"v-b71bbc0a#_3-查询-user-表\",\"698\":\"v-b71bbc0a#_4-修改-root-账号\",\"699\":\"v-b71bbc0a#查看并修改mysql编码\",\"700\":\"v-b71bbc0a#创建mysql-新用户\",\"701\":\"v-27762a11\",\"702\":\"v-734a2410\",\"703\":\"v-5c575668\",\"704\":\"v-5c575668#建立项目仓库\",\"705\":\"v-5c575668#查看分支\",\"706\":\"v-5c575668#创建新分支\",\"707\":\"v-b6a3309c\",\"708\":\"v-2f09e41a\",\"709\":\"v-2f09e41a#命令相关的操作\",\"710\":\"v-2f09e41a#具体操作步骤\",\"711\":\"v-3a02344a\",\"712\":\"v-247767af\",\"713\":\"v-247767af#_1-1-安装方式\",\"714\":\"v-247767af#_1-2-准备环境\",\"715\":\"v-247767af#_1-3-操作系统初始化配置-每个虚拟机\",\"716\":\"v-247767af#步骤介绍\",\"717\":\"v-24344cf2\",\"718\":\"v-24344cf2#一、理解认证授权\",\"719\":\"v-24344cf2#_1-1-为什么要认证\",\"720\":\"v-24344cf2#_1-2-概念梳理\",\"721\":\"v-24344cf2#_1-3-什么是授权\",\"722\":\"v-24344cf2#二、kubernetes的认证授权\",\"723\":\"v-24344cf2#_2-1-kubernetes的认证\",\"724\":\"v-24344cf2#_2-2-kubernetes的授权\",\"725\":\"v-24344cf2#_2-3-kubernetes的admissioncontrol\",\"726\":\"v-24344cf2#三、安装-cfssl\",\"727\":\"v-24344cf2#证书位置\",\"728\":\"v-24344cf2#四、创建-ca-根证书\",\"729\":\"v-24344cf2#_4-1-创建-ca-配置文件\",\"730\":\"v-24344cf2#_4-2-创建-ca-证书签名请求\",\"731\":\"v-24344cf2#_4-3-生成-ca-证书和私钥\",\"732\":\"v-24344cf2#五、创建-etcd-证书\",\"733\":\"v-24344cf2#_5-1-生成-etcd-证书配置\",\"734\":\"v-24344cf2#_5-2-使用根证书-ca-pem-签发etcd证书\",\"735\":\"v-24344cf2#六、创建-api-server-证书\",\"736\":\"v-24344cf2#_6-1-生成-api-server-证书配置\",\"737\":\"v-24344cf2#_6-2-使用根证书-ca-pem-签发-apiserver-证书\",\"738\":\"v-24344cf2#七、创建-admin-证书\",\"739\":\"v-24344cf2#_7-1-生成-admin-证书配置\",\"740\":\"v-24344cf2#_7-2-使用根证书-ca-pem-签发admin证书\",\"741\":\"v-24344cf2#八、创建-kube-proxy-证书\",\"742\":\"v-24344cf2#_8-1-生成-kube-proxy-证书配置\",\"743\":\"v-24344cf2#_8-2-使用根证书-ca-pem-签发proxy证书\",\"744\":\"v-24344cf2#九、分发证书\",\"745\":\"v-24344cf2#十、启用-tls-bootstrapping-机制\",\"746\":\"v-24344cf2#_10-1-生成token认证文件\",\"747\":\"v-3cc5d50d\",\"748\":\"v-3cc5d50d#_1-简介\",\"749\":\"v-3cc5d50d#_2-从github下载二进制文件\",\"750\":\"v-3cc5d50d#_3-部署-etcd\",\"751\":\"v-3cc5d50d#_1-创建工作目录并解压二进制包\",\"752\":\"v-3cc5d50d#_2-创建etcd配置文件\",\"753\":\"v-3cc5d50d#_3-通过systemd管理etcd\",\"754\":\"v-3cc5d50d#_4-启动并设置开机启动\",\"755\":\"v-3cc5d50d#_5-部署多个etcd\",\"756\":\"v-3cc5d50d#_6-查看集群状态\",\"757\":\"v-732e39dc\",\"758\":\"v-732e39dc#_1-从github下载二进制文件\",\"759\":\"v-732e39dc#_2-解压二进制包\",\"760\":\"v-732e39dc#_3-tls-证书文件\",\"761\":\"v-732e39dc#_4-创建-kubectl-kubeconfig-文件\",\"762\":\"v-732e39dc#一、部署-api-server-组件\",\"763\":\"v-732e39dc#_1-简介\",\"764\":\"v-732e39dc#_2-创建kube-apiserver的配置文件\",\"765\":\"v-732e39dc#_3-tls-bootstrapping-机制\",\"766\":\"v-732e39dc#_4-创建-kube-apiserver的service配置文件\",\"767\":\"v-732e39dc#_5-启动并设置开机启动\",\"768\":\"v-732e39dc#_6-授权kubelet-bootstrap用户允许请求证书\",\"769\":\"v-732e39dc#二、部署-kube-controller-manager-组件\",\"770\":\"v-732e39dc#_1-简介-1\",\"771\":\"v-732e39dc#_2-创建kube-controller的配置文件\",\"772\":\"v-732e39dc#_3-创建-kube-controller的service配置文件\",\"773\":\"v-732e39dc#_4-启动并设置开机启动\",\"774\":\"v-732e39dc#三、部署-kube-scheduler-组件\",\"775\":\"v-732e39dc#_1-简介-2\",\"776\":\"v-732e39dc#_2-创建kube-scheduler的配置文件\",\"777\":\"v-732e39dc#_3-创建-kube-controller的service配置文件-1\",\"778\":\"v-732e39dc#_4-启动并设置开机启动-1\",\"779\":\"v-732e39dc#四、查看集群状态\",\"780\":\"v-7864dc7d\",\"781\":\"v-7864dc7d#一、创建工作目录并拷贝二进制文件\",\"782\":\"v-7864dc7d#二、部署kubelet\",\"783\":\"v-7864dc7d#_2-1-创建kubelet配置文件\",\"784\":\"v-7864dc7d#_2-2-配置参数文件\",\"785\":\"v-7864dc7d#_2-3-生成bootstrap-kubeconfig文件\",\"786\":\"v-7864dc7d#_2-4-systemd管理kubelet\",\"787\":\"v-7864dc7d#_2-5-启动并设置开机启动\",\"788\":\"v-7864dc7d#_2-6-批准kubelet证书申请并加入集群\",\"789\":\"v-7864dc7d#三、部署kube-proxy\",\"790\":\"v-7864dc7d#_3-1-创建kube-proxy配置文件\",\"791\":\"v-7864dc7d#_3-2-配置参数文件\",\"792\":\"v-7864dc7d#_3-3-生成kube-proxy-kubeconfig文件\",\"793\":\"v-7864dc7d#_3-4-systemd管理kube-proxy\",\"794\":\"v-7864dc7d#_3-5-启动并设置开机启动\",\"795\":\"v-1ca2bdd4\",\"796\":\"v-1ca2bdd4#_1-简介\",\"797\":\"v-1ca2bdd4#_2-下载-cni\",\"798\":\"v-1ca2bdd4#_3-flannel-插件\",\"799\":\"v-1ca2bdd4#_3-1-flannel介绍\",\"800\":\"v-1ca2bdd4#_3-2-部署flannel\",\"801\":\"v-1ca2bdd4#_4-calico-插件\",\"802\":\"v-1ca2bdd4#_4-1-calco组件简介\",\"803\":\"v-1ca2bdd4#_4-2-calico-架构\",\"804\":\"v-1ca2bdd4#_4-3-calico-部署步骤过程\",\"805\":\"v-1ca2bdd4#_4-4-部署-calico\",\"806\":\"v-1ca2bdd4#_4-4-1-需要修改如下几处配置\",\"807\":\"v-1ca2bdd4#_4-4-2-修改完-yaml-文件-执行部署\",\"808\":\"v-1ca2bdd4#_5-通过系统服务-docker方式部署\",\"809\":\"v-1ca2bdd4#_5-1-配置-service-文件\",\"810\":\"v-1ca2bdd4#_5-2-启动-kube-calico-服务\",\"811\":\"v-1ca2bdd4#_5-3-calico-客户端工具-calicoctl\",\"812\":\"v-1ca2bdd4#_5-4-查看节点运行情况\",\"813\":\"v-1ca2bdd4#_5-5-配置-ip-pool\",\"814\":\"v-1ca2bdd4#_6-授权apiserver访问kubelet\",\"815\":\"v-3b194dae\",\"816\":\"v-3b194dae#一、部署dashboard\",\"817\":\"v-3b194dae#_1-1-dashboard简介\",\"818\":\"v-3b194dae#_1-2-下载-yaml-文件\",\"819\":\"v-3b194dae#二、部署-dns\",\"820\":\"v-3b194dae#_2-1-coredns简介\",\"821\":\"v-3b194dae#_2-2-下载部署脚本\",\"822\":\"v-3b194dae#_2-3-部署\",\"823\":\"v-48ea4aec\",\"824\":\"v-48ea4aec#一、apt-get安装nginx\",\"825\":\"v-48ea4aec#二、编译nginx源码\",\"826\":\"v-1c7e91d2\",\"827\":\"v-1c7e91d2#启动、重启、停止命令\",\"828\":\"v-1c7e91d2#检查配置文件是否正确\",\"829\":\"v-2aae9393\",\"830\":\"v-2980f410\",\"831\":\"v-2980f410#解决方案\",\"832\":\"v-588e3dae\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,13],\"1\":[1,13],\"2\":[1,43],\"3\":[1,36],\"4\":[1,11],\"5\":[1],\"6\":[1],\"7\":[1],\"8\":[1,9],\"9\":[1,29],\"10\":[1,179],\"11\":[1,26],\"12\":[1],\"13\":[1],\"14\":[1],\"15\":[1,24],\"16\":[1,35],\"17\":[1,25],\"18\":[3,14],\"19\":[1,11],\"20\":[1,19],\"21\":[1],\"22\":[2,14],\"23\":[2,33],\"24\":[3,18],\"25\":[1,13],\"26\":[1,10],\"27\":[1,49],\"28\":[1],\"29\":[2,7],\"30\":[1],\"31\":[1,11],\"32\":[1,6],\"33\":[1,10],\"34\":[3,5],\"35\":[3,26],\"36\":[3,4],\"37\":[1,27],\"38\":[1,15],\"39\":[1,11],\"40\":[1,26],\"41\":[1,124],\"42\":[1,13],\"43\":[1,61],\"44\":[1],\"45\":[1,7],\"46\":[1,28],\"47\":[1,15],\"48\":[1,49],\"49\":[1,13],\"50\":[2,10],\"51\":[1,39],\"52\":[2,10],\"53\":[1,16],\"54\":[1,18],\"55\":[2,4],\"56\":[1,14],\"57\":[5,23],\"58\":[1,31],\"59\":[2,29],\"60\":[1,44],\"61\":[2],\"62\":[2,57],\"63\":[2,21],\"64\":[2,12],\"65\":[4,11],\"66\":[3,13],\"67\":[1],\"68\":[1,9],\"69\":[1,1],\"70\":[1,13],\"71\":[1],\"72\":[2,36],\"73\":[2,35],\"74\":[2,18],\"75\":[2,33],\"76\":[2,6],\"77\":[2,14],\"78\":[1,38],\"79\":[1],\"80\":[1,37],\"81\":[1,22],\"82\":[1,19],\"83\":[1,20],\"84\":[1,35],\"85\":[1,2],\"86\":[2,4],\"87\":[1],\"88\":[1,4],\"89\":[1,48],\"90\":[1],\"91\":[1,56],\"92\":[2,15],\"93\":[2,8],\"94\":[1,23],\"95\":[1,32],\"96\":[2],\"97\":[1,3],\"98\":[1,22],\"99\":[3,11],\"100\":[1],\"101\":[2,7],\"102\":[2,7],\"103\":[2,39],\"104\":[2,41],\"105\":[2,22],\"106\":[2],\"107\":[1,21],\"108\":[1,25],\"109\":[2,7],\"110\":[1,3],\"111\":[2,10],\"112\":[3,9],\"113\":[2,22],\"114\":[1,8],\"115\":[2,73],\"116\":[2,25],\"117\":[1,47],\"118\":[2,11],\"119\":[1,9],\"120\":[1,14],\"121\":[3,44],\"122\":[1,53],\"123\":[1,43],\"124\":[2,28],\"125\":[2,10],\"126\":[1,34],\"127\":[3,41],\"128\":[3,67],\"129\":[3,56],\"130\":[2],\"131\":[1,10],\"132\":[1,3],\"133\":[1,53],\"134\":[1,66],\"135\":[4,89],\"136\":[2,12],\"137\":[1,2],\"138\":[2,22],\"139\":[1],\"140\":[4,23],\"141\":[2,6],\"142\":[3],\"143\":[2,6],\"144\":[2,10],\"145\":[1,17],\"146\":[2,7],\"147\":[2,30],\"148\":[1,14],\"149\":[1,23],\"150\":[1,40],\"151\":[1,78],\"152\":[1,36],\"153\":[3,4],\"154\":[2,26],\"155\":[2,133],\"156\":[1,17],\"157\":[2,3],\"158\":[1,13],\"159\":[1,8],\"160\":[1,66],\"161\":[1,50],\"162\":[1],\"163\":[2,11],\"164\":[1,7],\"165\":[1,27],\"166\":[1],\"167\":[3,27],\"168\":[3,39],\"169\":[3,17],\"170\":[3,19],\"171\":[1,8],\"172\":[2,55],\"173\":[2,33],\"174\":[2,8],\"175\":[1,14],\"176\":[2,44],\"177\":[1,25],\"178\":[1,13],\"179\":[1,15],\"180\":[2,46],\"181\":[1,11],\"182\":[2,10],\"183\":[1,7],\"184\":[2,11],\"185\":[1,26],\"186\":[1,20],\"187\":[3,13],\"188\":[1,29],\"189\":[2,39],\"190\":[2,49],\"191\":[2,22],\"192\":[1,4],\"193\":[2,31],\"194\":[1,20],\"195\":[1,18],\"196\":[2],\"197\":[1,32],\"198\":[1,64],\"199\":[1],\"200\":[2,2],\"201\":[1,7],\"202\":[1,30],\"203\":[1,19],\"204\":[1,40],\"205\":[1,22],\"206\":[1,58],\"207\":[1],\"208\":[2,11],\"209\":[2,2],\"210\":[1,10],\"211\":[1],\"212\":[1,8],\"213\":[1,8],\"214\":[1,21],\"215\":[1,10],\"216\":[1,8],\"217\":[1,14],\"218\":[3,45],\"219\":[3,39],\"220\":[1],\"221\":[2,21],\"222\":[2,84],\"223\":[2,11],\"224\":[1,21],\"225\":[2,43],\"226\":[2,32],\"227\":[1,9],\"228\":[1],\"229\":[2,9],\"230\":[2,7],\"231\":[2,10],\"232\":[2,8],\"233\":[1,47],\"234\":[1],\"235\":[3,6],\"236\":[2,57],\"237\":[1],\"238\":[1,22],\"239\":[1,21],\"240\":[1,39],\"241\":[2,1],\"242\":[3,23],\"243\":[3,22],\"244\":[1,51],\"245\":[2,1],\"246\":[3,21],\"247\":[3,29],\"248\":[1,46],\"249\":[1,39],\"250\":[2,1],\"251\":[1,27],\"252\":[1,54],\"253\":[1,60],\"254\":[3,112],\"255\":[4,12],\"256\":[1,42],\"257\":[3,77],\"258\":[2],\"259\":[2,4],\"260\":[1,4],\"261\":[1,14],\"262\":[1,79],\"263\":[1],\"264\":[2,15],\"265\":[1,39],\"266\":[1,12],\"267\":[2,5],\"268\":[2,21],\"269\":[2,8],\"270\":[2,14],\"271\":[1,22],\"272\":[2,5],\"273\":[3,18],\"274\":[3,19],\"275\":[3,15],\"276\":[1,29],\"277\":[1,43],\"278\":[1,13],\"279\":[2,12],\"280\":[1,1],\"281\":[2,22],\"282\":[3,34],\"283\":[2,24],\"284\":[2,23],\"285\":[2,6],\"286\":[1,17],\"287\":[3,16],\"288\":[3,15],\"289\":[3,65],\"290\":[1,35],\"291\":[1,48],\"292\":[1,9],\"293\":[3,33],\"294\":[2,8],\"295\":[1,39],\"296\":[1,34],\"297\":[2,6],\"298\":[1,13],\"299\":[1,80],\"300\":[1,12],\"301\":[2,11],\"302\":[1,19],\"303\":[1,43],\"304\":[1,18],\"305\":[3,26],\"306\":[4,18],\"307\":[4,12],\"308\":[3,68],\"309\":[3,14],\"310\":[3,35],\"311\":[2,28],\"312\":[3,27],\"313\":[1,23],\"314\":[2,32],\"315\":[2,10],\"316\":[2,28],\"317\":[3,42],\"318\":[2,8],\"319\":[1,8],\"320\":[3,26],\"321\":[4,38],\"322\":[1,8],\"323\":[1,11],\"324\":[1,52],\"325\":[1,6],\"326\":[1,17],\"327\":[1,60],\"328\":[1,15],\"329\":[3,21],\"330\":[1,12],\"331\":[1,13],\"332\":[2,47],\"333\":[3,25],\"334\":[3,35],\"335\":[2,44],\"336\":[2,22],\"337\":[1,19],\"338\":[2,44],\"339\":[2,8],\"340\":[1,4],\"341\":[1,80],\"342\":[1,13],\"343\":[3,36],\"344\":[2,6],\"345\":[2,6],\"346\":[2,9],\"347\":[1,9],\"348\":[2,97],\"349\":[2,23],\"350\":[1,26],\"351\":[1,257],\"352\":[1,91],\"353\":[1,124],\"354\":[1,41],\"355\":[1,69],\"356\":[2,93],\"357\":[2,10],\"358\":[1,25],\"359\":[1,5],\"360\":[2,34],\"361\":[2,15],\"362\":[1,29],\"363\":[2,33],\"364\":[2,75],\"365\":[2,9],\"366\":[2,28],\"367\":[2,23],\"368\":[1,12],\"369\":[2,29],\"370\":[2,20],\"371\":[2,27],\"372\":[4,36],\"373\":[2,6],\"374\":[4,28],\"375\":[3,30],\"376\":[3,21],\"377\":[2,28],\"378\":[2,13],\"379\":[3,21],\"380\":[1,13],\"381\":[1,13],\"382\":[2,38],\"383\":[2,16],\"384\":[3,17],\"385\":[2,21],\"386\":[2,26],\"387\":[1,27],\"388\":[1,19],\"389\":[1,27],\"390\":[2,4],\"391\":[1,15],\"392\":[3,6],\"393\":[1,13],\"394\":[1,15],\"395\":[1,5],\"396\":[1,7],\"397\":[1,10],\"398\":[2,8],\"399\":[2,31],\"400\":[2,27],\"401\":[2,30],\"402\":[2,30],\"403\":[1,34],\"404\":[1,4],\"405\":[2],\"406\":[1,17],\"407\":[1,8],\"408\":[3,31],\"409\":[4,11],\"410\":[4,11],\"411\":[3,61],\"412\":[1,25],\"413\":[2,9],\"414\":[3,12],\"415\":[5,9],\"416\":[2,15],\"417\":[3,63],\"418\":[2,16],\"419\":[1,7],\"420\":[1,20],\"421\":[3,26],\"422\":[5,43],\"423\":[4,31],\"424\":[2,74],\"425\":[2,3],\"426\":[1,1],\"427\":[1,53],\"428\":[1,5],\"429\":[2,14],\"430\":[2,35],\"431\":[2,34],\"432\":[2,4],\"433\":[1,11],\"434\":[1,6],\"435\":[2,18],\"436\":[1,17],\"437\":[2,18],\"438\":[2,34],\"439\":[1],\"440\":[3,92],\"441\":[3,57],\"442\":[3,81],\"443\":[3,79],\"444\":[3,74],\"445\":[1,17],\"446\":[2,7],\"447\":[1,15],\"448\":[2,5],\"449\":[1,45],\"450\":[1,19],\"451\":[2,69],\"452\":[2,21],\"453\":[2,35],\"454\":[2,33],\"455\":[2,43],\"456\":[1,42],\"457\":[1,34],\"458\":[2,17],\"459\":[2,7],\"460\":[1,8],\"461\":[1,5],\"462\":[1,17],\"463\":[2,44],\"464\":[3,26],\"465\":[1,12],\"466\":[2,11],\"467\":[2,11],\"468\":[1,56],\"469\":[2,14],\"470\":[2,2],\"471\":[2,7],\"472\":[2,2],\"473\":[1,3],\"474\":[4,5],\"475\":[1,11],\"476\":[1,27],\"477\":[1,73],\"478\":[1,36],\"479\":[1,7],\"480\":[4,16],\"481\":[2,17],\"482\":[1],\"483\":[1,17],\"484\":[1,65],\"485\":[2],\"486\":[3,22],\"487\":[3],\"488\":[1,10],\"489\":[1,6],\"490\":[1,7],\"491\":[1,8],\"492\":[1,6],\"493\":[1,3],\"494\":[4,4],\"495\":[4,235],\"496\":[3,104],\"497\":[2,30],\"498\":[2,8],\"499\":[1,37],\"500\":[3,43],\"501\":[4],\"502\":[1,70],\"503\":[1,80],\"504\":[1,46],\"505\":[2,43],\"506\":[1,69],\"507\":[2,8],\"508\":[1,2],\"509\":[1,41],\"510\":[1,35],\"511\":[1,60],\"512\":[1,10],\"513\":[3,91],\"514\":[2,80],\"515\":[1],\"516\":[1,2],\"517\":[2,14],\"518\":[4,40],\"519\":[1,11],\"520\":[1,5],\"521\":[1,14],\"522\":[1,25],\"523\":[1,40],\"524\":[2,19],\"525\":[1,10],\"526\":[1,15],\"527\":[1,55],\"528\":[2,29],\"529\":[1],\"530\":[1,8],\"531\":[1,9],\"532\":[1,2],\"533\":[2,64],\"534\":[5,25],\"535\":[5,51],\"536\":[5,18],\"537\":[5,48],\"538\":[5,28],\"539\":[5,21],\"540\":[5,87],\"541\":[5,35],\"542\":[5,68],\"543\":[6,38],\"544\":[5,40],\"545\":[6,32],\"546\":[5,36],\"547\":[5,18],\"548\":[6,34],\"549\":[6,31],\"550\":[5,42],\"551\":[5,53],\"552\":[5,36],\"553\":[5,41],\"554\":[5,33],\"555\":[5,33],\"556\":[5,49],\"557\":[5,61],\"558\":[5,47],\"559\":[2,4],\"560\":[2,7],\"561\":[1,36],\"562\":[1,22],\"563\":[3,4],\"564\":[3,3],\"565\":[2,27],\"566\":[3,10],\"567\":[3,14],\"568\":[3,34],\"569\":[1,45],\"570\":[3,3],\"571\":[1,10],\"572\":[1,14],\"573\":[1,8],\"574\":[1,10],\"575\":[1,21],\"576\":[1,21],\"577\":[3,5],\"578\":[4,11],\"579\":[2,8],\"580\":[1,21],\"581\":[4,10],\"582\":[1,26],\"583\":[2,10],\"584\":[1,21],\"585\":[2,27],\"586\":[2,9],\"587\":[3,12],\"588\":[6,19],\"589\":[3,26],\"590\":[3,55],\"591\":[2,55],\"592\":[2,24],\"593\":[3,12],\"594\":[2,55],\"595\":[2,92],\"596\":[1,43],\"597\":[1,41],\"598\":[4,58],\"599\":[4,41],\"600\":[2],\"601\":[2,41],\"602\":[1],\"603\":[2,35],\"604\":[1,60],\"605\":[1,13],\"606\":[1,24],\"607\":[1,17],\"608\":[3,8],\"609\":[1,13],\"610\":[1,72],\"611\":[1,11],\"612\":[1,29],\"613\":[4,32],\"614\":[2,9],\"615\":[4,8],\"616\":[3,22],\"617\":[2,10],\"618\":[2,15],\"619\":[2,14],\"620\":[3,15],\"621\":[1,28],\"622\":[1],\"623\":[1,8],\"624\":[1,11],\"625\":[1,25],\"626\":[1,18],\"627\":[1,30],\"628\":[1,4],\"629\":[1,11],\"630\":[1,18],\"631\":[1,69],\"632\":[2,14],\"633\":[3,36],\"634\":[3,18],\"635\":[2,48],\"636\":[1,95],\"637\":[1,19],\"638\":[1,23],\"639\":[2,47],\"640\":[2,18],\"641\":[1,28],\"642\":[1,8],\"643\":[3,33],\"644\":[3,36],\"645\":[2,34],\"646\":[2,4],\"647\":[1,23],\"648\":[2,30],\"649\":[2,37],\"650\":[2,25],\"651\":[2,25],\"652\":[2,20],\"653\":[2,42],\"654\":[1,67],\"655\":[3,77],\"656\":[3,44],\"657\":[1,76],\"658\":[1,102],\"659\":[2,23],\"660\":[1,32],\"661\":[3,35],\"662\":[3,40],\"663\":[1,35],\"664\":[2,26],\"665\":[1,105],\"666\":[1,26],\"667\":[2,17],\"668\":[2,15],\"669\":[1,32],\"670\":[1,151],\"671\":[1,156],\"672\":[3,6],\"673\":[5,7],\"674\":[1,11],\"675\":[1,14],\"676\":[8,36],\"677\":[16,6],\"678\":[3],\"679\":[2,11],\"680\":[2,63],\"681\":[2,12],\"682\":[3,11],\"683\":[3,47],\"684\":[2,17],\"685\":[3,7],\"686\":[4,23],\"687\":[1,19],\"688\":[1],\"689\":[1,45],\"690\":[1,23],\"691\":[3,12],\"692\":[3,42],\"693\":[1,6],\"694\":[2],\"695\":[4,7],\"696\":[3,6],\"697\":[4,32],\"698\":[4,31],\"699\":[1,174],\"700\":[2,9],\"701\":[1],\"702\":[2,5],\"703\":[2,14],\"704\":[1,14],\"705\":[1,25],\"706\":[1,30],\"707\":[2,36],\"708\":[3,15],\"709\":[1,17],\"710\":[1,14],\"711\":[1],\"712\":[1],\"713\":[2,17],\"714\":[3,35],\"715\":[5,89],\"716\":[1,11],\"717\":[1,3],\"718\":[2,4],\"719\":[2,22],\"720\":[3,21],\"721\":[3,7],\"722\":[2,24],\"723\":[3,68],\"724\":[2,24],\"725\":[3,42],\"726\":[3,62],\"727\":[1,9],\"728\":[5],\"729\":[5,46],\"730\":[5,45],\"731\":[5,20],\"732\":[4],\"733\":[5,50],\"734\":[6,25],\"735\":[5,11],\"736\":[6,55],\"737\":[8,25],\"738\":[4],\"739\":[5,32],\"740\":[6,23],\"741\":[5],\"742\":[6,51],\"743\":[6,24],\"744\":[2,26],\"745\":[5,23],\"746\":[3,29],\"747\":[1],\"748\":[2,13],\"749\":[2,11],\"750\":[3],\"751\":[2,21],\"752\":[2,70],\"753\":[2,42],\"754\":[2,11],\"755\":[2,60],\"756\":[2,35],\"757\":[3,19],\"758\":[2,19],\"759\":[2,28],\"760\":[3,9],\"761\":[5,40],\"762\":[5],\"763\":[2,18],\"764\":[3,114],\"765\":[4,20],\"766\":[4,39],\"767\":[2,12],\"768\":[3,11],\"769\":[6],\"770\":[2,30],\"771\":[3,62],\"772\":[4,39],\"773\":[2,13],\"774\":[5],\"775\":[2,9],\"776\":[3,34],\"777\":[4,35],\"778\":[2,12],\"779\":[2,20],\"780\":[1,8],\"781\":[2,27],\"782\":[2,13],\"783\":[3,66],\"784\":[2,64],\"785\":[4,58],\"786\":[3,31],\"787\":[3,17],\"788\":[3,47],\"789\":[3],\"790\":[4,22],\"791\":[3,35],\"792\":[4,41],\"793\":[4,33],\"794\":[3,18],\"795\":[1],\"796\":[2,35],\"797\":[3,24],\"798\":[3],\"799\":[3,83],\"800\":[3,78],\"801\":[3],\"802\":[3,20],\"803\":[4,23],\"804\":[4,39],\"805\":[3,35],\"806\":[4,184],\"807\":[6,33],\"808\":[2],\"809\":[5,84],\"810\":[6,14],\"811\":[5,16],\"812\":[3,49],\"813\":[4,86],\"814\":[2,52],\"815\":[1],\"816\":[2],\"817\":[2,28],\"818\":[5,50],\"819\":[3],\"820\":[3,24],\"821\":[2,10],\"822\":[3,62],\"823\":[3,5],\"824\":[3,22],\"825\":[2,73],\"826\":[1],\"827\":[3,13],\"828\":[1,6],\"829\":[1],\"830\":[1,26],\"831\":[1,29],\"832\":[1]},\"averageFieldLength\":[2.0792316926770713,28.750295439202578],\"storedFields\":{\"0\":{\"h\":\"荒腔走板\",\"t\":[\"提示\",\"荒腔走板，分享生活的乐子，随时随地分享身边的新鲜事儿，当个乐子人！\",\"房子着火我拍照\\n人生乱套我睡觉\\n大难临头不知道\\n大不了我就上吊\\n今天的事儿能拖就拖\\n明天的事儿明天再说\\n我就乐意这样活\\n啥事儿不往心里搁\"]},\"1\":{\"h\":\"少年的第一篇博客\",\"t\":[\"Ladies and gentlemen, Welcome to read my first blog（鬼知道上哪里翻译的）\",\"欢迎阅读无聊少年的第一篇博客(^_^)\"]},\"2\":{\"h\":\"开博前言\",\"t\":[\"现在是北京时间2020年01月18日晚上九点，临近过年，四季如夏的广州终于开始降温，气温18°，勉强算是入冬了吧。\",\"从学校毕业到公司上班已经有一年半了，回想这段时间：毕业前的焦虑，上班前的忐忑，初入职场的热情，慢慢消退的激情，得过且过的生活。和当代恶臭年轻人一样，少年我从一个对生活充满热情的人，慢慢变成一个对未来生活充满迷茫的少年，不知前路在何方。\",\"在很长的一段时间内，少年也曾立下过改变现状的豪言壮志，没过多久就被抛在脑后，堕落一阵后又开始奋斗，如此循环，少年定下的学习、健身计划，都是进展缓慢，总是没有意志力去坚持下去。 就这样浑浑噩噩度过了一年半，2020年了，我意识到是时候做出一些改变了 从哪里开始改变呢？嗯？~ o(￣▽￣)o，作为一个程序猿，掌握着诸多高级技能(复制粘贴)的少年，怎么能没有自己的博客呢，于是立马（零零碎碎弄了一个多月(lll￢ω￢)）大刀阔斧，于是这么一个博客就诞生了\"]},\"3\":{\"h\":\"博客内容\",\"t\":[\"此时少年望着空荡荡的博客陷入深思，博客是有了但是怎么写、写什么呢？\",\"于是少年立马去谷歌搜索🔍一波，看了好多技术大佬的博客，哇塞！原创高产如母猪，教练我想...\",\"作为一个萌新，我想步子不要跨太大，不然容易扯裆，所以少年定下的写作目标有（希望不会立Flag）：\",\"记录 把博客当作笔记，记录工作中遇到的问题，以及解决方案，方便未来回顾复制粘贴\",\"技术 分享技术贴，梦想是星辰大海，呸，是成为一方大佬，原创技术贴高产如母猪！！！\",\"学习 将学习所理解的记录下来，学习笔记，转载大佬的技术贴等\",\"札记 可能会记录一些观影后感、阅读书本记录等\",\"生活 吐槽这操蛋的、该死的生活吖（分享生活的感悟）\"]},\"4\":{\"h\":\"开博结束语\",\"t\":[\"第一篇博客到这里差不多就结束了，摁，不错~写了这么多字，让我叉腰自豪一会，虽然写了一个多小时(✿◡‿◡)\",\"好了，我的博客之旅从这里出发（￣︶￣）↗\"]},\"5\":{\"h\":\"数据库\"},\"6\":{\"h\":\"导航\"},\"7\":{\"h\":\"框架\"},\"8\":{\"h\":\"记录Go中Slice扩容源码分析\",\"t\":[\"转载自： Go slice扩容深度分析\",\"参考资料：Go内存管理\",\"提示\",\"slice 使用时可以不用指定数组长度，超出长度也可以继续添加元素\"]},\"9\":{\"h\":\"引起注意\",\"t\":[\"之前使用slice时一直以为当cap小于1024时每次都是翻倍，大于1024时就是添加 0.25(1.25倍)\",\"直到遇到下面的场景引起我的注意：\",\"func main() { a := []byte{1, 2,3,4} a = append(a, 5,6,7,8,9,10) fmt.Println(\\\"a.cap = \\\",cap(a)) var b = []int{1,2,3,4} b = append(b, 5,6,7,8,9,10) fmt.Println(\\\"b.cap = \\\",cap(b)) } \"]},\"10\":{\"h\":\"分析源码\",\"t\":[\"以我之前的翻倍的理解，cap应该都是8才对，但结果让我意外：\",\"a.cap = 16 b.cap = 10 \",\"这结果让我一头雾水，于是出于好奇去看了关于slice扩容的源代码https://github.com/golang/go/blob/master/src/runtime/slice.go\",\"发现涉及扩容的方法是growslice，下面贴出一部分代码\",\"newcap := old.cap doublecap := newcap + newcap if cap > doublecap { newcap = cap } else { if old.len < 1024 { newcap = doublecap } else { // Check 0 < newcap to detect overflow // and prevent an infinite loop. for 0 < newcap && newcap < cap { newcap += newcap / 4 } // Set newcap to the requested cap when // the newcap calculation overflowed. if newcap <= 0 { newcap = cap } } } \",\"看了源码才发现上面的代码append多个元素没走翻倍扩容流程，而是直接复制最新的长度作为cap长度：\",\"newcap = 4 doublecap = 8 cap = 10 cap > doublecap newcap = 10 \",\"所以b.cap = 10也就说得通了，但是a.cap = 16这个就不对了，往下看源码：\",\"// Specialize for common values of et.size. // For 1 we don't need any division/multiplication. // For sys.PtrSize, compiler will optimize division/multiplication into a shift by a constant. // For powers of 2, use a variable shift. switch { case et.size == 1: lenmem = uintptr(old.len) newlenmem = uintptr(cap) capmem = roundupsize(uintptr(newcap)) overflow = uintptr(newcap) > maxAlloc newcap = int(capmem) case et.size == sys.PtrSize: lenmem = uintptr(old.len) * sys.PtrSize newlenmem = uintptr(cap) * sys.PtrSize capmem = roundupsize(uintptr(newcap) * sys.PtrSize) overflow = uintptr(newcap) > maxAlloc/sys.PtrSize newcap = int(capmem / sys.PtrSize) case isPowerOfTwo(et.size): // ... 省略 default: // ... 省略 } \",\"查资料得知这里的et.size是指元素在计算机的字节大小，我用的是window 64位，所以int也就是int 64，大小位8字节，发现进行内存分配的是capmem:\",\"a因为是byte类型，所以字节大小为 1，满足 et.size == 1 => capmem = roundupsize(uintptr(newcap)) => capmem = 10 ? 16\",\"roundupsize 为什么会将 10 变为 16 呢，查了资料发现是go内存管理的原因：Go内存管理\",\"# https://github.com/golang/go/blob/master/src/runtime/sizeclasses.go // class bytes/obj bytes/span objects tail waste max waste // 1 8 8192 1024 0 87.50% // 2 16 8192 512 0 43.75% // 3 32 8192 256 0 46.88% // 4 48 8192 170 32 31.52% // 5 64 8192 128 0 23.44% // 6 80 8192 102 32 19.07% // 7 96 8192 85 32 15.95% // 8 112 8192 73 16 13.56% // 9 128 8192 64 0 11.72% // 10 144 8192 56 128 11.82% // ... // 65 28672 57344 2 0 4.91% // 66 32768 32768 1 0 12.50% \",\"看bytes/obj 没有大小为10 的类型，所以向上取整得到的是：16。roundupsize\",\"b因为是int 64类型，所以字节大小为 8，满足 et.size == 8 => capmem = roundupsize(uintptr(newcap) * sys.PtrSize) => capmem = 10 * 8 = 80 => newcap = 80 / 8 = 10\"]},\"11\":{\"h\":\"结论\",\"t\":[\"slice 扩容真相\",\"append单个元素，或者append多个元素，小于doublecap双倍容量，这样就会走以下扩容流程，不足1024，双倍扩容，超过1024的，1.25倍扩容。\",\"若是append多个元素，且double后的容量不能容纳，直接使用预估的容量。\",\"！！得到新容量后，都需要根据slice类型，算出新的容量所需的内存情况capmem，然后再进行capmem向上取整，得到新的所需内存，除上类型size，得到真正的最终容量,作为新的slice的容量。\",\"最后感谢Go slice扩容深度分析 的博客\",\"END\\t二零二零年二月二十八日\"]},\"12\":{\"h\":\"目录\"},\"13\":{\"h\":\"链接\"},\"14\":{\"h\":\"工具\"},\"15\":{\"h\":\"友情链接\",\"t\":[\"站点名称：Zenghr 站点地址：https://blog.zenghr 站点描述：乐子人的博客 站点Logo：https://media.zenghr.cn/logo.png \",\"请先将本站加入友链后，在下方评论按如下格式提供信息：\",\"icon: 网站图标 name: 网站名字 desc: 网站描述 link: 网站链接 \"]},\"16\":{\"h\":\"工具链接\",\"t\":[\" VuePress \",\"Vue 驱动的静态网站生成器。\",\" VuePress Theme Hope \",\"一个具有强大功能的 vuepress 主题✨\",\" iconfont \",\"阿里巴巴矢量图标库。\",\"- icon: https://vuepress.vuejs.org/hero.png name: VuePress desc: Vue 驱动的静态网站生成器。 link: https://vuepress.vuejs.org/zh/ - icon: https://theme-hope.vuejs.press/logo.png name: VuePress Theme Hope desc: 一个具有强大功能的 vuepress 主题✨ link: https://theme-hope.vuejs.press/zh/ - icon: https://image.liubing.me/2022/12/30/c827badf9fa7a.jpg name: iconfont desc: 阿里巴巴矢量图标库。 link: https://www.iconfont.cn/ \"]},\"17\":{\"h\":\"友情链接\",\"t\":[\" Mr.Hope \",\"VuePress Theme Hope 主题作者。\",\" pdai \",\"Java 全栈知识体系\",\"- icon: https://mister-hope.com/logo.svg name: Mr.Hope desc: VuePress Theme Hope 主题作者。 link: https://mister-hope.com/ - icon: https://www.pdai.tech/images/index-read.gif name: pdai desc: Java 全栈知识体系 link: https://www.pdai.tech \"]},\"18\":{\"h\":\"Idea JRebel 热更新\",\"t\":[\"最近在写 springboot 项目时，修改代码后都需要更新启动服务，当项目很大时，启动就很慢了，严重限制开发效率，所以就用上了热部署插件 JReble\",\"提示\",\"JRebel是一款JVM插件，它使得Java代码修改后不用重启系统，立即生效。记录一下插件配置步骤\"]},\"19\":{\"h\":\"安装插件\",\"t\":[\"在 IDE 的插件市场中查找插件并安装\",\"vscB1Q\",\"在插件安装后 Idea 设置界面会出现 JRebel 的设置选项, 但是该插件是付费的，所以我们需要进行一些配置才能使用\"]},\"20\":{\"h\":\"插件注册\",\"t\":[\"在 JRebel 设置中填写注册信息:\",\"先生成 GUID 信息，GUID 在线生成工具\",\"根据反向代理服务器地址拼接激活地址，服务器地址：https://jrebel.qekang.com/{你生成的GUID}\",\"在注册窗口第一个选项填写 上面拼接的 URL , 第二个选项填写你的邮箱地址 点击注册即可完成激活插件\"]},\"21\":{\"h\":\"插件配置\"},\"22\":{\"h\":\"1. 开启离线模式\",\"t\":[\"设置JRebel插件进入离线工作模式，双击 Work offline 按钮，一定要设置！！！\",\"VubDWo\",\"设置离线模式成功，如果离线模式到期。可以打开破解软件，再点击renew offline seat 即可刷新离线时间\",\"FrLmbz\"]},\"23\":{\"h\":\"2. 打开自动编译\",\"t\":[\"提示\",\"由于JRebel是实时监控class文件的变化来实现热部署的，所以在idea环境下需要打开自动编译功能才能实现随时修改，随时生效\",\"打开 IDEA 设置界面：Build, Execution, Deployment ==> Compiler 然后勾选☑️ Build project automatically\",\"N5fXQZ\",\"Intellij IEDA 使用 ctrl + shift + alt + / 快捷键选择 Registry... ，勾选 compiler.automake.allow.when.app.running\",\"IseCCT\"]},\"24\":{\"h\":\"3. 使用 JRebel\",\"t\":[\"将我们的项目使用JRebel进行管理项目，勾选中我们的 maven 项目，当勾选上之后，在我们 Maven 项目的 resources 文件夹下生成了管理文件rebel.xml，并且右上角多了两个按钮，使用 JRebel 启动，这样我们每次修改代码只需要稍微等待一会，就会自动更新代码了\",\"hPVkQC\"]},\"25\":{\"h\":\"IDE工具破解\",\"t\":[\"记录一下 IntelliJ IDEA 2018.3.6 的激活破解教程，免费激活至 2100 年\",\"PS: 本教程更新时间: 2021年3月22日~\"]},\"26\":{\"h\":\"前言\",\"t\":[\"这里不介绍 IDEA 的安装教程，网上一大堆教程\",\"JAR 包链接: JAR包 百度云链接\",\"提取码: 8cjh\"]},\"27\":{\"h\":\"开始破解\",\"t\":[\"先下载破解所需的 JAR 包\",\"将下载后的 JAR 包放入到 IDEA 安装目录的 bin 目录下，如下图\",\"6uwE6R\",\"修改 bin 目录下的 idea.exe.vmoptions 和 idea64.exe.vmoptions 配置文 件\",\"分别在这两个配置文件，最下面添加下面这一行代码：\",\"-javaagent:D:\\\\DevTool\\\\IntelliJ IDEA 2018.3.6\\\\bin\\\\JetbrainsIdesCrack-4.2-release-sha1-3323d5d0b82e716609808090d3dc7cb3198b8c4b.jar\",\"注意：添加的这一行代码，路径要改成自己的路径\",\"wyYtY8\",\"修改完成打开 IDEA，没激活会弹出激活窗口界面，如下图：\",\"复制下面激活码，粘贴到idea激活界面中\",\"eyJsaWNlbnNlSWQiOiJONzU3SkUwS0NUIiwibGljZW5zZWVOYW1lIjoid3UgYW5qdW4iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiQ0wiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDIwLTAxLTA3In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMjAtMDEtMDcifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMC0wMS0wNyJ9LH\",\"可以看到激活至2100，代表激活成功，如图：\"]},\"28\":{\"h\":\"导航\"},\"29\":{\"h\":\"Java基础 - 知识点\",\"t\":[\"提示\",\"本文对 Java 基础知识做一个总结，如有总结有错误请提出问题，我好改进。\"]},\"30\":{\"h\":\"Java简介\"},\"31\":{\"h\":\"什么是编程\",\"t\":[\"开始学习Java语言之前，我们先了解一下 计算机编程 是什么以及 Java 语言\",\"计算机语言是为了实现人与计算机通讯的，为了让计算机实现现实人为比较复杂的工作。\",\"我们把解决问题的步骤告诉计算机一步一步去做，把这个过程叫做编程。\"]},\"32\":{\"h\":\"Java语言\",\"t\":[\"Java诞生于1995年，原属于SUN公司，2009年4月20日，美国数据软件巨头甲骨文公司（Oracle） 宣布以74亿美元收购SUN公司\"]},\"33\":{\"h\":\"跨平台原理\",\"t\":[\"Window 系统只能执行 Window 程序(exe)，Linux 系统只能执行 Linux 系统程序，Mac 系统只能执行 Mac程序，所以一个程序想要在多个平台执行，就有了如下两个跨平台方式\"]},\"34\":{\"h\":\"1、多次编译，到处运行\",\"t\":[\"提示\",\"每个系统都有一个编译器，使用特定的编译器所编译的程序只能在对应的平台运行，所以每个平台编译一次就实现多次编译，到处运行\"]},\"35\":{\"h\":\"2、一次编译，到处运行\",\"t\":[\"提示\",\"Java 所实现的跨平台方式就是，一次编译，到处运行，实现原理：Java语言对 Java程序进行了编译操作，编译后生产和平台无关的 - 字节码文件。这个文件 Window、Linux、Mac等系统是不能直接运行的，该文件只能被 JVM 识别运行，JVM 是Java的虚拟机，所以我们想要在哪个系统上运行 Java 程序，就要在哪个系统上安装相应的 Java虚拟机，由虚拟机执行 Java程序，这就是实现了 Java 的跨平台\"]},\"36\":{\"h\":\"总结Java 跨平台原因:\",\"t\":[\"Java文件经过编译后生成和平台无关的 class 文件\",\"Java虚拟机是不跨平台\"]},\"37\":{\"h\":\"JDK\",\"t\":[\"JDK(Java Development Kit): Java开发工具，包含开发 Java 程序的所有工具，如：java，javac等，JDK 包含 JRE，所以安装了 JDK 就不用安装 JRE了\",\"JRE(Java Runtime Environment): Java 运行环境，JRE 包含 Java常用的类库以及JVM，一般在只运行程序不需要开发程序的服务器中安装\",\"JVM(Java Virtual Machine): Java虚拟机，它是运行所有Java程序的虚拟计算机，JVM不夸平台。\"]},\"38\":{\"h\":\"数据类型\",\"t\":[\"八大基本类型:\",\"boolean/1(bit)\",\"byte/8\",\"char/16\",\"short/16\",\"int/32\",\"long/64\",\"float/32\",\"double/64\"]},\"39\":{\"h\":\"基本数据类型转换\",\"t\":[\"自动类型转换： 隐式类型转换，范围小的数据类型 直接转换为 范围大的数据类型\",\"强制类型转换： 显示类型转换，范围大的数据类型 直接转换为 范围小的数据类型\",\"自动类型提升： 在表达式中，最终的结果类型，将会转换为表达式中类型最高的类型\"]},\"40\":{\"h\":\"包装类\",\"t\":[\"提示\",\"包装类就是把基本数据类型封装到一个类中，提供便利的方法，更好的操作基本类型\",\"Integer包装类\",\"Integer 内部封装了一个 int 类型的基本数据类型 value，并提供方法对 int 值进行操作，还提供 String 与 int 之间的转换\",\"装箱和拆箱概念\",\"装箱：将基本数据类型转成包装类的过程\",\"拆箱：将包装类转成基本数据类型的过程\",\"自动装箱和自动拆箱\",\"自动装箱：将基本数据类型直接赋值给包装类的过程\",\"自动拆箱：将包装类直接赋值给基本数据类型的过程\"]},\"41\":{\"h\":\"缓存池\",\"t\":[\"// 缓存池分析 Integer i5 = new Integer(20); Integer i6 = new Integer(20); System.out.println(i5 == i6); // false Integer i7 = Integer.valueOf(30); Integer i8 = 30; System.out.println(i7 == i8); // true Integer i9 = Integer.valueOf(400); Integer i10 = 400; System.out.println(i9 == i10); // false \",\"new Integer(20) 与 Integer.valueOf(20) 的区别：\",\"new Integer(20) 每次都会新建一个对象\",\"Integer.valueOf(20) 会使用缓存中的对象，多次调用会引用同一对象\",\"valueOf 方法的实现比较简单，先判断值是否在缓存中，存在就使用缓存中的值，不存在就直接 new 新建一个对象\",\"public static Integer valueOf(int i) { if (i >= IntegerCache.low && i <= IntegerCache.high) return IntegerCache.cache[i + (-IntegerCache.low)]; return new Integer(i); } \",\"Integer 缓存池中默认大小为 【-128，127】\",\"private static class IntegerCache { static final int low = -128; static final int high; static final Integer cache[]; static { // high value may be configured by property int h = 127; String integerCacheHighPropValue = sun.misc.VM.getSavedProperty(\\\"java.lang.Integer.IntegerCache.high\\\"); if (integerCacheHighPropValue != null) { try { int i = parseInt(integerCacheHighPropValue); i = Math.max(i, 127); // Maximum array size is Integer.MAX_VALUE h = Math.min(i, Integer.MAX_VALUE - (-low) -1); } catch( NumberFormatException nfe) { // If the property cannot be parsed into an int, ignore it. } } high = h; cache = new Integer[(high - low) + 1]; int j = low; for(int k = 0; k < cache.length; k++) cache[k] = new Integer(j++); // range [-128, 127] must be interned (JLS7 5.1.7) assert IntegerCache.high >= 127; } private IntegerCache() {} } \",\"编译器会在缓冲池范围内的基本类型自动装箱过程调用 valueOf() 方法，因此多个 Integer 实例使用自动装箱来创建并且值相同，那么就会引用相同的对象。\",\"基本类型对应的缓冲池如下:\",\"boolean values true and false\",\"all byte values\",\"short values between -128 and 127\",\"int values between -128 and 127\",\"char in the range \\\\u0000 to \\\\u007F\",\"在使用这些基本类型对应的包装类型时，就可以直接使用缓冲池中的对象。\"]},\"42\":{\"h\":\"运算符\",\"t\":[\"& 和 && 的区别\",\"&： 与符号，无论 & 左边表达式是否为 真， & 右边都参与运算\",\"&&： 短路与，如果 && 左边表达式为 真，那么 && 右边不参与运算\"]},\"43\":{\"h\":\"JVM内存模型\",\"t\":[\"JVM 内存结构大概分为：\",\"方法区(Method Area)\",\"介绍：线程共享的内存区域，用于存储 类信息、常量、静态变量等\",\"控制参数：-XX:PermSize 设置堆的最小空间。-XX:MaxPermSize 设置堆的最大空间\",\"异常：当方法区无法满足内存分配需求时，将会抛出 OutOfMemoryError 异常\",\"堆(Heap)\",\"介绍：线程共享的内存区域，所有的对象实例以及数组都要在堆中分配空间，堆由 GC 负责回收管理\",\"控制参数：-Xms 设置堆的最小空间。-Xmx 设置堆的最大空间\",\"异常：如果在堆中没有足够的空间完成实例分配，将会抛出 OutOfMemoryError 异常\",\"虚拟机栈(JVM Stack)\",\"介绍：线程私有的内存区域，也称为 方法栈区，当方法执行时，就会创建一个当前方法的 栈帧(Stack Frame)，用于存储 局部变量、操作数栈、动态链接等信息。每个方法执行结束时，就会清除该栈帧，方法调用执行至结束的过程，称之为栈帧的入栈到出栈过程。\",\"控制参数：-Xss 控制每个线程栈的大小\",\"异常：线程请求的栈深度大于虚拟机所允许的深度时抛出 StackOverflowError。 虚拟机栈可以动态扩展，当扩展时无法申请到足够的内存时会抛出 OutOfMemoryError\",\"本地方法栈(Native Method Stack)\",\"介绍：和虚拟机栈作用相似\",\"区别：本地方法栈是为虚拟机使用 本地方法 服务的\",\"程序计数器\",\"介绍：当前线程所执行的行号指示器\"]},\"44\":{\"h\":\"数组类型\"},\"45\":{\"h\":\"数组的定义\",\"t\":[\"提示\",\"用来表示一组相同类型的变量，数组是 引用类型，访问元素 索引超出范围会引发 越界异常错误\"]},\"46\":{\"h\":\"静态初始化\",\"t\":[\"定义数组的语法：数据类型[] 变量名 = new 数据类型[]{数据1, 数据二};\",\"// 定义 int 类型的数组 int[] array = new int[]{1,2,3}; \",\"操作数组的方法：操作数组元素都是使用 索引 来操作，第一个索引都是 0 开始\",\"// 访问数组元素 array[0]; // 1 array[1]; // 2 // 修改数组元素 array[0] = 6; // 获取数组长度使用 length array.length; // 3 \",\"语法糖初始化：\",\"// 定义 int 类型的数组 int[] array = {1,2,3}; \"]},\"47\":{\"h\":\"动态初始化\",\"t\":[\"动态定义数组的语法：数据类型[] 变量名 = new 数据类型[数组长度];\",\"// 定义 int 类型的数组 int[] array = new int[3]; // 动态设置元素 array[0] = 1; \"]},\"48\":{\"h\":\"数组初始化内存图分析\",\"t\":[\"静态初始化内存分析：\",\"​ 先在 栈空间(Stack) 创建 array 空间，用于存储 引用数组的 内存地址，new int[]{1,2,3}new 关键字 在 堆空间(Heap) 分配空间 ，将空间的地址赋值给 array 变量，分析图如下：\",\"数组长度无法改变：\",\"int[] array; array = new int[]{1,2,3}; System.out.println(array.length); // 3 array = new int[]{1,2,3,4}; System.out.println(array.length); // 4 \",\"如下所示，array 只是储存的内存地址改变了，数组本身的长度怕没有改变，指向的是新的数组\",\"String类型的数组\",\"String[] array = {\\\"A\\\", \\\"B\\\", \\\"C\\\"}; array[0] = \\\"D\\\"; // todo：并没有改变\\\"A\\\"本身，只是 array[0] 指向了 \\\"D\\\" 所在的内存地址 \"]},\"49\":{\"h\":\"数组特点\",\"t\":[\"数组必须初始化才能使用，并且索引下标不能超过，否则会报错\",\"数组所有元素初始化为默认值，整型为 0，浮点类型是 0.0，布尔型是 false\",\"数组一旦创建长度无法改变\",\"对于储存的是引用类型时，改变元素时怕没有改变原来的数据，只是改变元素引用的值\"]},\"50\":{\"h\":\"Object 常用方法\",\"t\":[\"提示\",\"Object 类 是在 java.lang 包中，所有类都是继承于 Object，称之为 超类\"]},\"51\":{\"h\":\"方法摘要\",\"t\":[\"public class Object { // 创建并返回此对象的一个副本。 protected native Object clone() throws CloneNotSupportedException; // 指示其他某个对象是否与此对象“相等”。 public boolean equals(Object obj); // 当垃圾回收器确定不存在对该对象的更多引用时，由对象的垃圾回收器调用此方法。 protected void finalize() throws Throwable; // 返回此 Object 的运行时类。 public final Class<?> getClass(); // 返回该对象的哈希码值 public int hashCode(); // 返回该对象的字符串表示 public String toString(); // 唤醒在此对象监视器上等待的单个线程 public final void notify(); // 唤醒在此对象监视器上等待的所有线程 public final void notifyAll(); // 导致当前线程等待 public final void wait() throws InterruptedException; } \"]},\"52\":{\"h\":\"toString()\",\"t\":[\"默认返回格式为：Cat@4554617c , @ 前面的是该类运行时的类，后面的是该对象的 哈希码。\",\"当我们输出打印类的实例对象时，默认会调用 toString() 方法输出\"]},\"53\":{\"h\":\"源码分析\",\"t\":[\"// getClass() 是 Object 的方法，返回运行时类 // hashCode() 是 Object 的方法，返回对象的哈希码值 public String toString() { return getClass().getName() + \\\"@\\\" + Integer.toHexString(hashCode()); } \"]},\"54\":{\"h\":\"演示\",\"t\":[\"public class Cat { String name; public Cat() {} public Cat(String name) { this.name = name; } } \",\"public static void main(String[] args) { Cat cat = new Cat(\\\"招财猫\\\"); System.out.println(cat); // } \"]},\"55\":{\"h\":\"equals()\",\"t\":[\"equals 用于比较其他某个对象是否与此对象“相等”。\"]},\"56\":{\"h\":\"源码分析\",\"t\":[\"public boolean equals(Object obj) { return (this == obj); } \",\"Object 实现 equals 的方式是用 == 比较符，比较两个对象的内存地址是否一致或者是 哈希码值 是否一致\"]},\"57\":{\"h\":\"equals 与 == 的区别：\",\"t\":[\"== 判断两个 值 是否相等，equals 判断两个对象是否等价\",\"对于基本数据类型，使用 == 判断两个变量的值是否相等，基本数据类型没用 equals 方法\",\"对于引用数据类型，使用 == 判断两个对象的引用地址是否相等，使用 equals 判断两个对象是否等价\",\"所以 Object 源码中比较的是对象的引用地址，一般该方式不能满足我们的比较需求，需要重写该方法，重写 equals 方法时，我们一般也要重写 Object 的 hashCode 方法\"]},\"58\":{\"h\":\"演示\",\"t\":[\"public class Cat { String name; public Cat() {} public Cat(String name) { this.name = name; } // 重写 equals，当Cat中 name相等，两个cat对象就是等价的 @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Cat cat = (Cat) o; return Objects.equals(name, cat.name); } @Override public int hashCode() { return Objects.hash(name, age); } } \"]},\"59\":{\"h\":\"hashCode()\",\"t\":[\"hashCode() 方法返回 哈希码值，equals() 是用来判断两个对象是否等价。等价的两个对象的 哈希码值 一定相等，但是 哈希码值 相同的两个对象不一定等价。\",\"所以我们重写 equals 方法时，总是一起重写 hashCode 方法，保证等价的两个对象的哈希码值也相等。\",\"如果我们只重写了 equals 方法，没有重写 hashCode 方法，那么我们新建两个 Cat 对象，存储到 HashSet 集合中，我们希望 Cat 的 name 一致，只在集合中添加一个对象，因为没有实现 hashCode 方法，所以集合添加了两个对象\"]},\"60\":{\"h\":\"演示代码\",\"t\":[\"public class Cat { String name; public Cat() {} public Cat(String name) { this.name = name; } // 重写 equals，当Cat中 name相等，两个cat对象就是等价的 @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Cat cat = (Cat) o; return Objects.equals(name, cat.name); } } \",\"public static void main(String[] args) { Cat c1 = new Cat(\\\"招财猫\\\"); Cat c2 = new Cat(\\\"招财猫\\\"); HashSet<Cat> list = new HashSet<>(); list.add(c1); list.add(c2); System.out.println(list.size()); // 2 } \"]},\"61\":{\"h\":\"clone()\"},\"62\":{\"h\":\"1. cloneable\",\"t\":[\"clone() 是 Object 的 protected 方法，它不是 public，一个类不显式去重写 clone()，其它类就不能直接去调用该类实例的 clone() 方法。\",\"Cat c1 = new Cat(\\\"招财猫\\\"); // c1 c2 = c1.clone(); // 'clone()' has protected access in 'java.lang.Object' // 会报错提示 这个方法是被保护的 \",\"我们必须重写 clone() 方法：\",\"@Override protected Cat clone() throws CloneNotSupportedException { return (Cat)super.clone(); } \",\"public static void main(String[] args) { Cat cat = new Cat(); try { Cat c2 = cat.clone(); } catch (CloneNotSupportedException e) { e.printStackTrace(); } // java.lang.CloneNotSupportedException } \",\"但是调用 重写后的 clone 方法，会抛出 CloneNotSupportedException 异常，这是因为 Cat 类没有实现 Cloneable 接口。\",\"clone() 并不是 Cloneable 接口定义的方法，Cloneable 只是规范，一个类重写了clone() 方法，没有实现 Cloneable 接口又调用了 clone()，就会抛出异常\",\"public class Cat implements Cloneable { // ... @Override protected Cat clone() throws CloneNotSupportedException { return (Cat)super.clone(); } } \"]},\"63\":{\"h\":\"2. 浅拷贝\",\"t\":[\"浅拷贝的概念以及特性：\",\"对于基本数据类型的成员变量，浅拷贝会直接该成员变量的 值 复制一份给新的对象，所以是两份新的不同数据，修改其中一个变量的值，并不会改变另一个变量的值\",\"对于引用数据类型的成员变量，浅拷贝会直接将该变量保存的 内存地址 复制一份给新的对象，比如类中有数组成员变量，那么就会将该变量存储的数组地址，给新的对象，所以两个对象的成员变量引用的都是同一个实例，修改其中一个变量的值，另一个变量的值也会跟着改变\",\"浅拷贝实现\",\"提示\",\"Object中的 clone 方法是浅拷贝\"]},\"64\":{\"h\":\"3. 深拷贝\",\"t\":[\"深拷贝的概念以及特性：\",\"对于基本数据类型的成员变量，和浅拷贝一样\",\"对于引用数据类型的成员变量，需要复制每一个 引用类型的成员变量所 引用的对象，就是递归拷贝，直到全部复制，总的来说就是，对象进行深拷贝要对整个对象图进行拷贝！\"]},\"65\":{\"h\":\"4. 重写 clone() 的规则\",\"t\":[\"由于浅拷贝并不能保证clone出的对象和原对象完全独立，所以在很多时候会导致这样那样的问题，子类覆盖clone一般都是实现深拷贝。\",\"首先调用父类super.clone方法（父类必须实现clone方法），这个方法最终会调用Object中的clone方法完成浅拷贝。\",\"对类中的引用类型进行单独拷贝。\",\"检查clone中是否有不完全拷贝，进行额外的复制。\"]},\"66\":{\"h\":\"5. clone() 的代替方案\",\"t\":[\"使用 clone() 方法来拷贝一个对象即复杂又有风险，它会抛出异常，并且还需要类型转换。Effective Java 书上讲到，最好不要去使用 clone()。\",\"代替方案：\",\"拷贝构造函数\",\"拷贝工厂\",\"通过对象序列化实现深拷贝\"]},\"67\":{\"h\":\"关键字\"},\"68\":{\"h\":\"this\",\"t\":[\"提示\",\"this 关键字表示 当前对象本身，可以调用对象的成员变量、成员方法，解决变量同名引起的二义性；可以在构造器中调用本类其他的构造器，但是必须是在第一句代码\"]},\"69\":{\"h\":\"内存图\",\"t\":[\"mark\"]},\"70\":{\"h\":\"super\",\"t\":[\"super 关键字表示 当前父类，子类要访问父类成员时一定使用super，调用父类的成员变量、成员方法\",\"super只是一个关键字，内部没有引用（地址）\",\"super 调用构造方法必须写在子类构造方法的第一句\",\"如果子类构造方法没有显式调用父类构造方法时，那么jvm会默认调用父类的无参构造super()\"]},\"71\":{\"h\":\"static\"},\"72\":{\"h\":\"1. 静态变量\",\"t\":[\"静态变量：又称为类变量，被 static 修饰的变量属于 类，类的所有实例对象都共享该变量，可以直接通过类名访问它；静态变量在内存中只存在一份\",\"实例变量：每创建一个实例化对象就会产生一个实例变量，实例对象销毁，变量也销毁。\",\"public class StaticDemo { private int num; // 实例变量 public static int age; // 静态变量 // ... } \",\"public static void main(String[] args) { // Non-static field 'num' cannot be referenced from a static context // int num = StaticDemo.num; StaticDemo staticDemo = new StaticDemo(); int num = staticDemo.num; int age = staticDemo.age; } \"]},\"73\":{\"h\":\"2. 静态方法\",\"t\":[\"静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法(abstract)，并且只能访问所属类的静态字段和静态方法，方法中不能有 this 和 super 关键字。\",\"public class StaticDemo { private int num; // 实例变量 public static int age; // 静态变量 // ... public static void run() { // Non-static field 'num' cannot be referenced from a static context System.out.println(num); // 'StaticDemo.this' cannot be referenced from a static context System.out.println(this.num); System.out.println(age); } } \"]},\"74\":{\"h\":\"3. 静态语句块\",\"t\":[\"静态语句块在类初始化时运行一次。\",\"static { System.out.println(\\\"我是静态语句块\\\"); } \",\"public static void main(String[] args) { StaticDemo s1 = new StaticDemo(); StaticDemo s2 = new StaticDemo(); } // 输出: 我是静态语句块 \"]},\"75\":{\"h\":\"4. 静态内部类\",\"t\":[\"非静态内部类依赖于外部类的实例，而静态内部类不需要。\",\"静态内部类不能访问外部类的非静态的变量和方法。\",\"public class StaticDemo { private int num; // 实例变量 public static int age; // 静态变量 // ... class InnerClass { } static class StaticInnerClass { void print() { // 不能访问非静态变量和方法 // System.out.println(num); // run(); } } } \",\"public static void main(String[] args) { StaticDemo staticDemo = new StaticDemo(); // 依靠外部类实例化 InnerClass innerClass = staticDemo.new InnerClass(); // 不依靠外部类 StaticInnerClass staticInnerClass = new StaticInnerClass(); } \"]},\"76\":{\"h\":\"5. 静态导包\",\"t\":[\"import static com.xxx.ClassName.*; \"]},\"77\":{\"h\":\"6. 初始化顺序\",\"t\":[\"提示\",\"静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。\",\"最后才是构造器初始化\",\"存在继承的情况下，初始化顺序为:\",\"父类(静态变量、静态语句块)\",\"子类(静态变量、静态语句块)\",\"父类(实例变量、普通语句块)\",\"父类(构造函数)\",\"子类(实例变量、普通语句块)\",\"子类(构造函数)\"]},\"78\":{\"h\":\"final\",\"t\":[\"提示\",\"final 称之为最终的意思，可以修饰类、方法、局部变量、成员变量\",\"final 修饰类不可以被继承\",\"final 修饰的方法不能被子类重写\",\"final 修饰的变量，只能初始化一次\",\"final 修饰 基本数据类型，表示 值 不能被修改\",\"final 修饰 引用数据类型，表示 引用的地址 不能改变\",\"// final 修饰的类不可以被继承 public class FinalExample { // final修饰的变量只能初始化一次 // final修饰的引用数据类型 不能改变引用地址 final int num = 10; // final 修饰的方法也不能被重写 public final void print() { System.out.println(\\\"我是 final print 方法\\\"); } } \"]},\"79\":{\"h\":\"内部类\"},\"80\":{\"h\":\"内部类概念\",\"t\":[\"提示\",\"什么是内部类，把一个类定义在另一个类内部，把里面的类称之为 内部类 ，把外面的类称为 外部类\",\"public class Outer { // 外部类 class Inner { // 内部类 } } \",\"内部类可以看作和字段、方法一样是外部类的成员，成员可以用修饰符修饰：\",\"静态内部类：使用 static 修饰的内部类，访问内部类直接用外部类名访问\",\"实例内部类：没有 static 修饰的内部类，访问内部类需要实例化对象来访问\",\"方法内部类：定义在方法(局部)的类\",\"匿名内部类：特殊的局部内部类，适用于只用一次的类\",\"对于每个内部了，Java编译器都会生产 class 文件：\",\"静态和实例内部类：外部类名$内部类名字\",\"局部内部类：外部类名$数字内部类名称\",\"匿名内部类：外部类名$数字\"]},\"81\":{\"h\":\"实例内部类\",\"t\":[\"一般而言，成员内部类的访问修饰符是默认访问权限（包访问权限），开发时，可以根据需要添加具体 的访问权限\",\"public class InnerExample { private String name; // *特性* 实例内部类：可以直接访问外部类的私有变量 class Inner1{ public void print() { System.out.println(name); } } } \"]},\"82\":{\"h\":\"静态内部类\",\"t\":[\"public class InnerExample { private static String staticName; // *特性* 静态内部类：可以直接访问类内部的静态私有成员 static class Inner2{ public void print() { System.out.println(\\\"staticName = \\\" + staticName); } } } \"]},\"83\":{\"h\":\"方法内部类\",\"t\":[\"public class InnerExample { private static String staticName; public void print() { String str = \\\"局部bl\\\"; // *特性* 局部内部类：可以直接访问方法内部的变量 class Inner3 { public void print() { System.out.println(str); } } } } \"]},\"84\":{\"h\":\"匿名内部类\",\"t\":[\"提示\",\"当一个类只使用一次，就可以声明成匿名内部类；匿名内部类必须有 实现 存在\",\"// 父类 public abstract class Animal { abstract void eat(); } // 接口 public interface IFly { void fly(); } public class Test { public static void main(String[] args) { // 子类匿名内部类 new Animal() { @Override void eat() { System.out.println(\\\"狗吃屎\\\"); } }.eat(); // 实现类内部类(使用匿名内部类第二种方法) IFly iFly = new IFly() { @Override public void fly() { System.out.println(\\\"我会飞...\\\"); } }; iFly.fly(); } } \"]},\"85\":{\"h\":\"参考资料\",\"t\":[\"Java全栈知识体系 - Java基础知识\"]},\"86\":{\"h\":\"Java基础 - 面向对象\",\"t\":[\"提示\",\"本文介绍 Java 面向对象的相关知识\"]},\"87\":{\"h\":\"封装\"},\"88\":{\"h\":\"封装好处\",\"t\":[\"尽可能的隐藏信息和功能实现细节\",\"保证数据的安全性，防止随意修改数据\",\"提高组件的复用性\"]},\"89\":{\"h\":\"JavaBean的三个规范\",\"t\":[\"类名用 public 修饰符修饰\",\"类的成员变量用 private 修饰，阻止外部直接调用，并且需要提供一对 公共访问器(getter,setter) 给外界使用\",\"当显示定义了 有参构造方法 时需要 提供 无参构造器，当你有定义有参构造器时， JVM 不会自动帮你分配无参构造器\",\"// 规范1 类名使用 public 修饰符 public class Student { // 规范二 字段使用 private 修饰符 修饰 private String name; // 名字 private int age; // 年龄 // 规范三 要有无参构造 public Student() { } public Student(String name, int age) { setName(name); setAge(age); } // 规范四 每个字段要有 get、set public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } } \"]},\"90\":{\"h\":\"继承\"},\"91\":{\"h\":\"访问修饰符\",\"t\":[\"Java 中有三个访问修饰符 private、protected、public以及一个缺省的修饰符，表示包可见\",\"可以对类或者类的字段、方法加上访问修饰符，下面的表格表示各个修饰符的范围：\",\"访问修饰符\",\"本类\",\"同包子类\",\"同包其他类\",\"不同包子类\",\"不同包其他类\",\"private\",\"✔\",\"✘\",\"✘\",\"✘\",\"✘\",\"默认\",\"✔\",\"✔\",\"✔\",\"✘\",\"✘\",\"protected\",\"✔\",\"✔\",\"✔\",\"✔\",\"✘\",\"public\",\"✔\",\"✔\",\"✔\",\"✔\",\"✔\",\"private： 私有的，该修饰符控制只能本类中使用\",\"默认(缺省)： 友好的，访问范围是 本包中可见，也经常称为：包可见\",\"protected： 受保护的，访问范围是：本包可见以及继承的子类可见\",\"public： 公共的，所有地方都可以访问\",\"提示\",\"2021-04-14 添加 protected 补充理解： A是B的子类，B有一个 protected 的方法C， A的对象是否能够直接调用C方法？\",\"protected 方法在子类中可用，指的是 子类的代码中可以用，不是子类的对象\",\"具体例子：Object 是所有类的超类，其中 clone() 方法是用 protected 修饰的，clone() 就只能在子类代码中使用，子类实例化的对象不能使用，除非这个子类和 Object 在同一个包\"]},\"92\":{\"h\":\"1. 什么是抽象类\",\"t\":[\"抽象类就是使用 abstract 关键字定义的类\",\"抽象类不能创建实例\",\"抽象类中，可以定义抽象方法和普通方法，抽象方法必须定义在抽象类中\",\"子类继承抽象类必须实现抽象类中的抽象方法，否则子类必须是抽象类\",\"抽象类被创造出来就是为了继承\",\"抽象类继承方式：在类名后接 extends 关键字，子类只能继承一个父类\"]},\"93\":{\"h\":\"2. 什么是接口\",\"t\":[\"提示\",\"接口类就是使用 interface 关键字定义的一种特殊的抽象类\",\"接口是一种约定的规范，定义了应该有什么功能，本身不实现功能，具体交给实现类实现\"]},\"94\":{\"h\":\"接口特性\",\"t\":[\"接口可以包含变量，成员变量会被隐式地指定为 public static final 变量（并且只能是public static final变量，用private修饰会报编译错误）\",\"接口可以包含方法，方法会被隐式地指定为 public abstract 方法且只能是public abstract方法（用其他关键字，比如private、protected、static、 final等修饰会报编译错误），并且接口中所有的方法不能有具体的实现，也就是说，接口中的方法必须都是抽象方法\",\"一个类可以同时继承多个接口，且需要实现所继承接口的所有方法\"]},\"95\":{\"h\":\"接口实现方式\",\"t\":[\"接口类使用 interface 定义\",\"实现类使用 implements 关键字实现， 并且要在继承关键字 (extends) 后面，一个类可以实现多个接口类，使用 (,) 隔开就行\",\"扩展：从Java1.8开始, Java支持在接口中定义有实现的方法：\",\"public interface IWalkable { public abstract void walk();//抽象方法 default void defaultMethod(){ System.out.println(\\\"有默认实现的方法, 属于对象\\\"); } static void defaultMethod(){ System.out.println(\\\"有默认实现的方法, 属于类\\\"); } } \"]},\"96\":{\"h\":\"3. 抽象与接口的区别\"},\"97\":{\"h\":\"相同点\",\"t\":[\"都不能被实例化\",\"接口的实现类或抽象类的子类都只有实现了接口或抽象类中的方法后才能实例化。\"]},\"98\":{\"h\":\"不同点\",\"t\":[\"抽象类可以提供成员方法的实现细节，而接口中只能存在 public abstract 方法；\",\"抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是 public static final 类型的；\",\"接口只有定义，不能有方法的实现，java 1.8中可以定义default方法体，而抽象类可以有定义与实现，方法可在抽象类中实现。\",\"接口中不能含有静态代码块，而抽象类可以有静态代码块和静态方法；\",\"一个类只能继承一个抽象类，而一个类却可以实现多个接口。\"]},\"99\":{\"h\":\"4. 何时使用抽象、接口\",\"t\":[\"提示\",\"抽象类本质就是从 多个类中提取相同行为，更合适定义公共的行为\",\"接口适合用来定义扩展功能\",\"当需要注重代码的扩展性或者可维护性，优先使用接口，接口和类之间没有任何层次关系\",\"当需要为一些类提供公共的方法时，优先考虑抽象类；提供扩展功能使用接口\"]},\"100\":{\"h\":\"多态\"},\"101\":{\"h\":\"1、分类\",\"t\":[\"多态分为编译时和运行时多态\",\"编译时多态：设计时多态，主要是指 方法的重载\",\"运行时多态：指程序中定义的对象引用所指向的具体类型在运行期间才确定\"]},\"102\":{\"h\":\"2、必要条件\",\"t\":[\"必须要有继承关系\",\"必须要重写(实现)，没有继承就没有重写\",\"父类引用指向子类对象 或 子类对象指向父类引用\"]},\"103\":{\"h\":\"3、继承关系\",\"t\":[\"父类 变量名 = new 实现类(); 变量名.方法(); \",\"Animal类\",\"public class Animal { public void shut() { System.out.println(\\\"Animal...shout...\\\"); } } \",\"Cat类\",\"public class Cat extends Animal{ public void shut() { System.out.println(\\\"妙妙妙...\\\"); } } \",\"Dog类\",\"public class Dog extends Animal{ public void shut() { System.out.println(\\\"哇哇哇...\\\"); } } \",\"测试类\",\"public class AnimalDemo { public static void main(String[] args) { Animal animal = null; // 创建Cat对象 animal = new Cat(); animal.shut(); // 创建Dog对象 animal = new Dog(); animal.shut(); } } // 输出结果: // 妙妙妙... // 哇哇哇... \",\"总结\",\"提示\",\"父类引用变量指向于子类对象，调用方法时实际调用的是子类的方法。\"]},\"104\":{\"h\":\"4、实现关系\",\"t\":[\"接口 变量名 = new 实现类(); 变量名.方法(); \",\"ISwimable 接口\",\"public interface ISwimable { void swim(); } \",\"Fish类\",\"public class Fish implements ISwimable{ public void swim() { System.out.println(\\\"游啊游...\\\"); } } \",\"Dog类\",\"public class Dog extends Animal implements ISwimable{ public void shut() { System.out.println(\\\"哇哇哇...\\\"); } public void swim() { System.out.println(\\\"狗刨式...\\\"); } } \",\"测试类\",\"public class FishDemo { public static void main(String[] args) { // 创建Fish对象 ISwimable fish = new Fish(); fish.swim(); fish = new Dog();//Dog也是实现了ISwimable接口的 fish.swim(); } } // 输出结果: // 游啊游... // 狗刨式... \",\"总结\",\"提示\",\"接口引用变量指向实现类对象，调用方法时实际调用的是实现类实现接口的方法。\"]},\"105\":{\"h\":\"5、多态时方法调用问题\",\"t\":[\"在上面的例子中，Animal 对象调用 shut 方法，是调用 Animal 中的还是 Cat？观察下图👇\",\"mark\",\"调用流程：\",\"编译时判断 shut 方法是否在父类存在\",\"不存在，则报错\",\"找到：运行时再看子类 Cat 中是否有 该方法\",\"找不到，执行父类的方法\",\"找到，执行子类的方法\"]},\"106\":{\"h\":\"6、多态中的类型转换\"},\"107\":{\"h\":\"类型转换\",\"t\":[\"自动类型转换(向上转型)：把子类对象赋给父类变量（多态）\",\"// 父类 <= 子类 Animal a = new Dog(); \",\"强制类型转换(向下转型)：把父类类型对象赋给子类类型变量。\",\"// 子类 <= (子类)父类 Animal a = new Dog(); Dog d = (Dog) a; //正确 Cat c = (Cat) a; //错误 \"]},\"108\":{\"h\":\"instanceOf\",\"t\":[\"判断该对象是否是某一个类/接口的实例\",\"语法格式： boolean b = 对象A instanceof 类B; //判断 A对象是否是 B类的实例？如果是,返回true \",\"Animal a = new Dog(); System.out.println(a instanceof Animal); //true System.out.println(a instanceof Dog); //true System.out.println(a instanceof Cat); //false \"]},\"109\":{\"h\":\"7、多态总结\",\"t\":[\"提示\",\"一句话概括：多态就是 同一个引用数据类型变量，由于引用的实例不同，执行相同的方法，产生不同的结果\"]},\"110\":{\"h\":\"参考资料\",\"t\":[\"Java 全栈知识体系 - 面向对象\"]},\"111\":{\"h\":\"Java 日期时间类\",\"t\":[\"提示\",\"本文记录学习 Java 日期时间的相关类，运行环境：jdk 1.8.0_212\"]},\"112\":{\"h\":\"时间戳(timestamp)概念\",\"t\":[\"具体时间（特定的瞬间）距离历元(1970年01月01日 00:00:00:000) 经过的毫秒数，用long类型存储，计算机是使用时间戳存储表示时间\"]},\"113\":{\"h\":\"Date 类\",\"t\":[\"Date 类 位于 Java.util 包中，直接继承于 Object，但是从 JDK 1.1 开始 Date类中关于 日期时间操作、格式化和解析字符串时间的 相应方法已经废除，我们应该使用 Calendar 类来实现日期和时间的转换操作等，使用 DateFormat 类来格式化和解析字符串\"]},\"114\":{\"h\":\"常用方法\",\"t\":[\"Date()： 构造方法\",\"getTime()： 获取时间戳\",\"after()： 测试此日期是否在指定日期之后\",\"before()： 测试此日期是否在指定日期之前\"]},\"115\":{\"h\":\"SimpleDateFormat 类\",\"t\":[\"SimpleDateFormat 类 就是用于解析和格式化时间的类，所以该类主要包含这两个功能的方法：\",\"格式化(format)： Date类型的数据 根据相应的模板 格式化成 String 字符串\",\"解析(parse)： String 类型的时间转 根据相应的模板 解析成 Date类型\",\"无论是格式化还是解析都需要设置日期时间的格式：\",\"mark\",\"例子👇\",\"yyyy-MM-dd 如 2020-12-12 HH:mm:ss 如 20:12:12 yyyy-MM-dd HH:mm:ss 如 2020-12-12 20:12:12 yyyy/MM/dd HH:mm:ss 如 2020/12/12 20:12:12 yyyy年MM月dd日 HH时mm分ss秒 如 2020年12月12日 20时12分12秒 \",\"代码如下👇\",\"import java.text.SimpleDateFormat; import java.util.Date; public class SimpleDateForMatExample { public static void main(String[] args) throws ParseException { // 定义 Date 时间 Date date = new Date(); // date to String SimpleDateFormat df = new SimpleDateFormat(\\\"yyyy-MM-dd HH:mm:ss\\\"); String dateStr = df.format(date); System.out.println(dateStr); // 输出：2021-04-19 17:17:56 // String to date // 注：解析 parse 会抛出异常，需要捕获或者抛出 Date date1 = df.parse(dateStr); System.out.println(date1); // 输出：Mon Apr 19 17:17:56 CST 2021 } } \"]},\"116\":{\"h\":\"Calendar 类\",\"t\":[\"Calendar 类 也叫日历类，其内部封装了一个 long time 表示时间戳，其内部提供了方法通过对 time 计算出 年月日时分秒...等日历字段，这些字段都被存储到一个数组中，通过get(字段)可以去数组中提取对于字 段的值\",\"Calendar 还提供了用来对日期做相加减，重新设置日期时间功能。Calendar 本身是一个抽象类，通过 getInstance 方法获取对象，其底层创建的是Calendar的子类对 象。\"]},\"117\":{\"h\":\"常用方法\",\"t\":[\"Calendar.getInstance()： 用于快速构建一个 Calends 对象\",\"get()： 方法 获取 年月日 时分秒等\",\"set()： 方法 修改 年月日 时分秒等\",\"setTime()： 方法 将日历设置成想要的时间\",\"add()： 方法 对日期进行 增减操作\",\"getTime()： 返回 Date 实例对象\",\"代码案例👇\",\"// 通过 getInstance 方法，快速创建对象 Calendar cal = Calendar.getInstance(); // 年月日 cal.get(Calendar.YEAR); cal.get(Calendar.MONTH) cal.get(Calendar.DATE); // 时分秒 cal.get(Calendar.HOUR); // 12 小时制 cal.get(Calendar.HOUR_OF_DAY); // 24 小时制 cal.get(Calendar.MINUTE); cal.get(Calendar.SECOND); // 增减时间 cal.add(Calendar.YEAR, 1); // 使用 Calendar 设置时间 cal.setTime(targetDate); // 设置时间 cal.set(Calendar.HOUR_OF_DAY, 23); cal.set(Calendar.MINUTE, 59); cal.set(Calendar.SECOND, 59); // 返回 Date 对象 Date date = cal.getTime(); \"]},\"118\":{\"h\":\"Java基础 - 反射机制\",\"t\":[\"提示\",\"本文主要记录学习 Java 反射（reflect）的一点心得，在了解反射之前，应该先了解 Java 中的 Class 类\"]},\"119\":{\"h\":\"带着BAT大厂的面试问题去理解\",\"t\":[\"Java 反射的作用？\",\"哪里会用到反射？\",\"获取 Class 对象有几种方式?\",\"反射的实现方式有哪些？\",\"利用反射动态创建对象实例?\"]},\"120\":{\"h\":\"什么是反射机制\",\"t\":[\"提示\",\"Java 反射机制在程序运行时，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性。这种 动态的获取信息 以及 动态调用对象的方法 的功能称为 java 的反射机制\"]},\"121\":{\"h\":\"Class（字节码对象）\",\"t\":[\"Class 是 java.lang 包里的一个类，在 Java 中，学习面向对象时，我们通常把多个事物，发现他们的共性特征，抽出来写成一个 Java 类，可以根据该类创建具体的个体对象，编译时会生成一个个 .class 后缀的字节码文件。\",\"在学习 JVM内存模型时 Java基础 - Jvm内存模型 ，里面有一个 方法区(Method Area) 是用于存储 类信息、常量、静态变量等数据，当我们的程序在运行时，用到某个类例如 Person 类，Jvm 会先扫描然后通过类加载器将 Person 的类信息存储到 方法区(Method Area) 中，再通过抽取 Person.class 字节码文件的模板来创建 Class 实例，流程如下👇\",\"mark\",\"所以我们也可以认为一个 .class 字节码文件就是一个 Class 对象，有且只有一个对应的 Class 对象\"]},\"122\":{\"h\":\"获取字节码对象的三种方式\",\"t\":[\"通过 API ，我们得知 Class ，没有公共的构造器，其原因是 Class 对象是在加载类时由 Java 虚拟机自动构造的\",\"// 1. 通过字符串获取 Class 对象，称为 全限定名 Class clz1 = Class.forName(\\\"cn.zenghr.reflect.User\\\"); // 2. 通过类的 class 属性 Class clz2 = User.class; // 3. 通过对象的 getClass() 函数 User user = new User(); Class clz3 = user.getClass(); \",\"第一种方法是通过类的 全限定名 获取 Class 对象，这也是我们平时最常用的反射获取 Class 对象的方法；\",\"第二种方法有限制条件：需要导入类的包；\",\"第三种方法已经有了 User 对象，不再需要反射\",\"因为 Java 运行时，每一个类只会生成一个 Class 对象，有且只有一个，所有三种方式获取的 Class 对象是同一个\",\"System.out.println(clz1 == clz2); // true System.out.println(clz2 == clz3); // true \"]},\"123\":{\"h\":\"反射前言\",\"t\":[\"提示\",\"总结: API 方法中带着 s 表示获取多个，带着 Declared 表示忽略权限，包括私有的也可以获取到\",\"User(演示类，以下代码都使用该类演示)\",\"public class User { private String name; private int age; // 无参构造器 public User() {} // 有参构造器 public User(String name, int age) { this.name = name; this.age = age; } // 私有构造器 private User(String name) { this.name = name; } // 公共构方法 - 无参 public void show() { System.out.println(\\\"user - show\\\"); } // 私有方法 - 有参 private void show(String msg) { System.out.println(\\\"user：\\\" + msg); } // 公共静态方法 - 有参 public static void show(int age) { System.out.println(\\\"user：\\\" + age); } // seter / geter 省略 } \"]},\"124\":{\"h\":\"反射 API\",\"t\":[\"Java 类的成员包括以下三类：属性字段、构造函数、方法。反射的 API 也是与这几个成员相关👇\",\"Fiele 类：提供有关类的属性信息，以及对它的动态访问权限。它是一个封装反射类的属性的类\",\"Constructor 类：提供有关类的构造方法的信息，以及对它的动态访问权限。它是一个封装反射类的构造方法的类。\",\"Method 类：提供关于类的方法的信息，包括抽象方法。它是用来封装反射类方法的一个类。\",\"Class 类：表示正在运行的 Java 应用程序中的类的实例。\",\"Object 类：Object 是所有 Java 类的父类。所有对象都默认实现了 Object 类的方法\"]},\"125\":{\"h\":\"newInstance()\",\"t\":[\"在 Class 类中提供了通过无参构造器快速构建对象的方法 newInstance() ，注意：该方法自从 jdk1.9 之后被标记为 过时方法\"]},\"126\":{\"h\":\"AccessibleObject\",\"t\":[\"AccessibleObject 类是 Field、Method 和 Constructor 对象的基类。它提供了将反射的对象标记为在使用时取消默认 Java 语言访问控制检查的能力\",\"对于公共成员、默认（打包）访问成员、受保护成员和私有成员，在分别使用 Field、Method 或 Constructor 对象来设置或获取字段、调用方法，或者创建和初始化类的新实例的时候，会执行访问检查\",\"当访问私有的属性、方法、构造器时，不取消权限控制会抛出异常：IllegalAccessException，具体实现方法\",\"// 取消权限后记得还原权限 setAccessible(true); // 取消权限 setAccessible(false) // 还原权限 \"]},\"127\":{\"h\":\"获取构造器(Constructor)\",\"t\":[\"获取构造器的 API ：\",\"getConstructors()： 获取所有公共的构造方法\",\"getDeclaredConstructors()： 忽略权限，获取所有构造器包括私有的\",\"getConstructor(Class... parameterTypes)： 获取指定的公共构造器，args：参数列表的类型\",\"getDeclaredConstructor(Class.. parameterTypes)： 获取指定的构造器，args：参数列表的类型\",\"Constructor 类常用方法：newInstance() 根据字节码生成一个对象\",\"// 获取字节码对象 Class clz = User.class; // 获取所有构造器 - 公共的 Constructor[] constructors = clz.getConstructors(); for (Constructor constructor : constructors) { System.out.println(constructor); } // 忽略权限 获取所有构造器 - declared Constructor[] declaredConstructors = clz.getDeclaredConstructors(); for (Constructor constructor : declaredConstructors) { System.out.println(constructor); } // 获取指定的公共构造器 - 无参 Constructor constructor = clz.getConstructor(); // 忽略权限 获取指定的构造器 - 无参 Constructor privateConstructor = clz.getDeclaredConstructor(String.class); // 获取指定的公共构造器 - 有参 Constructor constructor1 = clz.getConstructor(String.class, int.class); \"]},\"128\":{\"h\":\"获取方法(Method)\",\"t\":[\"获取方法的 API ：\",\"getMethods()： 获取公共的方法\",\"getDeclaredMethods()： 忽略权限，获取所有方法包括私有的\",\"getMethod(String name, Class<?>... parameterTypes)： 获取指定的公共方法，args：方法名称、参数列表的类型\",\"getDeclaredMethod(String name, Class<?>... parameterTypes)： 获取指定的方法，args：方法名称、参数列表的类型\",\"Method 类中有个方法，可以调用执行方法 invoke(Object, Object... args)，args：需要调用方法的对象实例、方法参数\",\"// 获取字节码对象 Class clz = User.class; // 获取所有公共方法 Method[] methods = clz.getMethods(); for (Method method : methods) { System.out.println(method); } // 获取所有方法 - 忽略权限 Method[] declaredMethods = clz.getDeclaredMethods(); for (Method method : declaredMethods) { System.out.println(method); } // 通过 Class 的 newInstance() 方法快速通过无参构造器构建一个对象 Object obj = clz.newInstance(); // 获取指定方法 - 公共的 Method show = clz.getMethod(\\\"show\\\"); // 运行方法 show.invoke(obj); // 反射获取方法 - 私有 Method show1 = clz.getDeclaredMethod(\\\"show\\\", String.class); // 取消权限 show1.setAccessible(true); show1.invoke(obj, \\\"hello\\\"); show1.setAccessible(false); // 反射获取静态方法 todo: 调用静态方法时 参数传入 null Method show2 = clz.getDeclaredMethod(\\\"show\\\", int.class); show2.invoke(null, 25); \"]},\"129\":{\"h\":\"获取字段(Field)\",\"t\":[\"获取字段的 API ：\",\"getFields()： 获取公共的字段，（因为字段大部分是私有的，该方法不常用）\",\"getDeclaredFields()： 忽略权限，获取所有字段包括私有的\",\"getField(String name)： 获取指定的公共字段 - 不常用，args：字段名称\",\"getDeclaredField(String name)： 获取指定的字段，args：字段名称\",\"Field 类 常用方法：\",\"getName() - 获取字段名称\",\"get() - 获取字段值\",\"set() - 设置字段值\",\"User user = new User(\\\"张三 \\\", 20); // 获取字节码对象 Class clz = user.getClass(); Field name = clz.getDeclaredField(\\\"name\\\"); name.setAccessible(true); // 修改字段值 name.set(user, \\\"李四\\\"); name.setAccessible(false); // 获取所有字段，普遍使用 getDeclaredFields() Field[] fields = clz.getDeclaredFields(); // 遍历字段 for (Field field : fields) { // 设置私有字段可访问 field.setAccessible(true); // 获取指定字段值 System.out.println(field.getName() + \\\"=\\\" + field.get(user)); // 恢复权限 field.setAccessible(false); } \"]},\"130\":{\"h\":\"内省 - Introspector\"},\"131\":{\"h\":\"介绍\",\"t\":[\"JavaBean是一个非常常用的组件,无外乎就是操作里面的属性.而之前咱们要获取JavaBean中的方法,如果使用反射非常麻烦.SUN公司专门提供了一套操作 Javabean 属性的API：内省（Introspector）\"]},\"132\":{\"h\":\"内省的作用\",\"t\":[\"获取到属性名和属性类型等相关状态信息.\",\"获取属性对应的读写方法操作属性的值等操作方式.\"]},\"133\":{\"h\":\"内省相关类以及API\",\"t\":[\"Introspector\",\"Introspector 类似于BeanInfo的静态工厂类，主要是提供静态方法通过Class实例获取到BeanInfo，得到BeanInfo之后，就能够获取到其他描述符。主要方法：\",\"public static BeanInfo getBeanInfo(Class<?> beanClass)：通过Class实例获取到BeanInfo实例。\",\"BeanInfo\",\"BeanInfo 是一个接口，具体实现是 GenericBeanInfo，通过这个接口可以获取一个类的各种类型的描述符。主要方法：\",\"BeanDescriptor getBeanDescriptor()：获取JavaBean描述符。\",\"EventSetDescriptor[] getEventSetDescriptors()：获取JavaBean的所有的 EventSetDescriptor。\",\"PropertyDescriptor[] getPropertyDescriptors()：获取JavaBean的所有的 PropertyDescriptor。\",\"MethodDescriptor[] getMethodDescriptors()：获取JavaBean的所有的 MethodDescriptor。\",\"PropertyDescriptor\",\"PropertyDescriptor 类表示JavaBean类通过存储器（Setter和Getter）导出一个属性，它应该是内省体系中最常见的类。主要方法：\",\"synchronized Class<?> getPropertyType()：获得属性的Class对象。\",\"synchronized Method getReadMethod()：获得用于读取属性值（Getter）的方法；\",\"synchronized Method getWriteMethod()：获得用于写入属性值（Setter）的方法。\",\"int hashCode()：获取对象的哈希值。\",\"synchronized void setReadMethod(Method readMethod)：设置用于读取属性值（Getter）的方法。\",\"synchronized void setWriteMethod(Method writeMethod)：设置用于写入属性值（Setter）的方法\"]},\"134\":{\"h\":\"内省实战\",\"t\":[\"提示\",\"注意：getBeanInfo(Class beanClass, Class stopClass) 方法第二参数表示，不内省 stopClass 类，通常传入 Object.class\",\"public static void main(String[] args) { try { // 给定字节码对象获取 beanInfo 对象 BeanInfo beanInfo = Introspector.getBeanInfo(User.class, Object.class); // 获取 beanInfo 对象的信息 PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors(); // 循环遍历输出 for (PropertyDescriptor pd : propertyDescriptors) { // 获取属性 name System.out.println(pd.getName() + \\\"=\\\" + pd.getPropertyType()); // 获取可读方法 Method readMethod = pd.getReadMethod(); System.out.println(readMethod); Method writeMethod = pd.getWriteMethod(); System.out.println(writeMethod); System.out.println(\\\"------------------------------\\\"); } } catch (IntrospectionException e) { e.printStackTrace(); } } \",\"输出\",\"age=int public int cn.zenghr.advanced.domain.User.getAge() public void cn.zenghr.advanced.domain.User.setAge(int) ------------------------------ name=class java.lang.String public java.lang.String cn.zenghr.advanced.domain.User.getName() public void cn.zenghr.advanced.domain.User.setName(java.lang.String) \"]},\"135\":{\"h\":\"JavaBean to Map 实现\",\"t\":[\"/** * java to map 互转 */ public class BeanUtil { private BeanUtil() { } /** * JavaBean 内省 转 Map * * @param obj JavaBean * @return 返回 map */ public static Map<Object, Object> bean2map(Object obj) { Map<Object, Object> map = new HashMap<>(); try { // 1. 获取 beanInfo 对象 BeanInfo beanInfo = Introspector.getBeanInfo(obj.getClass(), Object.class); // 2. 获取 beanInfo 的属性 PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors(); // 3. 循环遍历获取属性 key-value for (PropertyDescriptor pd : propertyDescriptors) { String key = pd.getName(); Object val = pd.getReadMethod().invoke(obj); // 添加 map.put(key, val); } } catch (IntrospectionException e) { e.printStackTrace(); } catch (IllegalAccessException e) { e.printStackTrace(); } catch (InvocationTargetException e) { e.printStackTrace(); } return map; } /** * 通过反射获取字段 转化 map * @param obj * @return */ public static Map<Object, Object> bean2mapReflect(Object obj) { Map<Object, Object> map = new HashMap<>(); try { Class clz = obj.getClass(); Field[] fields = clz.getDeclaredFields(); for (Field field : fields) { String key = field.getName(); field.setAccessible(true); Object val = field.get(obj); field.setAccessible(false); map.put(key, val); } } catch (IllegalAccessException e) { e.printStackTrace(); } return map; } /** * map to javabean 泛型 * @param map map数据 * @param clz 类类型 * @param <T> 泛型 * @return 返回泛型对象 */ public static <T> T map2bean(Map<Object, Object> map, Class<T> clz) { try { // 获取 beanInfo 信息 BeanInfo beanInfo = Introspector.getBeanInfo(clz, Object.class); // 获取 bean 的属性 PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors(); // 生成 泛型实例 T t = clz.newInstance(); for (PropertyDescriptor pd : propertyDescriptors) { String key = pd.getName(); Object val = map.get(key); pd.getWriteMethod().invoke(t, val); } return t; } catch (IntrospectionException e) { e.printStackTrace(); } catch (IllegalAccessException e) { e.printStackTrace(); } catch (InstantiationException e) { e.printStackTrace(); } catch (InvocationTargetException e) { e.printStackTrace(); } return null; } } \"]},\"136\":{\"h\":\"理解String#intern\",\"t\":[\"提示\",\"本文主要分析 String 包，以及StringBuffer、StringBuilder的操作，运行环境：jdk 1.8.0_212\"]},\"137\":{\"h\":\"参考资料\",\"t\":[\"深入理解String#intern\"]},\"138\":{\"h\":\"String 概念\",\"t\":[\"String 类是代表字符串，Java中所有的字符字面量都是此类的实现；\",\"内部使用 char 类型的数组存储数据，该数组被 final 修饰，代表该数组赋值初始化后就不能被修改，并且内部没有实行可以修改该数组的方法，因此 String是不可变的。\",\"/** The value is used for character storage. */ private final char value[]; \"]},\"139\":{\"h\":\"不可变的好处\"},\"140\":{\"h\":\"1. String Pool 字符缓存池\",\"t\":[\"如果一个 String 对象已经被创建过，那么就会从 String Pool 中引用，只有 String 是不可变的，才可能使用 String Pool，内存图如下👇\",\"String str1 = \\\"abc\\\"; String str2 = \\\"abc\\\"; System.out.println(str1 == str2); // true String str3 = new String(\\\"abc\\\"); System.out.println(str3 == str1); // false \",\"mark\"]},\"141\":{\"h\":\"2. 线程安全\",\"t\":[\"因为 String 不可变特性，所以 String 天生具备线程安全，可以在多个线程中使用\"]},\"142\":{\"h\":\"String，StringBuffer，StringBuilder\"},\"143\":{\"h\":\"1. 可变性\",\"t\":[\"String 不可变\",\"StringBuffer 和 StringBuilder 可变\"]},\"144\":{\"h\":\"2. 线程安全\",\"t\":[\"String 不可变，所以线程安全\",\"StringBuffer 线程安全，内部使用 synchronized 实现\",\"StringBuilder 线程不安全\"]},\"145\":{\"h\":\"StringBuffer\",\"t\":[\"提示\",\"StringBuffer(字符缓冲区) 可以当成是一个包装类，内部封装了一个字符数组，并提供相应的 增、删、改、查等操作方法，也可以称为 字符串容器，由于 StringBuffer 是线程安全，所以效率比StringBuilder低，所以我们平时优先使用 StringBuilder\"]},\"146\":{\"h\":\"StringBuffer 构造方法\",\"t\":[\"StringBuffer() ：初始容量是 16 的可变字符串\",\"StringBuffer(int capacity) ：构造一个容量是 capacity 的可变字符串\"]},\"147\":{\"h\":\"StringBuffer和StringBuilder 常用方法\",\"t\":[\"StringBuffer 主要操作是 append 和 insert 方法\",\"append： 在原有的字符串后面追加数据\",\"insert(int offset, String str)： 在指定位置插入字符串\",\"delete(int start, int end)： 删除指定区间的字符串，含头不含尾\",\"setCharAt(int index, char ch)： 替换指定位置的字符\",\"replace(int start, int end, String str)： 替换指定区间的字符串\",\"capacity()： 返回容量大小\",\"StringBuilder Api 和 StringBuffer Api一致，唯一不同就是线程安全与否\"]},\"148\":{\"h\":\"自动扩容源码分析\",\"t\":[\"StringBuffer 和 StringBuilder 调用 append 方法，都会调用 父类的 append 方法，父类的 append 方法源码如下👇 - (源码版本：JKD 1.8)\"]},\"149\":{\"h\":\"append\",\"t\":[\"public AbstractStringBuilder append(String str) { if (str == null) return appendNull(); int len = str.length(); ensureCapacityInternal(count + len); str.getChars(0, len, value, count); count += len; return this; } \"]},\"150\":{\"h\":\"ensureCapacityInternal\",\"t\":[\"可以看出核心的代码为 ensureCapacityInternal 方法，传入参数为，原有长度(count) + 新字符串长度(len)，点击查看 ensureCapacityInternal 源码👇\",\"private void ensureCapacityInternal(int minimumCapacity) { // overflow-conscious code // 如果 新字符串长度 - 数组容量 value.length 大于 0 即超出最大容量 // 则执行 数组拷贝，生成新的数组 if (minimumCapacity - value.length > 0) { value = Arrays.copyOf(value, newCapacity(minimumCapacity)); } } \",\"ensureCapacityInternal 方法中，判断 如果 新字符串长度(minimumCapacity) - 数组容量 value.length 大于 0 即超出最大容量，则执行 newCapacity 方法计算新的扩容长度，然后执行 Arrays.copyOf 生成新的字符数组， newCapacity 源码如下👇\"]},\"151\":{\"h\":\"newCapacity\",\"t\":[\"private int newCapacity(int minCapacity) { // overflow-conscious code // 先将 原有容量长度 << 1，相当于 乘于 2，翻倍，再加 +2 int newCapacity = (value.length << 1) + 2; // 如果 新计算的 容量长度比新字符串长度小，那么直接将 新字符串长度 赋值成新的数组容量 if (newCapacity - minCapacity < 0) { newCapacity = minCapacity; } // 如果 新的容量小于等于0 或者 新容量大小比数组最大长度大，则重新计算容量 // 否则 直接返回上面计算的新的容量大小 return (newCapacity <= 0 || MAX_ARRAY_SIZE - newCapacity < 0) ? hugeCapacity(minCapacity) : newCapacity; } \",\"查看 newCapacity 源码则知道，先将原有容量大小 左移 1，也就是容量翻倍，再 +2，得出新的容量大小 newCapacity。\",\"再将新的容量 newCapacity 跟新字符串长度进行比较，如果比新字符串长度小，那么直接将 新字符串长度 赋值成新的数组容量newCapacity = minCapacity;\",\"最后再 校验一下，如果 新的容量小于等于0 或者 新容量大小比数组最大长度大，就要执行 hugeCapacity 方法重新计算容量大小，否则 直接返回 新容量大小 newCapacity\",\"查看 hugeCapacity 方法源码👇\",\"private int hugeCapacity(int minCapacity) { // 如果 新字符串长度 比 Integer 最大值还要大，则抛出异常 if (Integer.MAX_VALUE - minCapacity < 0) { // overflow throw new OutOfMemoryError(); } // 如果 新字符串长度 小于 最大数组长度，返回 新字符串长度，否则返回 最大数组长度 return (minCapacity > MAX_ARRAY_SIZE) ? minCapacity : MAX_ARRAY_SIZE; } \",\"该方法主要判断新字符串是否超出 Integer 最大值，超出则抛出异常\",\"如果 新字符串长度 小于 最大数组长度，则返回 新字符串长度，否则返回 最大数组长度\"]},\"152\":{\"h\":\"总结\",\"t\":[\"注：\",\"Integer.MAX_VALUE(Integer 最大值)：2147483647\",\"MAX_ARRAY_SIZE(数组最大长度)：Integer.MAX_VALUE - 8\",\"提示\",\"在原有容量大小的基础上 翻倍再+2 得出 newCapacity，如果还是小于新字符串长度，直接将新字符串长度设置成新的容量，否则使用翻倍后的容量\",\"校验 newCapacity 后发现新计算的容量不合法 小于0 或者 大于数组最大长度，则需要根据新的字符串重新计算容量，合法就使用 newCapacity 作为新的容量，重新计算规则为：\",\"前提条件：新的字符串长度不能超出 Integer 的最大值，则直接抛出异常 OutOfMemoryError\",\"在前提下，字符串长度比最大数组长度大，直接使用字符串长度作为新的容量\",\"否则使用 数组最大长度 作为新的容量\"]},\"153\":{\"h\":\"String.intern()\",\"t\":[\"使用 String.intern() 可以保证相同内容的字符串变量引用同一的内存对象\"]},\"154\":{\"h\":\"String 常量池\",\"t\":[\"String 常量池 也称为 缓存池，八大基本数据类型都有自己的缓存池，使用方法：\",\"直接使用双引号声明出来 String 对象会直接存储在 常量池中\",\"使用 new String() 创建的 String 对象，会在堆区生成一个String 对象，还会在常量池中生成 相应的字符串对象(如果常量池不存在该对象的话)\",\"提示\",\"String s = new String(\\\"abc\\\") 这个语句生成了几个对象，根据上面总结的可知，一共生成两个对象，常量池中的 abc 对象，堆区的 String 对象\"]},\"155\":{\"h\":\"intern 分析\",\"t\":[\"判断下面代码会输出什么结果👇\",\"public static void main(String[] args) { String s = new String(\\\"1\\\"); s.intern(); String s2 = \\\"1\\\"; System.out.println(s == s2); String s3 = new String(\\\"1\\\") + new String(\\\"1\\\"); s3.intern(); String s4 = \\\"11\\\"; System.out.println(s3 == s4); } \",\"打印结果是：\",\"jdk6： false，false\",\"jdk7： false，true\",\"如果我将 intern() 方法都往下移一句，会发生什么结果呢👇\",\"public static void main(String[] args) { String s = new String(\\\"1\\\"); String s2 = \\\"1\\\"; s.intern(); System.out.println(s == s2); String s3 = new String(\\\"1\\\") + new String(\\\"1\\\"); String s4 = \\\"11\\\"; s3.intern(); System.out.println(s3 == s4); } \",\"打印结果：\",\"jdk6： false，false\",\"jdk8： false，false\",\"JDK 1.6 分析\",\"mark\",\"因为 jdk6中的常量池是放在 Perm 区中的，Perm 区和正常的 JAVA Heap 区域是完全分开的\",\"而我们 new 出来的 String 对象是在 堆区(Heap) 中的，所以拿一个 JAVA Heap 区域的对象地址和字符串常量池的对象地址进行比较肯定是不相同的，即使调用String.intern方法也是没有任何关系的\",\"JDK 1.7 分析\",\"提示\",\"在 Jdk6 以及以前的版本中，字符串的常量池是放在堆的 Perm 区的，Perm 区是一个类静态的区域，主要存储一些加载类的信息，常量池，方法片段等内容\",\"在 jdk7 的版本中，字符串常量池已经从 Perm 区移到正常的 Java Heap(堆) 区域了\",\"mark\",\"我们先看 s和s2 两个对象，通过 new 创建的 String 对象，会在堆中生成String对象，以及常量池中的 \\\"1\\\" 对象，我们执行 s.intern() 方法时，就是 s对象 去常量池中寻找后发现 \\\"1\\\" 已经在常量池中了\",\"接着执行 s2 = \\\"1\\\" ，生成一个引用指向常量池中的 \\\"1\\\" 对象，所以 s和s2 的引用地址不同，从图中我们可以清晰的看出\",\"再看 s3和s4 字符串，String s3 = new String(\\\"1\\\") + new String(\\\"1\\\") 代码最终生成了两个对象，一个是常量池中的 \\\"1\\\"，以及堆中的 s3 引用对象 String，该对象的内容是 \\\"11\\\"，此时常量池中是没有 \\\"11\\\" 对象的\",\"接着 s3.intern() 代码执行，将 s3 中引用的字符存储进常量池中，因为此时常量池中是没有 \\\"11\\\" 对象的，所以会在 常量池中生成一个 \\\"11\\\" 的对象，该过程跟 JDK 1.6 是一致的，但是在 JDK 1.7 中，常量池中可以存储堆中的地址引用\",\"接着 String s4 = \\\"11\\\" ，会去常量池中创建，创建的时候会发现已经存在，因为常量池中 \\\"11\\\" 对象保存的是 s3 的地址引用，所以 s4 就指向 s3 所在的内存地址，因此最后 s3 == s4 的结果就是 true\",\"mark\",\"看第二段代码，代码唯一的改变就是 intern 的位置顺序改变了，intern 方法位置变到 String s4 = \\\"11\\\" 后面\",\"因此执行 String s4 = \\\"11\\\" 语句时，常量池中没有 \\\"11\\\" 的对象，所以 s4 会创建一个新的对象，而 s3 也是在堆中创建的对象，两个对象地址都不一致，所以 s3 == s4 的结果是 false\"]},\"156\":{\"h\":\"总结\",\"t\":[\"jdk7 版本对 intern 操作和常量池都做了一定的修改\",\"String 常量池 从 Perm 移到 Java Heap 区\",\"String#intern 方法时，如果存在堆中的对象，会直接保存对象的引用，而不会重新创建对象。\"]},\"157\":{\"h\":\"Java基础 - 枚举类\",\"t\":[\"本文介绍 Java 枚举类的相关知识\"]},\"158\":{\"h\":\"枚举类的介绍\",\"t\":[\"Java 枚举是一个特殊的类，一般表示一组常量，比如一年的 4 个季节，一个年的 12 个月份，一个星期的 7 天，方向有东南西北等\"]},\"159\":{\"h\":\"枚举类的使用规则\",\"t\":[\"类的对象是确定的有限个数\",\"当需要定义一组常量时，建议使用枚举\",\"如果枚举类中只有一个对象，则可以作为单例模式的实现方法\",\"枚举类不能被继承\",\"枚举类不能被单独的new创建对象\",\"枚举类的构造器是私有的\"]},\"160\":{\"h\":\"枚举类的应用场景\",\"t\":[\"星期： Monday（星期一）、Tuesday（星期二）、Wednesday（星期三）、Thursday（星期四）、Firday（星期五）、Saturday（星期六）、Sunday（星期日）\",\"性别： Man（男）、Woman（女）\",\"季节： Spring（春天）、Summer（夏天）、Autumn（秋天）、Winter（冬天）\",\"支付方式： Cash（现金）、WeChatPay（微信）、Alipay（支付宝）、BankCard（银行卡）、CreditCard（信用卡）\",\"订单状态： Nonpayment（未付款）、Paid（已付款）、Fulfilled（已配货）、Delivered（已发货）、Return（退货）、Checked（已确认）\",\"线程状态： Establish（创建）、Ready（就绪）、Run（运行）、Obstruct（阻塞）、Die（死亡）\",\"等等……\"]},\"161\":{\"h\":\"使用案例\",\"t\":[\"/** * redis的key的管理类 * 约定：一个redis key 映射一个枚举实例 */ @Getter public enum RedisKeys { //用户登录key 实例 USER_LOGIN_TOKEN(\\\"user_login_token\\\", 30 * 60L ), //注册短信验证码key 实例 REGIST_VERIFGY_CODE(\\\"regist_verifgy_code\\\", 5 * 60L ); private String prefix; // key的前缀 private Long time; //key有效时间， 单位是s private RedisKeys(String prefix, Long time){ this.prefix = prefix; this.time = time; } //拼接出完整redis的key public String join(String... values){ StringBuilder sb = new StringBuilder(80); sb.append(this.prefix); for (String value : values) { sb.append(\\\":\\\").append(value); } return sb.toString(); } } \"]},\"162\":{\"h\":\"Java基础\"},\"163\":{\"h\":\"Java 集合框架体系\",\"t\":[\"提示\",\"本文用于整合 集合框架的知识体系，如有不正确的地方请指出，感谢。\",\"JDK Version：1.8.0.212\"]},\"164\":{\"h\":\"数据结构概述\",\"t\":[\"数据结构就是数据在计算机中存储的方式，不同的数据结构，底层采用不同的存储算法，在执行具体的操作时，不同的算法会有不同的效率，有的查询效率慢，有的删除添加效率快等\"]},\"165\":{\"h\":\"常见的数据结构\",\"t\":[\"数组(Array)\",\"链表(Linked)\",\"哈希表(Hash)\",\"栈(Stack)\",\"队列(Queue)\",\"树(Tree)\",\"图(Graph)\",\"堆(Heap)\",\"在日常的开发中，往往根据业务的需要，选择不同的数据结构，选择合适的集合类\",\"这么多数据结构，我们又可以根据其数据结构特性(是否连成一条线)，分为 线性数据结构 和 非线性数据结构\"]},\"166\":{\"h\":\"线性数据结构\"},\"167\":{\"h\":\"数组(Array)\",\"t\":[\"把具有相同类型的数据有序地组织在一起，称为数组。数组使用 索引/下标 来表示元素的存储位置。\",\"性能分析\",\"添加操作：\",\"如果是添加到数组尾部，只需要操作一次\",\"如果添加到其他位置，则需要把后面的元素整体后移\",\"删除操作：\",\"如果是删除尾部元素，只需要操作一次\",\"如果是删除其他位置元素，则需要把元素整体后移\",\"修改操作：\",\"给定索引，操作一次\",\"根据内容，操作N次\",\"查询操作：\",\"给定索引，操作一次\",\"根据内容，操作N次\",\"总结：基于数组(Array)的数据结构做查询修改是非常快的，添加和删除就比较慢\"]},\"168\":{\"h\":\"链表(Linked)\",\"t\":[\"每个元素在内存中的位置不是有序的，而是通过在每个元素中记录下一个元素的位置链接在一起，称为链表。\",\"链表又分为 单向链表 和 双向链表\",\"单向链表：元素中只记录了下一个元素的位置，所以只能单向遍历\",\"双向链表：元素中记录了 上一个元素和下一个元素的位置，实现双向遍历\",\"mark\",\"mark\",\"性能分析\",\"添加操作：\",\"添加位置在头部或尾部，操作一次\",\"添加位置在其他位置，需要覆盖原有元素指向的位置，指向新的元素位置，新的元素则需要指向原有元素指向的位置\",\"删除操作：\",\"如果删除的元素是头部或尾部，操作一次\",\"如果是中间元素，需要找到元素，删除操作一次\",\"修改操作：\",\"平均 (N + 1) / 2\",\"查询操作：\",\"平均 (N + 1) / 2\",\"总结：链表(Linked) 数据结构对于 添加删除操作较快，查询修改比较慢\"]},\"169\":{\"h\":\"队列(Queue)\",\"t\":[\"队列是一种特殊的线性表，它只允许在头部进行删除操作，尾部进行添加操作，是一种受限制的线性表。\",\"队列又分为 单向队列 和 双向队列:\",\"单向队列(Queue)：先进先出，只能在队尾插入，从队列头部删除\",\"双向队列(Deque)：两端都可以进行添加删除数据，不能操作中间的数据\",\"单向队列\",\"双向队列\",\"总结：擅长操作头部和尾部\"]},\"170\":{\"h\":\"栈(stack)\",\"t\":[\"栈（stack）又名堆栈，它是一种运算受限的线性表，后进先出(LIFO)。\",\"栈结构仅允许在表的一端进行插入和删除运算，这一端被称为 栈顶，相对地，把另一端称为 栈底。 向一个栈中插入新元素又称作 入栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素。从一 个栈中删除元素又称作 出栈\"]},\"171\":{\"h\":\"集合框架体系\",\"t\":[\"集合是Java中提供的一种容器，可以用来存储多个数据，根据不同的存储方式形成的体系结构，就叫做集合框架体系。\",\"集合继承关系\",\"每一种容器类底层拥有不同的底层算法(数据结构)。\"]},\"172\":{\"h\":\"Iterable 接口\",\"t\":[\"从上图可以看出 Iterable 接口是所有集合的超类， 实现此接口允许对象成为 for-each 循环的目标，它是 Java 中的一种 语法糖\",\"List<Object> list = new ArrayList(); for (Object obj: list){} \",\"其他遍历方式\",\"Iterable 接口有一个方法，就是\",\"Iterator<T> iterator(); \",\"该方法能创建一个轻量级的迭代器，用于安全的遍历元素，移除元素，如果在for-each中删除集合中的元素，是不安全的，会抛出 ConcurrentModificationException 异常，所以尽量使用迭代器的方式进行遍历，删除元素\",\"for(Iterator it = coll.iterator(); it.hasNext(); ) { System.out.println(it.next()); } \",\"提示\",\"集合容器主要包括 Collection 和 Map 两种，Collection 存储对象的集合，而 Map 存储 键值对 (key - value)\"]},\"173\":{\"h\":\"Collection 顶层接口\",\"t\":[\"Collection 是顶层接口，它主要用于定义集合的约定\",\"List 接口继承于 Collection 接口，同时也是 ArrayList、LinkedList 的父类\",\"Set 接口跟 List 接口处于同级的层次，也继承于 Collection 接口，同时也是 HashSet、TreeSet 的父类\",\"Map 是一个支持 key-value 存储的对象，Map 不能包含重复的 key，注意 Map 不继承于 Collection 接口\",\"提示\",\"实现类命名方式：底层数据结构 + 实现的集合接口。e.g：ArrayList (数组结构 + List 接口)\"]},\"174\":{\"h\":\"List 接口\",\"t\":[\"List接口是 Collection接口 的子接口，List 接口定义了一种规范，要求该容器允许记录元素的添加顺序，也允许元素重复。那么List接口的实现类都会遵循这一种规范\"]},\"175\":{\"h\":\"常用实现类\",\"t\":[\"ArrayList： 表示数组结构，底层采用数组实现，开发中使用最多的类。\",\"LinkedList： 表示链表结构，表示单向链表和双向链表\",\"Stack： 栈结构，使用数组实现，使用不多\",\"Vector： 向量，老版的 ArrayList，使用数组实现，使用不多\"]},\"176\":{\"h\":\"常用 API\",\"t\":[\"添加操作\",\"boolean add(E e)： 将元素添加到列表末尾\",\"void add(int index, E element)： 在列表的指定位置插入指定元素\",\"boolean addAll(Collection<? extends E> c)： 将指定 collection 中的所有元素都插入到列表中的指定位置\",\"删除操作\",\"boolean remove(Object o)： 从此列表中移除第一次出现的指定元素\",\"E remove(int index)： 移除列表中指定位置的元素\",\"boolean removeAll(Collection<? extends E> c)： 从列表中移除指定 collection 中包含的其所有元素\",\"修改操作\",\"Object set(int index, Object ele)： 修改列表中指定索引位置的元素，返回被替换的旧元素\",\"查询操作\",\"int size()： 返回当前列表中元素个数\",\"boolean isEmpty()： 判断当前列表中元素个数是否为0\",\"Object get(int index)： 查询列表中指定索引位置对应的元素\",\"Object[] toArray()： 把列表对象转换为Object数组\",\"boolean contains(Object o)： 判断列表是否存在指定对象\"]},\"177\":{\"h\":\"ArrayList\",\"t\":[\"ArrayList 是实现了 List 接口的 可扩容数组，它的内部是基于数组实现的，不是线程安全\",\"transient Object[] elementData; \",\"其内部定义了一个 Object 类型的数组，所以它允许存储所有类型元素\",\"ArrayList 内部有容量的概念，用于表示该数组能存储多大的数据\",\"ArrayList 不是线程安全的容器，使用线程安全应该使用 Collections.synchronizedList\",\"List list = Collections.synchronizedList(new ArrayList(...)) \",\"在集合遍历中，删除添加改变集合的结构时，会出现异常\"]},\"178\":{\"h\":\"Vector\",\"t\":[\"Vector 同 ArrayList 一样，都是基于数组实现的，只不过 Vector 是线程安全的容器。内部每个方法使用 synchronized 进行同步，避免多线程引起的安全问题，但是也导致了 Vector 效率低下\"]},\"179\":{\"h\":\"LinkedList\",\"t\":[\"LinkedList 类，底层采用链表算法，实现了链表，队列，栈的数据结构。无论是链表还是队列主要 操作的都是头和尾的元素，因此在 LinkedList 类中除了 List 接口的方法，还有很多操作头尾的方法\",\"注：这个实现也不是线程安全的\"]},\"180\":{\"h\":\"常用 API\",\"t\":[\"栈操作\",\"void push(Object e)： 将元素推入此列表所表示的栈。\",\"Object pop()： 从此列表所表示的栈处弹出一个元素\",\"Object peek()： 获取但不移除此列表的头（第一个元素）\",\"单向队列\",\"会抛出异常👇\",\"boolean add(Object e)： 入队操作\",\"Object remove()： 出队操作\",\"Object element()： 获取但不移除此列表的头（第一个元素）\",\"不会抛出异常👇\",\"boolean offer(Object e)： 入队操作\",\"Object poll()： 出队操作\",\"Object peek()： 获取但不移除此列表的头（第一个元素）\",\"双向队列\",\"会抛出异常👇\",\"boolean addFirst(Object e)： 头部入队操作\",\"boolean addLast(Object e)： 尾部入队操作\",\"Object removeFirst()： 头部出队操作\",\"Object removeLast()： 尾部出队操作\",\"Object getFirst()： 返回此列表的第一个元素\",\"Object getLast()： 返回此列表的最后一个元素\",\"不会抛出异常👇\",\"boolean offerFirst(Object e)： 头部入队操作\",\"boolean offerLast(Object e)： 尾部入队操作\",\"Object pollFirst()： 头部出队操作\",\"Object pollLast()： 尾部出队操作\",\"Object peekFirst()： 返回此列表的第一个元素\",\"Object peekLast()： 返回此列表的最后一个元素\",\"提示\",\"LinkedList之所以有这么多方法，是因为自身实现了多种数据结构，而不同的数据结构的操作方法 名称不同\"]},\"181\":{\"h\":\"Stack\",\"t\":[\"Stack 表示栈，是 Vector 类的子类，具有先进后出的特性，拥有push（入栈），pop（出栈）方法\"]},\"182\":{\"h\":\"Set 接口\",\"t\":[\"Set 是 Collection 子接口，Set 接口定义了一种规范，也就是该容器不记录元素的添加顺序，也不允许元素重复，那么 Set 接口的实现类都遵循这一种规范。\"]},\"183\":{\"h\":\"常用实现类\",\"t\":[\"HashSet： 底层采用哈希表实现，开发中使用较多的实现类\",\"TreeSet： 底层采用红黑树实现，可以对集合中元素排序，默认自然排序\"]},\"184\":{\"h\":\"常用 API\",\"t\":[\"boolean add(Object e)\",\"boolean remove(Object e)\",\"boolean contains(Object e)\",\"void clear()\",\"int size()\"]},\"185\":{\"h\":\"HashSet\",\"t\":[\"HashSet 是 Set 接口的实现类，底层采用哈希表实现，不能保证元素的有序，保证了元素的唯一，运行存储 NULL 元素，注意 它不是线程安全的容器。\",\"查看源码可知，其内部是 HashMap 的实例\",\"private transient HashMap<E,Object> map; public HashSet() { map = new HashMap<>(); } \"]},\"186\":{\"h\":\"底层工作原理\",\"t\":[\"内部使用哈希表实现，每个元素需要先计算 哈希值，再通过 散列函数 计算出元素的位置\",\"如果该位置存在元素，则去除该位置上 链表 的所有元素，通过 equals 方法依次比较，如果有重复的元素，则不添加，没有重复的元素，则在其 链表 后面添加，如下图👇\",\"mark\"]},\"187\":{\"h\":\"hashCode 和 equals\",\"t\":[\"根据其工作原理，我们可以得知，在哈希表中元素的 hashCode 和 equals 方法很重要\",\"每一个存储到好像表中的对象，都得覆盖hashCode和equals方法用来判断是否是同一个对象，一 般的，根据对象的字段数据比较来判断，通常情况下equals为true的时候hashCode也应该相等\"]},\"188\":{\"h\":\"TreeSet\",\"t\":[\"TreeSet 是 Set 接口的实现类，底层采用红黑树算法实现，会对存储的元素进行排序，默认是自然排序(从小到大)\",\"注意：TreeSet 不允许存储 NULL 值\",\"mark\",\"红黑树存储的时候是左边的存较小的元素，右边存储较大的元素\",\"由于 TreeSet 是平衡二叉树，如果树不平衡，会对节点进行调整\",\"当我们使用 TreeSet 存储元素时，此时要求元素必须具备 比较大小 的能力，也就是实现 java.util.Comparable 接口\"]},\"189\":{\"h\":\"Comparable 接口\",\"t\":[\"TreeSet 会调用元素的 compareTo 方法来比较元素的大小关系,然后将集合元素按照升序排列\",\"public interface Comparable<T> { public int compareTo(T o); } \",\"比较规则，拿当前元素和另一个元素比较：\",\"返回负数，当前元素小\",\"返回正数，当前元素大\",\"等于 0，一样，此时认为两个为同一个对象\",\"如果我们存储进 TreeSet 集合中的元素没有 比较功能，可以让该元素实现 Comparable 接口，并 覆盖compareTo方法，在该方法编写比较规则，否则添加会报错。\",\"class ComparableExample implements java.lang.Comparable<User> { public int compareTo(ComparableExample o) { // ... 比较规则 return int; } } \"]},\"190\":{\"h\":\"Comparator 接口\",\"t\":[\"当原有的排序规则不满足我们的需求时，我们可以提供一个 外部比较器(Comparator) 通过 TreeSet 构造器传入该比较器的实现类\",\"public interface Comparator<T> { int compare(T o1, T o2); } \",\"使用方法：\",\"因为 Comparator 实现类只是用一次，我们可以使用匿名内部类，JDK8 提供了 lambda 表达式，我们可以简写\",\"// 需求：通过比较字符串长度 // 原有的 String 自带的比较规则不满足需求，使用 Comparator public static void main(String[] args) { TreeSet<String> treeSet = new TreeSet<>(Comparator.comparingInt(String::length)); treeSet.add(\\\"abc\\\"); treeSet.add(\\\"apple\\\"); treeSet.add(\\\"zeng\\\"); System.out.println(treeSet); } \"]},\"191\":{\"h\":\"Map 接口\",\"t\":[\"Map提供了一种映射关系，其中的元素是以键值对（key-value）的形式存储的，能够实现根据key快速查找value\",\"Map 结构如下👇\",\"其实能看出一个 Map 其实就由多个 key-value（键值对）组成的，每一个键值对我们使用Entry表示，键（key值）不可重复，value值可以重复\",\"所以也可以说 Map 的 key 是存储在 set 集合中，不可重复\"]},\"192\":{\"h\":\"常用实现类\",\"t\":[\"HashMap： 底层基于哈希表算法\",\"TreeMap： 底层基于红黑树算法\"]},\"193\":{\"h\":\"常用 API\",\"t\":[\"boolean put(Object key, Object value)： 存储一个键值对到Map中\",\"boolean putAll(Map m)： 把 m 中的所有键值对添加到当前Map中\",\"Object remove(Object key)： 从Map中删除指定key的键值对，并返回被删除key对应的value\",\"boolean isEmpty()： 判断当前Map中键值对个数是否为0\",\"Object get(Object key)： 返回Map中指定key对应的value值，如果不存在该key，返回null\",\"boolean containsKey(Object key)： 判断Map中是否包含指定 key\",\"boolean containsValue(Object value)： 判断Map中是否包含指定 value\",\"Set keySet()： 返回Map中所有 key 所组成的Set集合\",\"Collection values()： 返回Map中所有 value 所组成的Set集合\",\"Set entrySet()： 返回Map中所有键值对所组成的Set集合\"]},\"194\":{\"h\":\"HashMap\",\"t\":[\"HashMap 底层基于哈希表算法，Map中存储的 key 对象的 hashCode 值决定了在哈希表中的存储位 置，因为Map中的 key 是 Set，所以不能保证添加的先后顺序，也不允许重复\",\"因为 HashSet 内部使用的就是 HashMap 所以两两者原理一致，HashSet 只是在 HashMap 上封装了一层，其底层工作原理一致\"]},\"195\":{\"h\":\"TreeMap\",\"t\":[\"TreeMap底层基于红黑树算法，因为Map中的 key 是 Set，所以不能保证添加的先后顺序，也不允 许重复，但是Map中存储的 key 会默认使用自然排序（从小到大），和 TreeSet 一样，除了可以使用自然 排序也可以自定义排序\",\"底层工作原理和 TreeSet 一致\"]},\"196\":{\"h\":\"集合框架 工具类\"},\"197\":{\"h\":\"Arrays\",\"t\":[\"Arrays类是数组的工具类，其中包含对数组的拷贝、格式化、排序查询等方法\",\"Arrays.copyOf(T[] original, int newLength)： 数组拷贝\",\"System.arraycopy(Object src, int srcPos, Object dest, int destPos, int length)：System类下的数组拷贝方法\",\"Arrays.toString()： 数组格式化输出\",\"Arrays.sort()： 数组排序，内部使用快速排序\",\"Arrays.binarySearch： 二分查找\",\"asList()： 将数组转化为 List 集合，但是不可改变长度\"]},\"198\":{\"h\":\"Collections\",\"t\":[\"Collections 是一个操作 Collection（Set、 List ）和 Map 等集合的工具类\",\"常用 API\",\"排序操作\",\"reverse(List)： 反转 List 中元素的顺序\",\"shuffle(List)： 对 List 集合元素进行随机排序\",\"sort(List)： 根据元素的自然顺序对指定 List 集合元素按升序排序\",\"sort(List， Comparator)： 根据指定的 Comparator 产生的顺序对 List 集合元素进行排序\",\"swap(List， int， int)： 将指定 list 集合中的 i 处元素和 j 处元素进行交换\",\"查找和替换\",\"Object max(Collection)： 根据元素的自然顺序，返回给定集合中的最大元素\",\"Object max(Collection， Comparator)： 根据 Comparator 指定的顺序，返回给定集合中的最大元素\",\"Object min(Collection)\",\"Object min(Collection， Comparator)\",\"int frequency(Collection， Object)： 返回指定集合中指定元素的出现次数\",\"void copy(List dest,List src)：将src中的内容复制到dest中\",\"boolean replaceAll(List list， Object oldVal， Object newVal)： 使用新值替换List 对象的所有旧值\",\"解决多线程并发访问集合时的线程安全问题\",\"Collections提供了基本每种集合类型都有的方法: synchronizedXxx() 方法,以解决多个线程同时操作一个集合的并发问题\",\"//通过如下的方法保证List的线程安全性 List list = Collections.synchronizedList(list1); \"]},\"199\":{\"h\":\"Java集合框架\"},\"200\":{\"h\":\"Java 多线程\",\"t\":[\"提示\",\"本文用于理解学习多线程的理论基础以及代码实现\"]},\"201\":{\"h\":\"带着BAT大厂的面试问题去理解\",\"t\":[\"描述进程和线程的区别\",\"如何理解并发和并行的区别\",\"多线程的出现是要解决什么问题？\",\"线程不安全是指什么？举例说明\",\"实现线程安全有哪些方法？\"]},\"202\":{\"h\":\"进程的发明\",\"t\":[\"最初的计算机只能执行一些特定的指令，用户输入一个指令，计算机做出一个操作，显然计算机大部分时间都在等待用户的指令，效率低下。\",\"批处理操作系统：用户将一系列指令写下来，形成一个清单，然后交给计算机去读取并依次执行指令，这样批处理系统就出现了\",\"多任务操作系统：虽然批处理系统的诞生提高了电脑的处理效率，但是一个操作执行完，才能执行另一个操作，当一个操作需要大量的IO操作，cpu 只能等待IO操作完成才能执行其他操作，很浪费 cpu 的资源。于是人们发明了进程，每个进程对应一定的内存空间，且只能使用自己内存，每个进程之间互不干扰。同时进程也保存了程序的运行状态，当程序暂停时，在下一次切换会根据暂停时保存的状态来恢复，并接着执行。\",\"可以说 进程的出现提高了 cpu 的利用率\"]},\"203\":{\"h\":\"并发和并行的概念\",\"t\":[\"并发是能够让操作系统从宏观上看起来同一时间段执行多个任务。 换句话说，进程让操作体统的并发成为了可能，至此出现多任务操作系统。 虽然并发从宏观上看有多个任务在执行，但在事实上，对于单核CPU来说，任意具体时刻都只有一个任 务在占用CPU资源。 操作系统一般通过CPU时间片轮转实现并发\",\"并发：在一段时间内多个进程轮流使用 cpu，多个进程形成并发\",\"并行：在同一时刻多个进程使用各自的 cpu ，多个进程形成并行，并行需要多个 cpu 支持\"]},\"204\":{\"h\":\"线程的出现\",\"t\":[\"出现进程后，计算机性能 cpu 得到了巨大的提升，但是人们对实时性有了要求，因为一个进程在一个时间段内只能做一个事情，如果一个进程有多个子任务时，只能逐个得执行这些子任务，很影响效率。\",\"e.g：当手机在获取网络图片时，此时用户点击了相机，因为 cpu 正在渲染图片，不能响应点击相机的操作，就出现了卡顿现象\",\"所以人们为了解决实时性，发明了 线程，让一个线程执行一个子任务，这样一个进程就包含了多个线程；当用户点击相机时，暂停渲染图片，响应相机操作，响应完成再切换，就满足了对实时性的要求。\",\"进程让操作系统的并发性成为了可能，而线程让进程的内部并发成为了可能\",\"提示\",\"注意：一个进程包含多个线程，但是这些线程共享进程占有的内存地址空间和资源。进程是操作系统进 行资源分配的基本单位（进程之间互不干扰），而线程是操作系统进行CPU调度的基本单位（线程间互 相切换）\"]},\"205\":{\"h\":\"进程和线程的区别\",\"t\":[\"根本区别：进程是操作系统资源分配的基本单位，而线程是CPU调度和执行的基本单位\",\"开销：进程有独立的内存空间，程序之间切换开销比较大；线程可以看出是轻量级的进程，共享进程的资源，每个线程都有自己独立的栈空间，切换开销小\",\"内存分配方面：系统在运行的时候会为每个进程分配不同的内存空间；而对线程而言，除了CPU外，系 统不会为线程分配内存（线程所使用的资源来自其所属进程的资源），线程组之间只能共享资源\",\"包含关系：线程是进程的子集，一个进程可以有很多线程，每条线程并行执行不同的任务\"]},\"206\":{\"h\":\"线程不安全实例\",\"t\":[\"模拟买票过程，共有 5 张票，多线程模拟卖票的过程，以下代码模拟买票过程，操作结束后输出的数据错乱，有可能出现 票数为负数的结果\",\"public class TicketRunnable implements Runnable { private int count = 5; @Override public void run() { for (int i = 0; i < 10; i++) { if (count > 0) { count--; System.out.println(Thread.currentThread().getName() + \\\"=> \\\" + count); } } } } \",\"模拟买票\",\"public class TicketRunnableExample { public static void main(String[] args) { TicketRunnable tr = new TicketRunnable(); Thread th1 = new Thread(tr); Thread th2 = new Thread(tr); Thread th3 = new Thread(tr); th1.start(); th2.start(); th3.start(); // 输出： // Thread-0=> 4 // Thread-0=> 1 // Thread-0=> 0 // Thread-2=> 2 // Thread-1=> 3 } } \"]},\"207\":{\"h\":\"实现线程安全\"},\"208\":{\"h\":\"1. 互斥同步\",\"t\":[\"synchronized： Java的关键字，同步机制由 Jvm 维护\",\"ReentrantLock： Java 并发包中的互斥锁\",\"如需要进一步了解线程互斥同步可以看：\",\"Java 并发 - 多线程基础\"]},\"209\":{\"h\":\"Java 多线程基础\",\"t\":[\"提示\",\"本文用于理解Java多线程的基础以及实现方式\"]},\"210\":{\"h\":\"带着BAT大厂的面试题去理解\",\"t\":[\"线程有几种状态？\",\"线程有哪些实现方式？\",\"线程的常用方法？\",\"线程的同步方法有哪些？怎么选择\",\"sleep 和 wait 有什么区别？\"]},\"211\":{\"h\":\"线程状态\"},\"212\":{\"h\":\"新生状态\",\"t\":[\"使用 new 关键字建立一个线程后，该线程对象就处于新生状态，通过调用 start() 方法进入 就绪状态\"]},\"213\":{\"h\":\"就绪状态\",\"t\":[\"处于就绪状态的线程具备了运行条件，但是还没有分配到 CPU，处于线程就绪队列，等待 CPU 调度，进入 运行状态\"]},\"214\":{\"h\":\"运行状态\",\"t\":[\"在运行状态的线程执行自己的 run 方法中代码，如果在给定的时间片内没有执行结束，就会被系统给换下来回到就绪状态，等待下一次 CPU 的调度\",\"处于运行状态的线程在某些情况下，如执行了 sleep (睡眠)、join 方法，或等待 I/O设备等资源，将让出 CPU 并暂时停止自己运行，进入阻塞状态。\"]},\"215\":{\"h\":\"阻塞状态\",\"t\":[\"在阻塞状态的线程不能进入就绪队列，只有当引起阻塞的原因消除时，如睡眠时间已到，或等待的 I/O 设备空闲下来，线程便转入就绪状态，重新到就绪队列中排队等待，被系统选中后从原来停止的位置开始继续执行\"]},\"216\":{\"h\":\"死亡状态\",\"t\":[\"死亡状态是线程生命周期中的最后一个阶段。线程死亡的原因有三个，一个是正常运行的线程完成了它的全部工作；另一个是线程被强制性地终止，如通过 stop方法来终止一个线程【不推荐使用】；三是线程抛出未捕获的异常\"]},\"217\":{\"h\":\"线程使用\",\"t\":[\"在 Java 中实现线程的方式有：\",\"继承 Thread 类\",\"实现 Runnable 接口\",\"实现 Runnable 接口的类只能当做一个可以在线程中运行的任务，不是真正意义上的线程，因此最后还需要通过 Thread 来调用。\"]},\"218\":{\"h\":\"继承 Thread 类\",\"t\":[\"继承 Thread 类实现多线程，重写 run 方法，因为 Thread 类也实现了 Runable 接口，当调用 start() 方法启动一个线程时，虚拟机会将该线程放入 就绪队列 中等待被调度，当一个线程被调度时会执行该线程的 run() 方法\",\"public class MyThread extends Thread { @Override public void run() { for (int i = 0; i < 10; i++) { System.out.println(\\\"MyThread => \\\" + i); } } } \",\"public class ThreadExample { public static void main(String[] args) { MyThread myThread = new MyThread(); myThread.start(); // 开启多线程 for (int i = 0; i < 10; i++) { System.out.println(\\\"main => \\\" + i); } } } \"]},\"219\":{\"h\":\"实现 Runnable 接口\",\"t\":[\"通过 Runnable 接口实现多线程，必须实现 run 方法，通过 Thread 调用 start() 方法来启动线程。\",\"public class MyRunnable implements Runnable { @Override public void run() { for (int i = 0; i < 5; i++) { System.out.println(\\\"MyRunnable => \\\" + i); } } } \",\"public class RunnableExample { public static void main(String[] args) { MyRunnable myRunnable = new MyRunnable(); Thread thread = new Thread(myRunnable); thread.start(); for (int i = 0; i < 10; i++) { System.out.println(\\\"main => \\\" + i); } } } \"]},\"220\":{\"h\":\"线程常用方式\"},\"221\":{\"h\":\"sleep()\",\"t\":[\"Thread.sleep(millisec) 方法会休眠当前正在执行的线程，millisec 单位为毫秒。\",\"sleep() 可能会抛出 InterruptedException，因为异常不能跨线程传播回 main() 中，因此必须在本地进行处理。线程中抛出的其它异常也同样需要在本地进行处理。\",\"public void run() { try { Thread.sleep(3000); } catch (InterruptedException e) { e.printStackTrace(); } } \"]},\"222\":{\"h\":\"wait()\",\"t\":[\"wait(long timeout) ，参数是毫秒，timeout设置0，是无限等待的意思，如果没有notify，那么就会一直等待下去\",\"调用 wait() 使得线程等待某个条件满足，线程在等待时会被挂起，当其他线程的运行使得这个条件满足时，其它线程会调用 notify() 或者 notifyAll() 来唤醒挂起的线程。\",\"它们都属于 Object 的一部分，而不属于 Thread\",\"只能用在同步方法或者同步控制块中使用，否则会在运行时抛出 IllegalMonitorStateExeception。\",\"使用 wait() 挂起期间，线程会释放锁。这是因为，如果没有释放锁，那么其它线程就无法进入对象的同步方法或者同步控制块中，那么就无法执行 notify() 或者 notifyAll() 来唤醒挂起的线程，造成死锁。\",\"public class WaitNotify { private final static Object lock = new Object(); public static void main(String[] args) { // 线程 A new Thread(() -> { System.out.println(\\\"线程 A 等待拿锁\\\"); synchronized (lock) { try { System.out.println(\\\"线程 A 拿到锁了\\\"); TimeUnit.SECONDS.sleep(1L); System.out.println(\\\"线程 A 开始等待并放弃锁\\\"); lock.wait(); System.out.println(\\\"被通知可以继续执行 则 继续运行至结束\\\"); } catch (InterruptedException e) { } } }, \\\"线程 A\\\").start(); // 休眠 1秒 保证 线程 A 先获取 cpu 时间片，拿到锁 try { TimeUnit.SECONDS.sleep(1L); } catch (InterruptedException e) { e.printStackTrace(); } // 线程 B new Thread(() -> { System.out.println(\\\"线程 B 等待锁\\\"); synchronized (lock) { System.out.println(\\\"线程 B 拿到锁了\\\"); try { TimeUnit.SECONDS.sleep(3L); } catch (InterruptedException e) { } lock.notify(); System.out.println(\\\"线程 B 随机通知 Lock 对象的某个线程\\\"); } }, \\\"线程 B\\\").start(); } } \",\"// 输出结果 线程 A 等待拿锁 线程 A 拿到锁了 线程 A 开始等待并放弃锁 线程 B 等待锁 线程 B 拿到锁了 线程 B 随机通知 Lock 对象的某个线程 被通知可以继续执行 则 继续运行至结束 \"]},\"223\":{\"h\":\"yield()\",\"t\":[\"对静态方法 Thread.yield() 的调用声明了当前线程已经完成了生命周期中最重要的部分，可以切换给其它线程来执行。该方法只是对线程调度器的一个建议，而且也只是建议具有相同优先级的其它线程可以运行。\",\"public void run() { Thread.yield(); } \"]},\"224\":{\"h\":\"Daemon\",\"t\":[\"守护线程是程序运行时在后台提供服务的线程，不属于程序中不可或缺的部分，当所有非守护线程结束时，程序也就终止，同时会杀死所有守护线程。\",\"使用 setDaemon() 方法将一个线程设置为守护线程。\",\"public static void main(String[] args) { Thread thread = new Thread(new MyRunnable()); thread.setDaemon(true); } \"]},\"225\":{\"h\":\"join()\",\"t\":[\"线程的强制执行方法，b.join() b线程强制执行，导致其他线程进入阻塞状态，当 b 线程执行结束后，其他线程阻塞原因解除，进入就绪态\",\"public static void main(String[] args) { JoinThread ta = new JoinThread(); ta.start(); for (int i = 0; i < 10; i++) { if (i == 2) { try { // 使得 ta 线程强制执行 ta.join(); } catch (InterruptedException e) { e.printStackTrace(); } } System.out.println(\\\"main => \\\" + i); } } \"]},\"226\":{\"h\":\"setPriority()\",\"t\":[\"优先级越高，被 CPU 调动的可能性越大，但不一定是优先级越高就一定先执行\",\"// 系统默认的三种优先级 System.out.println(Thread.MAX_PRIORITY); System.out.println(Thread.MIN_PRIORITY); System.out.println(Thread.NORM_PRIORITY); public class PriorityExample { public static void main(String[] args) { PriorityThread pt1 = new PriorityThread(\\\"线程A\\\"); pt1.setPriority(Thread.MAX_PRIORITY); pt1.start(); PriorityThread pt2 = new PriorityThread(\\\"线程B\\\"); pt2.setPriority(Thread.NORM_PRIORITY); pt2.start(); } } \"]},\"227\":{\"h\":\"线程互斥同步\",\"t\":[\"Java 提供了两种锁机制来控制多个线程对共享资源的互斥访问，第一个是 JVM 实现的 synchronized ，而另一个是 JDK 实现的 ReentrantLock\"]},\"228\":{\"h\":\"synchronized\"},\"229\":{\"h\":\"1. 同步代码块\",\"t\":[\"它只作用于同一个对象，如果调用两个对象上的同步代码块，就不会进行同步\",\"public void func() { synchronized (this) { // ... } } \"]},\"230\":{\"h\":\"2. 同步方法\",\"t\":[\"和同步代码的作用域一样，作用于同一个对象\",\"public synchronized void func () { // ... } \"]},\"231\":{\"h\":\"3. 同步类\",\"t\":[\"作用于整个类，也就是说两个线程调用同一个类的不同对象上的这种同步语句，也会进行同步。\",\"public void func() { synchronized (SynchronizedExample.class) { // ... } } \"]},\"232\":{\"h\":\"4. 同步静态方法\",\"t\":[\"作用于整个类，和同步类的作用域一致\",\"public synchronized static void fun() { // ... } \"]},\"233\":{\"h\":\"ReentrantLock\",\"t\":[\"ReentrantLock 是 java.util.concurrent(J.U.C)包中的锁。\",\"public class LockExample { private Lock lock = new ReentrantLock(); public void func() { lock.lock(); try { for (int i = 0; i < 10; i++) { System.out.print(i + \\\" \\\"); } } finally { lock.unlock(); // 确保释放锁，从而避免发生死锁。 } } } \",\"public static void main(String[] args) { LockExample lockExample = new LockExample(); ExecutorService executorService = Executors.newCachedThreadPool(); executorService.execute(() -> lockExample.func()); executorService.execute(() -> lockExample.func()); } \"]},\"234\":{\"h\":\"Java多线程\"},\"235\":{\"h\":\"Java I/O流基础\",\"t\":[\"提示\",\"本文旨意掌握 I/O 流的基础知识以及流的基本操作。\"]},\"236\":{\"h\":\"File 类\",\"t\":[\"File 理解为文件和文件夹（目录），用于表示磁盘中某个文件或文件夹的路径。该类包含了文件的创建、删除、重命名、判断是否存在等方法。只能设置和获取文件本身的信息（文件大小，是否可读），不能设置和获取文件里面的内容。\",\"Unix: 严格区分大小写，使用 (/) 来表示路径分隔符。\",\"Windows: 默认情况下是不区分大小写的，使用 (\\\\) 来分割目录路径。但是在Java中一个 (\\\\) 表示转义，所以在 Windows 系统中就得使用两个 \\\\\\\\\",\"操作 File 的常用方法\",\"getName() - 获取文件名\",\"getParent() - 获取上层路径名称（如果使用的是相对路径没有上层路径，返回 null）\",\"getParentFile() - 获取上层路径的 File 对象\",\"getAbsolutePath() - 获取绝对路径\",\"getAbsoluteFile() - 获取绝对路径的 File 对象\",\"list() - 获取该目录下的所有文件名\",\"listFiles() - 获取该目录下的所有文件 File 对象\",\"exists() - 判断文件是否存在\",\"createNewFile() - 创建新文件\",\"isDirectory() - 判断是否是目录\",\"mkdir() - 创建新目录\",\"mkdirs() - 创建新目录（补充不存在的上层目录）\",\"renameTo() - 移动重命名文件\",\"delete() - 删除文件\"]},\"237\":{\"h\":\"字符编码\"},\"238\":{\"h\":\"常见的字符集\",\"t\":[\"ASCII：占一个字节，只能包含128个符号。不能表示汉字。\",\"ISO-8859-1：也称之为latin-1，占一个字节，收录西欧语言，不能表示汉字。\",\"GB2312/GBK/GB18030：占两个字节，支持中文。\",\"ANSI：占两个字节，在简体中文的操作系统中ANSI 就指的是 GBK。\",\"UTF-8：是一种针对Unicode的可变长度字符编码，是Unicode的实现方式之一，支持中文。在开发中建议使用\"]},\"239\":{\"h\":\"编码解码操作\",\"t\":[\"数据在网络上传输是以二进制的格式，二进制格式就是 byte 数组，此时需要把信息做编码和解码处理\",\"编码：把字符串转换为byte数组 String--->byte[]\",\"解码：把 byte 数组转换为字符串 byte[]--->String\",\"注意：一定要保证编码和解码的字符集相同，才能正确解码出信息\",\"提示\",\"乱码问题的根本原因就是 编码和解码使用的字符集不是同一种，解决方法 统一编码字符集\"]},\"240\":{\"h\":\"四大基流\",\"t\":[\"提示\",\"InputStream/OutputStream 只定义了流的流向和流通道的数据单元，并没有定义源数据源和目的地\",\"java.io包中的类是按照 源数据源 和 目的地 进行划分的。\",\"java.io包中的类命名规则：数据源/目的地 + 数据传输单元e.g：File + InputStream / File + Reader\",\"根据流的不同特性，流的划分是不一样的，一般按照如下情况来考虑:\",\"按流动方向：分为 输入流 和 输出流\",\"按数据传输单位：分为 字节流 和 字符流，即每次传递一个字节（byte）或一个字符（char）\",\"按功能上划分：分为 节点流 和 处理流，节点流功能单一，处理流功能更强\",\"流向\",\"字节流\",\"字符流\",\"输入流\",\"InputStream\",\"Reader\",\"输出流\",\"OutputStream\",\"Writer\"]},\"241\":{\"h\":\"字节输入/字节输出流\",\"t\":[\"mark\"]},\"242\":{\"h\":\"InputStream(字节输入流)\",\"t\":[\"InputStream 代表字节输入流的所有类的父类\",\"常用方法\",\"方法\",\"方法作用\",\"int read()\",\"从输入流中读取一个字节数据并返回该字节数据，如果到达流的末尾，则返回 -1\",\"int read(byte[] buff)\",\"从输入流中读取多个字节数据，并存储在缓冲区数组 buff 中。返回已读取的字节数量，如果已到达流的末尾，则返回 -1\",\"void close()\",\"关闭此输入流并释放与该流关联的所有系统资源。InputStream 的 close 方法不执行任何操作\"]},\"243\":{\"h\":\"OutputStream(字节输出流)\",\"t\":[\"OutputStream 代表字节输出流的所有类的父类\",\"常用方法\",\"方法\",\"方法作用\",\"void write(int b)\",\"将指定的一个字节数据b写入到输出流中\",\"void write(byte[] buff)\",\"把数组buff中所有字节数据写入到输出流中\",\"void write(byte[] buff, int off, int len)\",\"把数组buff中从索引 off 开始的 len 个字节写入此输出流中\",\"void flush()\",\"刷新缓冲区\",\"void close()\",\"关闭此输出流并释放与此流有关的所有系统资源\"]},\"244\":{\"h\":\"文件字节流\",\"t\":[\"根据 IO 包中类的命名规则，当程序操作的源数据是文件时，输入字节流使用 FileInputStream 实现类，输出字节流使用 FileOutputStream 实现类\",\"public static void main(String[] args) { // 源数据 File srcFile = new File(\\\"E:\\\\\\\\test\\\\\\\\test.txt\\\"); File decFile = new File(\\\"test.txt\\\"); // todo: jdk 1.7 语法，实现了 AutoCloseable 接口会自动关闭 try ( FileInputStream in = new FileInputStream(srcFile); FileOutputStream out = new FileOutputStream(decFile); ) { // 循环读取 int len; byte[] buf = new byte[1024]; while ((len = in.read(buf)) != -1) { out.write(buf, 0, len); out.flush(); } } catch (IOException e) { e.printStackTrace(); } } \"]},\"245\":{\"h\":\"字符输入/输出流\",\"t\":[\"mark\"]},\"246\":{\"h\":\"Reader(字符输入流)\",\"t\":[\"Reader 表示字符输入流的所有类的超类\",\"常用方法\",\"方法\",\"方法作用\",\"int read()\",\"从输入流中读取一个字节数据并返回该字节数据，如果到达流的末尾，则返回 -1\",\"int read(char[] cbuf)\",\"从输入流中读取多个字节数据，并存储在缓冲区数组 cbuf 中。返回已读取的字节数量，如果已到达流的末尾，则返回 -1\",\"void close()\",\"关闭此输入流并释放与该流关联的所有系统资源\"]},\"247\":{\"h\":\"Writer(字符输出流)\",\"t\":[\"Writer 代表字符输出流的所有类的超类\",\"常用方法\",\"方法\",\"方法作用\",\"void write(int c)\",\"将指定的一个字符数据 c 写入到输出流中\",\"void write(char[] cbuf)\",\"把数组 cbuf 中 cbuf.length 个字符数据写入到输出流中\",\"void write(char[] cbuf, int off,int len)\",\"把数组 cbuf 中从索引 off 开始的 len 个字符写入此输出流中\",\"void write(String str)\",\"将str字符串数据写入到输出流中\",\"void close()\",\"关闭此输入流并释放与该流关联的所有系统资源\",\"void flush()\",\"刷新此输出流并强制写出所有缓冲的输出字符\"]},\"248\":{\"h\":\"文件字符流\",\"t\":[\"FileReader - 操作文件的字符输入流\",\"FileWriter - 操作文件的字符输出流\",\"public static void main(String[] args) { // 源数据 File srcFile = new File(\\\"E:\\\\\\\\test\\\\\\\\test.txt\\\"); File decFile = new File(\\\"test.txt\\\"); // todo: jdk 1.7 语法，实现了 AutoCloseable 接口会自动关闭 try ( FileReader in = new FileReader(srcFile); FileWriter out = new FileWriter(decFile); ) { // 循环读取 int len; char[] buf = new char[1024]; while ((len = in.read(buf)) != -1) { out.write(buf, 0, len); out.flush(); } } catch (IOException e) { e.printStackTrace(); } } \"]},\"249\":{\"h\":\"补充知识点\",\"t\":[\"提示\",\"在文件对象中写入内容的时候，如果该文件对象已经有了其他的内容，这时候我们在使用 write 方法写入数据的时候，会覆盖掉原有的内容，如果想要在原有的内容上追加需要使用构造器 FileWriter(String fileName, boolean append) ，设置为 true，添加数据就会在原有内容的基础上追加\",\"在 JDK 1.7 的新语法中，实现了 AutoCloseable 接口的类会自动帮你关闭资源，语法如下👇\",\"try ( FileInputStream in = new FileInputStream(srcFile); FileOutputStream out = new FileOutputStream(decFile); ) { // ... 代码块 } catch (Exception e) { // .. } \"]},\"250\":{\"h\":\"按资源分类I/O流\",\"t\":[\"mark\"]},\"251\":{\"h\":\"缓冲流\",\"t\":[\"节点流的功能都比较单一，性能较低。\",\"处理流，也称之为包装流，相对于节点流更高级，这里存在一个设计模式—— 装饰设计模式\",\"如需要进一步了解 装饰者模式 可以看：Java IO - 设计模式(装饰者模式)\",\"缓冲流内置了一个大小为 8192 的缓冲区，用于减少磁盘的操作，存满 8192 缓冲区才会写入磁盘中，操作数据量比较大的流，建议都用缓冲流，缓冲流根据四大基流都有对应的缓冲流\",\"BufferedInputStream / BufferedOutputStream / BufferedReader / BufferedWriter \"]},\"252\":{\"h\":\"字节缓冲流\",\"t\":[\"字节缓冲流的 API 方法基本和 字节基流的操作一致\",\"BufferedInputStream\",\"BufferedOutputStream\",\"public static void main(String[] args) { // 源数据 File srcFile = new File(\\\"E:\\\\\\\\test\\\\\\\\test.txt\\\"); File decFile = new File(\\\"test.txt\\\"); // todo: jdk 1.7 语法，实现了 AutoCloseable 接口会自动关闭 try ( FileInputStream in = new FileInputStream(srcFile); FileOutputStream out = new FileOutputStream(decFile); // buff 缓冲区包装类 BufferedInputStream buffIn = new BufferedInputStream(in); BufferedOutputStream buffOut = new BufferedOutputStream(out); ) { // 循环读取 int len; byte[] buf = new byte[1024]; while ((len = buffIn.read(buf)) != -1) { buffOut.write(buf, 0, len); } buffOut.flush(); } catch (IOException e) { e.printStackTrace(); } } \"]},\"253\":{\"h\":\"字符缓冲流\",\"t\":[\"BufferedReader 继承于 Reader，实现对文本型文件进行高效(一次读取一行)的读取，提供特有的方法 readLine() 读取一行\",\"BufferedWriter 继承于 Writer，实现对文本型文件进行高效的写入，提供特有的方法 newLine() 写入一个换行\",\"ublic static void main(String[] args) { // 源数据 File srcFile = new File(\\\"E:\\\\\\\\test\\\\\\\\test.txt\\\"); File decFile = new File(\\\"test.txt\\\"); // todo: jdk 1.7 语法，实现了 AutoCloseable 接口会自动关闭 try ( FileReader in = new FileReader(srcFile); FileWriter out = new FileWriter(decFile); // buff 缓冲区包装类 BufferedReader buffIn = new BufferedReader(in); BufferedWriter buffOut = new BufferedWriter(out); ) { // 循环读取每一行 String line; while ((line = buffIn.readLine()) != null) { // 一行一行写入文件 buffOut.write(line); // 写入换行 buffOut.newLine(); } // 刷新缓冲区 buffOut.flush(); } catch (IOException e) { e.printStackTrace(); } } \"]},\"254\":{\"h\":\"serializable(对象序列化)\",\"t\":[\"序列化： 指把 Java 堆内存中的对象数据，通过某种方式把对象数据存储到磁盘文件中或者传递给给网络上传输。序列化在分布式系统在应用非常广泛\",\"反序列化： 把磁盘文件中的对象的数据或者把网络节点上的对象数据恢复成 Java 对象的过程\",\"需要做序列化的对象必须实现序列化接口：java.io.Serializable(这只是标志接口，没有抽象方法)\",\"通过 IO 中的对象流来做序列化和反序列化操作\",\"ObjectInputStream： 通过 writeObject 方法操作序列化\",\"ObjectOutoutStream： 通过 readObject 方法操作反序列化\",\"注意：如果字段使用 transient 关键字修饰，该字段不会被序列化\",\"// 实现 serializable 接口 public class User implements Serializable { private String name; private int age; // 不序列化 private transient String password; // ... set/get } \",\"序列化操作\",\"public static void main(String[] args) throws Exception { User user = new User(\\\"张三\\\", 20, \\\"123456\\\"); FileOutputStream out = new FileOutputStream(\\\"user.dll\\\"); ObjectOutputStream oos = new ObjectOutputStream(out); // 序列化字节写入文件 oos.writeObject(user); // 关闭资源 oos.flush(); oos.close(); } \",\"反序列化操作\",\"public static void main(String[] args) throws Exception { // 反序列化 FileInputStream in = new FileInputStream(\\\"user.dll\\\"); ObjectInputStream ois = new ObjectInputStream(in); // 读取文件 反序列化成 java 对象 User user = (User) ois.readObject(); System.out.println(user); // 关闭资源 ois.close(); } \",\"序列化版本问题\",\"当类实现 Serializable 接口后，在编译的时候就会根据字段生成一个缺省的 serialVersionUID 值，并在序列化操作时，写到序列化数据文件中\",\"但随着项目的升级系统的 class 文件也会升级(增加一个字段/删除一个字段)，此时再重新编译，对象的 serialVersionUID 值又会改变。那么在反序列化时，JVM会把对象数据数据中的 serialVersionUID 与本地字节码中的 serialVersionUID 进行比较，如果值不相同（意味着类的版本不同），那么报异常 InvalidClassException，即：类版本不对应，不能进行反序列化。如果版本号相同，则可以进行反序列化，如下👇\",\"mark\",\"为了避免代码版本升级而造成反序列化因版本不兼容而失败的问题，在开发中我们可以故意在类中提供一个固定的 serialVersionUID 值\",\"class User implements Serializable { private static final long serialVersionUID = 1L; // .. } \"]},\"255\":{\"h\":\"Java I/O - 装饰者模式\",\"t\":[\"提示\",\"本文了解 Java 设计模式中的一种模式，装饰者模式，在 Java.io 包中的 包装流 中就使用了装饰者模式\",\"如需了解装饰器模式详解请看👉 装饰器模式详解\"]},\"256\":{\"h\":\"装饰器模式\",\"t\":[\"装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构，装饰器模式中有四个重要的角色\",\"抽象构件角色 (Component)\",\"具体构件角色(ConcreteComponent)\",\"抽象装饰者角色(Decorator)\",\"具体装饰者角色(ConcreteDecorator)\",\"以 InputStream 举例，它就是一个 抽象的构建角色(Component)\",\"public abstract class InputStream implements Closeable { // ... } \",\"且定义有抽象方法\",\"public abstract int read() throws IOException; public void close() throws IOException {} \",\"该抽象方法由具体的子类去实现，直接继承了 InputStream，并且提供某一特定功能的子类有\",\"ByteArrayInputStream\",\"FileInputStream\",\"FilterInputStream\",\"PipedInputStream\",\"DataInputStream\",\"这些子类都有自己特定的功能，FileInputStream 代表文件输入流，我们称这些子类为 具体构件角色(ConcreteComponent)\"]},\"257\":{\"h\":\"抽象装饰者(Decorator)\",\"t\":[\"在这些类中有一个类和其他类不同 - FilterInputStream，查看其源代码可知，其内部维护了一个 InputStream 对象，并且它的所有方法，都是调用这个成员对象的同名方法，那么这个 FilterInputStream 就是一个抽象装饰者(Decorator)\",\"public class FilterInputStream extends InputStream { protected volatile InputStream in; protected FilterInputStream(InputStream in) { this.in = in; } public int read() throws IOException { return in.read(); } public int read(byte b[]) throws IOException { return read(b, 0, b.length); } public int read(byte b[], int off, int len) throws IOException { return in.read(b, off, len); } public long skip(long n) throws IOException { return in.skip(n); } public int available() throws IOException { return in.available(); } public void close() throws IOException { in.close(); } public synchronized void mark(int readlimit) { in.mark(readlimit); } public synchronized void reset() throws IOException { in.reset(); } public boolean markSupported() { return in.markSupported(); } } \",\"FilterInputStream 类下面有它的一些子类，我们主要看常用的 BufferedInputStream 缓冲包装流，查看它的源代码\",\"public class BufferedInputStream extends FilterInputStream { public BufferedInputStream(InputStream in, int size) { super(in); if (size <= 0) { throw new IllegalArgumentException(\\\"Buffer size <= 0\\\"); } buf = new byte[size]; } public synchronized int read() throws IOException { if (pos >= count) { fill(); if (pos >= count) return -1; } return getBufIfOpen()[pos++] & 0xff; } } \",\"查看它的 read() 方法源码可知，BufferedInputStream 就是一个具体的装饰者角色(ConcreteDecorator)，它能为一个原本没有缓冲功能的 InputStream 添加上缓冲的功能，例如 FIleInputStream 并没有缓存功能，使用 BufferedInputStream 来装饰它，使得其具备缓存能力，提高程序的性能\"]},\"258\":{\"h\":\"Java-IO流\"},\"259\":{\"h\":\"Seata 全局事务不生效问题\",\"t\":[\"提示\",\"记录工作中遇到到 Seata 全局事务不回滚的问题\"]},\"260\":{\"h\":\"开发环境\",\"t\":[\"Spring Boot\",\"Seata 分布式事务解决方案\"]},\"261\":{\"h\":\"实际场景\",\"t\":[\"在工作中遇到需要调用其他服务接口，由于项目结构问题，没有使用其他的框架去调用接口，而是自己写 HTTP 请求接口调用\",\"在事务发起方贴上注解 @GlobalTransactional 启动 Seata 全局事务，发生错误后事务回滚\",\"但是在测试时发现出现异常时 被调用的服务并没有回滚事务\"]},\"262\":{\"h\":\"问题解决\",\"t\":[\"通过查看日志发现被调用服务并没有启动全局事务，百思不得其解，一开始以为是因为配置了全局异常拦截器导致 Seata 并没有捕获到异常也就没有回滚事务，一顿折腾才发现不是这个原因\",\"后面想到跨服务调用的事务传播是通过 传递事务 ID来开启的，那么会不会是事务 ID 没有传过来\",\"跨服务调用场景下的事务传播，本质上就是把 XID 通过服务调用传递到服务提供方，并绑定到 RootContext 中\",\"因为我是自己封装 HTTP 请求调用，所以只需要把 XID 放到请求中，那么事务就可以启动了\",\"// 添加事务 ID headers.add(RootContext.KEY_XID, RootContext.getXID()); \",\"后面也是去了解了一下 SeataHandlerInterceptor 中的源码，就可以发现拦截器也是直接获取请求中的 XID，所以说理论上只要把事务 ID 提供出来，Seata 可以支持任意的微服务框架\",\"public class SeataHandlerInterceptor implements HandlerInterceptor { private static final Logger log = LoggerFactory.getLogger(SeataHandlerInterceptor.class); @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) { String xid = RootContext.getXID(); // 这里获取 请求中事务 ID String rpcXid = request.getHeader(RootContext.KEY_XID); if (log.isDebugEnabled()) { log.debug(\\\"xid in RootContext {} xid in RpcContext {}\\\", xid, rpcXid); } if (StringUtils.isBlank(xid) && rpcXid != null) { // 如果事务ID为空 直接绑定 RootContext.bind(rpcXid); if (log.isDebugEnabled()) { log.debug(\\\"bind {} to RootContext\\\", rpcXid); } } return true; } } \"]},\"263\":{\"h\":\"Java微服务\"},\"264\":{\"h\":\"Elasticsearch - 知识体系\",\"t\":[\"AVjXZy\",\"提示\",\"Elasticsearch 是目前开源的全文搜索引擎中的首选，它可以快速的存储、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它\",\"该系列主要对 Elasticsearch 的知识点进行学习，共勉。\"]},\"265\":{\"h\":\"相关文章\",\"t\":[\"首先，我们需要先了解 Elasticsearch 是什么，以及它的一些概念的东西\",\"Elasticsearch - 基础概念\",\"是目前开源的全文搜索引擎中的首选，它可以快速的存储、搜索和分析海量数据\",\"了解完 Elasticsearch 的概念后，就开始我们的环境搭建以及学习 Elasticsearch 的基本 Api\",\"Elasticsearch - 环境搭建以及 Kibana 安装\",\"开始搭建 Elasticsearch 环境以及可视化客户端工具\",\"Elasticsearch - 查询和聚合的基础使用\",\"快速上手，使用官网提供的数据进行入门学习\",\"Elasticsearch - 中文分词器 IK\",\"es 默认的分词器对中文支持太差，我们选用 IK 中文分词器\",\"Elasticsearch - SpringBoot 集成\",\"在 SpringBoot 框架中集成 Elasticsearch\",\"Elasticsearch - 高亮查询\",\"实现 高亮查询 需求\",\"Elasticsearch - 复杂查询\",\"学习 Java 中对于 Elasticsearch 中对复杂查询的实现\"]},\"266\":{\"h\":\"参考资料\",\"t\":[\"https://www.pdai.tech/md/db/nosql-es/elasticsearch.html\",\"Elasticsearch 官方文档\"]},\"267\":{\"h\":\"Elasticsearch - 基础概念\",\"t\":[\"在学习 Elasticsearch 之前，我们需要了解一下什么是Elasticsearch、以及它的一些基础概念\"]},\"268\":{\"h\":\"什么是 Elasticsearch\",\"t\":[\"Elasticsearch 是一款非常强大的、基于 Lucene 的开源搜索及分析引擎；它是一个实时的分布式搜索分析引擎，它能让你以前所未有的速度和规模，去探索你的数据\",\"Elasticsearch 的底层是开源库 Lucene。但是，你没法直接用 Lucene，必须自己写代码去调用它的 接口。Elastic 是 Lucene 的封装，提供了 REST API 的操作接口，开箱即用\"]},\"269\":{\"h\":\"为什么使用 Elasticsearch\",\"t\":[\"根据DB Engine的排名 (opens new window)显示，ElasticSearch是最受欢迎的企业级搜索引擎。\",\"nNGtOX\"]},\"270\":{\"h\":\"Elasticsearch 的特点\",\"t\":[\"ES 是分布式文档存储，存储的数据都是序列化为 JSON documents\",\"使用倒排索引存储数据，倒排索引比较适合全文本搜索\",\"支持 JSON 样式的查询语言 —— Query DSL，也支持 SQL 样式的查询\"]},\"271\":{\"h\":\"主要功能以及使用场景\",\"t\":[\"应用场景\",\"记录和日志分析\",\"采集和组合公共数据\",\"全文搜索及个性化推荐\",\"事件数据和指标\",\"数据可视化\",\"举例：\",\"维基百科：全文检索，高亮，搜索推荐等等\",\"GitHub：上千亿行的代码搜索\",\"电商网站：搜索商品\",\"日志数据分析：logstash采集数据，ES进行数据分析处理\",\"商品价格监控网站：用户设定某商品的价格阈值，当监控到商品的金额低于这个阈值的时候，就发送消息通知用户\"]},\"272\":{\"h\":\"Elasticsearch 的基础概念\",\"t\":[\"使用 Elasticsearch 之前，先了解一下 Elasticsearch 的概念\"]},\"273\":{\"h\":\"索引(Index)\",\"t\":[\"Elasticsearch 把数据存放到一个或者多个索引(indices)中。如果用关系型数据库模型对比，索引(index) 的地位与数据库实例(database)相当。\",\"动词：相当于 MySQL 中的 insert 动作\",\"名词：相当于 MySQL 中的 Database\"]},\"274\":{\"h\":\"类型(Type)\",\"t\":[\"指在一个索引中，可以索引不同类型的文档，如用户数据、博客数据。\",\"从6.0.0 版本起已废弃，一个索引中只存放一类数据\",\"7.0 弃用了接受类型的 API，引入了新的无类型 API\",\"如果你的 Elasticsearch 是 7.0 以上，就可以不用了解 Type 了\"]},\"275\":{\"h\":\"文档(Document)\",\"t\":[\"保存在某个索引(Index)下，某种类型(Type)的一个数据(Document)，文档是 JSON 格式的，Document 就像是 MySQL 中的某个 Table 里面的内容\"]},\"276\":{\"h\":\"集群相关\",\"t\":[\"Cluster 集群，一个集群由一个唯一的名字标识，默认为“elasticsearch”。集群名称非常重要，具有相同集群名的节点才会组成一个集群。集群名称可以在配置文件中指定。\",\"Node 节点：存储集群的数据，参与集群的索引和搜索功能。像集群有名字，节点也有自己的名称，默认在启动时会以一个随机的UUID的前七个字符作为节点的名字，你可以为其指定任意的名字。通过集群名在网络中发现同伴组成集群。一个节点也可是集群\",\"Shard 分片：在创建一个索引时可以指定分成多少个分片来存储。每个分片本身也是一个功能完善且独立的“索引”，可以被放置在集群的任意节点上。\",\"Replication 备份: 一个分片可以有多个备份（副本）\"]},\"277\":{\"h\":\"倒排索引\",\"t\":[\"倒排索引也可以称为反向索引\",\"我们平时存储数据用的 mysql，采用的是正向索引，例如 mysql 中有这样的数据\",\"id\",\"name\",\"1\",\"我是中国人\",\"2\",\"泱泱中华文化\",\"3\",\"2021 东京奥运会举办\",\"4\",\"中国古诗文化\",\"5\",\"中国古代历史\",\"如果想要查询关于 中国 相关的信息，然后会开始遍历数据库，找到 1、4、5 记录\",\"select * from table_name where name like '%中国%'; \",\"如果是倒排索引处理的话，首先会将每个名称进行分词，例如：我是中国人，会被分为 我、是、中国、人\",\"然后关联信息的编号\",\"term\",\"ids\",\"中国\",\"1、4、5\",\"文化\",\"2、4\",\"在倒排索引中搜索并发，然后进行检索，就很容易定位到关于 中国 相关的信息\"]},\"278\":{\"h\":\"参考资料\",\"t\":[\"https://www.pdai.tech/md/db/nosql-es/elasticsearch-x-introduce-1.html\"]},\"279\":{\"h\":\"Elasticsearch - 环境搭建\",\"t\":[\"本文介绍 Elasticsearch 和 Kibana 的安装，本系列使用的 Elasticsearch 版本是 7.14.0\",\"框架\",\"版本\",\"Elasticsearch\",\"7.14.0\",\"Kibana\",\"7.14.0\"]},\"280\":{\"h\":\"官方教程\",\"t\":[\"官方安装教程\"]},\"281\":{\"h\":\"安装 Elasticsearch\",\"t\":[\"docker network create elastic docker pull docker.elastic.co/elasticsearch/elasticsearch:7.14.0 docker run --name es01-test -p 9200:9200 -p 9300:9300 -e \\\"discovery.type=single-node\\\" docker.elastic.co/elasticsearch/elasticsearch:7.14.0 \"]},\"282\":{\"h\":\"配置文件 elasticsearch.yaml\",\"t\":[\"network.host: 0.0.0.0 http.port: 9200 discovery.seed_hosts: [\\\"127.0.0.1\\\", \\\"[::1]\\\"] cluster.initial_master_nodes: [\\\"node-1\\\"] # 设置跨域配置 http.cors.allow-origin: /.*/ http.cors.enabled: true http.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization http.cors.allow-credentials: true \"]},\"283\":{\"h\":\"安装 Kibana\",\"t\":[\"docker pull docker.elastic.co/kibana/kibana:7.14.0 docker run --name kibana -p 5601:5601 -e \\\"ELASTICSEARCH_HOSTS=http://{能访问 elastic 的 ip}:9200\\\" docker.elastic.co/kibana/kibana:7.14.0 \",\"注意： 运行 Kibana 需要设置能访问 elastic 的 ip 端口\"]},\"284\":{\"h\":\"Kibana 设置中文\",\"t\":[\"kibana 7 中官方加入了中文的选项，只需要在配置文件 kibana.yml 中加入\",\"i18n.locale: \\\"zh-CN\\\" \",\"进入kibana容器\",\"docker exec -it <容器 ID> /bin/bash \",\"进入配置文件\",\"vi /opt/kibana/config/kibana.yml \"]},\"285\":{\"h\":\"Elasticsearch - 基础教程\",\"t\":[\"本文学习 Elasticsearch 基础的 API 使用以及使用官网提供的数据来操作学习：查询以及聚合操作\"]},\"286\":{\"h\":\"参考资料\",\"t\":[\"官方文档\",\"官方中文文档(部分 API 可能过时)\",\"https://www.pdai.tech/md/db/nosql-es/elasticsearch-x-usage.html\"]},\"287\":{\"h\":\"Elasticsearch - 基础 API\",\"t\":[\"在先前的文档中我们有说到 Elasticsearch 是在 Lucene 基础上，提供了 REST API 的操作接口，所以我们操作 Elasticsearch 的所有增删改查都是使用 GET、POST、PUT、DELETE 请求方式来区分\"]},\"288\":{\"h\":\"_cat 操作\",\"t\":[\"# 查看所有节点 GET /_cat/indices # 查看 es 健康状况 GET /_cat/health # 查看主节点 GET /_cat/master # 查看所有索引 - 类似 show database; GET /_cat/indices \"]},\"289\":{\"h\":\"索引一个文档(保存)\",\"t\":[\"保存一个数据，保存在哪个索引的哪个类型下，指定用哪个唯一标识\",\"PUT customer/_doc/1 - 在 customer 索引下的 _doc 类型下保存 1 号数据为\",\"其中就是 type 是 _doc，这是 ES 团队选择的一种废弃Type的方案，使用 _doc 后面可以无缝对接 API\",\"# 添加一个文档、一般 put 用于修改 PUT customer/_doc/1 { \\\"name\\\": \\\"zenghr\\\", \\\"age\\\": 18, \\\"sex\\\": 0 } # post 会自动分配 id POST customer/_doc { \\\"name\\\": \\\"test\\\", \\\"age\\\": 18, \\\"sex\\\": 0 } \",\"返回结果\",\"{ \\\"_index\\\" : \\\"customer\\\", \\\"_type\\\" : \\\"_doc\\\", \\\"_id\\\" : \\\"1\\\", \\\"_version\\\" : 1, \\\"result\\\" : \\\"created\\\", \\\"_shards\\\" : { \\\"total\\\" : 2, \\\"successful\\\" : 1, \\\"failed\\\" : 0 }, \\\"_seq_no\\\" : 0, \\\"_primary_term\\\" : 1 } \",\"PUT 和 POST 都可以 POST 新增：如果不指定 id，会自动生成 id。指定 id 就会修改这个数据，并新增版本号 PUT 可以新增可以修改：PUT 必须指定 id;由于 PUT 需要指定 id，我们一般都用来做修改 操作，不指定 id 会报错\"]},\"290\":{\"h\":\"查询文档\",\"t\":[\"GET customer/_doc/1 # 返回结果 { \\\"_index\\\" : \\\"customer\\\", \\\"_type\\\" : \\\"_doc\\\", \\\"_id\\\" : \\\"1\\\", \\\"_version\\\" : 1, \\\"_seq_no\\\" : 0, \\\"_primary_term\\\" : 1, \\\"found\\\" : true, \\\"_source\\\" : { \\\"name\\\" : \\\"zenghr\\\", \\\"age\\\" : 18, \\\"sex\\\" : 0 } } \",\"_index： 在哪个索引\",\"_type： 在哪个类型\",\"_id： 记录 id\",\"_version： 版本号\",\"_seq_no： 并发控制字段，每次更新就会+1，用来做乐观锁\",\"_primary_term： 同上，主分片重新分配，如重启，就会变化\",\"_source： 真正的内容\",\"found： 数据是否存在\"]},\"291\":{\"h\":\"更新文档\",\"t\":[\"# 修改文档 PUT customer/_doc/1 { \\\"name\\\": \\\"test\\\", \\\"age\\\": 18, \\\"sex\\\": 0 } # 或者 POST customer/_doc/1 { \\\"name\\\": \\\"test\\\", \\\"age\\\": 18, \\\"sex\\\": 0 } # 或者 POST customer/_doc/1/_update { \\\"doc\\\": { \\\"name\\\": \\\"test\\\", \\\"age\\\": 18, \\\"sex\\\": 0 } } # 执行返回结果 { \\\"_index\\\" : \\\"customer\\\", \\\"_type\\\" : \\\"_doc\\\", \\\"_id\\\" : \\\"1\\\", \\\"_version\\\" : 2, \\\"result\\\" : \\\"updated\\\", \\\"_shards\\\" : { \\\"total\\\" : 2, \\\"successful\\\" : 1, \\\"failed\\\" : 0 }, \\\"_seq_no\\\" : 1, \\\"_primary_term\\\" : 1 } \",\"POST 和 PUT 的区别：\",\"POST 操作： 会对比源文档数据，如果相同不会有什么操作，文档 version 不增加\",\"PUT 操作： 总会将数据重新保存并增加 version 版本\",\"带_update 对比元数据如果一样就不进行任何操作。 看场景： 对于大并发更新，不带 update; 对于大并发查询偶尔更新，带 update; 对比更新，重新计算分配规则\"]},\"292\":{\"h\":\"删除文档或索引\",\"t\":[\"# 创建一个索引 PUT customer # 删除文档 DELETE customer/_doc/1 # 删除一整个索引 DELETE customer \"]},\"293\":{\"h\":\"bulk 批量 API\",\"t\":[\"在单个 API 调用中执行多个索引或删除操作，这减少了开销并且可以大大提高索引速度\",\"官方批量操作文档\",\"POST customer/_doc/_bulk {\\\"index\\\":{\\\"_id\\\":\\\"2\\\"}} {\\\"name\\\":\\\"test1\\\",\\\"age\\\":18,\\\"sex\\\":0} {\\\"delete\\\":{\\\"_id\\\":\\\"2\\\"}} {\\\"index\\\":{\\\"_id\\\":\\\"3\\\"}} {\\\"name\\\":\\\"test2\\\",\\\"age\\\":18,\\\"sex\\\":0} \",\"注意\",\"请注意 delete 动作不能有请求体,它后面跟着的是另外一个操作\",\"行与行之间要以换行符相隔 \\\\n\",\"批量操作语法\",\"{ action: { metadata }}\\\\n { request body }\\\\n { action: { metadata }}\\\\n { request body }\\\\n ... \"]},\"294\":{\"h\":\"学习准备：导入测试数据\",\"t\":[\"提示\",\"为了方便我们学习 Elasticsearch 的 API 操作，官方提供了测试数据，下面我们需要批量导入测试数据\"]},\"295\":{\"h\":\"下载测试数据\",\"t\":[\"数据的 索引(Index) 是 bank，测试数据 JOSN 文件下载地址\",\"数据的格式如下：\",\"{\\\"index\\\": {\\\"_id\\\": \\\"1\\\"}} { \\\"account_number\\\": 1, \\\"balance\\\": 39225, \\\"firstname\\\": \\\"Amber\\\", \\\"lastname\\\": \\\"Duke\\\", \\\"age\\\": 32, \\\"gender\\\": \\\"M\\\", \\\"address\\\": \\\"880 Holmes Lane\\\", \\\"employer\\\": \\\"Pyrami\\\", \\\"email\\\": \\\"amberduke@pyrami.com\\\", \\\"city\\\": \\\"Brogan\\\", \\\"state\\\": \\\"IL\\\" } \"]},\"296\":{\"h\":\"批量插入数据\",\"t\":[\"查看测试数据的格式我们发现数据格式是 bulk 的数据语法，我们可以使用批量操作的 API _bulk 来插入数据\",\"但是官方也提供了另外一种批量操作方式，可以直接导入 Json 文件，插入数据，这里我们使用导入文件的方式\",\"将 accounts.json 拷贝至指定目录，我这里的目录是 Desktop/accounts.json\",\"然后执行\",\"curl -H \\\"Content-Type: application/json\\\" -XPOST \\\"localhost:9200/bank/_doc/_bulk?pretty&refresh\\\" --data-binary \\\"@Desktop/accounts.json\\\" \"]},\"297\":{\"h\":\"查询数据 - Kibana\",\"t\":[\"为了方便测试，我们使用 kibana 的dev tool来进行学习测试：\",\"00PrB5\"]},\"298\":{\"h\":\"进阶检索\",\"t\":[\"ES 支持两种基本方式检索 :\",\"一个是通过使用 REST request URI 发送搜索参数(uri+检索参数)\",\"另一个是通过使用 REST request body 来发送它们(uri+请求体)\"]},\"299\":{\"h\":\"检索信息\",\"t\":[\"搜索API的最基础的形式是没有指定任何查询的空搜索，它简单地返回集群中所有索引下的所有文档：\",\"GET /bank/_doc/_search # 请求参数方式检索 GET bank/_search?q=*&sort=account_number:asc \",\"返回的结果像这样：\",\"{ \\\"took\\\" : 8, \\\"timed_out\\\" : false, \\\"_shards\\\" : { \\\"total\\\" : 1, \\\"successful\\\" : 1, \\\"skipped\\\" : 0, \\\"failed\\\" : 0 }, \\\"hits\\\" : { \\\"total\\\" : { \\\"value\\\" : 1000, \\\"relation\\\" : \\\"eq\\\" }, \\\"max_score\\\" : 1.0, \\\"hits\\\" : [ { \\\"_index\\\" : \\\"bank\\\", \\\"_type\\\" : \\\"_doc\\\", \\\"_id\\\" : \\\"1\\\", \\\"_score\\\" : 1.0, \\\"_source\\\" : { \\\"account_number\\\" : 1, \\\"balance\\\" : 39225, \\\"firstname\\\" : \\\"Amber\\\", \\\"lastname\\\" : \\\"Duke\\\", \\\"age\\\" : 32, \\\"gender\\\" : \\\"M\\\", \\\"address\\\" : \\\"880 Holmes Lane\\\", \\\"employer\\\" : \\\"Pyrami\\\", \\\"email\\\" : \\\"amberduke@pyrami.com\\\", \\\"city\\\" : \\\"Brogan\\\", \\\"state\\\" : \\\"IL\\\" } }, // ... ] } } \",\"相关字段解释\",\"took – Elasticsearch运行查询所花费的时间（以毫秒为单位）\",\"timed_out –搜索请求是否超时\",\"_shards - 搜索了多少个碎片，以及成功，失败或跳过了多少个碎片的细目分类。\",\"max_score – 找到的最相关文档的分数\",\"hits.total.value - 找到了多少个匹配的文档\",\"hits.sort - 文档的排序位置（不按相关性得分排序时）\",\"hits._score - 文档的相关性得分（使用match_all时不适用）\",\"hits.hits - 实际的搜索结果数组(默认为前 10 的文档)\"]},\"300\":{\"h\":\"uri+请求体进行检索\",\"t\":[\"GET bank/_search { \\\"query\\\": { \\\"match_all\\\": {} }, \\\"sort\\\": [ { \\\"account_number\\\": { \\\"order\\\": \\\"desc\\\" } } ] } \"]},\"301\":{\"h\":\"Query DSL\",\"t\":[\"查询表达式(Query DSL)是一种非常灵活又富有表现力的 查询语言。 Elasticsearch 使用它可以以简单的 JSON 接口来展现 Lucene 功能的绝大部分\"]},\"302\":{\"h\":\"基本语法格式\",\"t\":[\"要使用这种查询表达式，只需将查询语句传递给 query 参数：\",\"GET /bank/_search { \\\"query\\\": YOUR_QUERY_HERE } \",\"空查询（empty search） —{}— 在功能上等价于使用 match_all 查询， 正如其名字一样，匹配所有文档：\",\"GET /bank/_search { \\\"query\\\": { \\\"match_all\\\": {} } } \"]},\"303\":{\"h\":\"查询语句结构\",\"t\":[\"一个查询语句的典型结构：\",\"{ \\\"query_name\\\": { \\\"argument\\\": value, \\\"argument\\\": value,... } } \",\"如果是针对某个字段，那么它的结构如下：\",\"{ \\\"query_name\\\": { \\\"field_name\\\": { \\\"argument\\\": value, \\\"argument\\\": value,... } } } \",\"举个例子，你可以使用 match 查询语句 来查询 bank 索引下 email 字段中包含 cedward.com 的 账号信息：\",\"GET bank/_search { \\\"query\\\": { \\\"match\\\": { \\\"email\\\": \\\"cedward.com\\\" } } } \",\"query 定义如何查询\",\"match_all 查询类型【代表查询所有的所有】，es 中可以在 query 中组合非常多的查 询类型完成复杂查询\",\"除了 query 参数之外，我们也可以传递其它的参数以改变查询结果。如 sort，size\",\"from+size限定，完成分页功能\",\"sort排序，多字段排序，会在前序字段相等时后续字段内部排序，否则以前序为准\"]},\"304\":{\"h\":\"返回部分字段\",\"t\":[\"如果只想要返回部分的字段，可以使用 _source 指定字段\",\"# 返回部分字段 GET bank/_search { \\\"query\\\": { \\\"match_all\\\": {} }, \\\"from\\\": 0, \\\"size\\\": 5, \\\"_source\\\": [ \\\"age\\\", \\\"balance\\\" ] } \"]},\"305\":{\"h\":\"match【匹配查询】\",\"t\":[\"如果要在字段中搜索特定字词，可以使用match\",\"全文检索\",\"GET bank/_search { \\\"query\\\": { \\\"match\\\": { \\\"email\\\": \\\"cedward.com\\\" } } } \",\"UphieL\",\"最终查询出 email 中包含 cedward.com 单词的所有记录 match 当搜索字符串类型的时候，会进行全文检索，并且每条记录有相关性得分\",\"多个单词 - 分词 + 全文检索\",\"GET bank/_search { \\\"query\\\": { \\\"match\\\": { \\\"email\\\": \\\"cedward.com pyrami.com\\\" } } } \",\"最终查询出 email 中包含 cedward.com 或者 pyrami.com 或者 cedward.compyrami.com 的所有记录，并给出相关性得分\"]},\"306\":{\"h\":\"match_phrase【短语匹配】\",\"t\":[\"将需要匹配的值当成一个 整体单词(不分词) 进行检索\",\"GET /bank/_search { \\\"query\\\": { \\\"match_phrase\\\": { \\\"address\\\": \\\"mill lane\\\" } } } \",\"查出 address 中包含 mill road 的所有记录，并给出相关性得分\"]},\"307\":{\"h\":\"multi_match【多字段匹配】\",\"t\":[\"GET bank/_search { \\\"query\\\": { \\\"multi_match\\\": { \\\"query\\\": \\\"mill\\\", \\\"fields\\\": [ \\\"state\\\", \\\"address\\\" ] } } } \",\"state 或者 address 包含 mill\"]},\"308\":{\"h\":\"bool【复合查询】\",\"t\":[\"bool 用来做复合查询: 复合语句可以合并 任何 其它查询语句，包括复合语句，了解这一点是很重要的。这就意味 着，复合语句之间可以互相嵌套，可以表达非常复杂的逻辑\",\"must - 必须达到must列举的所有条件\",\"DVw0gY\",\"should： 应该达到 should 列举的条件，如果达到会 增加相关文档的评分 ，并不会改变 查询的结果。如果 query 中只有 should 且只有一种匹配规则，那么 should 的条件就会 被作为默认匹配条件而去改变查询结果\",\"Q2WPhu\",\"query 只有 should 的情况\",\"mAxF6y\",\"must_not 必须不是指定的情况\",\"GET bank/_search { \\\"query\\\": { \\\"bool\\\": { \\\"must\\\": [ { \\\"match\\\": { \\\"address\\\": \\\"mill\\\" } }, { \\\"match\\\": { \\\"gender\\\": \\\"M\\\" } } ], \\\"should\\\": [ { \\\"match\\\": { \\\"address\\\": \\\"lane\\\" } } ], \\\"must_not\\\": [ { \\\"match\\\": { \\\"email\\\": \\\"neteria.com\\\" } } ] } } } \",\"address 包含 mill，并且 gender 是 M，如果 address 里面有 lane 最好不过，但是 email 必 须不包含 neteria.com\",\"事件\",\"描述\",\"must\",\"子句（查询）必须出现在匹配的文档中，并将有助于得分\",\"filter\",\"子句（查询）必须出现在匹配的文档中，但它以不评分、过滤模式来进行，只是根据过滤标准来排除或包含文档\",\"should\",\"子句（查询）应该出现在匹配的文档中，出现则得分，没有也不要紧\",\"must_not\",\"子句（查询）不能出现在匹配的文档中\"]},\"309\":{\"h\":\"range【区间查询】\",\"t\":[\"range 查询找出那些落在指定区间内的数字或者时间\",\"{ \\\"range\\\": { \\\"age\\\": { \\\"gte\\\": 20, \\\"lt\\\": 30 } } } \",\"被允许的操作符如下：\",\"gt - 大于\",\"gte - 大于等于\",\"lt - 小于\",\"lte - 小于等于\"]},\"310\":{\"h\":\"filter【结果过滤】\",\"t\":[\"并不是所有的查询都需要产生分数，特别是那些仅用于 \\\"filtering\\\"(过滤)的文档。为了不计算分数 Elasticsearch 会自动检查场景并且优化查询的执行\",\"增加带过滤器（filtering）的查询\",\"{ \\\"query\\\": { \\\"bool\\\": { \\\"must\\\": [ { \\\"match\\\": { \\\"address\\\": \\\"mill\\\" } } ], \\\"should\\\": [ { \\\"match\\\": { \\\"address\\\": \\\"lane\\\" } } ], \\\"filter\\\": { \\\"range\\\": { \\\"balance\\\": { \\\"gte\\\": 10000, \\\"lte\\\": 20000 } } } } } } \",\"过滤 balance 大于等于 10000 并且 小于等于 20000 的数据，并且address 包含 mill，如果 address 里面有 lane 最好不过\",\"CyBWLf\"]},\"311\":{\"h\":\"term 查询\",\"t\":[\"和 match 一样。匹配某个属性的值。全文检索字段用 match，其他非 text 字段匹配用 term\",\"term 查询被用于 精确值匹配 ，这些精确值可能是数字、时间、布尔或者那些 not_analyzed 的字符串：\",\"{ \\\"term\\\": { \\\"age\\\": 26 }} { \\\"term\\\": { \\\"date\\\": \\\"2014-09-01\\\" }} { \\\"term\\\": { \\\"public\\\": true }} { \\\"term\\\": { \\\"tag\\\": \\\"full_text\\\" }} \"]},\"312\":{\"h\":\"Aggregation【聚合查询】\",\"t\":[\"提示\",\"聚合提供了从数据中分组和提取数据的能力。最简单的聚合方法大致等于 SQL GROUP BY 和 SQL 聚合函数。在 Elasticsearch 中，您有执行搜索返回 hits(命中结果)，并且同时返 回聚合结果，把一个响应中的所有 hits(命中结果)分隔开的能力。这是非常强大且有效的， 您可以执行查询和多个聚合，并且在一次使用中得到各自的(任何一个的)返回结果，使用 一次简洁和简化的 API 来避免网络往返\"]},\"313\":{\"h\":\"简单聚合\",\"t\":[\"比如我们希望计算出account每个州的统计数量， 使用aggs关键字对state字段聚合，被聚合的字段无需对分词统计，所以使用state.keyword对整个字段统计\",\"GET /bank/_search { \\\"size\\\": 0, \\\"aggs\\\": { \\\"group_by_state\\\": { \\\"terms\\\": { \\\"field\\\": \\\"state.keyword\\\" } } } } \",\"wFOuAC\",\"因为无需返回条件的具体数据, 所以设置size=0，返回hits为空。\",\"doc_count表示bucket中每个州的数据条数\"]},\"314\":{\"h\":\"复杂查询 - 聚合排序\",\"t\":[\"按照年龄聚合，并且请求这些年龄段的这些人的平均薪资，并且通过聚合结果排序\",\"GET bank/_search { \\\"query\\\": { \\\"match_all\\\": {} }, \\\"aggs\\\": { \\\"age_avg\\\": { \\\"terms\\\": { \\\"field\\\": \\\"age\\\", \\\"size\\\": 1000, \\\"order\\\": { \\\"banlances_avg\\\": \\\"desc\\\" } }, \\\"aggs\\\": { \\\"banlances_avg\\\": { \\\"avg\\\": { \\\"field\\\": \\\"balance\\\" } } } } }, \\\"size\\\": 1000 } \",\"A9ERdl\",\"查出所有年龄分布，并且这些年龄段中 M 的平均薪资和 F 的平均薪资以及这个年龄段的总体平均薪资\",\"GET bank/_search { \\\"query\\\": { \\\"match_all\\\": {} }, \\\"aggs\\\": { \\\"age_agg\\\": { \\\"terms\\\": { \\\"field\\\": \\\"age\\\", \\\"size\\\": 100 }, \\\"aggs\\\": { \\\"gender_agg\\\": { \\\"terms\\\": { \\\"field\\\": \\\"gender.keyword\\\", \\\"size\\\": 100 }, \\\"aggs\\\": { \\\"balance_avg\\\": { \\\"avg\\\": { \\\"field\\\": \\\"balance\\\" } } } }, \\\"balance_avg\\\": { \\\"avg\\\": { \\\"field\\\": \\\"balance\\\" } } } } }, \\\"size\\\": 1000 } \",\"MKwEkH\"]},\"315\":{\"h\":\"Elasticsearch-安装中文分词器\",\"t\":[\"Elasticsearch 自带了一堆的分词器，比如Standard Analyzer、Simple Analyzer、whitespace Analyzer等分词器，但是都对中文分词的效果不太好，此处安装第三方分词器ik，来实现分词\"]},\"316\":{\"h\":\"Elasticsearch 内置分词器\",\"t\":[\"Standard Analyzer - 默认分词器，按词切分，小写处理\",\"Simple Analyzer - 按照非字母切分(符号被过滤), 小写处理\",\"Whitespace Analyzer - 按照空格切分，不转小写\",\"Stop Analyzer - 小写处理，停用词过滤(the,a,is)\",\"Keyword Analyzer - 不分词，直接将输入当作输出\",\"Patter Analyzer - 正则表达式，默认\\\\W+(非字符分割)\",\"Language - 提供了30多种常见语言的分词器\",\"Customer Analyzer 自定义分词器\"]},\"317\":{\"h\":\"安装 ik 分词器\",\"t\":[\"开源分词器 Ik 的github：https://github.com/medcl/elasticsearch-analysis-ik\",\"注意： Ik 分词器的版本要和你安装的 Elasticsearch 版本一致，我使用的版本是 7.14.0\",\"在 github 上找到对应的版本，使用 Elasticsearch 自带的插件管理 elasticsearch-plugin 来进行安装\",\"直接从网络地址安装\",\"./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.14.0/elasticsearch-analysis-ik-7.14.0.zip # 查看是否安装完成 ./bin/elasticsearch-plugin list \",\"从本地安装\",\"# 下载插件(file后面跟的是插件在本地的地址) ./bin/elasticsearch-plugin install file:///xxxx/elasticsearch-analysis-ik-7.14.0.zip \",\"注意：如果本地插件的路径中存在空格，需要使用双引号包装起来\",\"安装完插件后需重启Es，才能生效\"]},\"318\":{\"h\":\"IK 分词使用\",\"t\":[\"IK 有两种颗粒度的拆分：\",\"ik_smart : 会做最粗粒度的拆分\",\"ik_max_word : 会将文本做最细粒度的拆分\"]},\"319\":{\"h\":\"默认分词拆分\",\"t\":[\"GET _analyze { \\\"analyzer\\\": \\\"default\\\", \\\"text\\\": \\\"我是中国人\\\" } \",\"执行结果如下👇\",\"QKrpA8\"]},\"320\":{\"h\":\"ik_smart 分词\",\"t\":[\"GET _analyze { \\\"analyzer\\\": \\\"ik_smart\\\", \\\"text\\\": \\\"我是中国人\\\" } \",\"执行结果如下👇\",\"{ \\\"tokens\\\" : [ { \\\"token\\\" : \\\"我\\\", \\\"start_offset\\\" : 0, \\\"end_offset\\\" : 1, \\\"type\\\" : \\\"CN_CHAR\\\", \\\"position\\\" : 0 }, { \\\"token\\\" : \\\"是\\\", \\\"start_offset\\\" : 1, \\\"end_offset\\\" : 2, \\\"type\\\" : \\\"CN_CHAR\\\", \\\"position\\\" : 1 }, { \\\"token\\\" : \\\"中国人\\\", \\\"start_offset\\\" : 2, \\\"end_offset\\\" : 5, \\\"type\\\" : \\\"CN_WORD\\\", \\\"position\\\" : 2 } ] } \"]},\"321\":{\"h\":\"ik_max_word 分词\",\"t\":[\"GET _analyze { \\\"analyzer\\\": \\\"ik_max_word\\\", \\\"text\\\": \\\"我是中国人\\\" } \",\"执行结果如下👇\",\"{ \\\"tokens\\\" : [ { \\\"token\\\" : \\\"我\\\", \\\"start_offset\\\" : 0, \\\"end_offset\\\" : 1, \\\"type\\\" : \\\"CN_CHAR\\\", \\\"position\\\" : 0 }, { \\\"token\\\" : \\\"是\\\", \\\"start_offset\\\" : 1, \\\"end_offset\\\" : 2, \\\"type\\\" : \\\"CN_CHAR\\\", \\\"position\\\" : 1 }, { \\\"token\\\" : \\\"中国人\\\", \\\"start_offset\\\" : 2, \\\"end_offset\\\" : 5, \\\"type\\\" : \\\"CN_WORD\\\", \\\"position\\\" : 2 }, { \\\"token\\\" : \\\"中国\\\", \\\"start_offset\\\" : 2, \\\"end_offset\\\" : 4, \\\"type\\\" : \\\"CN_WORD\\\", \\\"position\\\" : 3 }, { \\\"token\\\" : \\\"国人\\\", \\\"start_offset\\\" : 3, \\\"end_offset\\\" : 5, \\\"type\\\" : \\\"CN_WORD\\\", \\\"position\\\" : 4 } ] } \",\"提示\",\"能够看出不同的分词器，分词有明显的区别，所以以后定义一个索引不能再使用默认的 mapping 了，要手工建立 mapping，因为要选择分词器\"]},\"322\":{\"h\":\"自定义词库\",\"t\":[\"提示\",\"Elasticsearch是一个基于Lucene的搜索服务器，其引入IK分词器后，可以对中文进行分词。IK分词器分词的原理是在源文件中收集了很多词汇，仅在其中一个主要词汇文件main.dic文件中就有27W的词汇量。但是有的时候仅用分词器本身提供的通用词汇无法满足自己的项目特定的业务需求\"]},\"323\":{\"h\":\"新建词库文件\",\"t\":[\"IK分词器本身也提供了自定义词库，对于开发者来说也是简单实用的。首先IK分词器是在elasticsearch安装目录的puligins文件夹中。\",\"进入plugins-->ik-->config目录，新建一个mydic.dic的文件，并在这一个文件中写入词汇，如下图所示👇\",\"l6VgDd\"]},\"324\":{\"h\":\"引入自定义词库\",\"t\":[\"引入自定义词库，需要**进入plugins-->ik-->config目录，修改IKAnalyzer.cfg.xml文件的内容。**如下图所示，在<entry key=\\\"ext_dic>标签中写入自定义词库的路径。如下所示：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <!DOCTYPE properties SYSTEM \\\"http://java.sun.com/dtd/properties.dtd\\\"> <properties> <comment>IK Analyzer 扩展配置</comment> <!--用户可以在这里配置自己的扩展字典 --> <entry key=\\\"ext_dict\\\">mydic.dic</entry> <!--用户可以在这里配置自己的扩展停止词字典--> <entry key=\\\"ext_stopwords\\\"></entry> <!--用户可以在这里配置远程扩展字典 --> <!-- <entry key=\\\"remote_ext_dict\\\">words_location</entry> --> <!--用户可以在这里配置远程扩展停止词字典--> <!-- <entry key=\\\"remote_ext_stopwords\\\">words_location</entry> --> </properties> \"]},\"325\":{\"h\":\"重启ES\",\"t\":[\"在添加词库后，需要将elasticsearch重启。在linux系统中可以采用kill进程的方式关闭后重启，windows系统中将命令行窗口关闭，重新运行.bat文件就可以了\"]},\"326\":{\"h\":\"演示效果\",\"t\":[\"{ \\\"analyzer\\\": \\\"ik_smart\\\", \\\"text\\\": \\\"魔鬼中的天使\\\" } { \\\"tokens\\\" : [ { \\\"token\\\" : \\\"魔鬼中的天使\\\", \\\"start_offset\\\" : 0, \\\"end_offset\\\" : 6, \\\"type\\\" : \\\"CN_WORD\\\", \\\"position\\\" : 0 } ] } \"]},\"327\":{\"h\":\"SpringBoot集成Elasticsearch\",\"t\":[\"SpringBoot默认支持两种技术来和 ES 交互；\",\"Jest（默认不生效） \",\"需要导入jest的工具包（io.searchbox.client.JestClient）\",\"从springboot 2.2.0以后被弃用\",\"SpringData ElasticSearch\",\"版本适配说明:\",\"参考地址：https://github.com/spring-projects/spring-data-elasticsearch/blob/main/src/main/asciidoc/preface.adoc\",\"Spring Data Release Train\",\"Spring Data Elasticsearch\",\"Elasticsearch\",\"Spring Framework\",\"Spring Boot\",\"2021.1\",\"4.3.x\",\"7.13.4\",\"5.3.x\",\"2.5.x\",\"2021.0 (Pascal)\",\"4.2.x\",\"7.12.0\",\"5.3.x\",\"2.5.x\",\"2020.0 (Ockham)\",\"4.1.x\",\"7.9.3\",\"5.3.2\",\"2.4.x\",\"Neumann\",\"4.0.x\",\"7.6.2\",\"5.2.12\",\"2.3.x\",\"Moore\",\"3.2.x\",\"6.8.12\",\"5.2.12\",\"2.2.x\",\"Lovelace\",\"3.1.x\",\"6.2.2\",\"5.1.19\",\"2.1.x\",\"Kay\",\"3.0.x\",\"5.5.0\",\"5.0.13\",\"2.0.x\",\"Ingalls\",\"2.1.x\",\"2.4.0\",\"4.3.25\",\"1.5.x\"]},\"328\":{\"h\":\"配置环境\",\"t\":[\"提示\",\"开发环境配置如下👇\",\"框架\",\"版本\",\"SpringBoot\",\"2.5.3\",\"Elasticsearch\",\"7.14.0\",\"Spring Data Elasticsearch\",\"4.2.3\"]},\"329\":{\"h\":\"导入 pom 文件\",\"t\":[\"我们想要在 SpringBoot 中集成 Elasticsearch，第一步☝️就是导入相应的 pom 文件\",\"<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-elasticsearch</artifactId> </dependency> \"]},\"330\":{\"h\":\"配置文件\",\"t\":[\"# 全文搜索配置 spring: elasticsearch: rest: uris: http://localhost:9200 \",\"默认的地址就是：http://localhost:9200 如果你的端口地址不一致或者你设置了账号密码验证，需要配置你的信息\"]},\"331\":{\"h\":\"开启注解\",\"t\":[\"@EnableElasticsearchRepositories(basePackages = \\\"xx.xxx.xxx\\\") \",\"因为使用了 Spring-data 框架，所以需要开启注解扫描 Repository 类\"]},\"332\":{\"h\":\"编写对应的 JavaBean\",\"t\":[\"先定义一个 JavaBean 类，指定索引名和 类型(type 即将废用)\",\"注意：SpringBoot启动时会自动创建映射，但要注意如果已经存在相同的index\",\"@Data @Document(indexName = \\\"strategy_es\\\") public class StrategyEs { //@Field 每个文档的字段配置（类型、是否分词、是否存储、分词器 ） @Id @Field(store = true, index = false, type = FieldType.Long) private Long id; // 攻略id @Field(analyzer = \\\"ik_max_word\\\", store = true, searchAnalyzer = \\\"ik_max_word\\\", type = FieldType.Text) private String title; // 攻略标题 @Field(analyzer = \\\"ik_max_word\\\", store = true, searchAnalyzer = \\\"ik_max_word\\\", type = FieldType.Text) private String subTitle; // 攻略标题 @Field(analyzer = \\\"ik_max_word\\\", store = true, searchAnalyzer = \\\"ik_max_word\\\", type = FieldType.Text) private String summary; // 攻略简介 } \"]},\"333\":{\"h\":\"@Documnet 注解\",\"t\":[\"public @interface Document { // 索引名称 String indexName(); @Deprecated boolean useServerConfiguration() default false; @Deprecated short shards() default 1; @Deprecated short replicas() default 1; @Deprecated String refreshInterval() default \\\"1s\\\"; @Deprecated String indexStoreType() default \\\"fs\\\"; boolean createIndex() default true; VersionType versionType() default VersionType.EXTERNAL; } \"]},\"334\":{\"h\":\"@Field 注解\",\"t\":[\"public @interface Field { @AliasFor(\\\"name\\\") String value() default \\\"\\\"; @AliasFor(\\\"value\\\") String name() default \\\"\\\"; // 自动检测属性的类型，可以根据实际情况自己设置 FieldType type() default FieldType.Auto; // 默认情况下分词，一般默认分词就好，除非这个字段你确定查询时不会用到 boolean index() default true; // 时间格式化 DateFormat[] format() default {DateFormat.date_optional_time, DateFormat.epoch_millis}; // 默认情况下不存储原文 boolean store() default false; // 指定字段搜索时使用的分词器 String searchAnalyzer() default \\\"\\\"; // 指定分词器 String analyzer() default \\\"\\\"; } \"]},\"335\":{\"h\":\"创建 Repository\",\"t\":[\"注意： 没有这一步，即便在实体上方设置@Document，SpringBoot 启动也不会创建 mapping\",\"Spring Data 的强大之处，就在于你不用写任何DAO处理，自动根据方法名或类的信息进行CRUD操作。只要你定义一个接口，然后继承Repository提供的一些子接口，就能具备各种基本的CRUD功能\",\"@Repository public interface StrategyEsRepository extends ElasticsearchRepository<StrategyEs, Long> { } \",\"映射结构如下👇\",\"{ \\\"mappings\\\": { \\\"_doc\\\": { \\\"properties\\\": { \\\"_class\\\": { \\\"type\\\": \\\"keyword\\\", \\\"index\\\": false, \\\"doc_values\\\": false }, \\\"id\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"subTitle\\\": { \\\"type\\\": \\\"text\\\", \\\"store\\\": true, \\\"analyzer\\\": \\\"ik_max_word\\\" }, \\\"summary\\\": { \\\"type\\\": \\\"text\\\", \\\"store\\\": true, \\\"analyzer\\\": \\\"ik_max_word\\\" }, \\\"title\\\": { \\\"type\\\": \\\"text\\\", \\\"store\\\": true, \\\"analyzer\\\": \\\"ik_max_word\\\" } } } } } \"]},\"336\":{\"h\":\"Crud 操作\",\"t\":[\"public class ElasticsearchTest { @Autowired private StrategyEsRepository strategyEsRepository; @Test void createStrategyEsTest() { StrategyEs strategyEs = new StrategyEs(); // 添加 and 修改 strategyEsRepository.save(strategyEs); strategyEsRepository.deleteById(1L); strategyEsRepository.delete(strategyEs); } } \"]},\"337\":{\"h\":\"ElasticsearchRestTemplate\",\"t\":[\"ES有两个模板，分别为ElasticsearchRestTemplate和 ElasticsearchTemplate\",\"分别对应于High Level REST Client和 Transport Client(弃用)，两个模板都实现了ElasticsearchOperations接口，由于 ElasticsearchTemplate 弃用，因此使用时我们一般使用 ElasticsearchRestTemplate\",\"注入模板\",\"@Autowired private ElasticsearchRestTemplate restTemplate; \"]},\"338\":{\"h\":\"Crud 索引\",\"t\":[\"@Test void crudIndexTest() { // 创建索引 restTemplate.indexOps(IndexCoordinates.of(\\\"es_test\\\")).create(); // 索引是否存在 restTemplate.indexOps(indexCoordinates).exists(); // 删除索引 restTemplate.indexOps(indexCoordinates).delete(); } \",\"提示\",\"至此，SpringBoot 集成 Elasticsearch 就算完成了，我们就可以用 Java 代码去操作我们的 Elasticsearch\",\"其中因为 旧版本的 Repository 中的 search 方法被废弃了 ，只能操作简单的 Crud 操作，复杂的查询就需要使用 ElasticsearchRestTemplate 了\",\"如需要查看 Spring Data Elasticsearch 的复杂查询，请看：Elasticsearch - 复杂查询\"]},\"339\":{\"h\":\"Elasticsearch-高亮查询\",\"t\":[\"日常生活中我们使用搜索工具尝试查询一些信息的时候，常常可以看到返回的结果集中和我们查询条件相符合的字段被特殊的颜色所标记，这就是结果高亮显示。通过高亮显示用户可以明显的发现查询匹配的位置，Elasticsearch 使用 highlight 来实现搜索结果中一个或多个字段突出显示\"]},\"340\":{\"h\":\"例子🌰\",\"t\":[\"举个🌰 - 查询 攻略中带上海的数据 - 多字段匹配\"]},\"341\":{\"h\":\"映射结构\",\"t\":[\"下面是例子所使用的映射结构\",\"注意：这里使用了 IK 分词器，如需了解 IK 分词器请看 Elasticsearch 中文分词器\",\"{ \\\"mappings\\\": { \\\"_doc\\\": { \\\"properties\\\": { \\\"id\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"subTitle\\\": { \\\"type\\\": \\\"text\\\", \\\"store\\\": true, \\\"analyzer\\\": \\\"ik_max_word\\\" }, \\\"summary\\\": { \\\"type\\\": \\\"text\\\", \\\"store\\\": true, \\\"analyzer\\\": \\\"ik_max_word\\\" }, \\\"title\\\": { \\\"type\\\": \\\"text\\\", \\\"store\\\": true, \\\"analyzer\\\": \\\"ik_max_word\\\" } } } } } \",\"执行如下请求之后会得到返回内容，在 hits 中除了常规数据外，还会有 highlight 对象\",\"{ \\\"query\\\": { \\\"multi_match\\\": { \\\"query\\\": \\\"上海\\\", \\\"fields\\\": [\\\"title\\\", \\\"subTitle\\\", \\\"summary\\\"] } }, \\\"highlight\\\": { \\\"fields\\\": { \\\"title\\\": { \\\"pre_tags\\\": \\\"<b>\\\", \\\"post_tags\\\": \\\"</b>\\\" }, \\\"subTitle\\\": {}, \\\"summary\\\": { \\\"pre_tags\\\": \\\"<b>\\\", \\\"post_tags\\\": \\\"</b>\\\", \\\"number_of_fragments\\\": 2, \\\"fragment_size\\\": 10 } } } } \",\"返回的结果里面每个 hit 多了一个类似这样部分：\",\"{ \\\"hits\\\" : { \\\"hits\\\" : [ { \\\"_index\\\" : \\\"strategy_es\\\", \\\"_type\\\" : \\\"_doc\\\", \\\"_id\\\" : \\\"7\\\", \\\"_score\\\" : 2.4005952, \\\"_source\\\" : { \\\"id\\\" : 7, \\\"title\\\" : \\\"懒人吃货指南 | 轻松吃遍地道上海小吃\\\", \\\"subTitle\\\" : \\\"轻松吃遍地道上海小吃\\\", \\\"summary\\\" : \\\"去一个地方旅行当然要尝尝当地的特色美食，不然总觉得这趟旅行不完整。但是对于不熟悉上海的游客来说，“哪些是老上海小吃？去哪里能吃到地道的？”这些都是头疼的问题。这篇攻略将会给大家介绍老上海小吃，推荐一些老字号，并附上周边游玩小Tips\\\" }, \\\"highlight\\\" : { \\\"summary\\\" : [ \\\"但是对于不熟悉<b>上海</b>的游客来说\\\", \\\"，“哪些是老<b>上海</b>小吃？\\\" ], \\\"subTitle\\\" : [ \\\"轻松吃遍地道<em>上海</em>小吃\\\" ], \\\"title\\\" : [ \\\"懒人吃货指南 | 轻松吃遍地道<b>上海</b>小吃\\\" ] } } ] } } \"]},\"342\":{\"h\":\"高亮设置\",\"t\":[\"可以看到我们预设了 高亮关键字 的HTML标签进行包裹，下面我们来了解一下高亮 highlight 的参数定义，下面的参数可以设置在 highlight 的下一级此时为 全局设置，也可以设置在字段的下一级，此时为 字段设置\",\"单个字段的设置优先级高于全局设置\"]},\"343\":{\"h\":\"number_of_fragments\",\"t\":[\"要返回的最大片段数，如果片段数设置为 0，则不返回任何片段，而是突出显示并返回整个字段内容。\",\"当您需要突出显示标题或地址等短文本时，这会很方便，但不需要分段。如果number_of_fragments 为 0，fragment_size则忽略。默认为 5\",\"例如上面👆我们设置了 number_of_fragments: 2 ，那么 summary 字段返回了两段数据\",\"{ \\\"summary\\\" : [ \\\"但是对于不熟悉<b>上海</b>的游客来说\\\", \\\"，“哪些是老<b>上海</b>小吃？\\\" ] } \",\"如果设置成 0 ，就返回原本数据\",\"{ \\\"summary\\\" : [ \\\"去一个地方旅行当然要尝尝当地的特色美食，不然总觉得这趟旅行不完整。但是对于不熟悉<b>上海</b>的游客来说，“哪些是老<b>上海</b>小吃？去哪里能吃到地道的？”这些都是头疼的问题。这篇攻略将会给大家介绍老<b>上海</b>小吃，推荐一些老字号，并附上周边游玩小Tips\\\" ] } \"]},\"344\":{\"h\":\"fragment_size\",\"t\":[\"一段 fragment 包含多少个字符（以字符为单位）默认为 100\"]},\"345\":{\"h\":\"pre_tags\",\"t\":[\"标记 highlight 的开始标签，例如上面的 <b> 标签\"]},\"346\":{\"h\":\"post_tags\",\"t\":[\"标记 highlight 的结束标签，例如上面的 </b> 标签\",\"系统预设的标签为 <em>\"]},\"347\":{\"h\":\"order\",\"t\":[\"order控制了返回对象中 highlight 片段的排序。下面例子中返回的高亮片段将会根据分数顺序输出。假如设置了none则是按照顺序输出\",\"提示\",\"最准确的文档还是官网，更多的参数请参考官方文档。\"]},\"348\":{\"h\":\"Java 代码实现高亮查询\",\"t\":[\"提示\",\"在这里我们就不介绍 Elasticsearch 和 SpringBoot 的集成，如果不会请看上一篇文章 SpringBoot 集成 Elasticsearch\",\"框架\",\"版本\",\"SpringBoot\",\"2.5.3\",\"Elasticsearch\",\"7.14.0\",\"Spring Data Elasticsearch\",\"4.2.3\",\"@Autowired private ElasticsearchRestTemplate restTemplate; // ---------------------------------------------- // 构建查询对象 NativeSearchQueryBuilder builder = new NativeSearchQueryBuilder(); // 获取字段 String[] fields = new String[]{\\\"title\\\", \\\"subTitle\\\", \\\"summary\\\"}; // 多字段匹配 MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders.multiMatchQuery(\\\"上海\\\", fields); // 设置高亮 HighlightBuilder highlightBuilder = new HighlightBuilder(); for (String field : fields) { highlightBuilder.field(field); } highlightBuilder.requireFieldMatch(false); // 如果要多个字段高亮,这项要为false highlightBuilder.preTags(\\\"<span style='color:red'>\\\"); // 高亮设置 highlightBuilder.postTags(\\\"</span>\\\"); highlightBuilder.numOfFragments(0); // 返回结果最多可以包含几段不连续的文字。默认是5, 这里不分段显示 // 分页 Pageable pageable = PageRequest.of(0, 10, Sort.Direction.ASC, \\\"_id\\\");// 设置分页参数 // 封装查询 builder.withQuery(multiMatchQueryBuilder) .withPageable(pageable) // 封装分页 .withHighlightBuilder(highlightBuilder); NativeSearchQuery searchQuery = builder.build(); // 发起检索请求 // 参数：查询条件对象，返回泛型，索引名称 SearchHits<Strategy> searchHits = restTemplate.search(searchQuery, Strategy.class, IndexCoordinates.of(\\\"strategy_es\\\")); // ... 输出高亮内容 \"]},\"349\":{\"h\":\"Elasticsearch-复杂查询\",\"t\":[\"前面，我们已经学习了 Elasticsearch 的基本 API 的操作，也在 SpringBoot 中集成了 Elasticsearch，使用 Repository 接口实现简单的 Crud 操作\",\"因为 旧版本的 Repository 中的 search 方法被废弃了，所以我们要实现 复杂查询 只能使用 ElasticsearchRestTemplate\"]},\"350\":{\"h\":\"查询条件对象\",\"t\":[\"对象\",\"描述\",\"NativeSearchQueryBuilder\",\"Spring提供的一个查询条件构建器，帮助构建json格式的请求体\",\"QueryBuilders\",\"提供了大量的静态方法，用于生成各种不同类型的查询对象，例如：词条、模糊、通配符等QueryBuilder对象\",\"BoolQueryBuilder\",\"多条件查询对象，对应 Elasticsearch 中的 bool\",\"MatchQueryBuilder\",\"构建分词查询条件对象，对应 Elasticsearch 中的 match\",\"PageRequest\",\"用于构建分页请求\",\"IndexCoordinate\",\"索引对象，通常在查询使用\"]},\"351\":{\"h\":\"数据准备\",\"t\":[\"首先我们先准备接下来查询的 mapping 结构以及基本数据\",\"mapping 结构\",\"{ \\\"mappings\\\": { \\\"_doc\\\": { \\\"properties\\\": { \\\"_class\\\": { \\\"type\\\": \\\"keyword\\\", \\\"index\\\": false, \\\"doc_values\\\": false }, \\\"brand\\\": { \\\"type\\\": \\\"keyword\\\", \\\"store\\\": true }, \\\"id\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"intro\\\": { \\\"type\\\": \\\"text\\\", \\\"store\\\": true, \\\"analyzer\\\": \\\"ik_max_word\\\" }, \\\"price\\\": { \\\"type\\\": \\\"integer\\\", \\\"store\\\": true }, \\\"title\\\": { \\\"type\\\": \\\"text\\\", \\\"store\\\": true, \\\"analyzer\\\": \\\"ik_max_word\\\" } } } } } \",\"批量导入数据\",\"{\\\"create\\\":{\\\"_id\\\": 1}} {\\\"id\\\":1,\\\"title\\\":\\\"Apple iPhone XR (A2108) 128GB 白色 移动联通电信4G手机 双卡双待\\\",\\\"price\\\":5299,\\\"intro\\\":\\\"【iPhoneXR限时特惠！】6.1英寸视网膜显示屏，A12仿生芯片，面容识别，无线充电，支持双卡！选【换修无忧版】获 AppleCare 原厂服务，享只换不修！更有快速换机、保值换新、轻松月付！\\\",\\\"brand\\\":\\\"Apple\\\"} {\\\"create\\\":{\\\"_id\\\": 2}} {\\\"id\\\":2,\\\"title\\\":\\\"Apple 2019款 Macbook Pro 13.3【带触控栏】八代i7 18G 256G RP645显卡 深空灰 苹果笔记本电脑 轻薄本 MUHN2CH/A\\\",\\\"price\\\":15299,\\\"intro\\\":\\\"【八月精选】Pro2019年新品上市送三重好礼，现在购买领满8000减400元优惠神劵，劵后更优惠！\\\",\\\"brand\\\":\\\"Apple\\\"} {\\\"create\\\":{\\\"_id\\\": 3}} {\\\"id\\\":3,\\\"title\\\":\\\"Apple iPad Air 3 2019年新款平板电脑 10.5英寸（64G WLAN版/A12芯片/Retina显示屏/MUUL2CH/A）金色\\\",\\\"price\\\":3788,\\\"intro\\\":\\\"8月尊享好礼！买iPad即送蓝牙耳机！领券立减！多款产品支持手写笔！【新一代iPad，总有一款适合你】选【换修无忧版】获 AppleCare 原厂服务，享只换不修！更有快速换机、保值换新、轻松月付！\\\",\\\"brand\\\":\\\"Apple\\\"} {\\\"create\\\":{\\\"_id\\\": 4}} {\\\"id\\\":4,\\\"title\\\":\\\"华为HUAWEI MateBook X Pro 2019款 英特尔酷睿i5 13.9英寸全面屏轻薄笔记本电脑(i5 8G 512G 3K 触控) 灰\\\",\\\"price\\\":7999,\\\"intro\\\":\\\"3K全面屏开启无界视野;轻薄设计灵动有型，HuaweiShare一碰传\\\",\\\"brand\\\":\\\"华为\\\"} {\\\"create\\\":{\\\"_id\\\": 5}} {\\\"id\\\":5,\\\"title\\\":\\\"华为 HUAWEI Mate20 X (5G) 7nm工艺5G旗舰芯片全面屏超大广角徕卡三摄8GB+256GB翡冷翠5G双模全网通手机\\\",\\\"price\\\":6199,\\\"intro\\\":\\\"【5G双模，支持SA/NSA网络，7.2英寸全景巨屏，石墨烯液冷散热】5G先驱，极速体验。\\\",\\\"brand\\\":\\\"华为\\\"} {\\\"create\\\":{\\\"_id\\\": 6}} {\\\"id\\\":6,\\\"title\\\":\\\"华为平板 M6 10.8英寸麒麟980影音娱乐平板电脑4GB+64GB WiFi（香槟金）\\\",\\\"price\\\":2299,\\\"intro\\\":\\\"【华为暑期购】8月2日-4日，M5青春版指定爆款型号优惠100元，AI语音控制\\\",\\\"brand\\\":\\\"华为\\\"} {\\\"create\\\":{\\\"_id\\\": 7}} {\\\"id\\\":7,\\\"title\\\":\\\"荣耀20 PRO DXOMARK全球第二高分 4800万四摄 双光学防抖 麒麟980 全网通4G 8GB+128GB 蓝水翡翠 拍照手机\\\",\\\"price\\\":3199,\\\"intro\\\":\\\"白条6期免息！麒麟980，4800万全焦段AI四摄！荣耀20系列2699起，4800万超广角AI四摄！\\\",\\\"brand\\\":\\\"荣耀\\\"} {\\\"create\\\":{\\\"_id\\\": 8}} {\\\"id\\\":8,\\\"title\\\":\\\"荣耀MagicBook Pro 16.1英寸全面屏轻薄性能笔记本电脑（酷睿i7 8G 512G MX250 IPS FHD 指纹解锁）冰河银\\\",\\\"price\\\":6199,\\\"intro\\\":\\\"16.1英寸无界全面屏金属轻薄本，100%sRGB色域，全高清IPS防眩光护眼屏，14小时长续航，指纹一健开机登录，魔法一碰传高速传输。\\\",\\\"brand\\\":\\\"荣耀\\\"} {\\\"create\\\":{\\\"_id\\\": 9}} {\\\"id\\\":9,\\\"title\\\":\\\"荣耀平板5 麒麟8核芯片 GT游戏加速 4G+128G 10.1英寸全高清屏影音平板电脑 WiFi版 冰川蓝\\\",\\\"price\\\":1549,\\\"intro\\\":\\\"【爆款平板推荐】哈曼卡顿专业调音，10.1英寸全高清大屏，双喇叭立体环绕音，配置多重护眼，值得拥有！\\\",\\\"brand\\\":\\\"荣耀\\\"} {\\\"create\\\":{\\\"_id\\\": 10}} {\\\"id\\\":10,\\\"title\\\":\\\"小米9 4800万超广角三摄 6GB+128GB全息幻彩蓝 骁龙855 全网通4G 双卡双待 水滴全面屏拍照智能游戏手机\\\",\\\"price\\\":2799,\\\"intro\\\":\\\"限时优惠200，成交价2799！索尼4800万广角微距三摄，屏下指纹解锁！\\\",\\\"brand\\\":\\\"小米\\\"} {\\\"create\\\":{\\\"_id\\\": 11}} {\\\"id\\\":11,\\\"title\\\":\\\"小米(MI)Pro 2019款 15.6英寸金属轻薄笔记本(第八代英特尔酷睿i7-8550U 16G 512GSSD MX250 2G独显) 深空灰\\\",\\\"price\\\":6899,\\\"intro\\\":\\\"【PCIE固态硬盘、72%NTSC高色域全高清屏】B面康宁玻璃覆盖、16G双通道大内存、第八代酷睿I7处理器、专业级调校MX150\\\",\\\"brand\\\":\\\"小米\\\"} {\\\"create\\\":{\\\"_id\\\": 12}} {\\\"id\\\":12,\\\"title\\\":\\\"联想(Lenovo)拯救者Y7000P 2019英特尔酷睿i7 15.6英寸游戏笔记本电脑(i7 9750H 16G 1T SSD GTX1660Ti 144Hz)\\\",\\\"price\\\":9299,\\\"intro\\\":\\\"超大1T固态，升级双通道16G内存一步到位，GTX1660Ti电竞级独显，英特尔9代i7H高性能处理器，144Hz电竞屏窄边框！\\\",\\\"brand\\\":\\\"联想\\\"} \",\"编写 domain 以及 Repository 接口\",\"@Data @Document(indexName = \\\"product\\\") public class Product { @Id @Field(store = true, index = false, type = FieldType.Long) private Long id; @Field(analyzer = \\\"ik_max_word\\\", searchAnalyzer = \\\"ik_max_word\\\", store = true, type = FieldType.Text) private String title; @Field(store = true, type = FieldType.Integer) private Integer price; @Field(analyzer = \\\"ik_max_word\\\", searchAnalyzer = \\\"ik_max_word\\\", store = true, type = FieldType.Text) private String intro; @Field(store = true, type = FieldType.Keyword) private String brand; } \",\"Repository 接口\",\"@Repository public interface ProductRepository extends ElasticsearchRepository<Product, Long> { } \"]},\"352\":{\"h\":\"基本分词查询\",\"t\":[\"@Test public void testQuery(){ // 构建查询条件 NativeSearchQueryBuilder builder = new NativeSearchQueryBuilder(); // 添加基本的分词查询 MatchQueryBuilder matchQueryBuilder = QueryBuilders.matchQuery(\\\"title\\\", \\\"小米\\\"); // 生成查询对象 Query NativeSearchQuery queryBuilder = builder.withQuery(matchQueryBuilder).build(); // 发起请求 SearchHits<Product> hits = restTemplate.search(queryBuilder, Product.class); hits.forEach(System.out::println); } \",\"查询结果如下：\",\"SearchHit{id='10', score=1.6231201, sortValues=[], content=Product(id=10, title=小米9 4800万超广角三摄 6GB+128GB全息幻彩蓝 骁龙855 全网通4G 双卡双待 水滴全面屏拍照智能游戏手机, price=2799, intro=限时优惠200，成交价2799！索尼4800万广角微距三摄，屏下指纹解锁！, brand=小米), highlightFields={}} SearchHit{id='11', score=1.485091, sortValues=[], content=Product(id=11, title=小米(MI)Pro 2019款 15.6英寸金属轻薄笔记本(第八代英特尔酷睿i7-8550U 16G 512GSSD MX250 2G独显) 深空灰, price=6899, intro=【PCIE固态硬盘、72%NTSC高色域全高清屏】B面康宁玻璃覆盖、16G双通道大内存、第八代酷睿I7处理器、专业级调校MX150, brand=小米), highlightFields={}} \",\"NativeSearchQueryBuilder ：Spring提供的一个查询条件构建器，帮助构建json格式的请求体\",\"NativeSearchQuery ：NativeSearchQueryBuilder 构建具体的查询对象，实现 Query 接口，search方法中的 query 参数\",\"QueryBuilders ：用于生成各种不同类型的查询对象\"]},\"353\":{\"h\":\"分页查询\",\"t\":[\"利用NativeSearchQueryBuilder可以方便的实现分页:\",\"需求 - 查询商品中带 华为 关键字的所有商品，每页显示 2 条，根据价格排序\",\"@Test public void testNativeQuery(){ // 构建查询条件 NativeSearchQueryBuilder builder = new NativeSearchQueryBuilder(); // 添加基本的分词查询 builder.withQuery(QueryBuilders.matchQuery(\\\"title\\\", \\\"华为\\\")); // 初始化分页参数 int page = 0; int size = 2; // 设置分页参数 PageRequest pageable = PageRequest.of(page, size, Sort.Direction.DESC, \\\"price\\\"); builder.withPageable(pageable); // 执行搜索，获取结果 SearchHits<Product> products = restTemplate.search(builder.build(), Product.class, IndexCoordinates.of(\\\"product\\\")); List<Product> list = products.stream() .map(SearchHit::getContent) .collect(Collectors.toList()); // 构建分页 Page<Product> productPage = new PageImpl<>(list, pageable, products.getTotalHits()); // 打印总条数 System.out.println(productPage.getTotalElements()); // 打印总页数 System.out.println(productPage.getTotalPages()); // 每页大小 System.out.println(productPage.getSize()); // 当前页 System.out.println(productPage.getNumber()); productPage.forEach(System.out::println); } \",\"查询结果如下：\",\"3 2 2 0 Product(id=4, title=华为HUAWEI MateBook X Pro 2019款 英特尔酷睿i5 13.9英寸全面屏轻薄笔记本电脑(i5 8G 512G 3K 触控) 灰, price=7999, intro=3K全面屏开启无界视野;轻薄设计灵动有型，HuaweiShare一碰传, brand=华为) Product(id=5, title=华为 HUAWEI Mate20 X (5G) 7nm工艺5G旗舰芯片全面屏超大广角徕卡三摄8GB+256GB翡冷翠5G双模全网通手机, price=6199, intro=【5G双模，支持SA/NSA网络，7.2英寸全景巨屏，石墨烯液冷散热】5G先驱，极速体验。, brand=华为) \",\"可以发现，Elasticsearch中的分页是从第0页开始\",\"提示\",\"IndexCoordinates.of - 可以看到使用 search 方法中有个 IndexCoordinates 参数，这个参数是指定 查询的所有名称\",\"PageRequest - 是用于构建分页请求，可以设置 分页参数、排序字段\"]},\"354\":{\"h\":\"排序\",\"t\":[\"排序也可以通过NativeSearchQueryBuilder完成：\",\"需求 - 根据价格排序\",\"@Test public void testSort() { // 构建查询条件 NativeSearchQueryBuilder builder = new NativeSearchQueryBuilder(); // 添加基本的分词查询 builder.withQuery(QueryBuilders.matchQuery(\\\"title\\\", \\\"华为\\\")); // 排序 builder.withSort(SortBuilders.fieldSort(\\\"price\\\").order(SortOrder.DESC)); SearchHits<Product> products = restTemplate.search(builder.build(), Product.class, IndexCoordinates.of(\\\"product\\\")); products.forEach(System.out::println); } \",\"SortBuilders - 构建排序请求\"]},\"355\":{\"h\":\"聚合\",\"t\":[\"需求 - 我们按照品牌brand进行分组：\",\"@Test public void testAgg(){ NativeSearchQueryBuilder builder = new NativeSearchQueryBuilder(); // 1、添加一个新的聚合，聚合类型为terms，聚合名称为brands，聚合字段为brand builder.addAggregation( AggregationBuilders.terms(\\\"brands\\\").field(\\\"brand\\\")); // 2、查询 SearchHits<Product> products = restTemplate.search(builder.build(), Product.class); // 3、解析 Aggregations aggregations = products.getAggregations(); Terms terms = aggregations.get(\\\"brands\\\"); // 3.2、获取桶 if (terms.getBuckets().size() > 0) { // 3.3、遍历 for (Terms.Bucket bk : terms.getBuckets()) { // 3.4、获取桶中的key，即品牌名称 System.out.println(bk.getKeyAsString()); // 3.5、获取桶中的文档数量 System.out.println(bk.getDocCount()); } } } \",\"输出结果如下：\",\"Apple 3 华为 3 荣耀 3 小米 2 联想 1 \",\"关键API：\",\"AggregationBuilders ：聚合的构建工厂类。所有聚合都由这个类来构建，可以看看他的静态方法\",\"我们看下页面的查询的JSON结果与Java类的对照关系：\",\"6M22ns\"]},\"356\":{\"h\":\"嵌套聚合，求平均值\",\"t\":[\"需求：根据品牌分组，并且计算它的平均售价\",\"@Test public void testSubAgg(){ NativeSearchQueryBuilder builder = new NativeSearchQueryBuilder(); // 1、添加一个新的聚合，聚合类型为terms，聚合名称为brands，聚合字段为brand builder.addAggregation( AggregationBuilders.terms(\\\"brands\\\").field(\\\"brand\\\") .subAggregation(AggregationBuilders.avg(\\\"priceAvg\\\").field(\\\"price\\\")) // 在品牌聚合桶内进行嵌套聚合，求平均值 ); // 2、查询 SearchHits<Product> products = restTemplate.search(builder.build(), Product.class); // 3、解析 // 3.1、从结果中取出名为brands的那个聚合， Aggregations aggregations = products.getAggregations(); Terms terms = aggregations.get(\\\"brands\\\"); // 3.2、获取桶 if (terms.getBuckets().size() > 0) { // 3.3、遍历 for (Terms.Bucket bucket : terms.getBuckets()) { // 3.4、获取桶中的key，即品牌名称 3.5、获取桶中的文档数量 System.out.println(bucket.getKeyAsString() + \\\"，共\\\" + bucket.getDocCount() + \\\"台\\\"); // 3.6.获取子聚合结果： Map<String, Aggregation> subMaps = bucket.getAggregations().asMap(); ParsedAvg avg = (ParsedAvg) subMaps.get(\\\"priceAvg\\\"); System.out.println(\\\"平均售价：\\\" + avg.getValue()); } } } \",\"输出结果如下：\",\"Apple，共3台 平均售价：8128.666666666667 华为，共3台 平均售价：5499.0 荣耀，共3台 平均售价：3649.0 小米，共2台 平均售价：4849.0 联想，共1台 平均售价：9299.0 \"]},\"357\":{\"h\":\"Mongo-知识体系\",\"t\":[\"MongoDB 是一种强大、灵活、可扩展的数据存储方式，属于 NoSql 数据库的类别。是面向文档的NoSQL数据库，用于大量数据存储。\"]},\"358\":{\"h\":\"相关文章\",\"t\":[\"首先，我们需要先了解 Mongo 是什么，以及它的一些概念的东西\",\"Mongo - 介绍以及概念\",\"介绍 Mongo 的核心概念以及术语\",\"了解了 Mongo 后，来学习 Mongo 的安装以及基础的 CRUD 操作\",\"Mongo - 环境搭建\",\"介绍 Monogo 的安装步骤\",\"Mongo - SpringBoot集成\",\"学习 Mongo 在 SpringBoot 中的集成操作\",\"Mongo - 地理位置查询\",\"学习 mongodb 中对于地理位置的一些操作\"]},\"359\":{\"h\":\"学习资料\",\"t\":[\"Mongo 官网文档\",\"MongoDB菜鸟教程\",\"MongoDB入门教程\",\"Java全栈知识体系\"]},\"360\":{\"h\":\"Mongo-介绍\",\"t\":[\"MongoDB 是一个可扩展、高性能的 NoSQL 数据库，由 C++ 语言编写，旨在为 web 应用提供高性能可扩展的数据存储解决方案。 它的特点是高性能、易部署、易使用，存储数据非常方便，主要特性有:\",\"模式自由，支持动态查询、完全索引，可轻易查询文档中内嵌的对象及数组。\",\"面向集合存储，易存储对象类型的数据 , 包括文档内嵌对象及数组。\",\"高效的数据存储 , 支持二进制数据及大型对象 ( 如照片和视频 )。\",\"支持复制和故障恢复；提供了 主-从、主-主模式的数据复制及服务器之间的数据复制。\",\"自动分片以支持云级别的伸缩性，支持水平的数据库集群，可动态添加额外的服务器\"]},\"361\":{\"h\":\"Mongo 的基本概念\",\"t\":[\"文档(document) - 是 mongo 中的基本数据单元，类似于关系型数据库中的行，但是比行要复杂的多\",\"集合 - 就是一组文档，如果说文档就是行那么集合就类似关系型数据库中的表\",\"数据库 - Mongo 中多个文档组成集合，同样的多个集合组成数据库，每个数据库都有独立的权限控制\"]},\"362\":{\"h\":\"MongoDB与RDBMS区别\",\"t\":[\"SQL术语/概念\",\"MongoDB术语/概念\",\"解释/说明\",\"database\",\"database\",\"数据库\",\"table\",\"collection\",\"数据库表/集合\",\"row\",\"document\",\"数据记录行/文档\",\"column\",\"field\",\"数据字段/域\",\"index\",\"index\",\"索引\",\"table joins\",\"表连接,MongoDB不支持\",\"primary key\",\"primary key\",\"主键,MongoDB自动将_id字段设置为主键\"]},\"363\":{\"h\":\"Mongo 的术语\",\"t\":[\"_id – 这是每个MongoDB文档中必填的字段。_id字段表示MongoDB文档中的唯一值。_id字段类似于文档的主键。如果创建的新文档中没有_id字段，MongoDB将自动创建该字段。\",\"集合 – 这是MongoDB文档的分组。集合等效于在任何其他RDMS（例如Oracle或MS SQL）中创建的表。集合存在于单个数据库中。从介绍中可以看出，集合不强制执行任何结构。\",\"游标 – 这是指向查询结果集的指针。客户可以遍历游标以检索结果。\",\"数据库 – 这是像RDMS中那样的集合容器，其中是表的容器。每个数据库在文件系统上都有其自己的文件集。MongoDB服务器可以存储多个数据库。\",\"文档 - MongoDB集合中的记录基本上称为文档。文档包含字段名称和值。\",\"字段 - 文档中的名称/值对。一个文档具有零个或多个字段。字段类似于关系数据库中的列。\"]},\"364\":{\"h\":\"Mongo 的数据类型\",\"t\":[\"数据类型\",\"描述\",\"String\",\"字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。\",\"Integer\",\"整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。\",\"Boolean\",\"布尔值。用于存储布尔值（真/假）。\",\"Double\",\"双精度浮点值。用于存储浮点值。\",\"Min/Max keys\",\"将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。\",\"Array\",\"用于将数组或列表或多个值存储为一个键。\",\"Timestamp\",\"时间戳。记录文档修改或添加的具体时间。\",\"Object\",\"用于内嵌文档。\",\"Null\",\"用于创建空值。\",\"Symbol\",\"符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。\",\"Date\",\"日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。\",\"Object ID\",\"对象 ID。用于创建文档的 ID。\",\"Binary Data\",\"二进制数据。用于存储二进制数据。\",\"Code\",\"代码类型。用于在文档中存储 JavaScript 代码。\",\"Regular expression\",\"正则表达式类型。用于存储正则表达式。\"]},\"365\":{\"h\":\"Mongo-安装教程\",\"t\":[\"本文介绍 mongodb 的安装，使用的版本是 5.0.2\",\"框架\",\"版本\",\"mongodb\",\"5.0.2\"]},\"366\":{\"h\":\"mongodb 下载\",\"t\":[\"MongoDB提供了可用于32位系统和64位系统的预编译二进制包（新版本没有了32位系统的安装文件），你可以进入MongoDB官网下载安装，MongoDB的预编译二进制包的下载地址为：https://www.mongodb.com/download-center/community，打开之后会看到如下图，直接点击Download下载即可，也可以在 Version 中选择你想要的版本：\",\"注意：在 MongoDB 2.2 版本后已经不再支持 Windows XP 系统。最新版本也已经没有了 32 位系统的安装文件。\",\"XKWaYw\"]},\"367\":{\"h\":\"window 平台的安装\",\"t\":[\"下载 .msi 文件，下载后双击该文件，按操作提示安装即可\",\"安装过程中，你可以通过点击 \\\"Custom(自定义)\\\" 按钮来设置你的安装目录\",\"自定义完安装目录后，我们直接一直 next\",\"这里安装 \\\"Install MongoDB Compass\\\" 不勾选，否则可能要很长时间都一直在执行安装，MongoDB Compass是一个图形界面管理工具，这里不安装也是没有问题的，可以自己去下载一个图形界面管理工具\",\"之后稍微等待一会就安装好了\"]},\"368\":{\"h\":\"配置MongoDB\",\"t\":[\"MongoDB的安装过程是很简单的，但是配置就比较麻烦了，可能会遇到各种各样的问题，需要你有足够的耐心和仔细。\",\"首先要在MongoDB的data文件夹里新建一个 db文件夹 和一个 log文件夹 ：\",\"然后在log文件夹下新建一个 mongo.log ：\"]},\"369\":{\"h\":\"运行 mongodb\",\"t\":[\"运行 mongodb 命令前，先将你的 mongodb 安装路径配置到环境变量中\",\"进入 cmd 运行如下命令启动 mongodb 服务：\",\"# 后边填写你的 data 文件路径 mongod --dbpath E:\\\\xxx\\\\data\\\\db \",\"需要注意的是：如果你没有提前创建db文件夹，是无法启动成功的。运行成功之后，我们打开浏览器，输入 127.0.0.1:27017，看到有输出信息，就说明MongoDB服务已经成功启动了\"]},\"370\":{\"h\":\"linux 平台的安装\",\"t\":[\"linux 平台的 mongodb 安装，我们使用 ubuntu 18.04 下演示安装\",\"平台\",\"版本\",\"ubuntu\",\"18.04\",\"官网教程\",\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\"]},\"371\":{\"h\":\"1. 导入包管理系统使用的公钥\",\"t\":[\"wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add - \",\"如果这个操作报错提示 gnupg 未安装的错误，您可以：\",\"gnupg使用以下命令安装及其所需的库：\",\"sudo apt-get install gnupg \",\"安装后，重试导入密钥：\",\"wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add - \"]},\"372\":{\"h\":\"2. 为 MongoDB 创建一个列表文件\",\"t\":[\"以下命令适用于Ubuntu 18.04 ，如果您不确定主机运行的是哪个 Ubuntu 版本，请在主机上打开终端或 shell 并执行lsb_release -dc.\",\"/etc/apt/sources.list.d/mongodb-org-5.0.list 为 Ubuntu 18.04 创建 文件：\",\"echo \\\"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/5.0 multiverse\\\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list \"]},\"373\":{\"h\":\"3. 重新加载本地包数据库\",\"t\":[\"发出以下命令以重新加载本地包数据库：\",\"sudo apt-get update \"]},\"374\":{\"h\":\"4. 安装 MongoDB 包\",\"t\":[\"您可以安装 MongoDB 的最新稳定版本或特定版本的 MongoDB\",\"要安装最新的稳定版本，请发出以下命令:\",\"sudo apt-get install -y mongodb-org \",\"要安装特定版本，您必须单独指定每个组件包以及版本号，如下例所示：\",\"sudo apt-get install -y mongodb-org=5.0.2 mongodb-org-database=5.0.2 mongodb-org-server=5.0.2 mongodb-org-shell=5.0.2 mongodb-org-mongos=5.0.2 mongodb-org-tools=5.0.2 \",\"如果您只安装mongodb-org=5.0.2而不包含组件包，则无论您指定什么版本，都将安装每个 MongoDB 包的最新版本\"]},\"375\":{\"h\":\"5. 运行 MongoDB\",\"t\":[\"您可以使用 mongod 命令来启动该mongodb：\",\"sudo systemctl start mongod \",\"如果您在启动时收到类似于以下内容的错误:\",\"Failed to start mongod.service: Unit mongod.service not found.\",\"首先运行以下命令：\",\"sudo systemctl daemon-reload # 然后再次运行上面的启动命令 sudo systemctl start mongod \",\"验证 MongoDB 是否已成功启动、以及开机自启\",\"sudo systemctl status mongod # 确保 MongoDB 在系统重新启动后启动 sudo systemctl enable mongod \",\"停止、重启 MongoDB\",\"# 停止 sudo systemctl stop mongod # 重启 sudo systemctl restart mongod \"]},\"376\":{\"h\":\"6. 卸载 MongoDB\",\"t\":[\"通过发出以下命令停止进程：\",\"sudo service mongod stop \",\"删除您之前安装的所有 MongoDB 包:\",\"sudo apt-get purge mongodb-org* \",\"删除 MongoDB 数据库和日志文件:\",\"sudo rm -r /var/log/mongodb sudo rm -r /var/lib/mongodb \"]},\"377\":{\"h\":\"Mac 平台的安装\",\"t\":[\"Mac 平台我们使用 Homebrew 来安装 mongodb，这里 Homebrew 的安装就不详细说明，网上一大堆文档，这里就贴一下官网地址，有兴趣可以去看一下 官网\",\"我们执行一下命令就可以安装完成：\",\"brew tap mongodb/brew brew install mongodb-community@5.0 \",\"检查是否安装成功\",\"mongod -version \",\"大功告成！！！\",\"启动mongod服务器\",\"brew services start mongodb-community # 关闭服务 brew services stop mongodb-community \"]},\"378\":{\"h\":\"Mongo-SpringBoot集成\",\"t\":[\"开发环境配置如下👇\",\"框架\",\"版本\",\"SpringBoot\",\"2.5.4\",\"mongodb\",\"5.0.2\",\"spring-boot-starter-data-mongodb\",\"2.5.4\"]},\"379\":{\"h\":\"导入 pom 文件\",\"t\":[\"我们想要在 SpringBoot 中集成 mongo，第一步☝️就是导入相应的 pom 文件\",\"<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-mongodb</artifactId> </dependency> \"]},\"380\":{\"h\":\"配置文件\",\"t\":[\"spring: data: # mongodb 配置 mongodb: database: xxx host: 127.0.0.1 port: 27017 \"]},\"381\":{\"h\":\"开启注解\",\"t\":[\"@EnableMongoRepositories(basePackages = \\\"xx.xxx.xxx\\\") \",\"因为使用了 Spring-data 框架，所以需要开启注解扫描 Repository 类\"]},\"382\":{\"h\":\"编写对应的 JavaBean\",\"t\":[\"先定义一个 JavaBean 类，指定集合名称\",\"@Data @Document(\\\"entries\\\") // 为序列化中的属性选择命名策略 // 所有字母均为小写，并在名称元素之间使用下划线作为分隔符 @JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class) public class Entry { @Id private String id; private String title; private String link; @Field(\\\"image_url\\\") private String imageUrl; @Field(\\\"icon_url\\\") private String iconUrl; @Field(\\\"title_color\\\") private String titleColor; private String description; private int price; @Field(\\\"is_in_serving\\\") private String isInServing; } \"]},\"383\":{\"h\":\"创建 Repository\",\"t\":[\"Spring Data 的强大之处，就在于你不用写任何DAO处理，自动根据方法名或类的信息进行CRUD操作。只要你定义一个接口，然后继承Repository提供的一些子接口，就能具备各种基本的CRUD功能\",\"@Repository public interface EntryRepository extends CrudRepository<Entry, String> { } \"]},\"384\":{\"h\":\"mongoTemplate API 方法大全\",\"t\":[\"Spring Data MongoDB 是Spring框架访问mongodb的神器，借助它可以非常方便的读写mongo库。本文介绍使用Spring Data MongoDB来访问mongodb数据库的几种方法：\",\"使用Query和Criteria类\",\"JPA自动生成的查询方法\",\"使用@Query 注解基于JSON查询\",\"使用Spring Data来查询MongoDB的最常用方法之一是使用 Query 和 Criteria 类\"]},\"385\":{\"h\":\"is 查询\",\"t\":[\"在以下示例中 - 我们正在寻找 title 名为 果蔬生菜 的数据\",\"Query query = new Query(); query.addCriteria(Criteria.where(\\\"title\\\").is(\\\"果蔬生菜\\\")); List<Entry> entrys = mongoTemplate.find(query, Entry.class); \"]},\"386\":{\"h\":\"模糊查询 - 正则\",\"t\":[\"在以下示例中 - 我们正在寻找 title、和 description 中带有 早餐 的数据\",\"//模糊匹配 Pattern pattern = Pattern.compile(\\\".*?早餐.*?\\\"); query.addCriteria(Criteria.where(\\\"\\\") .orOperator(Criteria.where(\\\"title\\\").regex(pattern),Criteria.where(\\\"description\\\").regex(pattern))); List<Entry> entrys = mongoTemplate.find(query, Entry.class); \"]},\"387\":{\"h\":\"LT和GT\",\"t\":[\"$ lt（小于）运算符和$ gt（大于）\",\"举个🌰 - 查找价格在 100 ~ 500 之间的数据\",\"Query query = new Query(); query.addCriteria(Criteria.where(\\\"price\\\").lt(100).gt(500)); List<Entry> users = mongoTemplate.find(query, Entry.class); \"]},\"388\":{\"h\":\"结果排序\",\"t\":[\"Sort 用于指定结果的排序顺序\",\"在以下示例中 - 根据价格来排序\",\"Query query = new Query(); query.with(new Sort(Sort.Direction.ASC, \\\"price\\\")); List<Entry> entrys = mongoTemplate.find(query, Entry.class); \"]},\"389\":{\"h\":\"分页\",\"t\":[\"一个使用分页的简单例子 - 每页显示 5 条数据，且根据价格排序\",\"// 排序 Sort sort = new Sort(Sort.Direction.ASC, \\\"price\\\") Pageable pageableRequest = new PageRequest(0, 5, sort); Query query = new Query(); query.with(pageableRequest); List<Entry> entrys = mongoTemplate.find(query, Entry.class); \"]},\"390\":{\"h\":\"Repository 使用\",\"t\":[\"生成查询方法是JPA的一个特性，在Spring Data Mongodb里也可以使用\"]},\"391\":{\"h\":\"FindByX\",\"t\":[\"通过 title 查找，只需要在接口上声明方法即可\",\"@Repository public interface EntryRepository extends CrudRepository<Entry, String> { List<Entry> findByTitle(String title); } \"]},\"392\":{\"h\":\"StartingWith and endingWith\",\"t\":[\"List<Entry> findByTitleStartingWith(String regexp); List<Entry> findByTitleEndingWith(String regexp); \"]},\"393\":{\"h\":\"Between\",\"t\":[\"类似价格区间查询我们可以使用 Between ：\",\"List<Entry> findByPriceBetween(int minPrice, int maxPrice); List<Entry> entrys = entryRepository.findByPriceBetween(100, 500); \"]},\"394\":{\"h\":\"Like和OrderBy\",\"t\":[\"示例 - 我们将要查找 title 中包含 早餐 的所有数据，我们也将按 价格 顺序排列结果：\",\"List<Entry> entrys = entryRepository.findByTitleLikeOrderByPriceAsc(\\\"早餐\\\"); \"]},\"395\":{\"h\":\"原始查询\",\"t\":[\"使用@Query注解 - 我们可以指定一个原始查询 - 作为一个Mongo JSON查询字符串\"]},\"396\":{\"h\":\"FindBy\",\"t\":[\"@Query(\\\"{ 'title' : ?0 }\\\") List<Entry> findEntryByTitle(String title); \"]},\"397\":{\"h\":\"$regex\",\"t\":[\"正则表达式驱动的查询\",\"@Query(\\\"{ 'title' : { $regex: ?0 } }\\\") List<Entry> findEntryByRegexpTitle(String regexp); \"]},\"398\":{\"h\":\"Mongo-地理空间查询\",\"t\":[\"MongoDB通过使用$near，$within，geoWithin和$nearSphere等运算符支持地理空间查询。Criteria类提供了特定于地理空间查询的方法。还有一些形状类（Box，Circle和Point）与地理空间相关的Criteria方法结合使用\"]},\"399\":{\"h\":\"演示类 Venue\",\"t\":[\"@Document(collection=\\\"newyork\\\") public class Venue { @Id private String id; private String name; private double[] location; @PersistenceConstructor Venue(String name, double[] location) { super(); this.name = name; this.location = location; } public Venue(String name, double x, double y) { super(); this.name = name; this.location = new double[] { x, y }; } public String getName() { return name; } public double[] getLocation() { return location; } @Override public String toString() { return \\\"Venue [id=\\\" + id + \\\", name=\\\" + name + \\\", location=\\\" + Arrays.toString(location) + \\\"]\\\"; } } \"]},\"400\":{\"h\":\"Circle 查询\",\"t\":[\"要查找Circle内的位置，您可以使用以下查询：\",\"Circle circle = new Circle(-73.99171, 40.738868, 0.01); List<Venue> venues = template.find(new Query(Criteria.where(\\\"location\\\").within(circle)), Venue.class); \",\"要使用球面坐标查找Circle内的场地，您可以使用以下查询：\",\"Circle circle = new Circle(-73.99171, 40.738868, 0.003712240453784); List<Venue> venues = template.find(new Query(Criteria.where(\\\"location\\\").withinSphere(circle)), Venue.class); \"]},\"401\":{\"h\":\"Box 查询\",\"t\":[\"要查找Box内的场地，您可以使用以下查询：\",\"//lower-left then upper-right Box box = new Box(new Point(-73.99756, 40.73083), new Point(-73.988135, 40.741404)); List<Venue> venues = template.find(new Query(Criteria.where(\\\"location\\\").within(box)), Venue.class); \"]},\"402\":{\"h\":\"Point 查询\",\"t\":[\"要查找Point附近的场地，您可以使用以下查询：\",\"Point point = new Point(-73.99171, 40.738868); List<Venue> venues = template.find(new Query(Criteria.where(\\\"location\\\").near(point).maxDistance(0.01)), Venue.class); Point point = new Point(-73.99171, 40.738868); List<Venue> venues = template.find(new Query(Criteria.where(\\\"location\\\").near(point).minDistance(0.01).maxDistance(100)), Venue.class); \",\"要使用球面坐标查找Point附近的场地，您可以使用以下查询：\",\"Point point = new Point(-73.99171, 40.738868); List<Venue> venues = template.find(new Query( Criteria.where(\\\"location\\\").nearSphere(point).maxDistance(0.003712240453784)), Venue.class); \"]},\"403\":{\"h\":\"地理附近查询\",\"t\":[\"MongoDB支持在数据库中查询地理位置并同时计算与给定原点的距离。通过地理附近查询，您可以表达查询，例如“查找周围10英里内的所有餐馆”。为了让您这样做，MongoOperations提供了geoNear(…)方法，它们以NearQuery作为参数（以及已经熟悉的实体类型和集合），如以下示例所示：\",\"Point location = new Point(-73.99171, 40.738868); NearQuery query = NearQuery.near(location).maxDistance(new Distance(10, Metrics.MILES)); // mongoTemplate.geoNear()方法是专门查询地图附近集合的集成mongo的方法 GeoResults<Venue> = mongoTemplate.geoNear(query, Venue.class); \"]},\"404\":{\"h\":\"参考资料\",\"t\":[\"Spring Data MongoDB - 参考文档\"]},\"405\":{\"h\":\"mysql 创建用户并赋权\"},\"406\":{\"h\":\"创建用户\",\"t\":[\"create user 'username'@'host' identified by 'password'; \",\"username：创建用户的用户名称\",\"host：localhost 表示该用户只能本地登录，% 表示该用户可以远程登录\",\"password：该用户的登录密码\",\"create user 'zenghr'@'%' identified by '123456'; \",\"上面的命令创建了一个用户名为 zenghr，并且密码为 123456的用户\"]},\"407\":{\"h\":\"修改密码\",\"t\":[\"在使用数据库的同时，难免会遇到修改密码的需求，密码太简单、忘记登陆密码等，记录一下 mysql 修改密码的几种方式：\"]},\"408\":{\"h\":\"1. update user表\",\"t\":[\"其实 MySQL 所以的账号信息都存储在 mysql.user 表里面，我们也可以直接通过 update user 表来修改密码\",\"提示\",\"mysql从5.7.6 开始删除了password字段 (opens new window)需要换另一种方式修改密码\",\"# 5.6及之前版本 update mysql.user set password=password('admin') where user='root'; # 5.7及之后版本 update mysql.user set authentication_string=password('admin') where user = 'root'; \"]},\"409\":{\"h\":\"2. alter user 修改\",\"t\":[\"# 修改密码 alter user 'zenghr'@'%' identified by 'admin'; # 刷新权限 flush privileges; \"]},\"410\":{\"h\":\"3. set password 命令\",\"t\":[\"# 修改密码 SET password for 'zenghr'@'%' = password('admin'); # 刷新权限 flush privileges; \"]},\"411\":{\"h\":\"忘记 root 密码\",\"t\":[\"忘记 root 密码的场景还是比较常见的，很容易记不得当时设置的密码。这个时候一般常用的方法是跳过权限验证，然后更改 root 密码，之后再启用权限验证。\",\"首先修改配置文件，在 [mysqld] 部分加上一句：skip-grant-tables ，加上此参数的目的是跳过权限验证。\",\"[mysqld] character_set_server=utf8mb4 # 跳过权限 skip-grant-tables [client] default-character-set=utf8mb4 [mysql] default-character-set=utf8mb4 \",\"然后重启 mysql 服务后，就可以不输入密码登录，然后执行修改密码的sql语句\",\"[root@host ~]# mysql mysql> update mysql.user set authentication_string = password ('admin') where user = 'root' and host = '%'; Query OK, 0 rows affected, 1 warning (0.00 sec) Rows matched: 1 Changed: 0 Warnings: 1 mysql> flush privileges; Query OK, 0 rows affected (0.01 sec) \",\"修改完 root 密码后，再次去除 skip-grant-tables 参数，然后重启下数据库即可\"]},\"412\":{\"h\":\"查看用户权限\",\"t\":[\"使用show grants for 'test'@'%';或者show grants for test;都可以\",\"mysql> show grants for test; +----------------------------------+ | Grants for test@% | +----------------------------------+ | GRANT USAGE ON *.* TO 'test'@'%' | +----------------------------------+ 1 row in set (0.00 sec) \",\"我们可以看到新创建的用户的默认权限是 usage，表示是无权限\"]},\"413\":{\"h\":\"用户授权命令 - grant\",\"t\":[\"Mysql 赋予用户权限命令的简单格式可概括为：\",\"grant 权限 on 数据库对象 to 用户; \"]},\"414\":{\"h\":\"1. 授权用户：增删改查数据中所有表的权利\",\"t\":[\"grant select on testdb.* to test@'%'; grant insert on testdb.* to test@'%'; grant update on testdb.* to test@'%'; grant delete on testdb.* to test@'%'; \",\"授权多个权限时，可以用逗号分隔\",\"grant select, insert, update, delete on testdb.* to test@'%'; \"]},\"415\":{\"h\":\"2. 授权用户：创建、删除、视图等权限\",\"t\":[\"grant create on testdb.* to test@'%'; grant alter on testdb.* to test@'%'; grant drop on testdb.* to test@'%'; \"]},\"416\":{\"h\":\"3. 授权用户所有权限\",\"t\":[\"grant all on *.* to test@'%'; \",\"上面的 sql 语句表示 授权 test 用户管理 mysql 中所有数据库的所有权限\",\"授权某个数据库的权限\",\"grant all on *testdb.* to test@'%'; \"]},\"417\":{\"h\":\"4. grant 可用的权限列表\",\"t\":[\"权限名称\",\"对应user表中的字段\",\"说明\",\"SELECT\",\"Select_priv\",\"表示授予用户可以使用 SELECT 语句访问特定数据库中所有表和视图的权限。\",\"INSERT\",\"Insert_priv\",\"表示授予用户可以使用 INSERT 语句向特定数据库中所有表添加数据行的权限。\",\"DELETE\",\"Delete_priv\",\"表示授予用户可以使用 DELETE 语句删除特定数据库中所有表的数据行的权限。\",\"UPDATE\",\"Update_priv\",\"表示授予用户可以使用 UPDATE 语句更新特定数据库中所有数据表的值的权限。\",\"REFERENCES\",\"References_priv\",\"表示授予用户可以创建指向特定的数据库中的表外键的权限。\",\"CREATE\",\"Create_priv\",\"表示授权用户可以使用 CREATE TABLE 语句在特定数据库中创建新表的权限。\",\"ALTER\",\"Alter_priv\",\"表示授予用户可以使用 ALTER TABLE 语句修改特定数据库中所有数据表的权限。\",\"SHOW VIEW\",\"Show_view_priv\",\"表示授予用户可以查看特定数据库中已有视图的视图定义的权限。\",\"CREATE ROUTINE\",\"Create_routine_priv\",\"表示授予用户可以为特定的数据库创建存储过程和存储函数的权限。\",\"ALTER ROUTINE\",\"Alter_routine_priv\",\"表示授予用户可以更新和删除数据库中已有的存储过程和存储函数的权限。\",\"INDEX\",\"Index_priv\",\"表示授予用户可以在特定数据库中的所有数据表上定义和删除索引的权限。\",\"DROP\",\"Drop_priv\",\"表示授予用户可以删除特定数据库中所有表和视图的权限。\",\"CREATE TEMPORARY TABLES\",\"Create_tmp_table_priv\",\"表示授予用户可以在特定数据库中创建临时表的权限。\",\"CREATE VIEW\",\"Create_view_priv\",\"表示授予用户可以在特定数据库中创建新的视图的权限。\",\"EXECUTE ROUTINE\",\"Execute_priv\",\"表示授予用户可以调用特定数据库的存储过程和存储函数的权限。\",\"LOCK TABLES\",\"Lock_tables_priv\",\"表示授予用户可以锁定特定数据库的已有数据表的权限。\",\"ALL 或 ALL PRIVILEGES 或 SUPER\",\"Super_priv\",\"表示以上所有权限/超级权限\"]},\"418\":{\"h\":\"取消授权命令 - revoke\",\"t\":[\"撤销已经赋予给 MySQL 用户权限的权限，revoke 跟 grant 的语法差不多，只需要把关键字 to 换成 from 即可：\",\"revoke all on \\\"*.*\\\" from test@'%'; \"]},\"419\":{\"h\":\"删除用户\",\"t\":[\"drop user test@'%'; \",\"drop user命令会删除用户以及对应的权限，执行命令后你会发现mysql.user表和mysql.db表的相应记录都消失了\"]},\"420\":{\"h\":\"常用命令组\",\"t\":[\"创建用户并授予指定数据库全部权限：适用于 Web 应用创建 Mysql 用户\",\"create user test@'%' identified by '123456'; grant all on testdb.* to test@'%'; flush privileges; \"]},\"421\":{\"h\":\"Mysql 高版本group by问题\",\"t\":[\"在 Mysql 5.7 以上的版本中，默认配置了 sql_mode：ONLY_FULL_GROUP_BY 对于GROUP BY聚合操作，如果在SELECT中的列，没有在GROUP BY中出现，那么这个SQL是不合法的\",\"提示\",\"本文记录一下 mysql 执行 group by 语句时遇到的错误，以及修改方案\"]},\"422\":{\"h\":\"查看 mysql 全局的 sql_mode\",\"t\":[\"进入 Mysql 客户端执行命令：\",\"select @@global.sql_mode; +----------------------------------------------------------------------------------------------------+ | @@GLOBAL.sql_mode | +----------------------------------------------------------------------------------------------------+ | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION | +----------------------------------------------------------------------------------------------------+ 1 row in set (0.00 sec) \",\"可以看到 ONLY_FULL_GROUP_BY 就是导致 group by 报错的原因，所以要解决该问题必须要该配置关掉\",\"于是在网上尝试了很多解决方法，最终发现大部分方法估计写的人自己也没有测试过！！！修改后只会导致更多的错误，所以记录一下解决的过程\"]},\"423\":{\"h\":\"修改 my.cnf 配置文件\",\"t\":[\"找到 my.cnf 配置文件，添加一条配置\",\"sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'\",\"我的配置文件如下：\",\"[mysqld] character_set_server=utf8mb4 # 添加的配置 sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' [client] default-character-set=utf8mb4 [mysql] default-character-set=utf8mb4 \"]},\"424\":{\"h\":\"sql_mode常用值\",\"t\":[\"ONLY_FULL_GROUP_BY：对于GROUP BY聚合操作，如果在 SELECT 中的列，没有在 GROUP BY 中出现，那么这个SQL是不合法的\",\"NO_AUTO_VALUE_ON_ZERO：该值影响自增长列的插入。默认设置下，插入0或NULL代表生成下一个自增长值。如果用户 希望插入的值为0，而该列又是自增长的，那么这个选项就有用了\",\"STRICT_TRANS_TABLES：在该模式下，如果一个值不能插入到一个事务表中，则中断当前的操作，对非事务表不做限制\",\"NO_ZERO_IN_DATE：在严格模式下，不允许日期和月份为零\",\"NO_ZERO_DATE：设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。\",\"ERROR_FOR_DIVISION_BY_ZERO：在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告。如 果未给出该模式，那么数据被零除时MySQL返回NULL\",\"NO_ENGINE_SUBSTITUTION：如果需要的存储引擎被禁用或未编译，那么抛出错误。不设置此值时，用默认的存储引擎替代，并抛出一个异常\",\"PIPES_AS_CONCAT：将\\\"||\\\"视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似\",\"ANSI_QUOTES：启用ANSI_QUOTES后，不能用双引号来引用字符串，因为它被解释为识别符\",\"NO_AUTO_CREATE_USER：禁止GRANT创建密码为空的用户 (Mysql8.0以后已经被删除)\"]},\"425\":{\"h\":\"Redis-知识体系\",\"t\":[\"本文主要列出 Redis 知识体系相关的大纲以及相应的文章\"]},\"426\":{\"h\":\"知识体系图\",\"t\":[\"j3Dk6f\"]},\"427\":{\"h\":\"相关文章\",\"t\":[\"首先需要先了解 Redis 的相关概念，以及适应的场景等\",\"Redis 入门 - Redis 概念\",\"Redis 定位是缓存，提高数据读写效率，减轻客户端数据访问压力\",\"了解 Redis 相关的数据结构，了解其相关的一些使用 API\",\"Redis 入门 - 五种数据结构\",\"主要包括常见的5种数据类型，分别是：字符串类型(String)、散列类型(Hash)、列表类型(List)、集合类型(Set)、有序集合类型(Zset)\",\"再者，需要学习Redis支持的核心功能，包括持久化，消息，事务，高可用；高可用方面包括，主从，哨兵等；高可拓展方面，比如 分片机制等\",\"Redis 进阶 - 内存淘汰机制\",\"Redis内存淘汰机制是指当内存使用达到上限（可通过maxmemory配置，0为不限制，即服务器内存上限），根据一定的算法来决定淘汰掉哪些数据，以保证新数据的存入\",\"Redis 进阶 - 持久化：RDB和AOF机制详解\",\"为了防止数据丢失以及服务重启时能够恢复数据，Redis支持数据的持久化，主要分为两种方式，分别是RDB和AOF; 当然实际场景下还会使用这两种的混合模式\"]},\"428\":{\"h\":\"学习资料\",\"t\":[\"Redis官方文档\",\"Redis教程\",\"Redis菜鸟教程\",\"Java 全栈知识体系\"]},\"429\":{\"h\":\"Redis入门-Redis概念\",\"t\":[\"Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。\"]},\"430\":{\"h\":\"什么是 Redis\",\"t\":[\"Redis是一款 内存高速缓存数据库 。Redis全称为：Remote Dictionary Server（远程数据服务），使用C语言编写，Redis是一个key-value存储系统（键值存储系统），支持丰富的数据类型，如：String、list、set、zset、hash。\",\"Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。\",\"Redis 定位是缓存，提高数据读写效率，减轻客户端数据访问压力\"]},\"431\":{\"h\":\"Redis 有什么优势\",\"t\":[\"性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。\",\"丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。\",\"原子性 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过 MULTI 和 EXEC 指令包起来。\",\"丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。\",\"持久化 - Redis支持RDB, AOF等持久化方式\"]},\"432\":{\"h\":\"Redis 的使用场景\",\"t\":[\"平时我们用到 redis 的地方蛮多的，下面就了解的应用场景做个总结\"]},\"433\":{\"h\":\"缓存热点数据\",\"t\":[\"缓存是Redis最常见的应用场景，因为Redis读写性能优异，作为缓存使用时，一般有两种方式保存数据：\",\"读取前，先去读Redis，如果没有数据，读取数据库，将数据拉入Redis。\",\"插入数据时，同时写入Redis\"]},\"434\":{\"h\":\"限时业务\",\"t\":[\"redis中可以使用 expire 命令设置一个键的生存时间，到时间后redis会删除它。利用这一特性可以运用在限时的优惠活动信息、手机验证码等业务场景\"]},\"435\":{\"h\":\"点赞、好友等相互关系的存储\",\"t\":[\"Redis set对外提供的功能与list类似是一个列表的功能，特殊之处在于set是可以自动排重的，当你需要存储一个列表数据，又不希望出现重复数据时，set是一个很好的选择，并且set提供了判断某个成员是否在一个set集合内的重要接口，这个也是list所不能提供的。 又或者在微博应用中，每个用户关注的人存在一个集合中，就很容易实现求两个人的共同好友功能。\",\"这个在奶茶活动中有运用，就是利用set存储用户之间的点赞关联的，另外在点赞前判断是否点赞过就利用了 sismembe r方法，当时这个接口的响应时间控制在10毫秒内，十分高效\"]},\"436\":{\"h\":\"参考文章\",\"t\":[\"https://zhuanlan.zhihu.com/p/29665317\",\"https://www.jianshu.com/p/40dbc78711c8\",\"https://www.pdai.tech/md/db/nosql-redis/db-redis-introduce.html\"]},\"437\":{\"h\":\"Redis入门-五种数据类型\",\"t\":[\"Redis所有的key（键）都是字符串。我们在谈基础数据结构时，讨论的是存储值的数据类型，主要包括常见的5种数据类型，分别是：字符串类型(String)、散列类型(Hash)、列表类型(List)、集合类型(Set)、有序集合类型(Zset)\"]},\"438\":{\"h\":\"Redis 数据结构简介\",\"t\":[\"u4eAB3\",\"结构类型\",\"结构存储的值\",\"结构的读写能力\",\"String字符串\",\"可以是字符串、整数或浮点数\",\"对整个字符串或字符串的一部分进行操作；对整数或浮点数进行自增或自减操作；\",\"List列表\",\"一个链表，链表上的每个节点都包含一个字符串\",\"对链表的两端进行push和pop操作，读取单个或多个元素；根据值查找或删除元素；\",\"Set集合\",\"包含字符串的无序集合\",\"字符串的集合，包含基础的方法有看是否存在添加、获取、删除；还包含计算交集、并集、差集等\",\"Hash散列\",\"包含键值对的无序散列表\",\"包含方法有添加、获取、删除单个元素\",\"Zset有序集合\",\"和散列一样，用于存储键值对\",\"字符串成员与浮点数分数之间的有序映射；元素的排列顺序由分数的大小决定；包含方法有添加、获取、删除单个元素以及根据分值范围或成员来获取元素\"]},\"439\":{\"h\":\"基础数据结构详解\"},\"440\":{\"h\":\"字符串类型(String)\",\"t\":[\"String是redis中最基本的数据类型，一个key对应一个value\",\"String类型是二进制安全的，意思是 redis 的 string 可以包含任何数据。如数字，字符串，jpg图片或者序列化的对象\",\"命令使用\",\"命令\",\"简述\",\"使用\",\"get\",\"获取存储在给定键中的值\",\"get name\",\"set\",\"设置存储在给定键中的值\",\"set name value\",\"setex\",\"存入键值对,timeout表示失效时间,单位s\",\"setex key timeout value\",\"setnx\",\"如果key已经存在,不做操作, 如果key不存在,直接添加\",\"setnx key value\",\"del\",\"删除存储在给定键中的值\",\"del name\",\"incr\",\"将键存储的值加1\",\"incr key\",\"decr\",\"将键存储的值减1\",\"decr key\",\"incrby\",\"将键存储的值加上整数\",\"incrby key amount\",\"decrby\",\"将键存储的值减去整数\",\"decrby key amount\",\"ttl\",\"可以查询出当前的key还剩余多长时间过期\",\"ttl key\",\"mset\",\"批量存入键值对\",\"mset k1 v1 k2 v2\",\"mget\",\"批量取出键值\",\"mget k1 k2\",\"ttl 命令说明： 当查询 key 不存在时或者过期时，返回 -2 ，当 key 没有设置过期时间时，返回 -1\",\"命令执行\",\"127.0.0.1:6379> set hello world OK 127.0.0.1:6379> get hello \\\"world\\\" 127.0.0.1:6379> del hello (integer) 1 127.0.0.1:6379> get hello (nil) 127.0.0.1:6379> set counter 1 OK 127.0.0.1:6379> get counter \\\"1\\\" 127.0.0.1:6379> incr counter (integer) 2 127.0.0.1:6379> get counter \\\"2\\\" 127.0.0.1:6379> incrby counter 10 (integer) 12 127.0.0.1:6379> get counter \\\"12\\\" 127.0.0.1:6379> decr counter (integer) 11 127.0.0.1:6379> get counter \\\"11\\\" 127.0.0.1:6379> decrby counter 10 (integer) 1 127.0.0.1:6379> get counter \\\"1\\\" 127.0.0.1:6379> setex test 10 test OK 127.0.0.1:6379> ttl test (integer) 6 127.0.0.1:6379> ttl test (integer) 2 127.0.0.1:6379> ttl test (integer) -2 \",\"实战场景 \",\"缓存： 经典使用场景，把常用信息，字符串，图片或者视频等信息放到redis中，redis作为缓存层，mysql做持久化层，降低mysql的读写压力。\",\"计数器：redis是单线程模型，一个命令执行完才会执行下一个，同时数据可以一步落地到其他的数据源。\",\"session：常见方案spring session + redis实现session共享\"]},\"441\":{\"h\":\"散列类型(Hash)\",\"t\":[\"Hash类型是String类型的field和value的映射表，或者说是一个String集合\",\"它特别适合存储对象,相比较而言，将一个对象存储在Hash类型里要比存储在String类型里占用更少的内存空间，并方便存储整个对象\",\"命令使用\",\"命令\",\"简述\",\"使用\",\"hset\",\"添加键值对\",\"hset key sub-key1 value1\",\"hget\",\"获取指定散列键的值\",\"hget key key1\",\"hgetall\",\"获取散列中包含的所有键值对\",\"hgetall key\",\"hdel\",\"如果给定键存在于散列中，那么就移除这个键\",\"hdel key sub-key1\",\"hexists\",\"判断hash对象是含有某个键\",\"hexists key hashkey\",\"hincrby\",\"递增hashkey对应的值\",\"hincrby key hashkey 递增值\",\"hlen\",\"获取hash对象键的数量\",\"hlen key\",\"hkeys\",\"获取hash对象的所有键\",\"hkeys key\",\"hvals\",\"获取hash对象的所有值\",\"hvals key\",\"命令执行\",\"127.0.0.1:6379> hset has1 name zs age 12 (integer) 2 127.0.0.1:6379> hget has1 name \\\"zs\\\" 127.0.0.1:6379> hgetall has1 1) \\\"name\\\" 2) \\\"zs\\\" 3) \\\"age\\\" 4) \\\"12\\\" 127.0.0.1:6379> hincrby has1 age 4 (integer) 16 127.0.0.1:6379> hdel has1 age (integer) 1 127.0.0.1:6379> hgetall has1 1) \\\"name\\\" 2) \\\"zs\\\" 127.0.0.1:6379> hexists has1 name (integer) 1 127.0.0.1:6379> hlen has1 (integer) 1 127.0.0.1:6379> hkeys has1 1) \\\"name\\\" 127.0.0.1:6379> hvals has1 1) \\\"zs\\\" \",\"实战场景\",\"缓存： 能直观，相比string更节省空间，的维护缓存信息，如用户信息，视频信息等\"]},\"442\":{\"h\":\"列表类型(List)\",\"t\":[\"Redis中的List其实就是链表（Redis用双端链表实现List）按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）\",\"Redis中的List类似Java中的queue,也可以当做List来用\",\"使用 List 结构，我们可以轻松地实现最新消息排队功能（比如新浪微博的TimeLine），List的另一个应用就是消息队列，可以利用List的 PUSH 操作，将任务存放在List中，然后工作线程再用 POP 操作将任务取出进行执行\",\"命令使用\",\"命令\",\"简述\",\"使用\",\"rpush\",\"将给定值推入到列表右端\",\"rpush key value\",\"lpush\",\"将给定值推入到列表左端\",\"lpush key value\",\"rpop\",\"从列表的右端弹出一个值，并返回被弹出的值\",\"rpop key\",\"lpop\",\"从列表的左端弹出一个值，并返回被弹出的值\",\"lpop key\",\"llen\",\"获取列表长度\",\"llen key\",\"lrange\",\"获取列表在给定范围上的所有值\",\"lrange key 0 -1\",\"ltrim\",\"对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素\",\"ltrim key start end\",\"lindex\",\"通过索引获取列表中的元素。你也可以使用负数下标，以 -1 表示列表的最后一个元素,以此类推。\",\"lindex key index\",\"使用列表的技巧\",\"lpush+lpop=Stack(栈)\",\"lpush+rpop=Queue（队列）\",\"lpush+ltrim=Capped Collection（有限集合）\",\"lpush+brpop=Message Queue（消息队列）\",\"命令执行\",\"127.0.0.1:6379> rpush list1 1 2 3 4 (integer) 4 127.0.0.1:6379> lrange list1 0 -1 1) \\\"1\\\" 2) \\\"2\\\" 3) \\\"3\\\" 4) \\\"4\\\" 127.0.0.1:6379> rpop list1 \\\"4\\\" 127.0.0.1:6379> lrange list1 0 -1 1) \\\"1\\\" 2) \\\"2\\\" 3) \\\"3\\\" 127.0.0.1:6379> llen list1 (integer) 3 127.0.0.1:6379> 127.0.0.1:6379> ltrim list1 1 2 OK 127.0.0.1:6379> 127.0.0.1:6379> lrange list1 0 -1 1) \\\"2\\\" 2) \\\"3\\\" \",\"实战场景 \",\"微博TimeLine: 有人发布微博，用lpush加入时间轴，展示新的列表信息。\",\"消息队列\"]},\"443\":{\"h\":\"集合类型(Set)\",\"t\":[\"Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据\",\"Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)\",\"命令使用\",\"命令\",\"简述\",\"使用\",\"sadd\",\"向集合添加一个或多个成员\",\"sadd key value\",\"scard\",\"获取集合的成员数\",\"scard key\",\"smembers\",\"返回集合中的所有成员\",\"smembers key member\",\"sismember\",\"判断 member 元素是否是集合 key 的成员\",\"sismember key member\",\"srem\",\"删除set集合中的元素\",\"srem key value\",\"spop\",\"随机弹出集合中的元素\",\"spop key count\",\"srandmember\",\"随机获取set集合中元素\",\"srandmember key count\",\"127.0.0.1:6379> sadd set1 1 2 3 3 4 (integer) 4 127.0.0.1:6379> scard set1 (integer) 4 127.0.0.1:6379> smembers set1 1) \\\"1\\\" 2) \\\"2\\\" 3) \\\"3\\\" 4) \\\"4\\\" 127.0.0.1:6379> sismember set1 5 (integer) 0 127.0.0.1:6379> sismember set1 4 (integer) 1 127.0.0.1:6379> spop set1 \\\"1\\\" 127.0.0.1:6379> smembers set1 1) \\\"2\\\" 2) \\\"3\\\" 3) \\\"4\\\" 127.0.0.1:6379> srem set1 3 4 (integer) 2 127.0.0.1:6379> smembers set1 1) \\\"2\\\" \",\"集合我们可以取交集,并集,差集\",\"命令\",\"简述\",\"使用\",\"sdiff\",\"返回key1中特有元素(差集)\",\"sdiff key1 key2\",\"sdiffstore\",\"返回key1中特有元素存入另一个set集合\",\"sdiffstore var key1 key2\",\"sinter\",\"返回两个set集合的交集\",\"sinter key1 key2\",\"sinterstore\",\"返回两个set集合的交集存入另一个set集合\",\"sinterstore var key1 key2\",\"sunion\",\"返回两个set集合的并集\",\"sunion key1 key2\",\"sunionstore\",\"返回两个set集合的并集存入另一个set集合\",\"sunionstore var key1 key2\",\"smove\",\"把key1中的某元素移入key2中\",\"smove key1 key2 value\",\"127.0.0.1:6379> sadd key1 4 3 2 1 (integer) 4 127.0.0.1:6379> sadd key2 8 6 4 2 (integer) 4 127.0.0.1:6379> sdiff key1 key2 1) \\\"1\\\" 2) \\\"3\\\" 127.0.0.1:6379> sinter key1 key2 1) \\\"2\\\" 2) \\\"4\\\" 127.0.0.1:6379> sunion key1 key2 1) \\\"1\\\" 2) \\\"2\\\" 3) \\\"3\\\" 4) \\\"4\\\" 5) \\\"6\\\" 6) \\\"8\\\" \",\"实战场景 \",\"标签（tag）,给用户添加标签，或者用户给消息添加标签，这样有同一标签或者类似标签的可以给推荐关注的事或者关注的人。\",\"点赞，或点踩，收藏等，可以放到set中实现\"]},\"444\":{\"h\":\"有序集合类型(Zset)\",\"t\":[\"Redis 有序集合和集合一样也是 string 类型元素的集合,且不允许重复的成员。不同的是每个元素都会关联一个 double 类型的分数。redis 正是通过分数来为集合中的成员进行从小到大的排序\",\"命令使用\",\"命令\",\"简述\",\"使用\",\"zadd\",\"将一个带有给定分值的成员添加到哦有序集合里面\",\"zadd zset-key 178 member1\",\"zrem\",\"如果给定元素成员存在于有序集合中，那么就移除这个元素\",\"zrem zset-key member1\",\"zincrby\",\"追加名称对应的分数\",\"zincrby key score column\",\"zcount\",\"按照分数范围统计个数\",\"zcount key min max\",\"zrange\",\"按照分数升序输出名称\",\"zrange zset-key 0-1 withscores\",\"zrevrange\",\"按照分数降序输出名称\",\"zrevrange key start end\",\"zrank\",\"升序返回排名\",\"zrank key name\",\"zrevrank\",\"降序返回排名\",\"zrevrank key name\",\"命令执行\",\"127.0.0.1:6379> zadd key4 140 aaa 150 bbb 145 ccc 132 ddd (integer) 4 127.0.0.1:6379> zrange key4 0 -1 1) \\\"ddd\\\" 2) \\\"aaa\\\" 3) \\\"ccc\\\" 4) \\\"bbb\\\" 127.0.0.1:6379> zrange key4 0 -1 withscores 1) \\\"ddd\\\" 2) \\\"132\\\" 3) \\\"aaa\\\" 4) \\\"140\\\" 5) \\\"ccc\\\" 6) \\\"145\\\" 7) \\\"bbb\\\" 8) \\\"150\\\" 127.0.0.1:6379> zincrby key4 10 aaa \\\"150\\\" 127.0.0.1:6379> zrange key4 0 -1 withscores 1) \\\"ddd\\\" 2) \\\"132\\\" 3) \\\"ccc\\\" 4) \\\"145\\\" 5) \\\"aaa\\\" 6) \\\"150\\\" 7) \\\"bbb\\\" 8) \\\"150\\\" \",\"实战场景\",\"排行榜：有序集合经典使用场景。例如小说视频等网站需要对用户上传的小说视频做排行榜，榜单可以按照用户关注数，更新时间，字数等打分，做排行\"]},\"445\":{\"h\":\"参考文章\",\"t\":[\"https://www.pdai.tech/md/db/nosql-redis/db-redis-data-types.html\",\"https://www.cnblogs.com/haoprogrammer/p/11065461.html\",\"菜鸟教程 - redis\"]},\"446\":{\"h\":\"Redis进阶-持久化机制\",\"t\":[\"Redis是一个支持持久化的内存数据库，也就是说 redis 需要经常将内存中的数据同步到硬盘来保证持久化\",\"Redis持久化主要分为两种方式，分别是RDB和AOF，当然实际场景下还会使用这两种的混合模式\"]},\"447\":{\"h\":\"前言\",\"t\":[\"Redis的数据正常都是存储在内存内，如果宕机突然发生，数据就会全部丢失，因此需要提供一种方式保证 redis 的数据不会因为故障而丢失，这种机制就是 redis 的持久化机制\",\"目前 Redis 主流的持久化机制有两种：RDB 方式 和 AOF 方式\"]},\"448\":{\"h\":\"RDB 持久化\",\"t\":[\"RDB持久化是把当前进程数据生成快照保存到硬盘的过程，触发RDB持久化过程分为 手动触发 和 自动触发\"]},\"449\":{\"h\":\"手动触发\",\"t\":[\"手动触发分别对应 save 和 bgsave 命令\",\"save命令：阻塞当前Redis服务器，直到RDB过程完成为止，对于内存 比较大的实例会造成长时间阻塞，线上环境不建议使用\",\"bgsave命令：Redis进程执行fork操作创建子进程，RDB持久化过程由子进程负责，完成后自动结束。阻塞只发生在fork阶段，一般时间很短\",\"bgsave 命令是针对 save 阻塞问题做的优化，因此Redis内部所有涉及到RDB操作都采用 bgsave 的方式，而 save 命令可以废弃\",\"bgsave流程图如下所示👇\",\"eFa8oF\",\"具体流程如下：\",\"redis 客户端执行 bgsave 命令或者自动触发bgsave命令；\",\"主进程判断当前是否已经存在正在执行的子进程，如果存在，那么主进程直接返回；\",\"如果不存在正在执行的子进程，那么就fork一个新的子进程进行持久化数据，fork过程是阻塞的，fork操作完成后主进程即可执行其他操作；\",\"子进程先将数据写入到临时的rdb文件中，待快照数据写入完成后再原子替换旧的rdb文件；\",\"同时发送信号给主进程，通知主进程rdb持久化完成，主进程更新相关的统计信息（info Persitence下的rdb_*相关选项）\"]},\"450\":{\"h\":\"自动触发\",\"t\":[\"在以下4种情况时会自动触发\",\"redis.conf中配置save m n，即在m秒内有n次修改时，自动触发bgsave生成rdb文件；\",\"主从复制时，从节点要从主节点进行全量复制时也会触发bgsave操作，生成当时的快照发送到从节点；\",\"执行 debug reload 命令重新加载 redis 时也会触发bgsave操作；\",\"默认情况下执行shutdown命令时，如果没有开启 aof持久化，那么也会触发bgsave操作\"]},\"451\":{\"h\":\"redis.conf中配置RDB\",\"t\":[\"配置设置自动做快照持久化方式\",\"# 周期性执行条件的设置格式为 save <seconds> <changes> # 默认的设置为： save 900 1 save 300 10 save 60 10000 # 以下设置方式为关闭RDB快照功能 save \\\"\\\" \",\"以上三项默认信息设置代表的意义是：\",\"如果900秒内有1条Key信息发生变化，则进行快照；\",\"如果300秒内有10条Key信息发生变化，则进行快照；\",\"如果60秒内有10000条Key信息发生变化，则进行快照。读者可以按照这个规则，根据自己的实际请求压力进行设置调整\",\"# 文件名称 dbfilename dump.rdb # 文件保存路径 dir /home/work/app/redis/data/ # 如果持久化出错，主进程是否停止写入 stop-writes-on-bgsave-error yes # 是否压缩 rdbcompression yes # 导入时是否检查 rdbchecksum yes \",\"dbfilename： 配置文件名，可以通过执行 config set dir {newDir} 和 config set dbfilename {newFileName} 运行期动态执行，当下次运行时RDB文件会保存到新目录\",\"dir： 可以通过执行 config set dir {newDir} 和 config set dbfilename {newFileName} 运行期动态执行，当下次运行时RDB文件会保存到新目录\",\"压缩： Redis默认采用 LZF算法 对生成的RDB文件做压缩处理，压缩后的文件远远小于内存大小，默认开启，可以通过参数 config set rdbcompression {yes|no} 动态修改。\",\"校验： 如果Redis加载损坏的RDB文件时拒绝启动，这个功能大概会多损失10%左右的性能，但获得了更高的数据可靠性。所以如果您的Redis服务需要追求极致的性能，就可以将这个选项设置为 no\"]},\"452\":{\"h\":\"RDB 的优缺点\",\"t\":[\"优点：\",\"RDB文件是某个时间节点的快照，默认使用LZF算法进行压缩，压缩后的文件体积远远小于内存大小，适用于备份、全量复制等场景\",\"Redis加载RDB文件恢复数据要远远快于AOF方式\",\"缺点：\",\"RDB方式实时性不够，无法做到秒级的持久化；\",\"每次调用bgsave都需要fork子进程，fork子进程属于重量级操作，频繁执行成本较高；\",\"RDB文件是二进制的，没有可读性，AOF文件在了解其结构的情况下可以手动修改或者补全；\",\"版本兼容RDB文件问题\",\"针对RDB不适合实时持久化的问题，Redis提供了 AOF持久化 方式来解决\"]},\"453\":{\"h\":\"AOF 持久化\",\"t\":[\"AOF(append only file)持久化：以独立日志的方式记录每次写命令，重启时再重新执行AOF文件中命令达到恢复数据的目的。\",\"AOF的主要作用是解决了数据持久化的实时性，目前已经是 Redis持久化的主流方式\",\"而AOF日志采用写后日志，即 先写内存，后写日志\",\"a20AVK\",\"Redis要求高性能，采用写日志有两方面好处：\",\"避免额外的检查开销：Redis 在向 AOF 里面记录日志的时候，并不会先去对这些命令进行语法检查。所以，如果先记日志再执行命令的话，日志中就有可能记录了错误的命令，Redis 在使用日志恢复数据时，就可能会出错。\",\"不会阻塞当前的写操作\",\"但这种方式存在潜在风险：\",\"如果命令执行完成，写日志之前宕机了，会丢失数据。\",\"主线程写磁盘压力大，导致写盘慢，阻塞后续操作\"]},\"454\":{\"h\":\"如何实现 AOF\",\"t\":[\"AOF日志记录Redis的每个写命令，步骤分为：命令追加（append）、文件写入（write）和文件同步（sync）\",\"命令追加 当AOF持久化功能打开了，服务器在执行完一个写命令之后，会以协议格式将被执行的写命令追加到服务器的 aof_buf 缓冲区。\",\"文件写入和同步 关于何时将 aof_buf 缓冲区的内容写入AOF文件中，Redis提供了三种写回策略\",\"LATaFC\",\"Always - 同步写回：每个写命令执行完，立马同步地将日志写回磁盘\",\"Everysec(推荐) - 每秒写回：每个写命令执行完，只是先把日志写到AOF文件的内存缓冲区，每隔一秒把缓冲区中的内容写入磁盘\",\"No - 操作系统控制的写回：每个写命令执行完，只是先把日志写到AOF文件的内存缓冲区，由操作系统决定何时将缓冲区内容写回磁盘(不推荐)\"]},\"455\":{\"h\":\"Conf 配置AOF\",\"t\":[\"默认情况下，Redis是没有开启AOF的，可以通过配置redis.conf文件来开启AOF持久化，关于AOF的配置如下：\",\"# appendonly参数开启AOF持久化 appendonly no # AOF持久化的文件名，默认是appendonly.aof appendfilename \\\"appendonly.aof\\\" # AOF文件的保存位置和RDB文件的位置相同，都是通过dir参数设置的 dir ./ # 同步策略 # appendfsync always appendfsync everysec # appendfsync no # aof重写期间是否同步 no-appendfsync-on-rewrite no # 重写触发配置 auto-aof-rewrite-percentage 100 auto-aof-rewrite-min-size 64mb # 加载aof出错如何处理 aof-load-truncated yes # 文件重写策略 aof-rewrite-incremental-fsync yes \",\"以下是Redis中关于AOF的主要配置信息：\",\"appendonly：默认情况下AOF功能是关闭的，将该选项改为yes以便打开Redis的AOF功能。\",\"appendfilename：这个参数项很好理解了，就是AOF文件的名字\",\"appendfsync：这个参数项是AOF功能最重要的设置项之一，主要用于设置操作命令向AOF文件中同步的策略\"]},\"456\":{\"h\":\"RDB和AOF混合方式\",\"t\":[\"Redis 4.0 中提出了一个混合使用 AOF 日志和内存快照的方法。简单来说，内存快照以一定的频率执行，在两次快照之间，使用 AOF 日志记录这期间的所有命令操作\",\"这样一来，快照不用很频繁地执行，这就避免了频繁 fork 对主线程的影响。而且，AOF 日志也只用记录两次快照间的操作，也就是说，不需要记录所有操作了，因此，就不会出现文件过大的情况了，也可以避免重写开销。\",\"如下图所示，T1 和 T2 时刻的修改，用 AOF 日志记录，等到第二次做全量快照时，就可以清空 AOF 日志，因为此时的修改都已经记录到快照中了，恢复时就不再用日志了\",\"yBKz08\",\"这个方法既能享受到 RDB 文件快速恢复的好处，又能享受到 AOF 只记录操作命令的简单优势, 实际环境中用的很多\"]},\"457\":{\"h\":\"参考文档\",\"t\":[\"https://www.cnblogs.com/ybyn/p/14157568.html\",\"https://segmentfault.com/a/1190000015983518\",\"https://blog.csdn.net/qq_41434612/article/details/108791437\",\"https://www.cnblogs.com/liang24/p/14180036.html\",\"https://www.jianshu.com/p/d3ba7b8ad964\",\"https://blog.csdn.net/liupeifeng3514/article/details/79048767\",\"https://www.pdai.tech/md/db/nosql-redis/db-redis-x-rdb-aof.html\"]},\"458\":{\"h\":\"Redis进阶-内存淘汰机制\",\"t\":[\"Redis的用途非常广泛。作为一个高性能的内存数据库，它经常被用于缓存的业务场景。\",\"所谓缓存，即在第一次获取到数据的时候，把它暂存在内存中。这样下次需要这个数据的时候，就直接从内存中取，不用再去查询数据库或调用远程接口，这样可以极大地提高应用程序的性能。\",\"如果缓存中的数据永久存在，那占用的内存就会变得越来越大。而内存是有限的，所以缓存系统需要在需要的时候删除一些不必要的缓存数据以节约内存空间。\",\"Redis提供了两种机制配合来达到上述目的：过期策略和 内存淘汰机制\"]},\"459\":{\"h\":\"Key 过期策略\",\"t\":[\"Redis中大家会对存入的数据设置过期时间，那么这些数据如果过期了，Redis 是怎么样把他们消灭掉的呢？我们一起来探讨一下。下面介绍三种清除策略：\"]},\"460\":{\"h\":\"惰性删除\",\"t\":[\"当访问Key时，才去判断它是否过期，如果过期，直接干掉。这种方式对CPU很友好，但是一个key如果长期不用，一直存在内存里，会造成内存浪费\"]},\"461\":{\"h\":\"定时删除\",\"t\":[\"设置键的过期时间的同时，创建一个定时器，当到达过期时间点，立即执行对Key的删除操作，这种方式最不友好\"]},\"462\":{\"h\":\"定期删除\",\"t\":[\"隔一段时间，对数据进行一次检查，删除里面的过期Key，至于要删除多少过期Key，检查多少数据，则由算法决定。\",\"举个例子方便大家理解：Redis每秒随机取100个数据进行过期检查，删除检查数据中所有已经过期的Key，如果过期的Key占比大于总数的25%，也就是超过25个，再重复上述检查操作\",\"Redis服务器实际使用的是 定期删除+惰性删除 两种策略：通过配合使用这两种删除策略，可以很好地在合理使用CPU和避免浪费内存之间取得平衡\"]},\"463\":{\"h\":\"Redis 内存淘汰机制\",\"t\":[\"Redis内存淘汰机制是指当内存使用达到上限（可通过maxmemory配置，0为不限制，即服务器内存上限），根据一定的算法来决定淘汰掉哪些数据，以保证新数据的存入\",\"# maxmemory <bytes> 配置内存阈值 # maxmemory-policy noeviction \",\"常见的内存淘汰机制分为四大类：\",\"LRU： LRU是Least recently used，最近最少使用的意思，简单的理解就是从数据库中删除最近最少访问的数据，该算法认为，你长期不用的数据，那么被再次访问的概率也就很小了，淘汰的数据为最长时间没有被使用，仅与时间相关\",\"LFU： LFU是Least Frequently Used，最不经常使用的意思，简单的理解就是淘汰一段时间内，使用次数最少的数据，这个与频次和时间相关\",\"TTL： Redis中，有的数据是设置了过期时间的，而设置了过期时间的这部分数据，就是该算法要解决的对象。如果你快过期了，不好意思，我内存现在不够了，反正你也要退休了，提前送你一程，把你干掉吧\",\"随机淘汰： 随机移除某个key\"]},\"464\":{\"h\":\"maxmemory-policy 配置选项\",\"t\":[\"volatile-lru： 找出已经设置过期时间的数据集，将最近最少使用（被访问到）的数据干掉\",\"volatile-ttl： 找出已经设置过期时间的数据集，将即将过期的数据干掉\",\"volatile-random： 找出已经设置过期时间的数据集，进行无差别攻击，随机干掉数据\",\"volatile-lfu： 找出已经设置过期时间的数据集，将一段时间内，使用次数最少的数据干掉\",\"allkeys-lru： 与第1个差不多，数据集从设置过期时间数据变为全体数据\",\"allkeys-lfu： 与第4个差不多，数据集从设置过期时间数据变为全体数据\",\"allkeys-random： 与第3个差不多，数据集从设置过期时间数据变为全体数据\",\"no-enviction： 什么都不干，报错，告诉你内存不足，这样的好处是可以保证数据不丢失，这也是系统默认的淘汰策略\"]},\"465\":{\"h\":\"参考资料\",\"t\":[\"https://juejin.cn/post/6844903953092575246\",\"https://www.cnblogs.com/maguanyue/p/12090414.html\"]},\"466\":{\"h\":\"设计模式 - Overview\",\"t\":[\"提示\",\"设计模式（Design Pattern）是前辈们对代码开发经验的总结，是解决特定问题的一系列套路。它不是语法规定，而是一套用来提高代码可复用性、可维护性、可读性、稳健性以及安全性的解决方案\"]},\"467\":{\"h\":\"为什么要使用设计模式？\",\"t\":[\"使用设计模式的最终目的是 \\\"高内聚低耦合\\\"\",\"代码重用性：相同功能的代码，不多多次编写\",\"代码可读性：编程规范性，便于其他程序员阅读\",\"代码可扩展性：当增加新的功能后，对原来的功能没有影响\"]},\"468\":{\"h\":\"设计模式的七大原则\",\"t\":[\"面向对象的设计模式有七大基本原则：\",\"开闭原则（Open Closed Principle，OCP）\",\"单一职责原则（Single Responsibility Principle, SRP）\",\"里氏代换原则（Liskov Substitution Principle，LSP）\",\"依赖倒转原则（Dependency Inversion Principle，DIP）\",\"接口隔离原则（Interface Segregation Principle，ISP）\",\"合成/聚合复用原则（Composite/Aggregate Reuse Principle，CARP）\",\"最少知识原则（Least Knowledge Principle，LKP）或者迪米特法则（Law of Demeter，LOD）\",\"标记\",\"设计模式原则名称\",\"简单定义\",\"OCP\",\"开闭原则\",\"对扩展开放，对修改关闭\",\"SRP\",\"单一职责原则\",\"一个类只负责一个功能领域中的相应职责\",\"LSP\",\"里氏代换原则\",\"所有引用基类的地方必须能透明地使用其子类的对象\",\"DIP\",\"依赖倒转原则\",\"依赖于抽象，不能依赖于具体实现\",\"ISP\",\"接口隔离原则\",\"类之间的依赖关系应该建立在最小的接口上\",\"CARP\",\"合成/聚合复用原则\",\"尽量使用合成/聚合，而不是通过继承达到复用的目的\",\"LOD\",\"迪米特法则\",\"一个软件实体应当尽可能少的与其他实体发生相互作用\",\"参考资料：如需详细了解七大原则，可以查看👉 万字总结之设计模式七大原则\"]},\"469\":{\"h\":\"23 种设计模式\",\"t\":[\"根据模式是用来完成什么工作来划分，这种方式可分为创建型模式、结构型模式和行为型模式 3 种：\",\"创建型模式： 这类模式提供创建对象的机制， 能够提升已有代码的灵活性和可复用性\",\"结构型模式： 这类模式介绍如何将对象和类组装成较大的结构， 并同时保持结构的灵活和高效\",\"行为型模式： 用于描述类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务，以及怎样分配职责\"]},\"470\":{\"h\":\"一、创建型模式\",\"t\":[\"提示\",\"TODO\"]},\"471\":{\"h\":\"二、结构型模式\",\"t\":[\"结构型 - 装饰器模式(Decorator)\",\"这种设计模式创建了一个装饰类，用来包装原有的类，并在保持类方法签名完整性的前提下，提供了额外的功能\"]},\"472\":{\"h\":\"三、行为型模式\",\"t\":[\"提示\",\"TODO\"]},\"473\":{\"h\":\"参考资料\",\"t\":[\"java全栈知识体系 - 设计模式\",\"C语言中文网 - 设计模式\"]},\"474\":{\"h\":\"结构型 - 装饰器模式(Decorator)\",\"t\":[\"提示\",\"指在不改变现有对象结构的情况下，动态地给该对象增加一些职责（即增加其额外功能）的模式\"]},\"475\":{\"h\":\"装饰器模式介绍\",\"t\":[\"装饰器器的核心就是在 不改变原有类 的基础上给类新增功能\",\"通常情况下，扩展一个类的功能会使用继承方式来实现。但继承具有静态特征，耦合度高，并且随着扩展功能的增多，子类会过多等问题。但是使用装饰器模式会是另外一种思路更为灵活，可以避免继承导致的子类过多\"]},\"476\":{\"h\":\"装饰器的结构\",\"t\":[\"装饰器器主要解决的是直接继承下因功能的不断横向扩展导致子类膨胀的问题，而使用装饰器模式后就会比直接继承显得更加灵活同时这样也就不再需要考虑子类的维护。\",\"这种设计模式创建了一个装饰类，用来包装原有的类，并在保持类方法签名完整性的前提下，提供了额外的功能\",\"装饰器模式主要包含以下角色：\",\"抽象构件（Component）角色：定义一个 抽象接口 以规范准备接收附加责任的对象。\",\"具体构件（ConcreteComponent）角色：实现抽象构件，通过装饰角色为其添加一些职责。\",\"抽象装饰（Decorator）角色：继承抽象构件，并包含具体构件的实例，可以通过其子类扩展具体构件的功能。\",\"具体装饰（ConcreteDecorator）角色：实现抽象装饰的相关方法，并给具体构件对象添加附加的责任。\",\"mark\"]},\"477\":{\"h\":\"装饰器的案例模拟\",\"t\":[\"奶茶店中有各种各样的奶茶，珍珠奶茶、蓝莓奶茶，用户在购买时，店员会问是否要加 布丁、加糖、珍珠等配料，不同的奶茶配不同的材料，价格也不一致，使用装饰器模式设计实现。\",\"定义抽象构件角色（Component）- 奶茶（MilkTea）\",\"public interface MilkTea { /** * 获取最终价格 * * @return 返回价格 */ public abstract double getPrice(); } \",\"定义具体构件（ConcreteComponent）角色 - 珍珠奶茶(PearlTea)\",\"// 珍珠奶茶 public class PearlTea implements MilkTea{ @Override public double getPrice() { return 20.0; } } \",\"蓝莓奶茶(BlueberryTea)\",\"public class BlueberryTea implements MilkTea { @Override public double getPrice() { return 10.0; } } \",\"定义抽象装饰（Decorator）角色 - 配料(Decorator)\",\"public abstract class BatchingDecorator implements MilkTea { protected MilkTea milkTea; } \",\"具体装饰者 - 布丁(Pudding)\",\"public class PuddingDecorator extends BatchingDecorator { public PuddingDecorator(MilkTea milkTea) { this.milkTea = milkTea; } @Override public double getPrice() { return 5.0 + this.milkTea.getPrice(); } } \",\"具体装饰者 - 糖(Sugar)\",\"public class SugarDecorator extends BatchingDecorator { public SugarDecorator(MilkTea milkTea) { this.milkTea = milkTea; } @Override public double getPrice() { return 3.0 + this.milkTea.getPrice(); } } \",\"演示案例\",\"我们去奶茶店买一杯蓝莓奶茶，加糖+加布丁，请问需要多少钱？\",\"public class DecoratorExample { public static void main(String[] args) { // 蓝莓奶茶 MilkTea milkTea = new BlueberryTea(); // 布丁 包装类 milkTea = new PuddingDecorator(milkTea); // 加糖 包装类 milkTea = new SugarDecorator(milkTea); // 总价格 蓝莓10.0 + 布丁5.0 + 糖3.0 = 18.0 System.out.println(milkTea.getPrice()); } } \"]},\"478\":{\"h\":\"装饰器模式的应用场景\",\"t\":[\"装饰器模式通常在以下几种情况使用\",\"当需要给一个现有类添加附加职责，而又不能采用生成子类的方法进行扩充时。例如，该类被隐藏或者该类是终极类或者采用继承方式会产生大量的子类。\",\"当需要通过对现有的一组基本功能进行排列组合而产生非常多的功能时，采用继承关系很难实现，而采用装饰器模式却很好实现。\",\"当对象的功能要求可以动态地添加，也可以再动态地撤销时。\",\"装饰器模式在 Java 中的最著名的应用莫过于 Java I/O 标准库的设计了。例如：\",\"InputStream 的子类 FilterInputStream\",\"OutputStream 的子类 FilterOutputStream\",\"Reader 的子类 BufferedReader 以及 FilterReader\",\"还有 Writer 的子类 BufferedWriter、FilterWriter 以及 PrintWriter 等，它们都是抽象装饰类\",\"如需了解 I/O 类中的装饰器模式，请看👉 Java - I/O 装饰器模式\"]},\"479\":{\"h\":\"参考资料\",\"t\":[\"结构型 - 装饰(Decorator) - Java 全栈知识体系\",\"装饰器模式详解 - C语言中文网\"]},\"480\":{\"h\":\"行为型 - 责任链模式(Chain)\",\"t\":[\"提示\",\"责任链（Chain of Responsibility）模式的定义：为了避免请求发送者与多个请求处理者耦合在一起，于是将所有请求的处理者通过前一对象记住其下一个对象的引用而连成一条链；当有请求发生时，可将请求沿着这条链传递，直到有对象处理它为止\",\"在责任链模式中，客户只需要将请求发送到责任链上即可，无须关心请求的处理细节和请求的传递过程，请求会自动进行传递。所以责任链将请求的发送者和请求的处理者解耦了\"]},\"481\":{\"h\":\"责任链 - 优缺点\",\"t\":[\"责任链模式是一种对象行为型模式，其主要优点如下\",\"降低耦合度。它将请求的发送者和接收者解耦\",\"简化了对象。使得对象不需要知道链的结构\",\"增强给对象指派职责的灵活性。通过改变链内的成员或者调动它们的次序，允许动态地新增或者删除责任\",\"增加新的请求处理类很方便\",\"主要缺点如下\",\"不能保证请求一定被接收\",\"系统性能将受到一定影响，而且在进行代码调试时不太方便，可能会造成循环调用\",\"可能不容易观察运行时的特征，有碍于除错\"]},\"482\":{\"h\":\"责任链模式的结构与实现\"},\"483\":{\"h\":\"责任链模式的结构\",\"t\":[\"抽象处理者（Handler）角色：定义一个处理请求的接口，包含抽象处理方法和一个后继连接。\",\"具体处理者（Concrete Handler）角色：实现抽象处理者的处理方法，判断能否处理本次请求，如果可以处理请求则处理，否则将该请求转给它的后继者。\",\"客户类（Client）角色：创建处理链，并向链头的具体处理者对象提交请求，它不关心处理细节和请求的传递过程。\"]},\"484\":{\"h\":\"代码实现\",\"t\":[\"开发一个流程流转控制器功能，通过配置是否需要自动流转到下一个流程\",\"定义抽象的handler接口\",\"/** * 自动执行器抽象类 */ public abstract class AbstractAutoHandler<S, T> { // 下一个执行器 protected AbstractAutoHandler handler; public void execute(S s) { // 判断是否需要自动执行 if (isAutoExec()) { T t = doExecute(s); //执行下一个自动执行器 if (handler != null) { handler.execute(t); } } } /** * 业务逻辑实现 */ public abstract T doExecute(S s); /** * 是否自动执行 */ public abstract boolean isAutoExec(); } \",\"定义具体实现事项\",\"/** * 审核自动执行器 */ public class ApproveHandler extends AbstractAutoHandler<List<Long>, List<Long>> { public ApproveHandler(@Autowired @Qualifier(\\\"geneHandler\\\") AbstractAutoHandler handler) { this.handler = handler; } @Override public List<Long> doExecute(List<Long> list) { // 业务实现... } @Override public boolean isAutoExec() { // 业务实现... } } \",\"/** * 单据生成自动执行器 */ public class GeneHandler extends AbstractAutoHandler<List<Long>, List<Long>> { public GeneHandler(@Autowired @Qualifier(\\\"confirmHandler\\\") AbstractAutoHandler handler) { this.handler = handler; } @Override public List<Long> doExecute(List<Long> list) { // 业务实现... } @Override public boolean isAutoExec() { // 业务实现... } } \",\"/** * 自动确认执行器 */ public class ConfirmHandler extends AbstractAutoHandler<List<Long>, List<Long>> { public ConfirmHandler() { } @Override public List<Long> doExecute(List<Long> list) { // 业务实现... } @Override public boolean isAutoExec() { // 业务实现... } } \",\"注意：需要在每个具体handler里面执行下一个需要执行的handler，直到最后一个\",\"可以看到我们在构造器中定义的关系强耦合，如果现在我们需要改变顺序或者是新增其他handler，需要改动代码，可扩展性较差\",\"那么我们可以把 beanId 关系维护到数据库中，利用 spring 容器，根据 beanId 获取到每个具体的实例对象\",\"这里就不多演示，有兴趣的可以自己尝试一下\"]},\"485\":{\"h\":\"Activiti7 笔记\"},\"486\":{\"h\":\"一、Activiti7 介绍\",\"t\":[\"Activiti 是一个工作流引擎， activiti 可以将业务系统中复杂的业务流程抽取出来，使用专门的建模语言（BPMN2.0）进行定义，业务系统按照预先定义的流程进行执行，实现了业务系统的业务流程由 activiti 进行管理，减少业务系统由于流程变更进行系统升级改造的工作量，从而提高系统的健壮性，同时也减少了系统开发维护成本。\",\"官方网址：https://www.activiti.org/\",\"文章所使用的的 Activiti7 版本为 7.0.0\"]},\"487\":{\"h\":\"二、Activiti7 使用\"},\"488\":{\"h\":\"业务流程建模\",\"t\":[\"使用Activiti流程建模工具(Activity-designer)定义业务流程(.bpmn文件) - IDE 插件(actiBPM 插件)\",\"bpmn文件就是业务流程定义文件，通过xml定义业务流程\"]},\"489\":{\"h\":\"部署业务流程\",\"t\":[\"向 Activiti 部署业务流程定义(bpmn文件)\",\"使用 Activiti 提供的API向Activiti中部署 bpmn文件\"]},\"490\":{\"h\":\"启动流程实例\",\"t\":[\"启动一个流程实例表示开始一次业务流程的运行，流程定义就好比一个模板，流程实例根据模板创建而来\",\"就好比定义一个 java 类，实例化两个对象一样\"]},\"491\":{\"h\":\"查询待办任务\",\"t\":[\"通过Activiti 提供的 API 就可以查询当前流程执行到哪里了，当前用户需要办理什么任务了，这些 Activiti 都帮我们管理了\"]},\"492\":{\"h\":\"处理待办任务\",\"t\":[\"用户查询待办任务后，就可以办理某个任务，通过 api 完成任务，扭转到下一个节点\"]},\"493\":{\"h\":\"结束流程\",\"t\":[\"当任务办理完成没有下一个任务/结点了，这个流程实例就完成了\"]},\"494\":{\"h\":\"三、集成 Activiti7 环境\",\"t\":[\"提示\",\"Activiti7 生成的表结构详情请查看 Activiti7 表结构\"]},\"495\":{\"h\":\"1. 普通 Maven 项目集成\",\"t\":[\"在项目工程中添加 Activiti7 所需要的一些 Jar 包等，如下：\",\"<properties> <slf4j.version>1.6.6</slf4j.version> <log4j.version>1.2.12</log4j.version> </properties> <dependencies> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-engine</artifactId> <version>7.0.0.Beta1</version> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-spring</artifactId> <version>7.0.0.Beta1</version> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-bpmn-model</artifactId> <version>7.0.0.Beta1</version> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-bpmn-converter</artifactId> <version>7.0.0.Beta1</version> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-json-converter</artifactId> <version>7.0.0.Beta1</version> </dependency> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-bpmn-layout</artifactId> <version>7.0.0.Beta1</version> </dependency> <dependency> <groupId>org.activiti.cloud</groupId> <artifactId>activiti-cloud-services-api</artifactId> <version>7.0.0.Beta1</version> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>5.1.40</version> </dependency> <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.12</version> </dependency> <!-- log start --> <dependency> <groupId>log4j</groupId> <artifactId>log4j</artifactId> <version>${log4j.version}</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> <version>${slf4j.version}</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> <version>${slf4j.version}</version> </dependency> <!-- log end --> <dependency> <groupId>org.mybatis</groupId> <artifactId>mybatis</artifactId> <version>3.4.5</version> </dependency> <dependency> <groupId>commons-dbcp</groupId> <artifactId>commons-dbcp</artifactId> <version>1.4</version> </dependency> </dependencies> \",\"添加 log4j.properties ，我们使用log4j日志包，可以对日志进行配置\",\"# Set root category priority to INFO and its only appender to CONSOLE. #log4j.rootCategory=INFO, CONSOLE debug info warn error fatal log4j.rootCategory=debug, CONSOLE, LOGFILE # Set the enterprise logger category to FATAL and its only appender to CONSOLE. log4j.logger.org.apache.axis.enterprise=FATAL, CONSOLE # CONSOLE is set to be a ConsoleAppender using a PatternLayout. log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} %-6r[%15.15t] %-5p %30.30c %x - %m\\\\n # LOGFILE is set to be a File appender using a PatternLayout. log4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=./activiti.log log4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.PatternLayout log4j.appender.LOGFILE.layout.ConversionPattern=%d{ISO8601} %-6r[%15.15t] %-5p %30.30c %x - %m\\\\n \",\"添加核心配置文件 在resource 目录下添加 activiti.cfg.xml 配置，注意该配置文件名称不能修改\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <beans xmlns=\\\"http://www.springframework.org/schema/beans\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\\\"> <bean class=\\\"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration\\\" id=\\\"processEngineConfiguration\\\"> <property name=\\\"dataSource\\\" ref=\\\"dataSource\\\" /> <!-- activiti数据库表处理策略 false(默认值)：检查数据库的版本和依赖库的版本，如果不匹配就抛出异常 true：构建流程引擎时，执行检查，如果需要就执行更新。如果表不存在，就创建。 create-drop：构建流程引擎时创建数据库报表，关闭流程引擎时就删除这些表。 drop-create：先删除表再创建表。 create：构建流程引擎时创建数据库表，关闭流程引擎时不删除这些表 --> <property name=\\\"databaseSchemaUpdate\\\" value=\\\"true\\\"/> </bean> <bean class=\\\"com.alibaba.druid.pool.DruidDataSource\\\" id=\\\"dataSource\\\"> <property name=\\\"driverClassName\\\" value=\\\"com.mysql.cj.jdbc.Driver\\\" /> <property name=\\\"url\\\" value=\\\"jdbc:mysql:///act_demo?characterEncoding=utf-8&amp;nullCatalogMeansCurrent=true&amp;serverTimezone=UTC\\\" /> <property name=\\\"username\\\" value=\\\"root\\\"/> <property name=\\\"password\\\" value=\\\"admin\\\"/> </bean> </beans> \",\"需要在配置文件中配置如下信息\",\"数据库连接池\",\"Activiti单独运行的ProcessEngine配置\",\"测试 运行以下程序段即可完成 activiti 数据库创建\",\"/** * 生成Activiti的相关的表结构 */ @Test public void test01(){ // 使用classpath下的activiti.cfg.xml中的配置来创建 ProcessEngine对象 ProcessEngine engine = ProcessEngines.getDefaultProcessEngine(); System.out.println(engine); } \"]},\"496\":{\"h\":\"2. SpringBoot 集成\",\"t\":[\"添加依赖 注意事项如下：\",\"添加 activiti 和 SpringBoot 整合的依赖 MyBatis 版本会有冲突，所以需要排除\",\"Activiti7 默认和 Spring Security 集成了\",\"<!--添加activiti和SpringBoot整合的依赖 MyBatis版本会有冲突，所以需要排除--> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-spring-boot-starter</artifactId> <version>7.0.0.SR1</version> <exclusions> <exclusion> <artifactId>mybatis</artifactId> <groupId>org.mybatis</groupId> </exclusion> </exclusions> </dependency> <!--activiti可以绘制流程的的依赖--> <dependency> <groupId>org.activiti</groupId> <artifactId>activiti-image-generator</artifactId> <version>7.0.0.SR1</version> </dependency> \",\"添加 activiti 配置信息\",\"spring: activiti: database-schema-update: true db-history-used: true history-level: full check-process-definitions: false use-strong-uuids: false \",\"配置文件参数说明：\",\"database-schema-update 属性： \",\"flase ：默认值。activiti在启动时，对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常\",\"true ： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建\",\"create_drop ： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）\",\"drop-create ： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）\",\"db-history-used ：检测历史表是否存在 activiti7默认没有开启数据库历史记录,true启动数据库历史记录\",\"history-level ：记录历史等级 可配置的历史级别有none, activity, audit, full \",\"none：不保存任何的历史数据，因此，在流程执行过程中，这是最高效的。\",\"activity：级别高于none，保存流程实例与流程行为，其他数据不保存。\",\"audit：除activity级别会保存的数据外，还会保存全部的流程任务及其属性。audit为history的默认值。\",\"full：保存历史数据的最高级别，除了会保存audit级别的数据外，还会保存其他全部流程相关的细节数据，包括一些流程参数等\",\"check-process-definitions ：校验流程文件，默认校验resources下的processes文件夹里的流程文件\",\"use-strong-uuids ：是否使用UUID作为主键生成策略\"]},\"497\":{\"h\":\"排除Spring Security配置\",\"t\":[\"Activiti7 默认和 Spring Security 集成了, 但是有时候我们的项目中并没有使用, 所以我们需要在项目中排除掉 Spring Security 的自动装配配置, 否则我们的登录页会被覆盖\",\"/** * 启动程序，运行项目，如果在数据库中出现25张act_开头的表说明集成是没问题的 */ @SpringBootApplication(exclude = {DataSourceAutoConfiguration.class, SecurityAutoConfiguration.class, ManagementWebSecurityAutoConfiguration.class}) public class RuoYiApplication { public static void main(String[] args) { SpringApplication.run(RuoYiApplication.class, args); } } \"]},\"498\":{\"h\":\"四、绘制流程图\",\"t\":[\"在resource目录下新建bpmn目录用于存放所有的流程文件 , 在bpmn目录下新建leave.bpmn,内容如下:\",\"OSjcWe\",\"为每个任务结点指定负责人，如部门经理的审核人是李四\",\"xAPWcc\"]},\"499\":{\"h\":\"生成png格式流程图\",\"t\":[\"bpmn文件本质上是xml格式，我们打开看到的是图片格式是因为我们在IDEA中安装了 actiBPM 的插件，如果我们把bpmn文件部署到Web环境,那么就只能看到 xml 信息,无法看到类似上面的图形了\",\"我们可以再部署之前，根据bpmn文件生成png文件，然后把bpmn和png文件同时部署到Web环境中.如果我们想查看流程图的话，我们就可以通过Activiti把这个png文件读取出来. 接下来我们把bpmn导出为png文件\",\"将 leave.bpmn 文件重命名为 leave.xml 文件\",\"OmlsH0\",\"右键点击leave.xml文件 --> Diagrams --> Show BPMN Designer...\",\"Dsxu1M\",\"点击导出按钮,保存在resource/bpmn同级目录下\",\"qRnOIP\",\"导出png之后，把leave.xml更名为leave.bpmn\",\"B2qIUS\"]},\"500\":{\"h\":\"五、流程引擎 Api\",\"t\":[\"在使用 Activiti7 的 Api 之前需要先了解一下 Activiti 中常用的 Service\",\"Service 接口\",\"描述\",\"RepositoryService\",\"activiti 的资源管理类\",\"RuntimeService\",\"activiti 的流程运行管理类\",\"TaskService\",\"activiti 的任务管理类\",\"HistoryService\",\"activiti 的历史管理类\",\"WJHbfH\",\"RepositoryService，是Activiti的资源管理接口，提供了管理和控制流程发布包和流程定义的操作。使用工作流建模工具设计的业务流程图需要使用此Service将流程定义文件的内容部署到计算机中。\",\"RuntimeService，是Activiti的流程运行管理接口，可以从这个接口中获取很多关于流程执行相关的信息。\",\"TaskService，是Activiti的任务管理接口，可以从这个接口中获取任务的信息。\",\"HistoryService，是Activiti的历史管理类，可以查询历史信息，执行流程时，引擎会包含很多数据（根据配置），比如流程实例启动时间，任务的参与者，完成任务的时间，每个流程实例的执行路径，等等。\",\"ManagementService，是Activiti的引擎管理接口，提供了对Activiti流程引擎的管理和维护功能，这些功能不在工作流驱动的应用程序中使用，主要用于Activiti系统的日常维护。\"]},\"501\":{\"h\":\"六、Activiti7 Api 使用\"},\"502\":{\"h\":\"部署流程定义\",\"t\":[\"/** * 实现文件的单个部署 */ @Test public void test01(){ // 1.获取ProcessEngine对象 ProcessEngine defaultProcessEngine = ProcessEngines.getDefaultProcessEngine(); // 2.获取RepositoryService进行部署操作 RepositoryService repositoryService = defaultProcessEngine.getRepositoryService(); // 3.使用RepositoryService进行部署操作 Deployment deploy = repositoryService.createDeployment() .addClasspathResource(\\\"bpmn/leave.bpmn\\\") .addClasspathResource(\\\"bpmn/leave.png\\\") .name(\\\"请假流程\\\") .deploy(); // 4.输出流程部署的信息 System.out.println(\\\"流程部署的id:\\\" + deploy.getId()); System.out.println(\\\"流程部署的名称：\\\" + deploy.getName()); } \",\"部署zip文件 - 将bpmn文件和png文件两个打包为一个zip文件，统一上传\",\"/** * 通过一个zip文件来部署操作 */ @Test public void test02(){ // 定义zip文件的输入流 InputStream inputStream = this.getClass().getClassLoader().getResourceAsStream(\\\"bpmn/evection.zip\\\"); // 对 inputStream 做装饰 ZipInputStream zipInputStream = new ZipInputStream(inputStream); ProcessEngine engine = ProcessEngines.getDefaultProcessEngine(); RepositoryService repositoryService = engine.getRepositoryService(); Deployment deploy = repositoryService.createDeployment() .addZipInputStream(zipInputStream) .name(\\\"请假流程\\\") .deploy(); // 4.输出流程部署的信息 System.out.println(\\\"流程部署的id:\\\" + deploy.getId()); System.out.println(\\\"流程部署的名称：\\\" + deploy.getName()); } \",\"部署流程文件涉及的表结构：\",\"act_ge_bytearray 二进制数据表\",\"act_re_deployment 部署信息表\",\"act_re_procdef 流程定义数据表\"]},\"503\":{\"h\":\"启动流程实例\",\"t\":[\"// 启动一个流程实例 @Test public void test03(){ // 1.创建ProcessEngine对象 ProcessEngine engine = ProcessEngines.getDefaultProcessEngine(); // 2.获取RuntimeService对象 RuntimeService runtimeService = engine.getRuntimeService(); // 3.根据流程定义的id启动流程 String id= \\\"leaveProcess\\\"; ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(id); // 4.输出相关的流程实例信息 System.out.println(\\\"流程定义的ID：\\\" + processInstance.getProcessDefinitionId()); System.out.println(\\\"流程实例的ID：\\\" + processInstance.getId()); System.out.println(\\\"当前活动的ID：\\\" + processInstance.getActivityId()); } \",\"如果该流程定义文件中使用 UEL表达式分配 了负责人，则在启动时需要传入对应的参数，如下：\",\"posPxS\",\"// 启动一个流程实例，带参数 @Test public void test03(){ // 1.创建ProcessEngine对象 ProcessEngine engine = ProcessEngines.getDefaultProcessEngine(); // 2.获取RuntimeService对象 RuntimeService runtimeService = engine.getRuntimeService(); // 3.根据流程定义的id启动流程 String id= \\\"leaveProcess\\\"; // 设置对应的参数 Map<String, Object> variables = new HashMap<String, Object>(); // 设置部门审核人 variables.put(\\\"deptLeader\\\", \\\"张三\\\"); ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(id, variables); // 4.输出相关的流程实例信息 System.out.println(\\\"流程定义的ID：\\\" + processInstance.getProcessDefinitionId()); System.out.println(\\\"流程实例的ID：\\\" + processInstance.getId()); System.out.println(\\\"当前活动的ID：\\\" + processInstance.getActivityId()); } \",\"启动流程实例涉及的表结构：\",\"act_ru_execution - 代表正在执行的流程实例表，如果当期正在执行的流程实例结束以后，该行在这张表中就被删除掉了，所以该表也是一个临时表\",\"act_ru_task - 代表正在执行的任务表,该表是一个临时表，如果当前任务被完成以后，任务在这张表中就被删除掉了\",\"act_hi_actinst - 流程图上出现的每一个元素都称为activity,流程图上正在执行的元素或者已经执行完成的元素称为activity instance\",\"act_hi_procinst - 流程历史表\",\"act_ru_identitylink - 流程的参与用户信息\",\"act_hi_taskinst - 历史任务表\"]},\"504\":{\"h\":\"查找用户任务\",\"t\":[\"流程启动后，任务的负责人就可以查询自己当前能够处理的任务了，查询出来的任务都是当前用户的待办任务\",\"/** * 任务查询 */ @Test public void test06(){ String assignee =\\\"张三\\\"; ProcessEngine engine = ProcessEngines.getDefaultProcessEngine(); // 任务查询 需要获取一个 TaskService 对象 TaskService taskService = engine.getTaskService(); // 根据流程的key和任务负责人 查询任务 List<Task> list = taskService.createTaskQuery() .processDefinitionKey(\\\"leaveProcess\\\") .taskAssignee(assignee) .list(); // 输出当前用户具有的任务 for (Task task : list) { System.out.println(\\\"流程实例id：\\\" + task.getProcessInstanceId()); System.out.println(\\\"任务id:\\\" + task.getId()); System.out.println(\\\"任务负责人：\\\" + task.getAssignee()); System.out.println(\\\"任务名称：\\\" + task.getName()); } } \"]},\"505\":{\"h\":\"处理任务、以及添加批注\",\"t\":[\"@Test public void testAddComment(){ //任务负责人 String assignee = \\\"张三\\\"; //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取TaskService TaskService taskService = processEngine.getTaskService(); //获取任务集合 List<Task> taskList = taskService.createTaskQuery() .processDefinitionKey(\\\"leaveProcess\\\") .taskAssignee(assignee) .list(); //遍历任务列表 for(Task task:taskList){ //在任务执行之前任务添加批注信息: 任务 Id、流程实例 Id、批注信息 taskService.addComment(task.getId(), task.getProcessInstanceId(), task.getName()+\\\"审批通过\\\"); taskService.complete(task.getId()); } } \"]},\"506\":{\"h\":\"查询历史批注信息\",\"t\":[\"@Test public void testSelectHistoryTask(){ //流程实例ID String processInstanceId = \\\"2501\\\"; //任务审核人 String taskAssignee = \\\"张三\\\"; //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取historyService HistoryService historyService = processEngine.getHistoryService(); //获取taskService TaskService taskService = processEngine.getTaskService(); //获取历史审核信息 List<HistoricActivityInstance> list = historyService .createHistoricActivityInstanceQuery() .activityType(\\\"userTask\\\") //只获取用户任务 .processInstanceId(processInstanceId) .taskAssignee(taskAssignee) .finished() .list(); for(HistoricActivityInstance instance:list){ System.out.println(\\\"任务名称:\\\"+instance.getActivityName()); System.out.println(\\\"任务开始时间:\\\"+instance.getStartTime()); System.out.println(\\\"任务结束时间:\\\"+instance.getEndTime()); System.out.println(\\\"任务耗时:\\\"+instance.getDurationInMillis()); //获取审核批注信息 List<Comment> taskComments = taskService.getTaskComments(instance.getTaskId()); if(taskComments.size()>0){ System.out.println(\\\"审批批注:\\\"+taskComments.get(0).getFullMessage()); } } } \",\"涉及的 Api\",\"taskService.addComment - 添加批注 Api\",\"taskService.complete - 完成任务、自动转到下一个节点\"]},\"507\":{\"h\":\"Activiti7 进阶笔记\",\"t\":[\"提示\",\"涉及 流程定义相关、流程实例相关、任务分配、流程变量、任务候选人、网关等操作\"]},\"508\":{\"h\":\"流程定义相关\",\"t\":[\"涉及流程定义信息查询、删除以及对应的资源查询下载等操作\"]},\"509\":{\"h\":\"查询流程定义\",\"t\":[\"@Test public void testDefinitionQuery(){ //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取仓库服务 RepositoryService repositoryService = processEngine.getRepositoryService(); //获取流程定义集合 List<ProcessDefinition> processDefinitionList = repositoryService .createProcessDefinitionQuery() .processDefinitionKey(\\\"leaveProcess\\\") .list(); //遍历集合 for (ProcessDefinition definition:processDefinitionList){ System.out.println(\\\"流程定义ID:\\\"+definition.getId()); System.out.println(\\\"流程定义名称:\\\"+definition.getName()); System.out.println(\\\"流程定义key:\\\"+definition.getKey()); System.out.println(\\\"流程定义版本:\\\"+definition.getVersion()); System.out.println(\\\"流程部署ID:\\\"+definition.getDeploymentId()); System.out.println(\\\"====================\\\"); } } \"]},\"510\":{\"h\":\"删除流程定义\",\"t\":[\"@Test public void testDeleteDeploy(){ //流程部署Id String deploymentId = \\\"10001\\\"; //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取仓库服务 RepositoryService repositoryService = processEngine.getRepositoryService(); //删除流程定义，如果该流程定义已有流程实例启动则删除时出错 repositoryService.deleteDeployment(deploymentId); //设置true 级联删除流程定义，即使该流程有流程实例启动也可以删除，设置为false非级别删除方式，如果流程 //repositoryService.deleteDeployment(deploymentId,true); } \",\"说明：\",\"如果该流程定义下没有正在运行的流程，则可以用普通删除\",\"如果该流程定义下存在已经运行的流程，使用普通删除报错，可用级联删除方法将流程及相关记录全部删除。\",\"项目开发中级联删除操作一般只开放给超级管理员使用.\"]},\"511\":{\"h\":\"流程资源下载\",\"t\":[\"我们的流程资源文件已经上传到数据库了，如果其他用户想要查看这些资源文件，可以从数据库中把资源文件下载到本地\",\"@Test public void testDownloadResource() throws Exception { //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取仓库服务 RepositoryService repositoryService = processEngine.getRepositoryService(); //获取流程定义集合 List<ProcessDefinition> list = repositoryService .createProcessDefinitionQuery() .processDefinitionKey(\\\"leaveProcess\\\") .orderByProcessDefinitionVersion() //按照版本排序 .desc()//降序 .list(); //获取最新那个 ProcessDefinition definition =list.get(0); //获取部署ID String deploymentId = definition.getDeploymentId(); //获取bpmn的输入流 InputStream bpmnInput = repositoryService.getResourceAsStream( deploymentId, definition.getResourceName()); //获取png的输入流 InputStream pngInput = repositoryService.getResourceAsStream( deploymentId, definition.getDiagramResourceName()); //设置bpmn输入 FileOutputStream bpmnOutPut = new FileOutputStream(\\\"D:/leave.bpmn\\\"); //设置png输入 FileOutputStream pngOutPut = new FileOutputStream(\\\"D:/leave.png\\\"); IOUtils.copy(bpmnInput,bpmnOutPut); IOUtils.copy(pngInput,pngOutPut); } \"]},\"512\":{\"h\":\"流程实例相关\",\"t\":[\"提示\",\"流程发起之后，目前设定的部门审批人都是李四，李四在审批之前需要看到申请人申请的时间和申请的理由，才能决定是否同意\",\"那么申请人的请假信息【请假时间、请假理由】是如何绑定到流程中的呢?\",\"此时就需要使用到BusinessKey\"]},\"513\":{\"h\":\"业务标识（BusinessKey）\",\"t\":[\"启动流程实例时，指定的 businessKey 就会在 act_run_execution 表中存储 businessKey。\",\"BusinessKey：业务标识，通常为业务表的主键，业务标识和流程实例一一对应。业务标识来源于业务系统。存储业务标识就是根据业务标识来关联查询业务系统的数据。\",\"比如：请假流程启动一个流程实例，就可以将请假单的id作为业务标识存储到Activiti中，将来查询Activiti的流程实例信息就可以获取请假单的id从而关联查询业务系统数据库得到请假单信息，如下图所示👇\",\"@Test public void testStartProcess(){ String businessKey = \\\"8001\\\"; //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取RuntimeService对象 RuntimeService runtimeService = processEngine.getRuntimeService(); // 设置对应的参数 Map<String, Object> variables = new HashMap<String, Object>(); // 设置部门审核人 variables.put(\\\"deptLeader\\\", \\\"张三\\\"); //根据流程定义的key启动流程实例,这个key是在定义bpmn的时候设置的 //在启动流程的时候将业务key加入进去 ProcessInstance instance = runtimeService .startProcessInstanceByKey(\\\"leaveProcess\\\", businessKey, variables); //获取流程实例的相关信息 System.out.println(\\\"流程定义的id = \\\" + instance.getProcessDefinitionId()); System.out.println(\\\"流程实例的id = \\\" + instance.getId()); } \",\"获取BusinessKey并关联对应的业务信息\",\"//获取任务集合 List<Task> taskList = taskService.createTaskQuery() .processDefinitionKey(\\\"leaveProcess\\\") .taskAssignee(assignee) .list(); //遍历任务列表 for(Task task:taskList){ System.out.println(\\\"流程定义id = \\\" + task.getProcessDefinitionId()); System.out.println(\\\"流程实例id = \\\" + task.getProcessInstanceId()); System.out.println(\\\"任务id = \\\" + task.getId()); System.out.println(\\\"任务名称 = \\\" + task.getName()); //根据任务上的流程实例Id查询出对应的流程实例对象，从流程实例对象中获取BusinessKey ProcessInstance instance = runtimeService .createProcessInstanceQuery() .processInstanceId(task.getProcessInstanceId()) .singleResult(); System.out.println(\\\"业务key:\\\"+instance.getBusinessKey()); System.out.println(\\\"===================\\\"); } \"]},\"514\":{\"h\":\"流程挂起、激活\",\"t\":[\"@Test public void testSuspendAllProcessInstance(){ //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取RepositoryService RepositoryService repositoryService = processEngine.getRepositoryService(); //获取流程定义对象 ProcessDefinition processDefinition = repositoryService .createProcessDefinitionQuery() .processDefinitionKey(\\\"leaveProcess\\\") .singleResult(); boolean suspended = processDefinition.isSuspended(); //输出流程定义状态 System.out.println(\\\"流程定义状态:\\\"+(suspended ?\\\"已挂起\\\":\\\"已激活\\\")); String processDefinitionId = processDefinition.getId(); if(suspended){ //如果是挂起，可以执行激活操作 ,参数1 ：流程定义id ，参数2：是否激活流程实例，参数3：激活时间 repositoryService.activateProcessDefinitionById(processDefinitionId,true,null); System.out.println(\\\"流程ID:\\\"+processDefinitionId+\\\",已激活\\\"); }else{ //如果是激活，可以执行挂起操作 ,参数1 ：流程定义id ，参数2：是否暂停流程实例，参数3：激活时间 repositoryService.suspendProcessDefinitionById(processDefinitionId,true,null); System.out.println(\\\"流程ID:\\\"+processDefinitionId+\\\",已挂起\\\"); } } \",\"操作流程定义为挂起状态，该操作定义下面的所有的流程实例将全部暂停\",\"流程定义为挂起状态，该流程定义下将不允许启动新的流程实例，同时该流程定义下的所有流程实例将全部挂起暂停执行\",\"流程实例挂起、激活\",\"@Test public void testSuspendSingleProcessInstance(){ //流程实例Id String processInstanceId = \\\"2501\\\"; //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取RepositoryService RuntimeService runtimeService = processEngine.getRuntimeService(); //根据流程实例Id获取流程实例对象 ProcessInstance processInstance = runtimeService .createProcessInstanceQuery() .processInstanceId(processInstanceId) .singleResult(); //状态 boolean suspended = processInstance.isSuspended(); System.out.println(\\\"流程实例ID:\\\"+processInstanceId+\\\",状态:\\\"+ (suspended?\\\"已挂起\\\":\\\"已激活\\\")); if(suspended){ runtimeService.activateProcessInstanceById(processInstanceId); System.out.println(\\\"流程实例ID:\\\"+processInstanceId+\\\",状态修改为已激活\\\"); }else{ runtimeService.suspendProcessInstanceById(processInstanceId); System.out.println(\\\"流程实例ID:\\\"+processInstanceId+\\\",状态修改为已挂起\\\"); } } \"]},\"515\":{\"h\":\"任务分配负责人\"},\"516\":{\"h\":\"固定分配\",\"t\":[\"在进行业务流程建模的时候指定固定的任务负责人\",\"ASn38W\"]},\"517\":{\"h\":\"UEL 表达式分配\",\"t\":[\"Activiti 使用 UEL 表达式， UEL 是 java EE6 规范的一部分， UEL（Unified Expression Language）即 统一表达式语言\",\"posPxS\"]},\"518\":{\"h\":\"监听器分配(使用麻烦,极少使用)\",\"t\":[\"任务监听器是发生对应的任务相关事件时执行自定义的Java逻辑或表达式\",\"任务相关事件包括： \",\"Event：\",\"Create：任务创建后触发。\",\"Assignment：任务分配后触发。\",\"Delete：任务完成后触发。\",\"All：所有事件发生都触发。\",\"1. 自定义一个任务监听器类，然后此类必须实现org.activiti.engine.delegate.TaskListener接口\",\"public class MyTaskListener implements TaskListener { @Override public void notify(DelegateTask delegateTask) { //这里指定任务负责人 if (delegateTask.getName().equals(\\\"部门经理审批\\\")) { delegateTask.setAssignee(\\\"赵六\\\"); } else if (delegateTask.getName().equals(\\\"部门经理审批\\\")) { delegateTask.setAssignee(\\\"孙七\\\"); } } } \",\"2. 在bpmn文件中配置监听器\",\"upZLYx\"]},\"519\":{\"h\":\"流程变量\",\"t\":[\"提示\",\"流程变量在Activiti中是一个非常重要的角色，流程运转有时需要靠流程变量，业务系统和Activiti结合时少不了流程变量，流程变量就是Activiti在管理工作流时根据管理需要而设置的变量\",\"比如在请假流程流转时如果 请假天数>3 天则有总经理审批，否则由人事直接审批，请假天数就可以设置流程变量，在流程流转时使用\"]},\"520\":{\"h\":\"流程变量类型\",\"t\":[\"JdYxvc\",\"注意：如果将POJO存储到流程变量中，必须实现序列化接口Serializable，为了防止由于新增字段无法反序列化\"]},\"521\":{\"h\":\"流程变量的作用域\",\"t\":[\"流程变量的作用域范围可以是一个流程实例（ProcessInstance）、一个任务（Task）或一个执行实例（Execution）\",\"global变量 : 流程变量的作用域范围的默认值是流程实例，作用域范围最大。\",\"local变量 : 流程变量的作用域范围如果仅仅针对一个任务或一个执行实例，那么作用域范围没有流程实例大\",\"实际开发中一般不用local变量，了解即可\"]},\"522\":{\"h\":\"流程变量的使用方法\",\"t\":[\"在属性上使用UEL表达式\",\"可以在 assignee 处设置 UEL 表达式，表达式的值为任务的负责人，比如： ${assignee}， assignee 就是一个流程变量名称。\",\"Activiti获取 UEL表达式 的值，即流程变量 assignee 的值 ，将 assignee 的值作为任务的负责人进行任务分配\",\"在连线上使用UEL表达式\",\"可以在连线上设置UEL表达式，决定流程走向。\",\"比如：${price<10000} price就是一个流程变量名称，uel表达式结果类型为布尔类型。\",\"如果UEL表达式是true，要决定 流程执行走向\"]},\"523\":{\"h\":\"使用global变量控制流程\",\"t\":[\"在连线处添加判断条件\",\"eI0vjg\",\"@Test public void testStartProcess(){ //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取RuntimeService对象 RuntimeService runtimeService = processEngine.getRuntimeService(); Map<String,Object> variables = new HashMap<String,Object>(); variables.put(\\\"day\\\",2); //根据流程定义的key启动流程实例,这个key是在定义bpmn的时候设置的 ProcessInstance instance = runtimeService.startProcessInstanceByKey(\\\"leaveVariablesProcess\\\",variables); //获取流程实例的相关信息 System.out.println(\\\"流程定义的id = \\\" + instance.getProcessDefinitionId()); System.out.println(\\\"流程实例的id = \\\" + instance.getId()); } \"]},\"524\":{\"h\":\"执行task 设置流程变量\",\"t\":[\"taskService.setVariable(taskId,variableName,variableValue)\",\"taskId - 任务 ID\",\"variableName - 变量名称\",\"variableValue - 变量实际的值\",\"注意\",\"1.如果UEL表达式中流程变量名不存在则报错。 2.如果如果UEL表达式都不符合条件,流程报错。 3.如果连接不设置条件/条件都满足,每个连线都会走\"]},\"525\":{\"h\":\"任务候选人\",\"t\":[\"在流程定义中在任务结点的 assignee 固定设置任务负责人，在流程定义时将参与者固定设置在.bpmn 文件中，如果临时任务负责人变更则需要修改流程定义，系统可扩展性差。\",\"针对这种情况可以给任务设置多个候选人，可以从候选人中选择参与者来完成任务\"]},\"526\":{\"h\":\"设置任务候选人\",\"t\":[\"在流程图中任务节点的配置中设置 candidate-users(候选人)，多个候选人之间用逗号分开\",\"YywESD\",\"使用 Api 设置候选人\",\"taskService.addCandidateUser(taskId,candidateUser)\",\"taskId： 任务 Id\",\"candidateUser: 候选人\"]},\"527\":{\"h\":\"查询候选人任务\",\"t\":[\"//查询候选任务 @Test public void testSelectCandidateTaskList(){ //任务负责人 String candidateUser = \\\"李四\\\"; //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取TaskService TaskService taskService = processEngine.getTaskService(); //获取任务集合 List<Task> taskList = taskService.createTaskQuery() .processDefinitionKey(\\\"leaveCandidateProcess\\\") .taskCandidateUser(candidateUser) .list(); //遍历任务列表 for(Task task:taskList){ System.out.println(\\\"流程定义id = \\\" + task.getProcessDefinitionId()); System.out.println(\\\"流程实例id = \\\" + task.getProcessInstanceId()); System.out.println(\\\"任务id = \\\" + task.getId()); System.out.println(\\\"任务名称 = \\\" + task.getName()); } } \",\"注意\",\"注意：在 SpringBoot 集成 Activiti7 中，使用该 Api 查询候选人时会抛出异常，异常详细以及解决方案请看 Activiti7 填坑笔记\"]},\"528\":{\"h\":\"领取、完成候选人任务\",\"t\":[\"如果候选任务没有进行领取就直接完成的话，那么在历史记录中就不会记录是哪个用户执行了这个任务\",\"所以对于这种候选人的任务，我们需要先领取再完成\",\"@Test public void testClaimTask(){ //任务ID String taskId = \\\"2505\\\"; String assignee = \\\"张三\\\"; //创建ProcessEngine对象 ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine(); //获取TaskService TaskService taskService = processEngine.getTaskService(); //领取任务 taskService.claim(taskId,assignee); // 完成任务 taskService.complete(taskId); } \"]},\"529\":{\"h\":\"网关相关\"},\"530\":{\"h\":\"排他网关\",\"t\":[\"排他网关(ExclusiveGateway)（异或网关或基于数据的排他网关），用来在流程中实现决策。当流程执行到这个网关的时候，所有分支都会判断条件是否为true，如果为true则执行该分支\",\"fdgdQz\"]},\"531\":{\"h\":\"并行网关\",\"t\":[\"并行网关(InclusiveGateway)允许将流程分成多条分支，也可以把多条分支汇聚到一起，并行网关的功能是基于进入和外出的顺序流的\",\"并行网关不会解析条件。即使顺序流中定义了条件，也会被忽略\",\"J4KD0z\"]},\"532\":{\"h\":\"包含网关\",\"t\":[\"包含网关可以看做是排他网关和并行网关的结合体\",\"bVI3wP\"]},\"533\":{\"h\":\"Activiti7 数据表结构\",\"t\":[\"Activiti7 中25张表的含义\",\"表名\",\"介绍\",\"act_evt_log\",\"流程引擎通用日志表\",\"act_ge_bytearray\",\"二进制表，存储通用的流程资源\",\"act_ge_property\",\"系统存储表，存储整个流程引擎数据，默认存储三条数据\",\"act_hi_actinst\",\"历史节点表\",\"act_hi_attachment\",\"历史附件表\",\"act_hi_comment\",\"历史意见表\",\"act_hi_detail\",\"历史详情表\",\"act_hi_identitylink\",\"历史用户信息表\",\"act_hi_procinst\",\"历史流程实例表\",\"act_hi_taskinst\",\"历史任务实例表\",\"act_hi_varinst\",\"历史变量表\",\"act_procdef_info\",\"流程定义的动态变更信息\",\"act_re_deployment\",\"部署信息表\",\"act_re_model\",\"流程设计实体表\",\"act_re_procdef\",\"流程定义数据表\",\"act_ru_deadletter_job\",\"作业失败表，失败次数>重试次数\",\"act_ru_event_subscr\",\"运行时事件表\",\"act_ru_execution\",\"运行时流程执行实例表\",\"act_ru_identitylink\",\"运行时用户信息表\",\"act_ru_integration\",\"运行时综合表\",\"act_ru_job\",\"作业表\",\"act_ru_suspended_job\",\"作业暂停表\",\"act_ru_task\",\"运行时任务信息表\",\"act_ru_timer_job\",\"运行时定时器表\",\"act_ru_variable\",\"运行时变量表\"]},\"534\":{\"h\":\"1. act_re_deployment ：流程部署表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"部署ID\",\"NAME_\",\"varchar(255)\",\"部署的名字，通过api设置的\",\"CATEGORY_\",\"varchar(255)\",\"分类，通过api设置的\",\"KEY_\",\"varchar(255)\",\"唯一标识，通过api设置的\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\",\"DEPLOY_TIME_\",\"timestamp(3)\",\"部署时间\",\"ENGINE_VERSION_\",\"varchar(255)\",\"版本\"]},\"535\":{\"h\":\"2. act_re_procdef：流程定义表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"流程ID，由流程key:版本:自增ID组成\",\"REV_\",\"int(11)\",\"回退版本\",\"CATEGORY_\",\"varchar(255)\",\"类别，自动生成的\",\"NAME_\",\"varchar(255)\",\"画流程图时的name\",\"KEY_\",\"varchar(255)\",\"画流程图时的ID\",\"VERSION_\",\"int(11)\",\"当前版本\",\"DEPLOYMENT_ID_\",\"varchar(64)\",\"管理流程部署的ID\",\"RESOURCE_NAME_\",\"varchar(4000)\",\"bpmn文件名称\",\"DGRM_RESOURCE_NAME_\",\"varchar(4000)\",\"图片名称\",\"DESCRIPTION_\",\"varchar(4000)\",\"流程描述\",\"HAS_START_FORM_KEY_\",\"tinyint(4)\",\"是否从key启动，0否1是\",\"HAS_GRAPHICAL_NOTATION_\",\"tinyint(4)\",\"SUSPENSION_STATE_\",\"int(11)\",\"是否挂起，1激活 2挂起\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\",\"ENGINE_VERSION_\",\"varchar(255)\",\"所属流程引擎版本\"]},\"536\":{\"h\":\"3. act_procdef_info：流程定义信息表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"唯一ID\",\"PROC_DEF_ID_\",\"varchar(64)\",\"流程定义的ID\",\"REV_\",\"int(11)\",\"回退版本，乐观锁\",\"INFO_JSON_ID_\",\"varchar(64)\",\"流程定义相关json信息的ID\"]},\"537\":{\"h\":\"4. act_re_model：流程模型表\",\"t\":[\"描述：需要通过api来手动操作(Model)\",\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"流程模型ID\",\"REV_\",\"int(11)\",\"回退版本\",\"NAME_\",\"varchar(255)\",\"模型名称\",\"KEY_\",\"varchar(255)\",\"模型key\",\"CATEGORY_\",\"varchar(255)\",\"模型类别\",\"CREATE_TIME_\",\"timestamp(3)\",\"创建时间\",\"LAST_UPDATE_TIME_\",\"timestamp(3)\",\"模型最后一次修改时间\",\"VERSION_\",\"int(11)\",\"当前版本\",\"META_INFO_\",\"varchar(4000)\",\"元信息，可用json存储\",\"DEPLOYMENT_ID_\",\"varchar(64)\",\"关联部署ID\",\"EDITOR_SOURCE_VALUE_ID_\",\"varchar(64)\",\"关联act_ge_bytearray表统一部署下的bpmn资源ID\",\"EDITOR_SOURCE_EXTRA_VALUE_ID_\",\"varchar(64)\",\"关联act_ge_bytearray表统一部署下的png资源ID\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\"]},\"538\":{\"h\":\"5. act_ge_bytearray：二进制资源表\",\"t\":[\"**描述：**通常用于存储流程的bpmn文件和图片文件\",\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"ID\",\"REV_\",\"int(11)\",\"回退版本号\",\"NAME_\",\"varchar(255)\",\"资源名称，和流程定义的name一样\",\"DEPLOYMENT_ID_\",\"varchar(64)\",\"所属流程部署ID\",\"BYTES_\",\"longblob\",\"二进制资源,bpmn或图片等\",\"GENERATED_\",\"tinyint(4)\",\"0为用户生成，1为Activiti生成\"]},\"539\":{\"h\":\"6. act_ge_property：引擎属性表\",\"t\":[\"描述：除了activiti7自带的系统属性，还能自定义添加，然后，通过managementService.getProperties();获取\",\"Field\",\"Type\",\"Comment\",\"NAME_\",\"varchar(64)\",\"key\",\"VALUE_\",\"varchar(300)\",\"value\",\"REV_\",\"int(11)\",\"回退版本\"]},\"540\":{\"h\":\"7. act_ru_execution：运行时执行实例表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"ID\",\"REV_\",\"int(11)\",\"回退版本号\",\"PROC_INST_ID_\",\"varchar(64)\",\"流程实例ID\",\"BUSINESS_KEY_\",\"varchar(255)\",\"关联业务系统的业务key\",\"PARENT_ID_\",\"varchar(64)\",\"父ID，比如执行实例的parentId就是流程实例ID\",\"PROC_DEF_ID_\",\"varchar(64)\",\"所属流程定义ID\",\"SUPER_EXEC_\",\"varchar(64)\",\"ROOT_PROC_INST_ID_\",\"varchar(64)\",\"根流程实例ID\",\"ACT_ID_\",\"varchar(255)\",\"正在活跃的节点ID，节点可认为是事件或任务，ID对应画图时的ID，节点详细信息保存在act_hi_actinst里\",\"IS_ACTIVE_\",\"tinyint(4)\",\"是否激活，1激活，2挂起\",\"IS_CONCURRENT_\",\"tinyint(4)\",\"是否是并行分支，1是0否\",\"IS_SCOPE_\",\"tinyint(4)\",\"IS_EVENT_SCOPE_\",\"tinyint(4)\",\"IS_MI_ROOT_\",\"tinyint(4)\",\"SUSPENSION_STATE_\",\"int(11)\",\"暂停状态，1是0否\",\"CACHED_ENT_STATE_\",\"int(11)\",\"缓存结束状态\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\",\"NAME_\",\"varchar(255)\",\"流程实例名称\",\"START_TIME_\",\"datetime(3)\",\"流程开始时间\",\"START_USER_ID_\",\"varchar(255)\",\"开始于哪个用户\",\"LOCK_TIME_\",\"timestamp(3)\",\"锁住的时间，毫秒\",\"IS_COUNT_ENABLED_\",\"tinyint(4)\",\"是否能够计数\",\"EVT_SUBSCR_COUNT_\",\"int(11)\",\"TASK_COUNT_\",\"int(11)\",\"任务数量\",\"JOB_COUNT_\",\"int(11)\",\"作业数量\",\"TIMER_JOB_COUNT_\",\"int(11)\",\"定时作业数量，activiti自带定时作业功能\",\"SUSP_JOB_COUNT_\",\"int(11)\",\"挂起的作业数量\",\"DEADLETTER_JOB_COUNT_\",\"int(11)\",\"死亡的作业数量\",\"VAR_COUNT_\",\"int(11)\",\"变量的数量\",\"ID_LINK_COUNT_\",\"int(11)\"]},\"541\":{\"h\":\"8. act_ru_identitylink：运行时身份连接表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"ID\",\"REV_\",\"int(11)\",\"回退版本\",\"GROUP_ID_\",\"varchar(255)\",\"候选人组ID\",\"TYPE_\",\"varchar(255)\",\"用户类型，有assignee、candidate、owner、starter、participant。即：受让人,候选人,所有者、起动器、参与者\",\"USER_ID_\",\"varchar(255)\",\"用户ID\",\"TASK_ID_\",\"varchar(64)\",\"任务ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"流程实例ID\",\"PROC_DEF_ID_\",\"varchar(64)\",\"流程定义ID\"]},\"542\":{\"h\":\"9. act_ru_task：运行时任务表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"ID\",\"REV_\",\"int(11)\",\"回退版本\",\"EXECUTION_ID_\",\"varchar(64)\",\"执行实例ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"流程实例ID\",\"PROC_DEF_ID_\",\"varchar(64)\",\"流程定义ID\",\"NAME_\",\"varchar(255)\",\"任务名称\",\"PARENT_TASK_ID_\",\"varchar(64)\",\"父任务ID\",\"DESCRIPTION_\",\"varchar(4000)\",\"任务描述，对应画图时的document。 ps：可以将document的值设置成UEL表达式，动态设置描述，例如待办/已办任务的自定义标题\",\"TASK_DEF_KEY_\",\"varchar(255)\",\"任务的key，画图时任务的id对应\",\"OWNER_\",\"varchar(255)\",\"任务的拥有者\",\"ASSIGNEE_\",\"varchar(255)\",\"任务的办理人\",\"DELEGATION_\",\"varchar(64)\",\"任务委托状态。任务被委托时，为PENDING，委托任务被解决后为RESOLVED\",\"PRIORITY_\",\"int(11)\",\"优先级，默认为50\",\"CREATE_TIME_\",\"timestamp(3)\",\"创建时间\",\"DUE_DATE_\",\"datetime(3)\",\"执行耗时\",\"CATEGORY_\",\"varchar(255)\",\"任务类别\",\"SUSPENSION_STATE_\",\"int(11)\",\"挂起状态，1激活，2挂起\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\",\"FORM_KEY_\",\"varchar(255)\",\"CLAIM_TIME_\",\"datetime(3)\",\"任务被拾取的时间\"]},\"543\":{\"h\":\"10. act_ru_timer_job：运行时定时作业表\",\"t\":[\"描述：存储通过activiti发起的定时作业的信息。\",\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"REV_\",\"int(11)\",\"TYPE_\",\"varchar(255)\",\"LOCK_EXP_TIME_\",\"timestamp(3)\",\"LOCK_OWNER_\",\"varchar(255)\",\"EXCLUSIVE_\",\"tinyint(1)\",\"EXECUTION_ID_\",\"varchar(64)\",\"PROCESS_INSTANCE_ID_\",\"varchar(64)\",\"PROC_DEF_ID_\",\"varchar(64)\",\"RETRIES_\",\"int(11)\",\"EXCEPTION_STACK_ID_\",\"varchar(64)\",\"EXCEPTION_MSG_\",\"varchar(4000)\",\"DUEDATE_\",\"timestamp(3)\",\"REPEAT_\",\"varchar(255)\",\"HANDLER_TYPE_\",\"varchar(255)\",\"HANDLER_CFG_\",\"varchar(4000)\",\"TENANT_ID_\",\"varchar(255)\"]},\"544\":{\"h\":\"11. act_ru_variable：运行时流程变量表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"变量ID\",\"REV_\",\"int(11)\",\"回退版本，乐观锁\",\"TYPE_\",\"varchar(255)\",\"变量类型，如string，int等\",\"NAME_\",\"varchar(255)\",\"变量key\",\"EXECUTION_ID_\",\"varchar(64)\",\"所属执行实例ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"所属流程实例ID\",\"TASK_ID_\",\"varchar(64)\",\"所属任务ID\",\"BYTEARRAY_ID_\",\"varchar(64)\",\"二进制数据ID，如果是流程变量是二进制数据时\",\"DOUBLE_\",\"double\",\"double类型对应的值\",\"LONG_\",\"bigint(20)\",\"long类型对应的值\",\"TEXT_\",\"varchar(4000)\",\"文本类型对应的值\",\"TEXT2_\",\"varchar(4000)\",\"文本类型对应的值\"]},\"545\":{\"h\":\"12. act_ru_suspended_job：运行时挂起的定时作业表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"REV_\",\"int(11)\",\"TYPE_\",\"varchar(255)\",\"EXCLUSIVE_\",\"tinyint(1)\",\"EXECUTION_ID_\",\"varchar(64)\",\"PROCESS_INSTANCE_ID_\",\"varchar(64)\",\"PROC_DEF_ID_\",\"varchar(64)\",\"RETRIES_\",\"int(11)\",\"EXCEPTION_STACK_ID_\",\"varchar(64)\",\"EXCEPTION_MSG_\",\"varchar(4000)\",\"DUEDATE_\",\"timestamp(3)\",\"REPEAT_\",\"varchar(255)\",\"HANDLER_TYPE_\",\"varchar(255)\",\"HANDLER_CFG_\",\"varchar(4000)\",\"TENANT_ID_\",\"varchar(255)\"]},\"546\":{\"h\":\"13. act_ru_job：运行时作业表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"REV_\",\"int(11)\",\"TYPE_\",\"varchar(255)\",\"LOCK_EXP_TIME_\",\"timestamp(3)\",\"LOCK_OWNER_\",\"varchar(255)\",\"EXCLUSIVE_\",\"tinyint(1)\",\"EXECUTION_ID_\",\"varchar(64)\",\"PROCESS_INSTANCE_ID_\",\"varchar(64)\",\"PROC_DEF_ID_\",\"varchar(64)\",\"RETRIES_\",\"int(11)\",\"EXCEPTION_STACK_ID_\",\"varchar(64)\",\"EXCEPTION_MSG_\",\"varchar(4000)\",\"DUEDATE_\",\"timestamp(3)\",\"REPEAT_\",\"varchar(255)\",\"HANDLER_TYPE_\",\"varchar(255)\",\"HANDLER_CFG_\",\"varchar(4000)\",\"TENANT_ID_\",\"varchar(255)\"]},\"547\":{\"h\":\"14. act_ru_integration：运行时积分表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"EXECUTION_ID_\",\"varchar(64)\",\"PROCESS_INSTANCE_ID_\",\"varchar(64)\",\"PROC_DEF_ID_\",\"varchar(64)\",\"FLOW_NODE_ID_\",\"varchar(64)\",\"CREATED_DATE_\",\"timestamp(3)\"]},\"548\":{\"h\":\"15. act_ru_event_subscr：运行时事件订阅表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"ID\",\"REV_\",\"int(11)\",\"回退版本，乐观锁\",\"EVENT_TYPE_\",\"varchar(255)\",\"事件类型\",\"EVENT_NAME_\",\"varchar(255)\",\"事件名称\",\"EXECUTION_ID_\",\"varchar(64)\",\"所属执行实例ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"所属流程实例ID\",\"ACTIVITY_ID_\",\"varchar(64)\",\"所属活跃节点ID\",\"CONFIGURATION_\",\"varchar(255)\",\"配置信息\",\"CREATED_\",\"timestamp(3)\",\"创建时间\",\"PROC_DEF_ID_\",\"varchar(64)\",\"所属流程定义ID\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\"]},\"549\":{\"h\":\"16. act_ru_deadletter_job：运行时死信作业表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"REV_\",\"int(11)\",\"TYPE_\",\"varchar(255)\",\"EXCLUSIVE_\",\"tinyint(1)\",\"EXECUTION_ID_\",\"varchar(64)\",\"PROCESS_INSTANCE_ID_\",\"varchar(64)\",\"PROC_DEF_ID_\",\"varchar(64)\",\"EXCEPTION_STACK_ID_\",\"varchar(64)\",\"EXCEPTION_MSG_\",\"varchar(4000)\",\"DUEDATE_\",\"timestamp(3)\",\"REPEAT_\",\"varchar(255)\",\"HANDLER_TYPE_\",\"varchar(255)\",\"HANDLER_CFG_\",\"varchar(4000)\",\"TENANT_ID_\",\"varchar(255)\"]},\"550\":{\"h\":\"17. act_evt_log：事件日志表\",\"t\":[\"描述：事件日志表，记录activiti引擎级别的事件日志，默认关闭\",\"Field\",\"Type\",\"Comment\",\"LOG_NR_\",\"bigint(20)\",\"TYPE_\",\"varchar(64)\",\"PROC_DEF_ID_\",\"varchar(64)\",\"流程定义ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"流程实例ID\",\"EXECUTION_ID_\",\"varchar(64)\",\"执行实例ID\",\"TASK_ID_\",\"varchar(64)\",\"任务ID\",\"TIME_STAMP_\",\"timestamp(3)\",\"发生时间戳\",\"USER_ID_\",\"varchar(255)\",\"用户ID\",\"DATA_\",\"longblob\",\"事件json数据\",\"LOCK_OWNER_\",\"varchar(255)\",\"LOCK_TIME_\",\"timestamp(3)\",\"IS_PROCESSED_\",\"tinyint(4)\"]},\"551\":{\"h\":\"18. act_hi_actinst：历史活动信息表\",\"t\":[\"**描述：**记录流程流转过的所有节点信息\",\"这里记录流程流转过的所有节点，与HI_TASKINST不同的是，taskinst只记录usertask内容\",\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"活动ID\",\"PROC_DEF_ID_\",\"varchar(64)\",\"所属流程定义ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"所属流程实例ID\",\"EXECUTION_ID_\",\"varchar(64)\",\"所属执行实例ID\",\"ACT_ID_\",\"varchar(255)\",\"活动ID\",\"TASK_ID_\",\"varchar(64)\",\"任务ID，其他活动类型实例ID在这里为空\",\"CALL_PROC_INST_ID_\",\"varchar(64)\",\"调用外部流程的流程实例ID\",\"ACT_NAME_\",\"varchar(255)\",\"活动名称\",\"ACT_TYPE_\",\"varchar(255)\",\"活动类型startEvent、userTask\",\"ASSIGNEE_\",\"varchar(255)\",\"任务办理人\",\"START_TIME_\",\"datetime(3)\",\"活动开始时间\",\"END_TIME_\",\"datetime(3)\",\"活动结束时间\",\"DURATION_\",\"bigint(20)\",\"耗时时间(毫秒)\",\"DELETE_REASON_\",\"varchar(4000)\",\"删除原因\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\"]},\"552\":{\"h\":\"19. act_hi_attachment：历史流程附件表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"附件ID\",\"REV_\",\"int(11)\",\"回退版本，做乐观锁用\",\"USER_ID_\",\"varchar(255)\",\"用户ID\",\"NAME_\",\"varchar(255)\",\"附件名称\",\"DESCRIPTION_\",\"varchar(4000)\",\"描述\",\"TYPE_\",\"varchar(255)\",\"附件类型\",\"TASK_ID_\",\"varchar(64)\",\"所属任务ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"所属流程实例ID\",\"URL_\",\"varchar(4000)\",\"附件地址url\",\"CONTENT_ID_\",\"varchar(64)\",\"内容Id，内容保存在二进制资源表中\",\"TIME_\",\"datetime(3)\",\"创建时间\"]},\"553\":{\"h\":\"20. act_hi_comment：历史审批意见表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"ID\",\"TYPE_\",\"varchar(255)\",\"类型有event(事件)、comment(意见)，默认comment\",\"TIME_\",\"datetime(3)\",\"创建时间\",\"USER_ID_\",\"varchar(255)\",\"用户Id\",\"TASK_ID_\",\"varchar(64)\",\"任务ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"流程实例ID\",\"ACTION_\",\"varchar(255)\",\"行为类型，有AddUserLink、DeleteUserLink、AddGroupLink、DeleteGroupLink、AddComment、AddAttachment、DeleteAttachment\",\"MESSAGE_\",\"varchar(4000)\",\"用于存放流程产生的信息，比如审批意见\",\"FULL_MSG_\",\"longblob\",\"全部消息\"]},\"554\":{\"h\":\"21. act_hi_detail：历史详情表\",\"t\":[\"描述：提供历史变量的查询\",\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"TYPE_\",\"varchar(255)\",\"PROC_INST_ID_\",\"varchar(64)\",\"EXECUTION_ID_\",\"varchar(64)\",\"TASK_ID_\",\"varchar(64)\",\"ACT_INST_ID_\",\"varchar(64)\",\"NAME_\",\"varchar(255)\",\"VAR_TYPE_\",\"varchar(255)\",\"REV_\",\"int(11)\",\"TIME_\",\"datetime(3)\",\"BYTEARRAY_ID_\",\"varchar(64)\",\"DOUBLE_\",\"double\",\"LONG_\",\"bigint(20)\",\"TEXT_\",\"varchar(4000)\",\"TEXT2_\",\"varchar(4000)\"]},\"555\":{\"h\":\"22. act_hi_identitylink：历史身份连接表\",\"t\":[\"**描述：**相同字段含义和运行时身份连接表一样\",\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"id\",\"GROUP_ID_\",\"varchar(255)\",\"组ID\",\"TYPE_\",\"varchar(255)\",\"用户类型，有assignee、candidate、owner、starter、participant。即：受让人,候选人,所有者、起动器、参与者\",\"USER_ID_\",\"varchar(255)\",\"用户ID\",\"TASK_ID_\",\"varchar(64)\",\"任务ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"流程实例ID\"]},\"556\":{\"h\":\"23. act_hi_procinst：历史流程实例表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"唯一ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"流程实例ID\",\"BUSINESS_KEY_\",\"varchar(255)\",\"关联业务系统的key，一般为【流程定义key:表单ID】 的形式\",\"PROC_DEF_ID_\",\"varchar(64)\",\"流程定义ID\",\"START_TIME_\",\"datetime(3)\",\"流程实例开始时间\",\"END_TIME_\",\"datetime(3)\",\"流程实例结束时间\",\"DURATION_\",\"bigint(20)\",\"总耗时(毫秒)\",\"START_USER_ID_\",\"varchar(255)\",\"开始用户ID\",\"START_ACT_ID_\",\"varchar(255)\",\"开始节点ID\",\"END_ACT_ID_\",\"varchar(255)\",\"结束节点ID\",\"SUPER_PROCESS_INSTANCE_ID_\",\"varchar(64)\",\"上级流程实例ID\",\"DELETE_REASON_\",\"varchar(4000)\",\"删除原因\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\",\"NAME_\",\"varchar(255)\",\"流程实例名称\"]},\"557\":{\"h\":\"24. act_hi_taskinst：历史任务表\",\"t\":[\"描述: 记录历史和正在进行的任务\",\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"唯一ID\",\"PROC_DEF_ID_\",\"varchar(64)\",\"流程定义ID\",\"TASK_DEF_KEY_\",\"varchar(255)\",\"任务的ID，画图时的ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"所属流程实例ID\",\"EXECUTION_ID_\",\"varchar(64)\",\"所属执行实例ID\",\"NAME_\",\"varchar(255)\",\"任务名称\",\"PARENT_TASK_ID_\",\"varchar(64)\",\"父任务ID\",\"DESCRIPTION_\",\"varchar(4000)\",\"任务描述\",\"OWNER_\",\"varchar(255)\",\"任务拥有者\",\"ASSIGNEE_\",\"varchar(255)\",\"任务办理人\",\"START_TIME_\",\"datetime(3)\",\"任务开始时间\",\"CLAIM_TIME_\",\"datetime(3)\",\"任务被拾取时间\",\"END_TIME_\",\"datetime(3)\",\"任务结束时间\",\"DURATION_\",\"bigint(20)\",\"总耗时(毫秒)\",\"DELETE_REASON_\",\"varchar(4000)\",\"删除原因\",\"PRIORITY_\",\"int(11)\",\"优先级\",\"DUE_DATE_\",\"datetime(3)\",\"办理时间\",\"FORM_KEY_\",\"varchar(255)\",\"CATEGORY_\",\"varchar(255)\",\"任务分类\",\"TENANT_ID_\",\"varchar(255)\",\"租户ID\"]},\"558\":{\"h\":\"25. act_hi_varinst：历史流程变量表\",\"t\":[\"Field\",\"Type\",\"Comment\",\"ID_\",\"varchar(64)\",\"唯一ID\",\"PROC_INST_ID_\",\"varchar(64)\",\"所属流程实例ID\",\"EXECUTION_ID_\",\"varchar(64)\",\"执行实例ID\",\"TASK_ID_\",\"varchar(64)\",\"所属任务ID\",\"NAME_\",\"varchar(255)\",\"变量名\",\"VAR_TYPE_\",\"varchar(100)\",\"变量类型\",\"REV_\",\"int(11)\",\"回退版本，用于activiti的乐观锁操作\",\"BYTEARRAY_ID_\",\"varchar(64)\",\"关联字节数组资源的ID\",\"DOUBLE_\",\"double\",\"小数类型的值放这\",\"LONG_\",\"bigint(20)\",\"整数类型的值放这\",\"TEXT_\",\"varchar(4000)\",\"文本类型的值放这\",\"TEXT2_\",\"varchar(4000)\",\"文本类型的值放这\",\"CREATE_TIME_\",\"datetime(3)\",\"创建时间\",\"LAST_UPDATED_TIME_\",\"datetime(3)\",\"最后更改时间\"]},\"559\":{\"h\":\"Activiti7 填坑笔记\",\"t\":[\"提示\",\"该文章记录一下使用 Activiti7 时所遇到的一些异常或者坑\"]},\"560\":{\"h\":\"Error: UsernameNotFoundException\",\"t\":[\"环境：SpringBoot 集成 Activiti7\",\"Activiti7 版本：7.0.0\"]},\"561\":{\"h\":\"异常原因\",\"t\":[\"Activiti7 默认和Spring Security集成了，当我们的项目中不需要Spring Security时，需要排除Spring Security配置，但是 Activiti7 在代码中强耦合了SpringScurity，所以我们在使用 activiti 的 Api 查询候选人任务时会遇到异常\",\"taskService.taskCandidateUser(candidateUser); \",\"Caused by: org.springframework.security.core.userdetails.UsernameNotFoundException: XX\",\"该 Api 会调用 SpringScurity 中的 UserDetailsService 类型的bean中的 loadUserByUsername 方法.然后是找不到的,所以报错了\"]},\"562\":{\"h\":\"解决方案\",\"t\":[\"写一个类实现 UserDetailsService 然后重写 loadUserByUsername 方法\",\"@Component public class SelfUserDetailsServiceImpl implements UserDetailsService { @Override public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException { return new User(username,\\\"\\\", Collections.emptyList()); } } \"]},\"563\":{\"h\":\"Activiti7 常用 Api\",\"t\":[\"提示\",\"记录一下常用的 Api 使用\"]},\"564\":{\"h\":\"一、流程定义相关 Api\",\"t\":[\"以下 Api 跟流程定义相关\"]},\"565\":{\"h\":\"根据流程定义 Key查询流程\",\"t\":[\"public ProcessDefinition selectProcessDefinitionByKey(String definitionKey) { List<ProcessDefinition> processDefinitions = repositoryService.createProcessDefinitionQuery() .processDefinitionKey(definitionKey) .orderByProcessDefinitionVersion() .desc() .list(); ProcessDefinition processDefinition = null; if (processDefinitions.size() > 0) { processDefinition = processDefinitions.get(0); } return processDefinition; } \",\"Api 说明：\",\"根据部署版本倒序排序，获取所有流程部署信息，取最新的数据\"]},\"566\":{\"h\":\"根据部署 Id 查询流程\",\"t\":[\"public ProcessDefinition selectProcessDefinitionByDeploymentId(String deploymentId) { return repositoryService.createProcessDefinitionQuery() .deploymentId(deploymentId) .singleResult(); } \"]},\"567\":{\"h\":\"获取流程 XML 文件\",\"t\":[\"public InputStream getResourceAsStream(String deploymentId, String resourceName) { return repositoryService.getResourceAsStream(deploymentId, resourceName); } \",\"参数说明： 参数都从流程定义中获取 processDefinition\",\"deploymentId - 流程部署 ID\",\"resourceName - 资源名称\"]},\"568\":{\"h\":\"获取当前流程的流程图(高亮显示)\",\"t\":[\"public InputStream getProcessImage(String processDefinitionId, List<String> highLightedActivities, List<String> highLightedFlows) { BpmnModel model = repositoryService.getBpmnModel(processDefinitionId); ProcessDiagramGenerator generator = new DefaultProcessDiagramGenerator(); //generateDiagram(流程模型,需要高亮的节点,需要高亮的线条,后面三个参数都表示是字体) InputStream inputStream = generator.generateDiagram(model, highLightedActivities, highLightedFlows, \\\"宋体\\\", \\\"宋体\\\", \\\"宋体\\\"); return inputStream; } \",\"参数说明：\",\"highLightedActivities - 需要高亮的节点列表，存节点 ID\",\"highLightedFlows - 需要高亮的连线，存连线 ID\",\"如果流程中有中文，需要传入能识别中文的字体，例如：宋体\"]},\"569\":{\"h\":\"获取流程中的所有节点信息\",\"t\":[\"public void findUserTaskNode() { // 获取流程信息，获取方法查看上面👆提得到的 Api ProcessDefinition processDefinition = selectProcessDefinitionByKey(\\\"XXXKey\\\"); BpmnModel model = repositoryService.getBpmnModel(processDefinition.getId()); if (model != null) { // 获取所有节点信息 Collection<FlowElement> flowElements = model.getMainProcess().getFlowElements(); // 查找指定 UserTask 类型的节点 for (FlowElement e : flowElements) { // 判断节点类型 if (e instanceof UserTask) { // 审批人 String sp1 = ((UserTask) e).getAssignee(); // 候选人 List<String> sp2 = ((UserTask) e).getCandidateUsers(); } } } } \",\"Api 说明：\",\"可以获取节点的 ID、名称、负责人、候选人等信息\"]},\"570\":{\"h\":\"二、流程实例相关 Api\",\"t\":[\"以下 Api 跟流程实例相关\"]},\"571\":{\"h\":\"获取流程实例\",\"t\":[\"public ProcessInstance getProcessInstanceById(String processInstanceId) { return runtimeService.createProcessInstanceQuery() .processInstanceId(processInstanceId) .singleResult(); } \"]},\"572\":{\"h\":\"删除流程实例\",\"t\":[\"/** * 删除部署的流程实例 * * @param instanceId 流程实例ID * @param deleteReason 删除原因，可为空 */ public void deleteProcIns(String instanceId, String deleteReason) { runtimeService.deleteProcessInstance(instanceId, deleteReason); } \"]},\"573\":{\"h\":\"根据流程实例获取目前活动节点\",\"t\":[\"public List<String> getActiveActivityIds(String processInstanceId) { return runtimeService.getActiveActivityIds(processInstanceId); } \"]},\"574\":{\"h\":\"获取历史流程实例\",\"t\":[\"public HistoricProcessInstance getHistoricProcessInstanceById(String processInstanceId) { return historyService .createHistoricProcessInstanceQuery() .processInstanceId(processInstanceId) .singleResult(); } \"]},\"575\":{\"h\":\"获取历史批注信息\",\"t\":[\"public String getTaskComments(String taskId) { List<Comment> taskComments = taskService.getTaskComments(taskId); if (taskComments == null) { return \\\"暂无批注\\\"; } return taskComments.stream() .map(Comment::getFullMessage) .collect(Collectors.joining(\\\";\\\")); } \"]},\"576\":{\"h\":\"获取流程实例的历史任务\",\"t\":[\"public List<HistoricActivityInstance> selectHistoryTaskList(String instanceId) { return historyService.createHistoricActivityInstanceQuery() .processInstanceId(instanceId) .activityType(\\\"userTask\\\") .finished() .orderByHistoricActivityInstanceStartTime() .desc() .list(); } \",\"参数说明：\",\"instanceId - 流程实例 ID\",\"activityType - 节点类型\",\"finished - 已完成\",\"根据创建时间排序\"]},\"577\":{\"h\":\"三、查询任务相关 Api\",\"t\":[\"以下 API 跟 Task 任务有关\"]},\"578\":{\"h\":\"根据流程实例 ID 查询当前 Task\",\"t\":[\"public List<Task> getTaskByInstanceId(String instanceId) { return taskService.createTaskQuery().processInstanceId(instanceId).List(); } \"]},\"579\":{\"h\":\"Task 添加候选人\",\"t\":[\"public void addCandidateUser(String taskId, String candidateUser) { taskService.addCandidateUser(taskId, candidateUser); } \"]},\"580\":{\"h\":\"查询候选人待办任务\",\"t\":[\"public List<Task> selectTodoTaskList(String definitionKey, String candidateUser) { return taskService.createTaskQuery() .processDefinitionKey(definitionKey) .taskCandidateUser(candidateUser) .orderByTaskCreateTime() .desc() .listPage(); } \",\"参数说明：\",\"definitionKey - 流程定义 Key\",\"candidateUser - 候选人\",\"根据 task 创建时间排序\"]},\"581\":{\"h\":\"根据 TaskId 获取 Task\",\"t\":[\"public Task getTaskByTaskId(String taskId) { return taskService.createTaskQuery().taskId(taskId).singleResult(); } \"]},\"582\":{\"h\":\"领取任务以及完成任务添加批注\",\"t\":[\"public void claimAndComplateTask(Task task, String userId, boolean auditStatusBoolean, String commentStr) { String taskId = task.getId(); // 如果候选任务没有进行领取就直接完成的话，那么在历史记录中就不会记录是哪个用户执行了这个任务. taskService.claim(taskId, userId); // 添加批注 taskService.addComment(taskId, task.getProcessInstanceId(), commentStr); // 添加流程变量 taskService.setVariable(taskId, task.getTaskDefinitionKey(), auditStatusBoolean); // 完成任务 taskService.complete(taskId); } \"]},\"583\":{\"h\":\"Task 添加流程变量\",\"t\":[\"public void setVariable(String taskId, String variableName, Object variableValue) { taskService.setVariable(taskId, variableName, variableValue); } \"]},\"584\":{\"h\":\"查询用户已办任务列表\",\"t\":[\"public List<HistoricTaskInstance> selectDoneTaskList(String definitionKey, String userId) { return historyService .createHistoricTaskInstanceQuery() .processDefinitionKey(definitionKey) .taskAssignee(userId) .finished() .orderByHistoricTaskInstanceEndTime() .desc() .list(); } \",\"参数说明:\",\"definitionKey - 流程定义 Key\",\"userId - 哪个用户的已办\",\"finished - 状态已完成\",\"根据完成时间排序\"]},\"585\":{\"h\":\"golang基础 - 反射机制\",\"t\":[\"和 Java 语言一样，Go 也实现运行时反射，这为我们提供一种可以在运行时操作任意类型对象的能力。\",\"在 go 语言中，实现反射能力的是 reflect包，能够让程序操作不同类型的对象。其中，在反射包中有两个非常重要的 类型和 函数，两个函数分别是：\",\"reflect.TypeOf - 能获取对象的类型的信息\",\"reflect.ValueOf - 能获取对象的数据\",\"两个类型是 reflect.Type 和 reflect.Value，它们与函数是一一对应的关系：\",\"6hzQxX\"]},\"586\":{\"h\":\"golang 反射注意\",\"t\":[\"提示\",\"golang 反射不能获取和修改 私有的属性以及方法\",\"*ValueOf(ptr) 方法传递的参数必须是 指针类型 才可以修改字段否则会报错\"]},\"587\":{\"h\":\"Type 和 TypeOf\",\"t\":[\"reflect.Type 类型是一个接口类型，内部指定了若干方法，通过这些方法我们可以获取到反射类型的各种信息，例如：字段、方法等\",\"使用 reflect.TypeOf() 函数可以获取将任意值的类型对象 (reflect.Type)，程序通过类型对象可以访问任意值的类型信息\"]},\"588\":{\"h\":\"1. 理解 Type 和 种类 Kind\",\"t\":[\"reflect.Type 是变量的类型，而不是追根溯源的最底层类型\",\"type MyInt int reflect.TypeOf(MyInt).Kind() \",\"这里的 reflect.Type 就是 MyInt，而非 int，如果想获得 int 只能使用Kind()\",\"总结：Type 表示的是静态类型，而 kind 表示的是底层真实的类型\"]},\"589\":{\"h\":\"2. 获取类型名以及 kind\",\"t\":[\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) // 定义一个 MyInt 类型 type MyInt int func main() { // 声明一个空结构体 type cat struct { } // 获取结构体实例的反射类型对象 typeOfCat := reflect.TypeOf(cat{}) // 显示反射类型对象的名称和种类 fmt.Println(typeOfCat.Name(), typeOfCat.Kind()) // 获取Zero常量的反射类型对象 typeOfA := reflect.TypeOf(Zero) // 显示反射类型对象的名称和种类 fmt.Println(typeOfA.Name(), typeOfA.Kind()) } \",\"代码输出如下：\",\"cat struct\",\"MyInt int\"]},\"590\":{\"h\":\"3. Type 常用方法\",\"t\":[\"获取与成员相关的方法如下：\",\"方法\",\"描述\",\"Field(i int) StructField\",\"根据索引，返回索引对应的结构体字段的信息。当值不是结构体或索引超界时发生宕机\",\"NumField() int\",\"返回结构体成员字段数量(包含私有字段)\",\"FieldByName(name string) (StructField, bool)\",\"根据给定字符串返回字符串对应的结构体字段的信息。没有找到时 bool 返回 false\",\"FieldByIndex(index []int) StructField\",\"多层成员访问时，根据 []int 提供的每个结构体的字段索引，返回字段的信息。没有找到时返回零值\",\"StructField结构，这个结构描述结构体的成员信息，通过这个信息可以获取成员与结构体的关系，如偏移、索引、是否为匿名字段、结构体标签（Struct Tag）等\",\"type StructField struct { Name string // 字段名 PkgPath string // 字段路径 Type Type // 字段反射类型对象 Tag StructTag // 字段的结构体标签 Offset uintptr // 字段在结构体中的相对偏移 Index []int // Type.FieldByIndex中的返回的索引值 Anonymous bool // 是否为匿名字段 } \"]},\"591\":{\"h\":\"4. 获取成员反射信息\",\"t\":[\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) func main() { // 声明一个空结构体 type cat struct { Name string // 带有结构体tag的字段 Type int `json:\\\"type\\\" id:\\\"100\\\"` } // 创建cat的实例 ins := cat{Name: \\\"mimi\\\", Type: 1} // 获取结构体实例的反射类型对象 typeOfCat := reflect.TypeOf(ins) // 遍历结构体所有成员 for i := 0; i < typeOfCat.NumField(); i++ { // 获取每个成员的结构体字段类型 fieldType := typeOfCat.Field(i) // 输出成员名和tag fmt.Printf(\\\"name: %v tag: '%v'\\\\n\\\", fieldType.Name, fieldType.Tag) } // 通过字段名, 找到字段类型信息 if catType, ok := typeOfCat.FieldByName(\\\"Type\\\"); ok { // 从tag中取出需要的tag fmt.Println(catType.Tag.Get(\\\"json\\\"), catType.Tag.Get(\\\"id\\\")) } } \"]},\"592\":{\"h\":\"5. 通过类型信息创建实例\",\"t\":[\"当已知 reflect.Type 时，可以动态地创建这个类型的实例，实例的类型为指针\",\"func main() { var a int // 取变量a的反射类型对象 typeOfA := reflect.TypeOf(a) // 根据反射类型对象创建类型实例 aIns := reflect.New(typeOfA) // 输出：*int ptr fmt.Println(aIns.Type(), aIns.Kind()) } \"]},\"593\":{\"h\":\"Value 和 ValueOf\",\"t\":[\"reflect.Value 类型是一个结构体，封装了反射对象的值，内部若干方法，可以通过这些方法来获取和修改对象的值，使用 reflect.ValueOf 函数可以返回 Value 类型，value 类型还可以生成原始类型对象\"]},\"594\":{\"h\":\"1. 生成原始类型的对象\",\"t\":[\"可以通过下面几种方法从反射值对象 reflect.Value 中获取原值\",\"方法名\",\"说 明\",\"Interface() interface {}\",\"将值以 interface{} 类型返回，可以通过类型断言转换为指定类型\",\"Int() int64\",\"将值以 int 类型返回，所有有符号整型均可以此方式返回\",\"Uint() uint64\",\"将值以 uint 类型返回，所有无符号整型均可以此方式返回\",\"Float() float64\",\"将值以双精度（float64）类型返回，所有浮点数（float32、float64）均可以此方式返回\",\"Bool() bool\",\"将值以 bool 类型返回\",\"Bytes() []bytes\",\"将值以字节数组 []bytes 类型返回\",\"String() string\",\"将值以字符串类型返回\",\"代码演示如下👇\",\"func main() { // 声明整型变量a并赋初值 var a int = 1024 // 获取变量a的反射值对象 valueOfA := reflect.ValueOf(a) // 获取interface{}类型的值, 通过类型断言转换 var getA int = valueOfA.Interface().(int) // 获取64位的值, 强制类型转换为int类型 var getA2 int = int(valueOfA.Int()) fmt.Println(getA, getA2) } \"]},\"595\":{\"h\":\"2. 操作结构体成员的值\",\"t\":[\"反射值对象（reflect.Value）提供对结构体访问的方法，通过这些方法可以完成对结构体任意值的访问，方法列表参考 Type 常用方法\",\"修改成员的值 使用 reflect.Value 对包装的值进行修改时，需要遵循一些规则。如果该对象不可寻址或者成员是私有的，则无法修改对象值\",\"判定是否可以操作的方法有如下👇\",\"方法名\",\"描 述\",\"Elem() Value\",\"取值指向的元素值，类似于语言层*操作。当值类型不是指针或接口时发生宕 机，空指针时返回 nil 的 Value\",\"Addr() Value\",\"对可寻址的值返回其地址，类似于语言层&操作。当值不可寻址时发生宕机\",\"CanAddr() bool\",\"表示值是否可寻址\",\"CanSet() bool\",\"返回值能否被修改。要求值可寻址且是导出的字段\",\"修改的方法如下👇\",\"Set(x Value)\",\"将值设置为传入的反射值对象的值\",\"Setlnt(x int64)\",\"使用 int64 设置值。当值的类型不是 int、int8、int16、 int32、int64 时会发生宕机\",\"SetUint(x uint64)\",\"使用 uint64 设置值。当值的类型不是 uint、uint8、uint16、uint32、uint64 时会发生宕机\",\"SetFloat(x float64)\",\"使用 float64 设置值。当值的类型不是 float32、float64 时会发生宕机\",\"SetBool(x bool)\",\"使用 bool 设置值。当值的类型不是 bod 时会发生宕机\",\"SetBytes(x []byte)\",\"设置字节数组 []bytes值。当值的类型不是 []byte 时会发生宕机\",\"SetString(x string)\",\"设置字符串值。当值的类型不是 string 时会发生宕机\",\"代码案例如下\",\"func main() { type dog struct { LegCount int age int } // 获取dog实例地址的反射值对象 valueOfDog := reflect.ValueOf(&dog{}) // 取出dog实例地址的元素 valueOfDog = valueOfDog.Elem() // 获取legCount字段的值 vLegCount := valueOfDog.FieldByName(\\\"LegCount\\\") vAge := valueOfDog.FieldByName(\\\"age\\\") // 尝试设置legCount的值 vLegCount.SetInt(4) // 这里会报错 vAge.SetInt(4) fmt.Println(vLegCount.Int()) } \"]},\"596\":{\"h\":\"通过反射调用函数\",\"t\":[\"如果反射值对象（reflect.Value）中值的类型为函数时，可以通过 reflect.Value 调用该函数，使用反射调用函数时，需要将参数使用反射值对象的切片 []reflect.Value 构造后传入 Call() 方法中，调用完成时，函数的返回值通过 []reflect.Value 返回\",\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) // 普通函数 func add(a, b int) int { return a + b } func main() { // 将函数包装为反射值对象 funcValue := reflect.ValueOf(add) // 构造函数参数, 传入两个整型值 paramList := []reflect.Value{reflect.ValueOf(10), reflect.ValueOf(20)} // 反射调用函数 retList := funcValue.Call(paramList) // 获取第一个返回值, 取整数值 fmt.Println(retList[0].Int()) } \"]},\"597\":{\"h\":\"通过反射调用对象中的方法\",\"t\":[\"如果反射值对象中具有方法时，可以通过反射调用方法，获取方法如下👇\",\"方法\",\"描述\",\"Method(i int) Value\",\"根据索引，返回索引对应的方法\",\"NumMethod() int\",\"返回结构体成员方法(包含私有)\",\"MethodByName(name string) Value\",\"根据给定字符串返回字符串对应的结构体方法\",\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) type Cat struct { Name string } func (c *Cat) Sleep() { fmt.Println(\\\"呜呜呜...\\\") } func main() { cat := Cat{} valueOf := reflect.ValueOf(&cat) showMethod := valueOf.MethodByName(\\\"Show\\\") showMethod.Call(nil) } \"]},\"598\":{\"h\":\"反射实现：map 转 struct\",\"t\":[\"func Map2Struct(m map[string]interface{}, obj interface{}) { value := reflect.ValueOf(obj) // obj 必须是指针且指针指向的必须是 struct if value.Kind() == reflect.Ptr && value.Elem().Kind() == reflect.Struct { value = value.Elem() getMapName := func(key string) interface{} { for k, v := range m { if strings.EqualFold(k, key) { return v } } return nil } // 循环赋值 for i := 0; i < value.NumField(); i++ { // 获取字段 type 对象 field := value.Field(i) if !field.CanSet() { continue } // 获取字段名称 fieldName := value.Type().Field(i).Name fmt.Println(\\\"fieldName -> \\\", fieldName) // 获取 map 中的对应的值 fieldVal := getMapName(fieldName) if fieldVal != nil { field.Set(reflect.ValueOf(fieldVal)) } } } else { panic(\\\"must prt\\\") } } \"]},\"599\":{\"h\":\"反射实现：struct 转 map\",\"t\":[\"func Struct2Map(obj interface{}) map[string]interface{} { value := reflect.ValueOf(obj) if value.Kind() != reflect.Ptr || value.Elem().Kind() != reflect.Struct { panic(\\\"must prt\\\") } value = value.Elem() t := value.Type() // 创建 map resultMap := make(map[string]interface{}) // 循环获取字段名称以及对应的值 for i := 0; i < value.NumField(); i++ { val := value.Field(i) typeName := t.Field(i) if !val.CanSet() { resultMap[typeName.Name] = reflect.New(typeName.Type).Elem().Interface() continue } resultMap[typeName.Name] = val.Interface() } return resultMap } \"]},\"600\":{\"h\":\"深度比较-DeepEqual\"},\"601\":{\"h\":\"深度比较-DeepEqual\",\"t\":[\"当我们复杂一个对象时，这个对象可以是内建数据类型，数组，结构体，map……我们在复制结构体的时候，当我们需要比较两个结构体中的数据是否相同时，我们需要使用深度比较，而不是只是简单地做浅度比较。这里需要使用到反射 reflect.DeepEqual() ，下面是几个示例\",\"import ( \\\"fmt\\\" \\\"reflect\\\" ) type data struct { } func main() { v1 := data{} v2 := data{} fmt.Println(\\\"v1 == v2:\\\",reflect.DeepEqual(v1,v2)) //prints: v1 == v2: true m1 := map[string]string{\\\"one\\\": \\\"a\\\",\\\"two\\\": \\\"b\\\"} m2 := map[string]string{\\\"two\\\": \\\"b\\\", \\\"one\\\": \\\"a\\\"} fmt.Println(\\\"m1 == m2:\\\",reflect.DeepEqual(m1, m2)) //prints: m1 == m2: true s1 := []int{1, 2, 3} s2 := []int{1, 2, 3} fmt.Println(\\\"s1 == s2:\\\",reflect.DeepEqual(s1, s2)) //prints: s1 == s2: true } \"]},\"602\":{\"h\":\"Golang基础\"},\"603\":{\"h\":\"SpringBoot 自定义参数解析器\",\"t\":[\"在项目开发中，经常会遇到很多地方都需要获取当前的登录用户对象，根据请求的 session 或者 token 去获取用户信息，于是经常会在很多地方出现获取用户信息的代码\",\"//根据token获取用户信息 String token = request.getHeader(\\\"token\\\"); // 查询用户 User user = userService.getCurrentUser(token); \",\"每次都需要写相同的代码，当然我们也可以把这些重复代码封装到单独的方法中，但是这样还是不够优雅。\",\"如果用过 SpringMvc 框架，就会知道该框架获取参数太方便了，参数自动封装到 JavaBean 、各种参数注解：RequestParam 、PathVariable等\",\"那么 SpringMvc 到底是怎么从 request 中把参数提取出来直接给我们的呢，这就用到今天说的一个参数解析器接口：HandlerMethodArgumentResolver\"]},\"604\":{\"h\":\"HandlerMethodArgumentResolver\",\"t\":[\"自定义参数解析器需要实现 HandlerMethodArgumentResolver 接口，我们先来实现该接口，如下：\",\"/** * 将请求映射方法列表中 UserInfo 类型参数进行解析 * 解析成当前登录用户对象 */ public class CurrentUserArgumentResolver implements HandlerMethodArgumentResolver { // 如果参数类型是 UserInfo，并且参数上有 @CurrentUser 注解，则使用该参数解析器 @Override public boolean supportsParameter(MethodParameter methodParameter) { return methodParameter.getParameterType() == UserInfo.class && methodParameter.hasParameterAnnotation(CurrentUser.class); } //解析器解析规则： //此处将 UserInfo 类型参数， 解析成当前登录用户对象。 //当supportsParameter方法返回true时候才执行 @Override public Object resolveArgument(MethodParameter methodParameter, ModelAndViewContainer modelAndViewContainer, NativeWebRequest nativeWebRequest, WebDataBinderFactory webDataBinderFactory) throws Exception { HttpServletRequest request = nativeWebRequest.getNativeRequest(HttpServletRequest.class); String token = request.getHeader(\\\"token\\\"); return (UserInfo) userService.getCurrentUser(token); } } \",\"supportsParameter： 该方法表示是否启用这个参数解析器，返回 true 表示启用，返回 false 表示不启用\",\"resolveArgument： 这是具体的解析过程，就是从 request 中取出参数的过程，方法的返回值就对应了接口中参数的值\"]},\"605\":{\"h\":\"使用自定义的注解来区分\",\"t\":[\"/** * 用户参数注入注解 * 贴有该注解用户参数使用自定义的参数解析器 */ @Target({ElementType.PARAMETER}) @Retention(RetentionPolicy.RUNTIME) public @interface CurrentUser { } \",\"通过自定义注解来区分是用框架自带的解析器还是自定义的\"]},\"606\":{\"h\":\"将自定义参数解析器添加到Spring容器中\",\"t\":[\"最后，我们再将自定义的参数解析器配置到 HandlerAdapter 中，配置方式如下：\",\"@Configuration public class WebConfig implements WebMvcConfigurer { // 自定义的用户解析器 @Bean public CurrentUserArgumentResolver currentUserArgumentResolver(){ return new CurrentUserArgumentResolver(); } @Override public void addArgumentResolvers(List<HandlerMethodArgumentResolver> resolvers) { resolvers.add(currentUserArgumentResolver()); } } \"]},\"607\":{\"h\":\"使用案例\",\"t\":[\"@RequestMapping(\\\"/hello\\\") public void hello(@CurrentUser UserInfo userInfo) { System.out.println(userInfo); } \",\"至此，就算配置完成了，接下来启动项目，用户登录成功后，访问接口，就可以看到返回当前登录用户数据了\"]},\"608\":{\"h\":\"Spring Cloud Alibaba\",\"t\":[\"提示\",\"记录一下 Spring Cloud Alibaba 的使用，参考文档如下：\",\"Spring Cloud Alibaba 参考文档\"]},\"609\":{\"h\":\"介绍\",\"t\":[\"Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。\",\"依托 Spring Cloud Alibaba，您只需要添加一些注解和少量配置，就可以将 Spring Cloud 应用接入阿里分布式应用解决方案，通过阿里中间件来迅速搭建分布式应用系统。\"]},\"610\":{\"h\":\"服务\",\"t\":[\"目前 Spring Cloud Alibaba 提供了如下功能:\",\"服务限流降级：支持 WebServlet、WebFlux, OpenFeign、RestTemplate、Dubbo 限流降级功能的接入，可以在运行时通过控制台实时修改限流降级规则，还支持查看限流降级 Metrics 监控。\",\"服务注册与发现：适配 Spring Cloud 服务注册与发现标准，默认集成了 Ribbon 的支持。\",\"分布式配置管理：支持分布式系统中的外部化配置，配置更改时自动刷新。\",\"Rpc服务：扩展 Spring Cloud 客户端 RestTemplate 和 OpenFeign，支持调用 Dubbo RPC 服务\",\"消息驱动能力：基于 Spring Cloud Stream 为微服务应用构建消息驱动能力。\",\"分布式事务：使用 @GlobalTransactional 注解， 高效并且对业务零侵入地解决分布式事务问题。\",\"阿里云对象存储：阿里云提供的海量、安全、低成本、高可靠的云存储服务。支持在任何应用、任何时间、任何地点存储和访问任意类型的数据。\",\"分布式任务调度：提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。同时提供分布式的任务执行模型，如网格任务。网格任务支持海量子任务均匀分配到所有 Worker（schedulerx-client）上执行。\",\"阿里云短信服务：覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。\"]},\"611\":{\"h\":\"重要的组件\",\"t\":[\"服务发现、配置管理 Nacos\",\"负载均衡Ribbon\",\"声明式HTTP客户端-Feign\",\"服务容错Sentinel\",\"消息驱动RocketMQ\",\"API网关GateWay\",\"用户认证与授权\",\"调用链监控Sleuth\"]},\"612\":{\"h\":\"技术\",\"t\":[\"Spring Cloud Alibaba - Nacos： 注册中心 - 服务发现/注册\",\"Spring Cloud Alibaba - Nacos： 配置中心 - 动态配置管理\",\"Spring Cloud Alibaba - Sentinel： 阿里巴巴开源产品,把流量作为切入点,从流量控制,熔断降级,系统负载保护等多个维度保护服务的稳定性\",\"Spring Cloud Alibaba - Seata： 原 Fescar，阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案\",\"Spring Cloud - Ribbon： 负载均配\",\"Spring Cloud - Gateway： API 网关（webflux 编程模式）\",\"Spring Cloud - Feign/OpenFeign： 一个轻量级RESTful的HTTP服务客户端\"]},\"613\":{\"h\":\"Spring Cloud Alibaba和Spring Cloud 的区别和联系\",\"t\":[\"SpringCloudAlibaba实际上对我们的SpringCloud2.x和1.x实现拓展组件功能\",\"SpringCloud\",\"SpringCloudAlibaba\",\"注册中心\",\"Eureka\",\"nacos\",\"消息中间件\",\"无(第三方替代方案：rabbitmq)\",\"RecketMQ\",\"分布式事务解决方案\",\"无(第三方替代方案：2pc)\",\"Seata\",\"分布式调度服务\",\"无(第三方替代方案：xxl-job)\",\"Alibaba Cloud SchedulerX\",\"短信平台\",\"无\",\"Alibaba Cloud SMS\",\"分布式配置中心\",\"SpringCloudConfig\",\"nacos\",\"熔断降级\",\"Hystrix\",\"Sentinel\",\"网关\",\"zuul\",\"gateway\"]},\"614\":{\"h\":\"SpringCloud 的几大痛点\",\"t\":[\"SpringCloud 部分组件停止维护和更新，给开发带来不便; SpringCloud 部分环境搭建复杂，没有完善的可视化界面，我们需要大量的二次开发和定制 SpringCloud 配置复杂，难以上手，部分配置差别难以区分和合理应用\"]},\"615\":{\"h\":\"SpringCloud Alibaba 的优势:\",\"t\":[\"阿里使用过的组件经历了考验，性能强悍，设计合理，现在开源出来大家用 成套的产品搭配完善的可视化界面给开发运维带来极大的便利 搭建简单，学习曲线低。\"]},\"616\":{\"h\":\"SpringCloud Alibaba Nacos\",\"t\":[\"Nacos 是阿里巴巴开源的一个更易于构建云原生应用的动态服务发现、配置管理和服务管理 平台\",\"参考文档如下👇\",\"Nacos 官网文档地址：https://nacos.io/zh-cn/docs/what-is-nacos.html\",\"Nacos Spring Cloud 快速开始：https://nacos.io/zh-cn/docs/quick-start-spring-cloud.html\"]},\"617\":{\"h\":\"Nacos 搭建\",\"t\":[\"根据 Nacos 官网的版本选择描述中，可以根据 releases 中找到每个版本的介绍，Spring Cloud 版本对应关系可以查看 版本说明Wiki\"]},\"618\":{\"h\":\"获取 Nacos\",\"t\":[\"下载地址：https://github.com/alibaba/nacos/releases\",\"搭建文档：https://nacos.io/zh-cn/docs/quick-start.html\"]},\"619\":{\"h\":\"启动、关闭服务\",\"t\":[\"Linux/Unix/Mac\",\"# Linux/Unix/Mac # 启动命令(standalone代表着单机模式运行，非集群模式): sh startup.sh -m standalone sh shutdown.sh \",\"Window\",\"# 启动命令(standalone代表着单机模式运行，非集群模式): startup.cmd -m standalone shutdown.cmd \"]},\"620\":{\"h\":\"访问 Nacos 后台界面\",\"t\":[\"当我们的 Nacos 运行起来时，我们可以访问 http://127.0.0.1:8848/nacos 地址，输入账号密码：nacos 登录系统\",\"XOjON2\",\"ZoWv68\"]},\"621\":{\"h\":\"环境说明\",\"t\":[\"提示\",\"Spring Cloud： 2020.0.3\",\"Nacos： 14.2\",\"spring-cloud-alibaba： 2021.1\",\"关于 Nacos Spring Cloud 的详细文档请参看：Nacos Config 和 Nacos Discovery。\",\"通过 Nacos Server 和 spring-cloud-starter-alibaba-nacos-config 实现配置的动态变更。\",\"通过 Nacos Server 和 spring-cloud-starter-alibaba-nacos-discovery 实现服务的注册与发现。\"]},\"622\":{\"h\":\"服务发现是什么\"},\"623\":{\"h\":\"服务提供者与服务消费者\",\"t\":[\"服务提供者：服务的被调用方（即：为其他微服务提供接口的微服务）\",\"服务消费者：服务的调用方（即：调用其他微服务接口的微服务）\"]},\"624\":{\"h\":\"服务发现原理\",\"t\":[\"服务发现机制就是通过一个中间件去记录服务提供者的ip地址，服务名以及心跳等数据（比如用mysql去存储这些信息），然后服务消费者会去这个中间平台去查询相关信息，然后再去访问对应的地址，这就是服务注册和服务发现。\",\"当用户地址发生了变化也没有影响，因为服务提供方修改了用户地址，在中间件中会被更新，当服务消费方去访问中间件时就能及时获取最新的用户地址，就不会出现用户地址发生变化导致服务找不到\"]},\"625\":{\"h\":\"启动服务发现\",\"t\":[\"我们通过 spring-cloud-starter-alibaba-nacos-discovery 来实现服务注册和发现\",\"注意\",\"注意：如果你的 Spring Cloud 版本是 2020，那么 配置文件 bootstrap.yml 将会不起作用，会导致 nacos 的配置管理、服务发现等配置失效，需要添加依赖，详细方案请看 Spring Cloud 趟坑记录\"]},\"626\":{\"h\":\"添加依赖\",\"t\":[\"<!-- nacos 服务发现 --> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> </dependency> \",\"更多版本对应关系参考：版本说明 Wiki\"]},\"627\":{\"h\":\"添加配置\",\"t\":[\"通过 Nacos 的服务注册发现功能将其服务注册到 Nacos server 上\",\"在 bootstrap.yml 中配置 Nacos server 的地址\",\"spring: cloud: nacos: discovery: server-addr: 127.0.0.1:8848 application: name: mall-order \",\"注意：需要配置 application.name 属性，因为 Nacos 注册服务默认取 ${spring.application.name} 的值\"]},\"628\":{\"h\":\"添加注解\",\"t\":[\"早期在启动类上需要加上 @EnableDiscoveryClient注解，现在已经可以不需要加了\",\"Hpj6v9\"]},\"629\":{\"h\":\"启动配置管理\",\"t\":[\"我们通过 Nacos Server 和 spring-cloud-starter-alibaba-nacos-config 实现配置的动态变更\"]},\"630\":{\"h\":\"添加依赖\",\"t\":[\"<!-- nacos 配置中心 --> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId> </dependency> \",\"更多版本对应关系参考：版本说明 Wiki\"]},\"631\":{\"h\":\"添加配置\",\"t\":[\"在 bootstrap.properties 中配置 Nacos server 的地址和应用名\",\"spring: cloud: nacos: discovery: server-addr: 127.0.0.1:8848 config: server-addr: 127.0.0.1:8848 file-extension: yaml application: name: mall-order \",\"提示\",\"说明：之所以需要配置 spring.application.name ，是因为它是构成 Nacos 配置管理 dataId字段的一部分\",\"dataId = {spring.profiles.active}.${file-extension}\",\"prefix： 默认为 spring.application.name 的值，也可以通过配置项 spring.cloud.nacos.config.prefix来配置。\",\"spring.profiles.active： 即为当前环境对应的 profile，详情可以参考 Spring Boot文档。 注意：当 spring.profiles.active 为空时，对应的连接符 - 也将不存在，dataId 的拼接格式变成 ${prefix}.${file-extension}\",\"file-exetension： 为配置内容的数据格式，可以通过配置项 spring.cloud.nacos.config.file-extension 来配置。目前只支持 properties 和 yaml 类型。\",\"即，采用上述配置，nacosconfig 会从 Nacos Server 读取 Data Id 为 nacosconfig.yaml 的配置。\"]},\"632\":{\"h\":\"Nacos 控制台添加配置文件\",\"t\":[\"在 Nacos 控制台添加一个新的配置，其中：\",\"Data Id：nacosconfig\",\"Group：DEFAULT_GROUP\",\"配置格式：YAML\",\"JnlTaf\",\"hlPcGj\"]},\"633\":{\"h\":\"读取 Nacos 变量配置\",\"t\":[\"@RefreshScope @RestController public class ConfigController { private static final Logger logger = LoggerFactory.getLogger(ConfigController.class); @Value(\\\"${order.name:test}\\\") private String name; @RequestMapping(value = \\\"/config\\\", method = RequestMethod.GET) public String index() { logger.info(\\\"get order config value from nacos: {}\\\", name); return name; } } \",\"RefreshScope： 实现配置自动更新，在 nacos 中修改了配置，会动态更新数据\"]},\"634\":{\"h\":\"OpenFeign 2020 最新教程\",\"t\":[\"OpenFeign是声明式的Http客户端，通过OpenFeign发送Http请求非常的简单\",\"注解式开发，接口+注解的方式\",\"OpenFeign支持多种的对象的序列化 和 反序列化的工具\",\"OpenFeign 默认集成了Ribbon(2020 版本弃用)，可以直接进行负载均衡\",\"Feign 和 OpenFeign 的区别\",\"Feign 和 OpenFeign是两个技术，都是作为服务调用存在的，OpenFeign 是SpringCloud在Feign的基础上进行封装得到的，支持SpringMvc的注解\"]},\"635\":{\"h\":\"2020 版本说明以及坑\",\"t\":[\"由于 SpringCloud 2020 弃用了 Ribbon，所以如果你使用的是 2020 版本，且使用了 OpenFeign 组件，那么在启动时会报错\",\"No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?\",\"官方建议我们使用 Spring Cloud LoadBalancer 来代替 Ribbon\",\"所以导入 Spring Cloud LoadBalancer 的依赖就解决了\",\"<!--loadbalancer--> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-loadbalancer</artifactId> </dependency> \",\"我写了一篇文章专门记录 SpringCloud 相应的报错或者填坑 → Spring Cloud 趟坑记录\"]},\"636\":{\"h\":\"演示环境说明\",\"t\":[\"框架\",\"版本\",\"OpenFeign\",\"3.0.3\",\"Loadbalancer\",\"3.0.3\",\"Spring Cloud\",\"2020.0.3\",\"Spring Cloud Alibaba\",\"2021.1\",\"我们使用 nacos + OpenFeign 来模拟微服务之间的远程调用场景\",\"首先创建 订单服务(order-server) 、商品服务(product-server) 将这两个服务注册到 nacos 中，其中商品服务部署多个，方便后面演示 负载均衡的操作\",\"提示\",\"nacos 相关的一些操作这里不详细赘述，请看上一篇有关 nacos 的文章➡️ SpringCloud Alibaba Nacos 教程\",\"4tTurU\",\"父项目 pom 文件\",\"<!--依赖版本的锁定--> <properties> <java.version>1.8</java.version> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <spring-cloud.version>2020.0.3</spring-cloud.version> <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version> </properties> <dependencyManagement> <dependencies> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-dependencies</artifactId> <version>${spring-cloud.version}</version> <type>pom</type> <scope>import</scope> </dependency> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-alibaba-dependencies</artifactId> <version>${spring-cloud-alibaba.version}</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> \",\"订单、商品的 pom 文件\",\"<!--nacos discovery--> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> </dependency> <!--open feign--> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-openfeign</artifactId> </dependency> <!--loadbalancer--> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-loadbalancer</artifactId> </dependency> \"]},\"637\":{\"h\":\"启动类\",\"t\":[\"在启动类上添加 OpenFegin 的扫描注解，注意扫描路径(默认扫描当前包及其子包)\",\"@SpringBootApplication @EnableDiscoveryClient @EnableFeignClients public class OrderServer { public static void main(String[] args) { SpringApplication.run(OrderServer.class,args); } } \"]},\"638\":{\"h\":\"配置文件\",\"t\":[\"server: port: 8091 # 指定当前服务的名称，会注册到注册中心 spring: application: name: order-server # nacos 注册中心 cloud: nacos: discovery: server-addr: localhost:8848 \",\"通过以上步骤我们就拥有了一个最初步的项目，接下来，我们会通过 接口+注解 的方式开发 OpenFeign 的服务调用\"]},\"639\":{\"h\":\"OpenFeign 接口的开发\",\"t\":[\"我们在 订单服务中 新增接口 ProductServer ，使用 @FeignClient 注解标注该类是 OpenFeign 远程调用的类\",\"@FeignClient 的 name 参数就是你要调用的服务名称\",\"接口中的方法就是调用服务的 Controller 接口，注意： 接口的地址以及参数要和调用服务的 controller 一致\",\"// 参数是要请求服务的服务名称 @FeignClient(name = \\\"product-server\\\") public interface ProductServer { @RequestMapping(\\\"/product\\\") Product findByPid(@RequestParam(\\\"pid\\\") Long pid); } \",\"商品服务中的 Controller\",\"@Slf4j @RestController public class ProductController { @Autowired private IProductService productService; @RequestMapping(\\\"/product\\\") public Product findByPid(@RequestParam(\\\"pid\\\") Long pid) { Product product = productService.findByPid(pid); product.setPname(product.getPname() + \\\" from: \\\" + port); return product; } } \"]},\"640\":{\"h\":\"调用OpenFeign 的接口\",\"t\":[\"@Slf4j @RestController public class OrderController { @Autowired private ProductServer productServer; @RequestMapping(\\\"/get\\\") public Product findProduct(Long pid) { return productServer.findByPid(pid); } } \"]},\"641\":{\"h\":\"启动测试\",\"t\":[\"运行启动类之后，在浏览器或者 PostMan 之类的工具访问 http://localhost:8091/get?pid=1\",\"// http://localhost:8091/get?pid=1 { \\\"pid\\\": 1, \\\"pname\\\": \\\"小米 from: 8081\\\", \\\"pprice\\\": 1000.0, \\\"stock\\\": 5000 } { \\\"pid\\\": 1, \\\"pname\\\": \\\"小米 from: 8082\\\", \\\"pprice\\\": 1000.0, \\\"stock\\\": 5000 } \",\"我们会发现多刷新几次，出现的端口不一致，这就是 OpenFeign 的负载均衡导致的，OpenFeign 默认的负载均衡策略是 轮询策略\"]},\"642\":{\"h\":\"负载均衡\",\"t\":[\"负载均衡，英文名称为Load Balance，其含义就是指将工作任务（负载）进行平衡、分摊到多个操作单元上进行运行，从而协同完成工作任务\"]},\"643\":{\"h\":\"Ribbon(已弃用)\",\"t\":[\"Spring Cloud Ribbon 是一个基于 HTTP 和 TCP 的客户端负载均衡工具，它基于 Netflix Ribbon 实现。通过 Spring Cloud 的封装，可以让我们轻松地将面向服务的 REST 模版请求自动转换成客户端负载均衡的服务调用\",\"Ribbon 已弃用\",\"自2016年以来，Ribbon就进入维护状态，官方建议使用Spring Cloud LoadBalancer代替Ribbon\",\"Client Side Load Balancing with Ribbon and Spring Cloud 中提到Spring Cloud Netflix Ribbon is now deprecated，建议使用 Spring Cloud LoadBalancer\"]},\"644\":{\"h\":\"Spring Cloud LoadBalancer\",\"t\":[\"官方文档：Client-Side Load-Balancing with Spring Cloud LoadBalancer\",\"Spring Cloud LoadBalance r是一个客户端负载均衡器，类似于Ribbon，但是由于Ribbon已经进入维护模式，并且Ribbon 2并不与Ribbon 1相互兼容\",\"所以Spring Cloud全家桶在Spring Cloud Commons项目中，添加了 Spring cloud Loadbalancer 作为新的负载均衡器，并且做了向前兼容，就算你的项目中继续用 Spring Cloud Netflix 套装（包括Ribbon，Eureka，Zuul，Hystrix等等）让你的项目中有这些依赖，你也可以通过简单的配置，把 ribbon 替换成 Spring Cloud LoadBalancer\"]},\"645\":{\"h\":\"负载均衡器在哪里使用？\",\"t\":[\"Spring Cloud 中内部微服务调用默认是 http 请求，主要通过下面三种 API：\",\"RestTemplate：同步 http API\",\"WebClient：异步响应式 http API\",\"三方客户端封装，例如 openfeign\",\"如果项目中加入了 spring-cloud-loadbalancer 的依赖并且配置启用了，那么会自动在相关的 Bean 中加入负载均衡器的特性。\",\"对于 RestTemplate，会自动对所有 @LoadBalanced 注解修饰的 RestTemplate Bean 增加 Interceptor 从而加上了负载均衡器的特性。\",\"对于 WebClient，会自动创建 ReactorLoadBalancerExchangeFilterFunction，我们可以通过加入ReactorLoadBalancerExchangeFilterFunction会加入负载均衡器的特性。\",\"对于三方客户端，一般不需要我们额外配置什么\"]},\"646\":{\"h\":\"OpenFeign 负载均衡策略\",\"t\":[\"OpenFeign 默认的策略是轮询策略，如果我们想要使用随机策略，根据官方的例子\"]},\"647\":{\"h\":\"编写配置类\",\"t\":[\"@Configuration public class RandomLoadbalancerConfig { @Bean public ReactorLoadBalancer<ServiceInstance> randomLoadBalancer(Environment environment, LoadBalancerClientFactory loadBalancerClientFactory) { String name = environment.getProperty(LoadBalancerClientFactory.PROPERTY_NAME); return new RandomLoadBalancer( loadBalancerClientFactory.getLazyProvider(name, ServiceInstanceListSupplier.class), name); } } \"]},\"648\":{\"h\":\"使用 @LoadBalancerClient\",\"t\":[\"在启动类，使用 @LoadBalancerClient 或者 @LoadBalancerClients 注解，加载自己的配置类，由此切换 loadBalancer 默认的负载均衡策略\",\"@SpringBootApplication @EnableDiscoveryClient @EnableFeignClients @LoadBalancerClient(value = \\\"product-server\\\", configuration = RandomLoadbalancerConfig.class) public class OrderServer { public static void main(String[] args) { SpringApplication.run(OrderServer.class, args); } } \",\"最后达到随机负载均衡的效果\"]},\"649\":{\"h\":\"@FeignClient注解\",\"t\":[\"name：执行FeignClient的名称，如果项目中使用Ribbon，name属性会作为微服务的名称，用作服务发现。\",\"url：url一般用于调试，可以手动指定 @FeignClient 调用的地址\",\"decode404：当发生404错误时，如果该字段为true，会调用decoder进行解码，否则抛出 FeignException。\",\"configuration：Feigin配置类，可自定义Feign的Encode，Decode，LogLevel，Contract。\",\"fallback：定义容错的类，当远程调用的接口失败或者超时的时候，会调用对应接口的容错罗杰，fallback执行的类必须实现@FeignClient标记的接口。在OpenFeign的依赖中可以发现，集成Hystrix。\",\"fallbackFactory：工厂类，用于生成fallback类实例，通过此属性可以实现每个接口通用的容错逻辑，以达到减少重复的代码。\",\"path：定义当前FeignClient的统一前缀\"]},\"650\":{\"h\":\"OpenFeign 开始GZIP压缩\",\"t\":[\"OpenFeign支持对请求和响应进行GZIP压缩，以此来提供通信效率。只需在配置文件中配置即可，比较简单\",\"feign: # 压缩配置 compression: request: enabled: true # 配置压缩支持的MIME TYPE mime-types: text/xml,application/xml,application/json min-request-size: 2048 # 配置压缩数据大小的下限 response: enabled: true # 配置响应GZIP压缩 \"]},\"651\":{\"h\":\"OpenFeign 超时配置\",\"t\":[\"如果使用 OpenFeign 调用接口时，该接口耗时比较长，那么 OpenFeign 会报错异常 Read timed out\",\"OpenFeign 默认超时是 10 秒，我们可以根据自己的业务场景适当得调一下超时时间\",\"# open-feign 超时配置 feign: client: config: default: connectTimeout: 5000 # 连接超时配置 readTimeout: 5000 # 读取超时配置 \"]},\"652\":{\"h\":\"SpringCloud Gateway\",\"t\":[\"提示\",\"本章节记录一下 SpringCloud 下的微服务网关 Gateway 的入门教程，版本环境如下👇\",\"框架\",\"版本\",\"SpringBoot\",\"2.5.3\",\"SpringCloud\",\"2020.0.3\",\"SpringCloudAlibaba\",\"2021.1\",\"nacos\",\"14.1\",\"Gateway\",\"3.0.3\"]},\"653\":{\"h\":\"Gateway 简介\",\"t\":[\"Spring Cloud Gateway 是 Spring Cloud 的一个全新项目，该项目是基于 Spring 5.0，Spring Boot 2.0 和 Project Reactor 等技术开发的网关，它旨在为微服务架构提供一种简单有效的统一的 API 路由管理方式。\",\"网关作为流量的入口，常用功能包括路由转发、权限校验、限流控制等。而 springcloud gateway 作为 SpringCloud 官方推出的第二代网关框架，取代了 Zuul 网关\",\"声明：Spring Cloud Gateway 底层使用了高性能的通信框架Netty\",\"官方网址：https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/\"]},\"654\":{\"h\":\"核心概念\",\"t\":[\"Route（路由）： 这是网关的基本构建块。它由一个 ID，一个目标 URI，一组断言和一组过滤器定义。如果断言为真，则路由匹配\",\"Predicate（断言）： Java8 中的断言函数。Spring Cloud Gateway 中的断言函数输入类型是 Spring5.0 框 架中的 ServerWebExchange。Spring Cloud Gateway 中的断言函数允许开发者去定义匹配 来自于 http request 中的任何信息，比如请求头和参数等\",\"Filter（过滤器）： 一个标准的 Spring webFilter。Spring cloud gateway 中的 filter 分为两种类型的 Filter，分别是 Gateway Filter 和 Global Filter。过滤器 Filter 将会对请求和响应进行修改 处理\",\"工作原理如下图👇\",\"21UTs0\",\"客户端向 Spring Cloud Gateway 发出请求。然后在 Gateway Handler Mapping 中找到与请求相匹配的路由，将其发送到 Gateway Web Handler\",\"Handler 再将请求交给一个过滤器链，请求到达目标服务之前，会执行所有过滤器的 pre 方法。请求到达目标服务处理之后再依次执行所有过滤器的 post 方法\",\"总之就是：满足某些断言(predicates)就路由到指定的地址(uri)，使用指定的过滤器(filter)\"]},\"655\":{\"h\":\"搭建 Gateway 环境\",\"t\":[\"要使用 SpringCloud Gateway 需要导入相应的依赖，之后需要设置 Gateway 的路由配置\",\"我使用了 spring-boot 2.5.3 作为 parent 依赖\",\"<parent> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-parent</artifactId> <version>2.5.3</version> <relativePath/> <!-- lookup parent from repository --> </parent> \",\"在 dependencyManagement 中，我们需要指定 SringCloud 的版本，以便保证我们能够引入我们想要的 SpringCloud Gateway版本，所以需要用到 dependencyManagement\",\"<properties> <spring-cloud.version>2020.0.3</spring-cloud.version> </properties> <dependencyManagement> <dependencies> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-dependencies</artifactId> <version>${spring-cloud.version}</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> \",\"最后导入我们的 Gateway 依赖\",\"<dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-gateway</artifactId> </dependency> \",\"此外，请检查一下你的依赖中是否含有 spring-boot-starter-web，如果有，请干掉它。因为我们的SpringCloud Gateway是一个netty+webflux 实现的web服务器，和 Springboot Web 本身就是冲突的\"]},\"656\":{\"h\":\"基础 URI 路由配置方式\",\"t\":[\"如果请求的目标地址，是单个的URI资源路径，配置文件示例如下：\",\"server: port: 88 spring: application: name: api-gateway cloud: gateway: routes: -id: url-proxy-1 uri: https://blog.zenghr.cn predicates: - Path=/blog \",\"参数说明：\",\"id： 我们自定义的路由 ID，保持唯一\",\"uri： 目标服务地址\",\"predicates： 路由条件，Predicate 接受一个输入参数，返回一个布尔值结果\",\"上面这段配置的意思是，配置了一个 id 为 url-proxy-1 的URI代理规则，路由的规则为：\",\"当访问地址 http://localhost:88/blog/1.html 时，会路由到上游地址 https://blog.zenghr.cn/blog/1.html\"]},\"657\":{\"h\":\"基于代码的路由配置方式\",\"t\":[\"转发功能代码也可以通过代码的方式来实现，我们可以自定义 RouteLocator Bean 实现自定义制转发规则\",\"@Configuration public class GatewayConfiguration { @Bean public RouteLocator customRouteLocator(RouteLocatorBuilder builder) { return builder.routes() .route(\\\"url-proxy-1\\\", p -> p.predicate(e -> e.getRequest().getURI().getPath().startsWith(\\\"/blog\\\")) .filters(f -> f.rewritePath(\\\"/blog/(?<remaining>.*)\\\", \\\"/${remaining}\\\")) .uri(\\\"https://blog.zenghr.cn\\\")) .route(\\\"url-proxy-2\\\", p -> p.path(\\\"/blog2\\\").uri(\\\"https://blog.zenghr.cn\\\")) .build(); } } \",\"我们注释掉 xml 配置文件中的 Gateway 路由设置，重启服务， 当访问地址 http://localhost:88/blog/1.html 时，会路由到上游地址 https://blog.zenghr.cn/1.html , 能够访问说明我们的代码配置成功\",\"参数说明\",\"通过 RouteLocatorBuilder 的routes，可以逐一建立路由，每调用route一次可建立一条路由规则\",\"p 的代表是 PredicateSpec，可以透过它的 predicate 来进行断言，要实现的接口就是Java 8的 Predicate，通过 exchange 取得了路径，然后判断它是不是以 /blog 开头，对于简单的情况，也可以通过 path 等来进行断言\",\"filters 是用来设置过滤器，rewritePath 方法会使用内建的过滤器重写路径\"]},\"658\":{\"h\":\"注册中心相结合的路由配置方式\",\"t\":[\"在 uri 的 schema 协议部分为自定义的 lb:类型，表示从微服务注册中心（如 Nacos）订阅服务，并且进行服务的路由\",\"在我的项目中，使用的是 gateway + nacos 的方式来实现的\",\"导入 nacos 的服务注册依赖，需要把 gateway 服务注册到 nacos，才能发现其他服务\",\"<!-- nacos 服务发现 --> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> </dependency> <!-- nacos 配置中心 --> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId> </dependency> \",\"如果需要使用 nacos 作为配置中心，也可以导入相应的依赖\",\"我们的配置文件内容需要如下设置👇\",\"spring: application: name: api-gateway cloud: nacos: discovery: server-addr: 127.0.0.1:8848 gateway: discovery: locator: enabled: true # 开启服务发现功能，默认为 false routes: - id: member_route uri: lb://mall-member predicates: - Path=/api/member/** filters: - RewritePath=/api/member/(?<segment>.*),/$\\\\{segment} \",\"参数说明\",\"locator.enabled： 开启服务发现，需要开启该配置\",\"lb: 代表 负载均衡\",\"注意\",\"由于 SpringCloud 2020 弃用了 Ribbon，因此 Alibaba 在 2021 版本 nacos 中删除了 Ribbon的 jar 包，因此无法通过lb路由到指定微服务，出现了503情况\",\"所以只需要引入 springcloud loadbalancer 包即可\",\"<!--客户端负载均衡loadbalancer--> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-loadbalancer</artifactId> </dependency> \"]},\"659\":{\"h\":\"Gateway 匹配规则\",\"t\":[\"Spring Cloud Gateway 是通过 Spring WebFlux 的 HandlerMapping 做为底层支持来匹配到转发路由，Spring Cloud Gateway 内置了很多 Predicates 工厂，这些 Predicates 工厂通过不同的 HTTP 请求参数来匹配，多个 Predicates 工厂可以组合使用\",\"U3Me4V\",\"接下来我们介绍 Spring Cloud GateWay 内置几种 Predicate 的使用\"]},\"660\":{\"h\":\"通过请求参数匹配\",\"t\":[\"Query Route Predicate 支持传入两个参数，一个是属性名一个为属性值，属性值可以是正则表达式\",\"server: port: 88 spring: application: name: api-gateway cloud: gateway: routes: -id: url-proxy-1 uri: https://blog.zenghr.cn predicates: - Query=url,blog \",\"这样配置，只要请求中包含 url 属性的参数，并且参数值是 blog 即可匹配路由\"]},\"661\":{\"h\":\"通过 Cookie 匹配\",\"t\":[\"Cookie Route Predicate 可以接收两个参数，一个是 Cookie name ,一个是正则表达式，路由规则会通过获取对应的 Cookie name 值和正则表达式去匹配，如果匹配上就会执行路由，如果没有匹配上则不执行\",\"server: port: 88 spring: application: name: api-gateway cloud: gateway: routes: -id: url-proxy-1 uri: https://blog.zenghr.cn order: 0 predicates: - Cookie=sessionId, test \"]},\"662\":{\"h\":\"通过 Header 属性匹配\",\"t\":[\"Header Route Predicate 和 Cookie Route Predicate 一样，也是接收 2 个参数，一个 header 中属性名称和一个正则表达式，这个属性值和正则表达式匹配则执行\",\"server: port: 88 spring: application: name: api-gateway cloud: gateway: routes: -id: url-proxy-1 uri: https://blog.zenghr.cn order: 0 predicates: - Header=X-Request-Id, \\\\d+ \"]},\"663\":{\"h\":\"通过请求方式匹配\",\"t\":[\"可以通过是 POST、GET、PUT、DELETE 等不同的请求方式来进行路由\",\"server: port: 88 spring: application: name: api-gateway cloud: gateway: routes: -id: url-proxy-1 uri: https://blog.zenghr.cn order: 0 predicates: - Method=GET \",\"这里我们就只列出一些常用的匹配方式，如果需要查询其他匹配方式，可以查看 SpringCloud Gateway 的官方文档\"]},\"664\":{\"h\":\"过滤器 Filter\",\"t\":[\"过滤器就是在请求的传递过程中,对请求和响应做一些手脚\",\"在 Gateway 中，Filter的生命周期只有两个：\\\"pre\\\" 和 \\\"post\\\"\",\"PRE： 这种过滤器在请求被路由之前调用。我们可利用这种过滤器实现身份验证、在集群中选择请求的微服务、记录调试信息等。\",\"POST：这种过滤器在路由到微服务以后执行。这种过滤器可用来为响应添加标准的HTTP Header、收集统计信息和指标、将响应从微服务发送给客户端等\",\"在 Gateway 中，Filter 的作用范围两种:\",\"GatewayFilter：应用到单个路由或者一个分组的路由上\",\"GlobalFilter：应用到所有的路由上\"]},\"665\":{\"h\":\"定义局部过滤器\",\"t\":[\"局部过滤器是针对单个路由的过滤器，在SpringCloud Gateway中内置了很多不同类型的网关路由过滤器\",\"开发小 Tip ：如果不知道自定义可以查看 Gateway 中内置的过滤器，使用 cv 大法 咔咔改造一顿就好了\",\"需求：实现自定义过滤器统计请求耗时\",\"一、第一步编写 Filter 类，根据其内置的过滤器发现名称格式有规律：XxxGatewayFilterFactory\",\"spring: application: name: api-gateway gateway: routes: - id: product_route uri: lb://product-server predicates: - Path=/product-server/** filters: - StripPrefix=1 \",\"451cP6\",\"下面是自己写的自定义过滤器代码\",\"@Component public class TimeGatewayFilterFactory extends AbstractGatewayFilterFactory<TimeGatewayFilterFactory.Config> { public static final String PARTS_KEY = \\\"parts\\\"; public TimeGatewayFilterFactory() { super(TimeGatewayFilterFactory.Config.class); } public List<String> shortcutFieldOrder() { return Arrays.asList(\\\"parts\\\"); } public GatewayFilter apply(TimeGatewayFilterFactory.Config config) { return new GatewayFilter() { public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) { // 不启用情况 if (!config.parts) { return chain.filter(exchange); } // 前置操作 long startTime = System.currentTimeMillis(); exchange.getAttributes().put(\\\"startTime\\\", startTime); return chain.filter(exchange).then(Mono.fromRunnable(() -> { // 后置操作 long start = (long) exchange.getAttributes().get(\\\"startTime\\\"); System.out.println(\\\"接口耗时：\\\" + (System.currentTimeMillis() - start) + \\\"ms\\\"); })); } public String toString() { return GatewayToStringStyler.filterToStringCreator(TimeGatewayFilterFactory.this).append(\\\"parts\\\", config.getParts()).toString(); } }; } public static class Config { private boolean parts; public Config() { } public boolean getParts() { return this.parts; } public void setParts(boolean parts) { this.parts = parts; } } } \",\"二、在指定的路由中添加路由规则\",\"spring: application: name: api-gateway gateway: routes: - id: product_route uri: lb://product-server predicates: - Path=/product-server/** filters: - StripPrefix=1 - Time=true \",\"访问 product-server 服务时将会打印接口耗时日志\"]},\"666\":{\"h\":\"自定义全局过滤器\",\"t\":[\"全局过滤器作用于所有路由，无需配置，通过全局过滤器可以实现对权限的统一校验，安全性验证等功能。\",\"SpringCloud Gateway内部也是通过一系列的内置全局过滤器对整个路由转发进行处理如下：\",\"h27xKu\",\"编写全局过滤器，继承于 GlobalFilter 类\",\"@Component public class AuthGlobalFilter implements GlobalFilter { @Override public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) { // 业务代码... return chain.filter(exchange); } } \"]},\"667\":{\"h\":\"Gateway 实现动态路由刷新\",\"t\":[\"提示\",\"通常在Nacos接入了Spring Cloud的Gateway后还需自定义实现动态的路由配置来提供后续更为灵活的接口发布与维护，这里主要记录实现步骤\",\"参考文档：\",\"Spring Cloud Gateway接入nacos动态路由刷新\",\"SpringCloud Gateway 基于 Nacos 实现动态路由\",\"集成 Nacos 的相关操作请看上文的 注册中心相结合的路由配置方式 ，这里就不再详细说明\"]},\"668\":{\"h\":\"Nacos 配置文件\",\"t\":[\"M8f7ep\",\"application.yml 配置如下\",\"# 自定义的配置项，用于设置路由信息所载的配置文件，比如这里是 group + dataId gateway: dynamicRoute: dataId: gateway.yaml group: dev \"]},\"669\":{\"h\":\"动态更新配置文件\",\"t\":[\"指定路由配置文件，用于启动时创建Nacos Config文件监听\",\"import lombok.Data; import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Configuration; @Data @Configuration public class DynamicRoutingFileProperties { /** * 配置文件id */ @Value(\\\"${gateway.dynamicRoute.dataId}\\\") private String dataId; /** * 配置分组 */ @Value(\\\"${gateway.dynamicRoute.group}\\\") private String groupId; private Long timeout = 3000L; } \"]},\"670\":{\"h\":\"动态路由监听\",\"t\":[\"/** * 动态路由监听 * * 添加对对应配置文件更新时的监听，实现动态路由刷新。一般的，为了保证 * 仅在启动时注册指定的对应文件（通常这个文件也是动态配置，这里暂时没 * 有实现当更换路由配置文件时的刷新）更新时对正在运行的路由信息进行刷 * 新。 * * 该类主要实现yaml解析，并构建definition对象，对于具体的刷新逻辑 * @see DynamicRouteService */ @Slf4j @Component @RefreshScope public class DynamicRouteServiceListener implements CommandLineRunner { @Autowired private DynamicRouteService dynamicRouteService; @Autowired NacosConfigManager nacosConfigManager; @Autowired private DynamicRoutingFileProperties dynamicRoutingFileProperties; /** * 添加配置文件更新监听 */ private void dynamicRouteListener () { try { ConfigService configService = nacosConfigManager.getConfigService(); // first process ed add listener processConfigInfo(configService.getConfigAndSignListener( dynamicRoutingFileProperties.getDataId(), dynamicRoutingFileProperties.getGroupId(), dynamicRoutingFileProperties.getTimeout(), new Listener() { @Override public void receiveConfigInfo(String configInfo) { processConfigInfo(configInfo); } @Override public Executor getExecutor() { return null; } } )); } catch (NacosException e) { log.error(\\\"add config listener fail !!!\\\"); e.printStackTrace(); } } /** * 处理配置信息 * * @param configInfo 配置string */ private void processConfigInfo(String configInfo) { if (Objects.isNull(configInfo)) return; // 解析yaml文件获取路由定义 List<RouteDefinition> targetRouteDefinitions = getRouteDefinitionsByYaml(configInfo); // 更新路由信息 dynamicRouteService.refresh(targetRouteDefinitions); } /** * 通过yaml str解析出route定义 * * @param configInfo yaml str * @return RouteDefinition array */ private List<RouteDefinition> getRouteDefinitionsByYaml(String configInfo) { Yaml yaml = new Yaml(); Map<Object, Object> document = yaml.load(configInfo); List<Map<String, Object>> routeList = (List<Map<String, Object>>) document.get(\\\"routes\\\"); List<RouteDefinition> targetRouteDefinitions = new ArrayList<>(routeList.size()); for (Map<String, Object> routeItem : routeList) { RouteDefinition routeDefinition = new RouteDefinition(); routeDefinition.setId((String) routeItem.get(\\\"id\\\")); routeDefinition.setUri(URI.create((String) routeItem.get(\\\"uri\\\"))); List<String> predicateStrList = (List<String>) routeItem.get(\\\"predicates\\\"); List<PredicateDefinition> predicateDefinitions = predicateStrList.stream().map(PredicateDefinition::new).collect(Collectors.toList()); routeDefinition.setPredicates(predicateDefinitions); List<String> filterStrList = (List<String>) routeItem.get(\\\"filters\\\"); if (CollectionUtils.isNotEmpty(filterStrList)) { List<FilterDefinition> filterDefinitions = filterStrList.stream().map(FilterDefinition::new).collect(Collectors.toList()); routeDefinition.setFilters(filterDefinitions); } Object orderObj = routeItem.get(\\\"order\\\"); int order = Objects.isNull(orderObj) ? 0 : (int) orderObj; routeDefinition.setOrder(order); targetRouteDefinitions.add(routeDefinition); } return targetRouteDefinitions; } @Override public void run(String... args) { Long startTime = System.currentTimeMillis(); dynamicRouteListener(); Long completeTime = System.currentTimeMillis(); log.info(\\\"dynamic router cost {}ms to initialization routes and registered configurer.\\\", completeTime - startTime); } } \"]},\"671\":{\"h\":\"动态路由服务实现\",\"t\":[\"/** * 动态路由服务实现 * * 具体的路由信息变更刷新，因监听文件更新仅可拿到全量的路由配置， * 为了减轻整体逻辑负担，使用merge逻辑更新definition并发出变 * 更通知。 * * 虽然仅变更不通知，可以简易的通过全量删除并全量添加即可实现路由 * 更新，但并不保证后续是否存在对历史definition对象的引用，故此 * 处使用更保险的策略。 * * 又因为merge策略，可能导致对部分definition更新后会影响默认的 * order,所以在添加注册时会填充未标记的order。 */ @Slf4j @Component public class DynamicRouteService implements ApplicationEventPublisherAware { @Resource private RouteDefinitionRepository routeDefinitionRepository; private ApplicationEventPublisher publisher; /** * merge更新路由 * * 保证刷新逻辑不存在线程安全问题，刷新路由并没有很高的性能需求，此处锁住整个refresh方法。 * @param definitions 路由详情集合 */ public synchronized void refresh(List<RouteDefinition> definitions) { // 填充生成order fillTargetRouteOrder(definitions); // 目标routes id集合 List<String> targetDefIds = definitions.stream().map(RouteDefinition::getId).collect(Collectors.toList()); // 获取现存所有路由map Map<String, RouteDefinition> aliveRouteMap = getAliveRouteMap(); // 删除失效的routes removeDefinitions(targetDefIds, aliveRouteMap); // 更新definitions updateDefinitions(definitions, aliveRouteMap); // 添加definitions createDefinitions(definitions, aliveRouteMap); // 发布路由已更新时间 publishRouteChangedEvent(); } /** * 填充目标路由order * * @param definitions 路由详情集合 */ private void fillTargetRouteOrder(List<RouteDefinition> definitions) { int order = 1; for (RouteDefinition route : definitions) { if (route.getOrder() == 0) { route.setOrder(order++); } } } /** * 发布路由已更新消息 */ private void publishRouteChangedEvent() { this.publisher.publishEvent(new RefreshRoutesEvent(this)); } /** * 添加routes * * @param definitions 目标routes * @param aliveRouteMap 当前存活路由map */ private void createDefinitions(List<RouteDefinition> definitions, Map<String, RouteDefinition> aliveRouteMap) { // 获取新添加的definitions Set<String> aliveRouteIdSet = aliveRouteMap.keySet(); List<RouteDefinition> needCreateDefs = definitions .stream() .filter(route -> !aliveRouteIdSet.contains(route.getId())) // 不存在与当前存活集合 .collect(Collectors.toList()); doCreateDefinitions(needCreateDefs); } /** * 执行添加路由 * * @param needCreateDefs 需要新增的路由集合 */ private void doCreateDefinitions(List<RouteDefinition> needCreateDefs) { needCreateDefs.forEach(createDef -> { try { this.routeDefinitionRepository.save(Mono.just(createDef)).subscribe(); log.info(\\\"created route: {}\\\", createDef.getId()); } catch (Exception e) { e.printStackTrace(); log.info(\\\"create route {} fail\\\", createDef.getId()); } }); } /** * 更新路由 * * @param definitions 目标routes * @param aliveRouteMap 当前存活路由map */ private void updateDefinitions(List<RouteDefinition> definitions, Map<String, RouteDefinition> aliveRouteMap) { Set<String> aliveRouteIdSet = aliveRouteMap.keySet(); List<RouteDefinition> needUpdateDefs = definitions .stream() .filter(route -> aliveRouteIdSet.contains(route.getId()) && !route.equals(aliveRouteMap.get(route.getId()))) // 当前存活且与当前definition不同则为更新 .collect(Collectors.toList()); doUpdateDefinitions(needUpdateDefs); } /** * 删除并重新创建路由实现更新 * * route repo无updater的结局方法 * @param needUpdateDefs 需要更新route集合 */ private void doUpdateDefinitions(List<RouteDefinition> needUpdateDefs) { needUpdateDefs.forEach(updateDefinition -> { try { this.routeDefinitionRepository .delete(Mono.just(updateDefinition.getId())) .subscribe(); log.info(\\\"removed old route(will be recreate): {}\\\", updateDefinition.getId()); } catch (Exception e) { e.printStackTrace(); log.info(\\\"can't clean route(will be create): {}\\\", updateDefinition.getId()); } try { this.routeDefinitionRepository.save(Mono.just(updateDefinition)).subscribe(); log.info(\\\"updated route: {}\\\", updateDefinition.getId()); } catch (Exception e) { e.printStackTrace(); log.info(\\\"updated route {} fail\\\", updateDefinition.getId()); } }); } /** * 获取当前存活的路由描述map * * @return 当前存活的路由描述map */ private Map<String, RouteDefinition> getAliveRouteMap() { return routeDefinitionRepository .getRouteDefinitions() .toStream() .collect(Collectors.toMap(RouteDefinition::getId, Function.identity())); } /** * 删除剔除的routes * * @param targetDefIds 目标route id集合 * @param aliveRouteMap 当前存活的路由map */ private void removeDefinitions(List<String> targetDefIds, Map<String, RouteDefinition> aliveRouteMap) { List<String> removedDefinitionIds = aliveRouteMap .keySet() .stream() .filter(routeId -> !targetDefIds.contains(routeId)) // 不存在于目标id集合判定为删除 .collect(Collectors.toList()); doRemoveDefinitions(removedDefinitionIds); } /** * 删除剔除的routes * * @param removedDefinitionIds 需要被剔除的route id集合 */ private void doRemoveDefinitions(List<String> removedDefinitionIds) { removedDefinitionIds.forEach(removedId -> { this.routeDefinitionRepository .delete(Mono.just(removedId)) .subscribe(); log.info(\\\"removed route: {}\\\", removedId); }); } /** * 开启监听 * * @param applicationEventPublisher publisher instance */ @Override public void setApplicationEventPublisher(ApplicationEventPublisher applicationEventPublisher) { this.publisher = applicationEventPublisher; } } \"]},\"672\":{\"h\":\"Spring Cloud 趟坑记录\",\"t\":[\"提示\",\"本文记录一些在使用 Spring Cloud 中的一些踩坑记录，防止以后再遇到\"]},\"673\":{\"h\":\"Spring Cloud 2020 bootstrap 配置文件失效\",\"t\":[\"在使用 nacos-config 读取 nacos 配置时，发现bootstrap.yml一直不生效\"]},\"674\":{\"h\":\"查找原因\",\"t\":[\"从 Spring Boot 2.4 版本开始，配置文件加载方式进行了重构，默认不加载 bootstrap.yml 配置文件\"]},\"675\":{\"h\":\"解决方案\",\"t\":[\"引入依赖解决问题\",\"<dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-bootstrap</artifactId> </dependency> \"]},\"676\":{\"h\":\"SpringCloud 2020版本 Gateway + Nacos，服务报错503 Service Unavailable\",\"t\":[\"由于 SpringCloud 2020 弃用了 Ribbon，因此 Alibaba 在 2021 版本 nacos 中删除了 Ribbon的 jar 包，因此无法通过lb路由到指定微服务，出现了503情况\",\"所以只需要引入 springcloud loadbalancer 包即可\",\"<!--客户端负载均衡loadbalancer--> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-loadbalancer</artifactId> </dependency> \"]},\"677\":{\"h\":\"No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?\",\"t\":[\"出错原因也是因为缺少 负载均衡的包，所以导入  springcloud loadbalancer 包即可\"]},\"678\":{\"h\":\"Ubuntu18.04 安装docker\"},\"679\":{\"h\":\"1 安装方式\",\"t\":[\"ubuntu 在线安装\",\"下载 docker 二进制包离线安装\",\"提示\",\"本文档操作以上两种方式安装，在国内，如果用官方提供的安装方法会很慢。于是国内也有一些提供镜像的网站。\"]},\"680\":{\"h\":\"2 在线安装\",\"t\":[\"# 更新包列表 sudo apt update # 必须安装的包 sudo apt install apt-transport-https ca-certificates curl software-properties-common # 将官方Docker存储库的GPG密钥添加到您的系统 curl -fsSL https://mirror.azure.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add - # 添加 docker 仓库到 Apt 源 sudo add-apt-repository \\\"deb [arch=amd64] https://mirror.azure.cn/docker-ce/linux/ubuntu bionic stable\\\" # 再次更新包列表 sudo apt update # 安装docker sudo apt install docker-ce # 验证 docker 安装是否成功 docker --version # 安装 docker compose （可选） sudo curl -L \\\"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)\\\" -o /usr/local/bin/docker-compose # 赋权 sudo chmod +x /usr/local/bin/docker-compose # 验证 docker-compose --version \"]},\"681\":{\"h\":\"3. 离线安装\",\"t\":[\"选择你需要的 docker 版本，下载地址：https://download.docker.com/linux/static/stable/x86_64\"]},\"682\":{\"h\":\"3.1 解压缩二进制包\",\"t\":[\"tar zxvf docker-19.03.9.tgz mv docker/* /usr/bin \"]},\"683\":{\"h\":\"3.2 systemd管理docker\",\"t\":[\"cat > /usr/lib/systemd/system/docker.service << EOF [Unit] Description=Docker Application Container Engine Documentation=https://docs.docker.com After=network-online.target firewalld.service Wants=network-online.target [Service] Type=notify ExecStart=/usr/bin/dockerd ExecReload=/bin/kill -s HUP $MAINPID LimitNOFILE=infinity LimitNPROC=infinity LimitCORE=infinity TimeoutStartSec=0 Delegate=yes KillMode=process Restart=on-failure StartLimitBurst=3 StartLimitInterval=60s [Install] WantedBy=multi-user.target EOF \"]},\"684\":{\"h\":\"3.3 创建配置文件\",\"t\":[\"mkdir /etc/docker cat > /etc/docker/daemon.json << EOF { \\\"registry-mirrors\\\": [\\\"https://b9pmyelo.mirror.aliyuncs.com\\\"] } EOF \",\"registry-mirrors 阿里云镜像加速器\"]},\"685\":{\"h\":\"3.4 启动并设置开机启动\",\"t\":[\"systemctl daemon-reload systemctl start docker systemctl enable docker \"]},\"686\":{\"h\":\"4. 更换 docker 源\",\"t\":[\"国内的几个源:\",\"https://dockerhub.azk8s.cn - Azure镜像\",\"http://hub-mirror.c.163.com - 网易镜像\",\"https://docker.mirrors.ustc.edu.cn - 科大镜像站\",\"https://registry.docker-cn.com - Docker中国官方镜像\",\"阿里云也有镜像，只不过需要登录阿里云控制台后获取自己专属的镜像源。\"]},\"687\":{\"h\":\"设置方法\",\"t\":[\"在配置文件中添加registry-mirrors的配置。启动时自动配置，Linux下的默认配置文件是/etc/docker/daemon.json.\",\"{ \\\"registry-mirrors\\\": [\\\"https://<my-docker-mirror-host>\\\"] } \",\"手动启动dockerd的时候，添加--registry-mirror参数: dockerd --registry-mirror=https://<my-docker-mirror-host>\"]},\"688\":{\"h\":\"docker常用命令\"},\"689\":{\"h\":\"常用命令\",\"t\":[\"创建镜像\",\"sudo docker build -t zenghr:v1 . \",\"删除镜像\",\"docker rmi [镜像ID] \",\"后台运行容器\",\"docker run -it -d --name zenghr -p 2201:22 -p 80:80 -p 5432:5432 zenghr \",\"进入容器\",\"docker exec -it 容器ID(名称) /bin/bash \",\"启动、重启、停止、删除容器\",\"docker start [容器ID] docker restart [容器ID] docker stop [容器ID] docker rm [容器ID] \",\"快速操作的容器\",\"docker stop $(docker ps -q) # 删除全部容器 docker rm $(docker ps -aq) # 删除所有停止的容器 docker container prune # 一条命令实现停用并删除容器 docker stop $(docker ps -q) & docker rm $(docker ps -aq) \"]},\"690\":{\"h\":\"docker安装并配置mysql环境\",\"t\":[\"Mysql 数据库是市面上最受欢迎的数据库，也是使用最多的一种数据库，所以开发者经常需要安装 Mysql 数据库环境，安装 Mysql 的方式有很多，Window、Linux 等系统可以下载 对应的安装文件安装，但是这些安装方式通常比较麻烦，也很容易出现安装错误。\",\"那么可以选用 docker 来快速构建环境，容器比虚拟机更加轻量化，拥有诸多好处\",\"提示\",\"记录一下 docker 配置 mysql 环境的步骤\"]},\"691\":{\"h\":\"拉取 Mysql 镜像\",\"t\":[\"docker 环境的搭建请查看其它文章\",\"docker search mysql docker pull mysql # 拉取指定版本 docker pull mysql:5.7 \",\"也可以去官网查看镜像tag，选择自己需要的版本，否则会下载最新版本\",\"pSxDir\"]},\"692\":{\"h\":\"启动 Mysql 容器\",\"t\":[\"docker run --name mysql \\\\ --privileged=true \\\\ -p 3306:3306 \\\\ -v /database/mysql/conf:/etc/mysql/conf.d \\\\ -v /database/mysql/logs:/logs \\\\ -v /database/mysql/data:/var/lib/mysql \\\\ -e MYSQL_ROOT_PASSWORD=123456 \\\\ -d mysql:5.7 \",\"-privileged：加入 -privileged=true 给容器加上特定权限，因为Centos7安全Selinux禁止了一些安全权限\",\"-name：指定容器名称，必须是唯一\",\"-p：将容器的 3306 端口映射到主机的 3306 端口。\",\"-v：将主机的目录挂载到容器的目录\",\"-e：初始化 root 用户的密码（注意如果没有初始化密码启动容器会失败）\",\"-d：容器后台运行\",\"-v /database/mysql/conf:/etc/mysql/conf.d 挂载mysql配置文件 -v /database/mysql/logs:/logs 挂载日志文件 -v /database/mysql/data:/var/lib/mysql 挂载mysql数据, 否则容器重启之后数据会丢失 \"]},\"693\":{\"h\":\"查看容器是否启动\",\"t\":[\"docker ps \",\"如果发现容器未能正常启动成功，则需要查看日志排查异常：docker logs mysql\"]},\"694\":{\"h\":\"Mysql 相关设置\"},\"695\":{\"h\":\"1. 进入 mysql 容器\",\"t\":[\"docker exec -it mysql /bin/bash \",\"ajeCjb\"]},\"696\":{\"h\":\"2. 连接 mysql\",\"t\":[\"mysql -u root -p \",\"输入启动容器时指定的密码\",\"Hsrhxe\"]},\"697\":{\"h\":\"3. 查询 user 表\",\"t\":[\"mysql> select host,user,plugin,authentication_string from mysql.user; +-------------+---------------+-----------------------+-------------------------------------------+ | host | user | plugin | authentication_string | +-------------+---------------+-----------------------+-------------------------------------------+ | localhost | root | mysql_native_password | *39EF1E4F4220858A4F0D30FE91AAD7E4C4AB0812 | | localhost | mysql.session | mysql_native_password | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | | localhost | mysql.sys | mysql_native_password | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | +-------------+---------------+-----------------------+-------------------------------------------+ 4 rows in set (0.00 sec) \",\"host：localhost表示本机使用，也可以指定IP访问，为 % 表示不限制ip。\",\"如果这里plugin非mysql_native_password 则需要修改密码\"]},\"698\":{\"h\":\"4. 修改 root 账号\",\"t\":[\"修改root账号host\",\"update user set host = \\\"%\\\" where user = \\\"root\\\" and host = \\\"localhost\\\"； \",\"修改root账号密码\",\"update user set password=password('admin') where user='root'; \",\"提示\",\"注意：如果提示无法修改，这是因为 mysql从5.7.6 开始删除了password字段 需要换另一种方式修改密码\",\"换种方式修改\",\"alter user 'root'@'%' identified by 'admin'; \",\"刷新权限\",\"flush privileges; \"]},\"699\":{\"h\":\"查看并修改mysql编码\",\"t\":[\"在容器中查看mysql配置文件\",\"cat /etc/mysql/my.cnf \",\"# Copyright (c) 2016, 2021, Oracle and/or its affiliates. # # This program is free software; you can redistribute it and/or modify # it under the terms of the GNU General Public License, version 2.0, # as published by the Free Software Foundation. # # This program is also distributed with certain software (including # but not limited to OpenSSL) that is licensed under separate terms, # as designated in a particular file or component or in included license # documentation. The authors of MySQL hereby grant you an additional # permission to link the program and your derivative works with the # separately licensed software that they have included with MySQL. # # This program is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the # GNU General Public License, version 2.0, for more details. # # You should have received a copy of the GNU General Public License # along with this program; if not, write to the Free Software # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA !includedir /etc/mysql/conf.d/ !includedir /etc/mysql/mysql.conf.d/ \",\"我们的配置文件可以放到容器中的 /etc/mysql/conf.d/ 文件夹下，因为我们启动容器是已经挂载了目录到该目录下，所以我们只需要在那个文件夹里新建一个 my.cnf 文件即可\",\"在配置文件中写入配置\",\"[mysqld] character_set_server=utf8mb4 [client] default-character-set=utf8mb4 [mysql] default-character-set=utf8mb4 \",\"重启 mysql\",\"docker restart mysql \",\"查看 mysql 编码\",\"mysql> SHOW VARIABLES LIKE 'collation_%'; +----------------------+--------------------+ | Variable_name | Value | +----------------------+--------------------+ | collation_connection | utf8mb4_general_ci | | collation_database | utf8mb4_general_ci | | collation_server | utf8mb4_general_ci | +----------------------+--------------------+ 3 rows in set (0.00 sec) \",\"mysql> SHOW VARIABLES LIKE 'char%'; +--------------------------+----------------------------+ | Variable_name | Value | +--------------------------+----------------------------+ | character_set_client | utf8mb4 | | character_set_connection | utf8mb4 | | character_set_database | utf8mb4 | | character_set_filesystem | binary | | character_set_results | utf8mb4 | | character_set_server | utf8mb4 | | character_set_system | utf8 | | character_sets_dir | /usr/share/mysql/charsets/ | +--------------------------+----------------------------+ 8 rows in set (0.01 sec) \"]},\"700\":{\"h\":\"创建mysql 新用户\",\"t\":[\"提示\",\"关于 mysql 创建用户、数据库、以及给用户赋权等操作命令，请查看 mysql 系列文章 - 创建用户以及赋权\"]},\"701\":{\"h\":\"Docker\"},\"702\":{\"h\":\"git 常用命令\",\"t\":[\"提示\",\"记录一些 git 常用命令\",\"C6JmcP\"]},\"703\":{\"h\":\"git 一个仓库管理多个项目\",\"t\":[\"提示\",\"在开发中，一个项目往往会有多个项目配合，例如采用前后端分离，往往前端一个项目，后端一个项目。项目多了，Git 就需要建立很多仓库，太过于麻烦，所以使用 git 分支功能管理多个项目，这里记录一下操作流程\"]},\"704\":{\"h\":\"建立项目仓库\",\"t\":[\"8rraa3\",\"新建仓库之后默认分配了 master 主分支，先将仓库 clone 到本地：\",\"git clone https://github.com/xxx/xxx<仓库名称>.git \"]},\"705\":{\"h\":\"查看分支\",\"t\":[\"下载仓库到本地之后，进入项目目录，查看分支信息\",\"# 查看分支信息 git branch # 查看分支状态 git status \",\"此时可以在该分支目录上初始化你的项目，在执行 git 命令提交代码\",\"git add . # 提交代码到本地仓库 git commit -u 'inid project' # 上传代码到 github 仓库 git push origin master \",\"此时 master 分支已经有一个项目了，下面我们创建新的分支管理另一个项目\"]},\"706\":{\"h\":\"创建新分支\",\"t\":[\"我们需要在 git 里面创建一个空分支，该分支不继承任何提交，没有父节点，完全是一个干净的分支，这时候就需要使用 orphan\",\"git checkout --orphan <分支名称> \",\"该命令会创建一个新的分支，并且该分支有前一个分支下的所有文件，我们不想提交任何内容，所以我们需要把当前内容全部删除\",\"git rm -rf . \",\"提示\",\"注意，如果没有在该分支下提交东西，则该分支其实并没有创建，下面随便改一点东西提交上去\",\"提交分支\",\"git commit -u 'new branch' # 此时需要指定提交分支 git push origin <分支名称> \",\"此时我们就完成了在同一个仓库管理不同项目的需求了\"]},\"707\":{\"h\":\"git 忽略已提交文件的修改\",\"t\":[\"提示\",\"在公司项目开发中，使用 git 操作时，经常会遇到项目中有个必要的配置文件，但是呢每个开发人员的本地都要修改，就导致这个文件要被反复修改，要想不冲突，就要每个人提交前，都刻意不提交该文件，很是麻烦\",\"这时候我们就可以使用 update-index 命令了\",\"git update-index --skip-worktree aaa.txt \",\"该命令的作用是，让git在搜索文件列表时，忽略某个文件，这样该文件即使有修改，git也不会关心\",\"如果我们需要查看我们忽略过哪些文件，我们可以使用如下命令查看\",\"git ls-files -v . | grep \\\"^S\\\" \",\"如果不想继续忽略该文件可以使用如下命令\",\"git update-index --no-skip-worktree aaa.txt \"]},\"708\":{\"h\":\"git stash 提交当前修改到其他分支\",\"t\":[\"提示\",\"需要在 branch B 分支上修改代码， 发现不小心在 branch A 分支下进行了修改， 又不想在branch B上重新修改一遍代码，那么就可以用到 git stash(暂存) 命令了\"]},\"709\":{\"h\":\"命令相关的操作\",\"t\":[\"# 暂时存储现在的操作 git stash # 查看暂存列表 git stash list # 恢复暂存操作 git stash pop # 删除暂存操作 git stash drop # 删除所有暂存的操作 git stash clear \",\"指定stash ID （如：stash@{1} ）即可操作指定的数据\"]},\"710\":{\"h\":\"具体操作步骤\",\"t\":[\"git stash 原理就是 把当前工作区恢复到上次提交的内容，同时备份本地所做的修改\",\"# 暂存当前操作 git stash # 切换分支 git checkout branch B # 获取最近一次stash的修改内容，之后删除栈对应的stash git stash pop \"]},\"711\":{\"h\":\"Git\"},\"712\":{\"h\":\"准备环境\"},\"713\":{\"h\":\"1.1 安装方式\",\"t\":[\"基于二进制的安装方式\",\"基于官方工具kubeadm的安装方式 官方地址\",\"基于第三方工具的安装\",\"由于国内的网络环境问题，使用官方工具 kubeadm 需要解决网络问题，所以本系列文档将从 github 下载发行版的二进制包，手动部署每个组件，组成Kubernetes集群，同时开启了集群的TLS安全认证。而不是使用 kubeadm 等自动化方式来部署集群。\"]},\"714\":{\"h\":\"1.2 准备环境\",\"t\":[\"这里准备了三台ubuntu虚拟机，每台一核cpu和2G内存，配置好root账户，并安装好了docker，后续的所有操作都是使用root账户。\",\"单Master架构图：\",\"单Master服务器规划：\",\"系统类型\",\"IP地址\",\"节点角色\",\"Hostname\",\"组件\",\"Ubuntu18.04\",\"192.168.10.101\",\"worker\",\"server01\",\"kubelet，kube-proxy，docker, etcd\",\"Ubuntu18.04\",\"192.168.10.102\",\"worker\",\"server02\",\"kube-apiserver，kube-controller-manager，kube-scheduler，docker, etcd\",\"Ubuntu18.04\",\"192.168.10.103\",\"worker\",\"server03\",\"kubelet，kube-proxy，docker, etcd\",\"先部署一套单Master架构（192.168.10.101/102/103）\"]},\"715\":{\"h\":\"1.3 操作系统初始化配置(每个虚拟机)\",\"t\":[\"# 关闭防火墙 ufw disable # 查看状态 ufw status # 关闭swap swapoff -a # 临时 sed -ri 's/.*swap.*/#&/' /etc/fstab # 永久 # 根据规划设置主机名 hostnamectl set-hostname <hostname> # 设置固定 IP ================== # 网卡信息配置在/etc/netplan/xxx.yaml文件，需做如下配置，如下配置 network: ethernets: enp0s5: dhcp4: false addresses: [192.168.10.103/24] gateway4: 192.168.10.1 nameservers: addresses: [192.168.10.1] version: 2 # 然后使用以下命令使配置即时生效 netplan apply # =========================== # 添加hosts cat >> /etc/hosts << EOF 192.168.10.101 server01 192.168.10.102 server02 192.168.10.103 server03 EOF # 将桥接的IPv4流量传递到iptables的链 cat <<EOF > /etc/sysctl.d/k8s.conf net.ipv4.ip_forward = 1 net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF # 生效配置文件 sysctl -p /etc/sysctl.d/k8s.conf # 或者 sysctl --system # 时间同步 apt install ntpdate ntpdate time.windows.com \"]},\"716\":{\"h\":\"步骤介绍\",\"t\":[\"创建 TLS 证书和秘钥\",\"安装 docker\",\"创建高可用etcd集群\",\"部署master节点\",\"部署Node节点\",\"部署CNI 网络\",\"部署CoreDns\"]},\"717\":{\"h\":\"创建TLS证书和秘钥\",\"t\":[\"如果您不想看认证授权的解释，请直接看安装 CFSSL\"]},\"718\":{\"h\":\"一、理解认证授权\",\"t\":[\"该段理解引用 kubernetes-with-ca\"]},\"719\":{\"h\":\"1.1 为什么要认证\",\"t\":[\"想理解认证，我们得从认证解决什么问题、防止什么问题的发生入手。 防止什么问题呢？是防止有人入侵你的集群，root你的机器后让我们集群依然安全吗？不是吧，root都到手了，那就为所欲为，防不胜防了。 其实网络安全本身就是为了解决在某些假设成立的条件下如何防范的问题。比如一个非常重要的假设就是两个节点或者ip之间的通讯网络是不可信任的，可能会被第三方窃取，也可能会被第三方篡改。就像我们上学时候给心仪的女孩传纸条，传送的过程可能会被别的同学偷看，甚至内容可能会从我喜欢你修改成我不喜欢你了。当然这种假设不是随便想出来的，而是从网络技术现状和实际发生的问题中发现、总结出来的。kubernetes的认证也是从这个问题出发来实现的。\"]},\"720\":{\"h\":\"1.2 概念梳理\",\"t\":[\"为了解决上面说的问题，kubernetes并不需要自己想办法，毕竟是网络安全层面的问题，是每个服务都会遇到的问题，业内也有成熟的方案来解决。这里我们一起了解一下业内方案和相关的概念。\",\"对称加密/非对称加密 这两个概念属于密码学的东西，对于没接触过的同学不太容易理解。可以参考知乎大神的生动讲解：《如何用通俗易懂的话来解释非对称加密》\",\"SSL/TLS 了解了对称加密和非对称加密后，我们就可以了解一下SSL/TLS了。同样，已经有大神总结了非常好的入门文章：《SSL/TLS协议运行机制的概述》\"]},\"721\":{\"h\":\"1.3 什么是授权\",\"t\":[\"授权的概念就简单多了，就是什么人具有什么样的权限，一般通过角色作为纽带把他们组合在一起。也就是一个角色一边拥有多种权限，一边拥有多个人。这样就把人和权限建立了一个关系。\"]},\"722\":{\"h\":\"二、kubernetes的认证授权\",\"t\":[\"Kubernetes集群的所有操作基本上都是通过kube-apiserver这个组件进行的，它提供HTTP RESTful形式的API供集群内外客户端调用。需要注意的是：认证授权过程只存在HTTPS形式的API中。也就是说，如果客户端使用HTTP连接到kube-apiserver，那么是不会进行认证授权的。所以说，可以这么设置，在集群内部组件间通信使用HTTP，集群外部就使用HTTPS，这样既增加了安全性，也不至于太复杂。 对APIServer的访问要经过的三个步骤，前面两个是认证和授权，第三个是 Admission Control，它也能在一定程度上提高安全性，不过更多是资源管理方面的作用。\"]},\"723\":{\"h\":\"2.1 kubernetes的认证\",\"t\":[\"kubernetes提供了多种认证方式，比如客户端证书、静态token、静态密码文件、ServiceAccountTokens等等。你可以同时使用一种或多种认证方式。只要通过任何一个都被认作是认证通过。下面我们就认识几个常见的认证方式。\",\"客户端证书认证 客户端证书认证叫作TLS双向认证，也就是服务器客户端互相验证证书的正确性，在都正确的情况下协调通信加密方案。 为了使用这个方案，api-server需要用--client-ca-file选项来开启。\",\"引导Token 当我们有非常多的node节点时，手动为每个node节点配置TLS认证比较麻烦，这时就可以用到引导token的认证方式，前提是需要在api-server开启 experimental-bootstrap-token-auth 特性，客户端的token信息与预先定义的token匹配认证通过后，自动为node颁发证书。当然引导token是一种机制，可以用到各种场景中。\",\"Service Account Tokens 认证 有些情况下，我们希望在pod内部访问api-server，获取集群的信息，甚至对集群进行改动。针对这种情况，kubernetes提供了一种特殊的认证方式：Service Account。 Service Account 和 pod、service、deployment 一样是 kubernetes 集群中的一种资源，用户也可以创建自己的 Service Account。 ServiceAccount 主要包含了三个内容：namespace、Token 和 CA。namespace 指定了 pod 所在的 namespace，CA 用于验证 apiserver 的证书，token 用作身份验证。它们都通过 mount 的方式保存在 pod 的文件系统中。\"]},\"724\":{\"h\":\"2.2 kubernetes的授权\",\"t\":[\"在Kubernetes1.6版本中新增角色访问控制机制（Role-Based Access，RBAC）让集群管理员可以针对特定使用者或服务账号的角色，进行更精确的资源访问控制。在RBAC中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。在一个组织中，角色是为了完成各种工作而创造，用户则依据它的责任和资格来被指派相应的角色，用户可以很容易地从一个角色被指派到另一个角色。 目前 Kubernetes 中有一系列的鉴权机制，因为Kubernetes社区的投入和偏好，相对于其它鉴权机制而言，RBAC是更好的选择。具体RBAC是如何体现在kubernetes系统中的我们会在后面的部署中逐步的深入了解。\"]},\"725\":{\"h\":\"2.3 kubernetes的AdmissionControl\",\"t\":[\"AdmissionControl - 准入控制本质上为一段准入代码，在对kubernetes api的请求过程中，顺序为：先经过认证 & 授权，然后执行准入操作，最后对目标对象进行操作。这个准入代码在api-server中，而且必须被编译到二进制文件中才能被执行。 在对集群进行请求时，每个准入控制代码都按照一定顺序执行。如果有一个准入控制拒绝了此次请求，那么整个请求的结果将会立即返回，并提示用户相应的error信息。 常用组件（控制代码）如下：\",\"AlwaysAdmit：允许所有请求\",\"AlwaysDeny：禁止所有请求，多用于测试环境\",\"ServiceAccount：它将serviceAccounts实现了自动化，它会辅助serviceAccount做一些事情，比如如果pod没有serviceAccount属性，它会自动添加一个default，并确保pod的serviceAccount始终存在\",\"LimitRanger：他会观察所有的请求，确保没有违反已经定义好的约束条件，这些条件定义在namespace中LimitRange对象中。如果在kubernetes中使用LimitRange对象，则必须使用这个插件。\",\"NamespaceExists：它会观察所有的请求，如果请求尝试创建一个不存在的namespace，则这个请求被拒绝。\"]},\"726\":{\"h\":\"三、安装 CFSSL\",\"t\":[\"需要准备的证书：\",\"ca-key.pem\",\"ca.pem\",\"etcd-key.pem\",\"etcd.pem\",\"server-key.pem\",\"server.pem\",\"admin.pem\",\"admin-key.pem\",\"kube-proxy-key.pem\",\"kube-proxy.pem\",\"使用证书的组件如下：\",\"etcd：使用 ca.pem、server-key.pem、server.pem\",\"kube-apiserver：使用 ca.pem、server-key.pem、server.pem\",\"kubelet：使用 ca.pem\",\"kube-proxy：使用 ca.pem、kube-proxy-key.pem、kube-proxy.pem\",\"kubectl：使用 ca.pem、admin-key.pem、admin.pem\",\"kube-controller-manager：使用 ca-key.pem、ca.pem\",\"我们使用CFSSL来制作证书，它是cloudflare开发的一个开源的PKI工具，是一个完备的CA服务系统，可以签署、撤销证书等，覆盖了一个证书的整个生命周期，后面只用到了它的命令行工具。\",\"提示\",\"注：一般情况下，K8S中证书只需要创建一次，以后在向集群中添加新节点时只要将/etc/kubernetes/ca目录下的证书拷贝到新节点上即可。\",\"cfssl是非常好用的CA工具，我们用它来生成证书和秘钥文件，直接使用二进制源码包安装：\",\"#下载 $ wget -q --show-progress --https-only --timestamping \\\\ https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 \\\\ https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 #修改为可执行权限 $ chmod +x cfssl_linux-amd64 cfssljson_linux-amd64 #移动到bin目录 $ mv cfssl_linux-amd64 /usr/local/bin/cfssl $ mv cfssljson_linux-amd64 /usr/local/bin/cfssljson #验证 $ cfssl version \"]},\"727\":{\"h\":\"证书位置\",\"t\":[\"#所有证书相关的东西都放在这, 后面所有的证书都放在该目录下, 你可以自定义 mkdir -p /etc/kubernetes/ca \"]},\"728\":{\"h\":\"四、创建 CA (根证书)\"},\"729\":{\"h\":\"4.1 创建 CA 配置文件\",\"t\":[\"cd /etc/kubernetes/ca # 创建如下的ca-config.json文件(* 也可以不执行该命令，直接创建下面👇的文件) cfssl print-defaults config > ca-config.json # 修改 ca-config.json 文件，如下： vim ca-config.json # 过期时间设置成了 87600h { \\\"signing\\\": { \\\"default\\\": { \\\"expiry\\\": \\\"87600h\\\" }, \\\"profiles\\\": { \\\"kubernetes\\\": { \\\"usages\\\": [ \\\"signing\\\", \\\"key encipherment\\\", \\\"server auth\\\", \\\"client auth\\\" ], \\\"expiry\\\": \\\"87600h\\\" } } } } \",\"字段说明\",\"ca-config.json：可以定义多个 profiles，分别指定不同的过期时间、使用场景等参数；后续在签名证书时使用某个 profile；\",\"signing：表示该证书可用于签名其它证书；生成的 ca.pem 证书中 CA=TRUE；\",\"server auth：表示client可以用该 CA 对server提供的证书进行验证；\",\"client auth：表示server可以用该CA对client提供的证书进行验证；\"]},\"730\":{\"h\":\"4.2 创建 CA 证书签名请求\",\"t\":[\"# 创建如下的ca-csr.json文件 cfssl print-defaults csr > ca-csr.json # 修改 ca-csr.json 文件，如下： vim ca-csr.json # ca-csr.josn 文件内容如下 { \\\"CN\\\": \\\"kubernetes\\\", \\\"key\\\": { \\\"algo\\\": \\\"rsa\\\", \\\"size\\\": 2048 }, \\\"names\\\": [ { \\\"C\\\": \\\"CN\\\", \\\"ST\\\": \\\"BeiJing\\\", \\\"L\\\": \\\"BeiJing\\\", \\\"O\\\": \\\"k8s\\\", \\\"OU\\\": \\\"System\\\" } ], \\\"ca\\\": { \\\"expiry\\\": \\\"87600h\\\" } } \",\"字段说明\",\"\\\"CN\\\"：Common Name，kube-apiserver 从证书中提取该字段作为请求的用户名 (User Name)；浏览器使用该字段验证网站是否合法；\",\"\\\"O\\\"：Organization，kube-apiserver 从证书中提取该字段作为请求用户所属的组 (Group)；\"]},\"731\":{\"h\":\"4.3 生成 CA 证书和私钥\",\"t\":[\"cfssl gencert -initca ca-csr.json | cfssljson -bare ca # 生成完成后会有以下文件（我们最终想要的就是ca-key.pem和ca.pem，一个秘钥，一个证书） > ls > ca-config.json ca.csr ca-csr.json ca-key.pem ca.pem \"]},\"732\":{\"h\":\"五、创建 ETCD 证书\"},\"733\":{\"h\":\"5.1 生成 etcd 证书配置\",\"t\":[\"# etcd证书放在这 mkdir -p /etc/kubernetes/ca/etcd cd /etc/kubernetes/ca/etcd vim etcd-csr.json # 文件内容如下 { \\\"CN\\\": \\\"etcd\\\", \\\"hosts\\\": [ \\\"127.0.0.1\\\", \\\"192.168.10.102\\\" ], \\\"key\\\": { \\\"algo\\\": \\\"rsa\\\", \\\"size\\\": 2048 }, \\\"names\\\": [ { \\\"C\\\": \\\"CN\\\", \\\"ST\\\": \\\"Beijing\\\", \\\"L\\\": \\\"XS\\\", \\\"O\\\": \\\"k8s\\\", \\\"OU\\\": \\\"System\\\" } ] } \",\"字段说明\",\"hosts：指定授权使用该证书的 IP 或域名列表，如果有部署多个 etcd，那么就需要填入其他 etcd 的 IP 或域名列表，我这里只部署一台所以就写一个☝️\",\"提示\",\"注：上述文件hosts字段中IP为所有etcd节点的集群内部通信IP，一个都不能少！为了方便后期扩容可以多写几个预留的IP。\"]},\"734\":{\"h\":\"5.2 使用根证书(ca.pem)签发etcd证书\",\"t\":[\"cfssl gencert \\\\ -ca=/etc/kubernetes/ca/ca.pem \\\\ -ca-key=/etc/kubernetes/ca/ca-key.pem \\\\ -config=/etc/kubernetes/ca/ca-config.json \\\\ -profile=kubernetes etcd-csr.json | cfssljson -bare etcd # 跟之前类似生成三个文件etcd.csr是个中间证书请求文件，我们最终要的是etcd-key.pem和etcd.pem > ls > etcd.csr etcd-csr.json etcd-key.pem etcd.pem \"]},\"735\":{\"h\":\"六、创建 Api-server 证书\",\"t\":[\"controller-manager： 一般与api-server在同一台机器上，所以可以使用非安全端口与api-server通讯，不需要生成证书和私钥\",\"scheduler： 一般与apiserver在同一台机器上，所以可以使用非安全端口与apiserver通讯。不需要生成证书和私钥。\"]},\"736\":{\"h\":\"6.1 生成 Api-server 证书配置\",\"t\":[\"# api-server证书放在这 mkdir -p /etc/kubernetes/ca/server cd /etc/kubernetes/ca/server vim server-csr.json # 内容如下 { \\\"CN\\\": \\\"kubernetes\\\", \\\"hosts\\\": [ \\\"127.0.0.1\\\", \\\"10.0.0.1\\\", \\\"192.168.10.101\\\", \\\"192.168.10.102\\\", \\\"192.168.10.103\\\", \\\"kubernetes\\\", \\\"kubernetes.default\\\", \\\"kubernetes.default.svc\\\", \\\"kubernetes.default.svc.cluster\\\", \\\"kubernetes.default.svc.cluster.local\\\" ], \\\"key\\\": { \\\"algo\\\": \\\"rsa\\\", \\\"size\\\": 2048 }, \\\"names\\\": [ { \\\"C\\\": \\\"CN\\\", \\\"ST\\\": \\\"Beijing\\\", \\\"L\\\": \\\"XS\\\", \\\"O\\\": \\\"k8s\\\", \\\"OU\\\": \\\"System\\\" } ] } \",\"kubernetes 服务的服务 IP（一般是 kube-apiserver 指定的 service-cluster-ip-range 网段的第一个IP，如 10.0.0.1）\"]},\"737\":{\"h\":\"6.2 使用根证书(ca.pem)签发 apiserver 证书\",\"t\":[\"cfssl gencert \\\\ -ca=/etc/kubernetes/ca/ca.pem \\\\ -ca-key=/etc/kubernetes/ca/ca-key.pem \\\\ -config=/etc/kubernetes/ca/ca-config.json \\\\ -profile=kubernetes server-csr.json | cfssljson -bare server # 跟之前类似生成三个文件server.csr是个中间证书请求文件，我们最终要的是server-key.pem和server.pem > ls > server-csr.json server.csr server.pem server-key.pem \"]},\"738\":{\"h\":\"七、创建 Admin 证书\"},\"739\":{\"h\":\"7.1 生成 Admin 证书配置\",\"t\":[\"# kubectl证书放在这，由于kubectl相当于系统管理员，我们使用admin命名 mkdir -p /etc/kubernetes/ca/admin cd /etc/kubernetes/ca/admin vim admin-csr.json # 内容如下 { \\\"CN\\\": \\\"admin\\\", \\\"hosts\\\": [], \\\"key\\\": { \\\"algo\\\": \\\"rsa\\\", \\\"size\\\": 2048 }, \\\"names\\\": [ { \\\"C\\\": \\\"CN\\\", \\\"ST\\\": \\\"BeiJing\\\", \\\"L\\\": \\\"BeiJing\\\", \\\"O\\\": \\\"system:masters\\\", \\\"OU\\\": \\\"System\\\" } ] } \"]},\"740\":{\"h\":\"7.2 使用根证书(ca.pem)签发admin证书\",\"t\":[\"cfssl gencert \\\\ -ca=/etc/kubernetes/ca/ca.pem \\\\ -ca-key=/etc/kubernetes/ca/ca-key.pem \\\\ -config=/etc/kubernetes/ca/ca-config.json \\\\ -profile=kubernetes admin-csr.json | cfssljson -bare admin # 我们最终要的是admin-key.pem和admin.pem > ls > admin.csr admin-csr.json admin-key.pem admin.pem \"]},\"741\":{\"h\":\"八、创建 kube-proxy 证书\"},\"742\":{\"h\":\"8.1 生成 kube-proxy 证书配置\",\"t\":[\"# proxy证书放在这 mkdir -p /etc/kubernetes/ca/kube-proxy cd /etc/kubernetes/ca/kube-proxy vim kube-proxy-csr.json # 内容如下 { \\\"CN\\\": \\\"system:kube-proxy\\\", \\\"hosts\\\": [], \\\"key\\\": { \\\"algo\\\": \\\"rsa\\\", \\\"size\\\": 2048 }, \\\"names\\\": [ { \\\"C\\\": \\\"CN\\\", \\\"ST\\\": \\\"Beijing\\\", \\\"L\\\": \\\"BeiJing\\\", \\\"O\\\": \\\"k8s\\\", \\\"OU\\\": \\\"System\\\" } ] } \",\"字段说明：\",\"CN 指定该证书的 User 为 system:kube-proxy\",\"kube-apiserver 预定义的 RoleBinding system:node-proxy 将User system:kube-proxy 与 Role system:node-proxier 绑定，授予了调用 kube-api-server proxy的相关 API 的权限\"]},\"743\":{\"h\":\"8.2 使用根证书(ca.pem)签发proxy证书\",\"t\":[\"cfssl gencert \\\\ -ca=/etc/kubernetes/ca/ca.pem \\\\ -ca-key=/etc/kubernetes/ca/ca-key.pem \\\\ -config=/etc/kubernetes/ca/ca-config.json \\\\ -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy # 我们最终要的是kube-proxy-key.pem和kube-proxy.pem > ls > kube-proxy.csr kube-proxy-csr.json kube-proxy-key.pem kube-proxy.pem \"]},\"744\":{\"h\":\"九、分发证书\",\"t\":[\"将生成的证书和秘钥文件（后缀名为.pem）拷贝到所有机器的 /etc/kubernetes/ca 目录下备用；\",\"# 最后查看生成的证书目录 > ls /etc/kubernetes/ca > admin ca-config.json ca.csr ca-csr.json ca-key.pem ca.pem etcd kube-proxy apiserver # 分发证书 scp -r /etc/kubernetes/ca root@其他节点ip:/etc/kubernetes/ \"]},\"745\":{\"h\":\"十、启用 TLS Bootstrapping 机制\",\"t\":[\"TLS Bootstraping：Master apiserver启用TLS认证后，Node节点kubelet和kube-proxy要与kube-apiserver进行通信，必须使用CA签发的有效证书才可以，当Node节点很多时，这种客户端证书颁发需要大量工作，同样也会增加集群扩展复杂度。为了简化流程，Kubernetes引入了TLS bootstraping机制来自动颁发客户端证书，kubelet会以一个低权限用户自动向apiserver申请证书，kubelet的证书由apiserver动态签署。所以强烈建议在Node上使用这种方式，目前主要用于kubelet，kube-proxy还是由我们统一颁发一个证书。\",\"TLS bootstraping 工作流程：\"]},\"746\":{\"h\":\"10.1 生成token认证文件\",\"t\":[\"# 生成随机token head -c 16 /dev/urandom | od -An -t x | tr -d ' ' # 按照固定格式写入token.csv，注意替换token内容 echo \\\"734883758a7159caba1d9501c22f1408,kubelet-bootstrap,10001,\\\\\\\"system:kubelet-bootstrap\\\\\\\"\\\" > /etc/kubernetes/ca/server/token.csv \"]},\"747\":{\"h\":\"部署etcd节点\"},\"748\":{\"h\":\"1. 简介\",\"t\":[\"kubernetes需要存储很多东西，像它本身的节点信息，组件信息，还有通过kubernetes运行的pod，deployment，service等等。都需要持久化。etcd 就是它的数据中心。生产环境中为了保证数据中心的高可用和数据的一致性，一般会部署最少三个节点。我们这里以学习为主就只在主节点部署一个实例。\"]},\"749\":{\"h\":\"2. 从Github下载二进制文件\",\"t\":[\"下载地址：https://github.com/etcd-io/etcd/releases\",\"我这里下载的版本是 v3.4.10\"]},\"750\":{\"h\":\"3. 部署 ETCD\"},\"751\":{\"h\":\"1. 创建工作目录并解压二进制包\",\"t\":[\"mkdir /etc/kubernetes/etcd/{bin,cfg} -p # 解压缩 tar zxvf etcd-v3.4.10-linux-amd64.tar.gz # 移动 etcd 二进制文件 mv etcd-v3.4.10-linux-amd64/{etcd,etcdctl} /etc/kubernetes/etcd/bin/ \"]},\"752\":{\"h\":\"2. 创建etcd配置文件\",\"t\":[\"cat > /etc/kubernetes/etcd/cfg/etcd.conf << EOF #[Member] ETCD_NAME=\\\"etcd-1\\\" ETCD_DATA_DIR=\\\"/var/lib/etcd/default.etcd\\\" ETCD_LISTEN_PEER_URLS=\\\"https://192.168.10.102:2380\\\" ETCD_LISTEN_CLIENT_URLS=\\\"https://192.168.10.102:2379\\\" #[Clustering] ETCD_INITIAL_ADVERTISE_PEER_URLS=\\\"https://192.168.10.102:2380\\\" ETCD_ADVERTISE_CLIENT_URLS=\\\"https://192.168.10.102:2379\\\" ETCD_INITIAL_CLUSTER=\\\"etcd-1=https://192.168.10.102:2380\\\" ETCD_INITIAL_CLUSTER_TOKEN=\\\"etcd-cluster\\\" ETCD_INITIAL_CLUSTER_STATE=\\\"new\\\" EOF \",\"字段描述：\",\"ETCD_NAME：节点名称，集群中唯一\",\"ETCD_DATA_DIR：存放数据的目录\",\"ETCD_LISTEN_PEER_URLS：集群通信监听地址\",\"ETCD_LISTEN_CLIENT_URLS：客户端访问监听地址\",\"ETCD_INITIAL_ADVERTISE_PEER_URLS：集群通告地址\",\"ETCD_ADVERTISE_CLIENT_URLS：客户端通告地址\",\"ETCD_INITIAL_CLUSTER：集群节点地址，多个 etcd 时，参考格式：节点名称1:ETCD_LISTEN_PEER_URLS,节点名称2:ETCD_LISTEN_PEER_URLS\",\"ETCD_INITIAL_CLUSTER_TOKEN：集群Token\",\"ETCD_INITIAL_CLUSTER_STATE：加入集群的当前状态，new是新集群，existing表示加入已有集群\",\"提示\",\"etcd 监听 2379 端口，是为了接收组件如：api-server 的数据，2380 端口是为了接收其他 etcd 的数据\"]},\"753\":{\"h\":\"3. 通过systemd管理etcd\",\"t\":[\"vim /lib/systemd/system/etcd.service # etcd.service 内容如下 [Unit] Description=Etcd Server After=network.target After=network-online.target Wants=network-online.target [Service] Type=notify WorkingDirectory=/var/lib/etcd/ EnvironmentFile=/etc/kubernetes/etcd/cfg/etcd.conf ExecStart=/etc/kubernetes/etcd/bin/etcd \\\\ --cert-file=/etc/kubernetes/ca/etcd/etcd.pem \\\\ --key-file=/etc/kubernetes/ca/etcd/etcd-key.pem \\\\ --peer-cert-file=/etc/kubernetes/ca/etcd/etcd.pem \\\\ --peer-key-file=/etc/kubernetes/ca/etcd/etcd-key.pem \\\\ --trusted-ca-file=/etc/kubernetes/ca/ca.pem \\\\ --peer-trusted-ca-file=/etc/kubernetes/ca/ca.pem \\\\ --logger=zap Restart=on-failure LimitNOFILE=65536 [Install] WantedBy=multi-user.target \",\"提示\",\"注意：请修改你的证书存放位置\"]},\"754\":{\"h\":\"4. 启动并设置开机启动\",\"t\":[\"systemctl daemon-reload systemctl start etcd systemctl enable etcd # 查看日志是否启动异常 journalctl -f -u etcd \"]},\"755\":{\"h\":\"5. 部署多个etcd\",\"t\":[\"提示\",\"如果你需要部署多个 etcd 那么将该节点生成的文件拷贝到其他节点，再修改一下配置就可以了\",\"# 拷贝 etcd 二进制文件以及配置 scp -r /etc/kubernetes/etcd/ root@其他节点IP:/etc/kubernetes/ # 拷贝 service 文件 scp -r /lib/systemd/system/etcd.service root@其他节点IP:/lib/systemd/system/ # 拷贝 证书 scp -r /etc/kubernetes/ca/ root@其他节点IP:/etc/kubernetes/ \",\"然后在节点分别修改etcd.conf配置文件中的节点名称和当前服务器IP：\",\"vim /etc/kubernetes/etcd/cfg/etcd.conf #[Member] ETCD_NAME=\\\"etcd-2\\\" # 修改此处，节点2改为etcd-2 ETCD_DATA_DIR=\\\"/var/lib/etcd/default.etcd\\\" ETCD_LISTEN_PEER_URLS=\\\"https://192.168.10.101:2380\\\" # 修改此处为当前服务器IP ETCD_LISTEN_CLIENT_URLS=\\\"https://192.168.10.101:2379\\\" # 修改此处为当前服务器IP #[Clustering] ETCD_INITIAL_ADVERTISE_PEER_URLS=\\\"https://192.168.10.101:2380\\\" # 修改此处为当前服务器IP ETCD_ADVERTISE_CLIENT_URLS=\\\"https://192.168.10.101:2379\\\" # 修改此处为当前服务器IP ETCD_INITIAL_CLUSTER=\\\"etcd-2=https://192.168.10.101:2380,etcd-1=https://192.168.10.102:2380\\\" ETCD_INITIAL_CLUSTER_TOKEN=\\\"etcd-cluster\\\" ETCD_INITIAL_CLUSTER_STATE=\\\"new\\\" \",\"最后启动etcd并设置开机启动\"]},\"756\":{\"h\":\"6. 查看集群状态\",\"t\":[\"ETCDCTL_API=3 /etc/kubernetes/etcd/bin/etcdctl --cacert=/etc/kubernetes/ca/ca.pem --cert=/etc/kubernetes/ca/etcd/etcd.pem --key=/etc/kubernetes/ca/etcd/etcd-key.pem --endpoints=\\\"https://192.168.10.102:2379\\\" endpoint health # 输出该结果代表 etcd 部署成功 > https://192.168.10.102:2379 is healthy: successfully committed proposal: took = 5.838821ms \"]},\"757\":{\"h\":\"部署 Master 节点\",\"t\":[\"kubernetes master 节点包含的组件：\",\"kube-apiserver\",\"kube-controller-manager\",\"kube-scheduler\",\"apiserver 、controller-manager 和 scheduler 三者的功能紧密相关，一般运行在同一个机器上，我们可以把它们当做一个整体来看，所以保证了apiserver的高可用即是保证了三个模块的高可用。也可以同时启动多个controller-manager进程，但只有一个会被选举为leader提供服务。\",\"提示\",\"docker 安装方式请看ubuntu安装docker\"]},\"758\":{\"h\":\"1. 从Github下载二进制文件\",\"t\":[\"下载地址：https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.18.md#v1183\",\"提示\",\"注：打开链接你会发现里面有很多包，下载一个server包就够了，包含了Master和Worker Node二进制文件。\"]},\"759\":{\"h\":\"2. 解压二进制包\",\"t\":[\"# 创建工作目录 mkdir -p /etc/kubernetes/server/{bin,cfg,logs} # 解压缩 tar zxvf kubernetes-server-linux-amd64.tar.gz # 移动 二进制文件 cd kubernetes/server/bin cp kube-apiserver kube-scheduler kube-controller-manager /etc/kubernetes/server/bin cp kubectl /usr/local/bin/ \"]},\"760\":{\"h\":\"3. TLS 证书文件\",\"t\":[\"提示\",\"以下pem证书文件以及 token.csv我们在 创建 TLS 证书和秘钥 这一步中已经创建过了。\"]},\"761\":{\"h\":\"4. 创建 kubectl kubeconfig 文件\",\"t\":[\"# 指定apiserver的地址和证书位置（ip自行修改） kubectl config set-cluster kubernetes \\\\ --certificate-authority=/etc/kubernetes/ca/ca.pem \\\\ --embed-certs=true \\\\ --server=https://192.168.10.102:6443 # 设置客户端认证参数，指定admin证书和秘钥 kubectl config set-credentials admin \\\\ --client-certificate=/etc/kubernetes/ca/admin/admin.pem \\\\ --embed-certs=true \\\\ --client-key=/etc/kubernetes/ca/admin/admin-key.pem # 关联用户和集群 kubectl config set-context kubernetes \\\\ --cluster=kubernetes --user=admin # 设置当前上下文 kubectl config use-context kubernetes # 设置结果就是一个配置文件，可以看看内容 cat ~/.kube/config \"]},\"762\":{\"h\":\"一、部署 Api-server 组件\"},\"763\":{\"h\":\"1 简介\",\"t\":[\"kube-apiserver是Kubernetes最重要的核心组件之一，主要提供以下的功能\",\"提供集群管理的REST API接口，包括认证授权（我们现在没有用到）数据校验以及集群状态变更等\",\"提供其他模块之间的数据交互和通信的枢纽（其他模块通过API Server查询或修改数据，只有API Server才直接操作etcd）\",\"生产环境为了保证apiserver的高可用一般会部署2+个节点，在上层做一个lb做负载均衡，比如haproxy。由于单节点和多节点在apiserver这一层说来没什么区别，所以我就部署一个节点就足够\"]},\"764\":{\"h\":\"2. 创建kube-apiserver的配置文件\",\"t\":[\"# 创建 apiserver 文件 vim /etc/kubernetes/server/cfg/kube-apiserver.conf # 内容如下 KUBE_APISERVER_OPTS=\\\"--logtostderr=false \\\\ --v=2 \\\\ --log-dir=/etc/kubernetes/server/logs \\\\ --etcd-servers=https://192.168.10.102:2379 \\\\ --bind-address=192.168.10.102 \\\\ --secure-port=6443 \\\\ --advertise-address=192.168.10.102 \\\\ --allow-privileged=true \\\\ --service-cluster-ip-range=10.0.0.0/24 \\\\ --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,NodeRestriction \\\\ --authorization-mode=RBAC,Node \\\\ --enable-bootstrap-token-auth=true \\\\ --token-auth-file=/etc/kubernetes/ca/server/token.csv \\\\ --service-node-port-range=30000-32767 \\\\ --kubelet-client-certificate=/etc/kubernetes/ca/server/server.pem \\\\ --kubelet-client-key=/etc/kubernetes/ca/server/server-key.pem \\\\ --tls-cert-file=/etc/kubernetes/ca/server/server.pem \\\\ --tls-private-key-file=/etc/kubernetes/ca/server/server-key.pem \\\\ --client-ca-file=/etc/kubernetes/ca/ca.pem \\\\ --service-account-key-file=/etc/kubernetes/ca/ca-key.pem \\\\ --etcd-cafile=/etc/kubernetes/ca/ca.pem \\\\ --etcd-certfile=/etc/kubernetes/ca/server/server.pem \\\\ --etcd-keyfile=/etc/kubernetes/ca/server/server-key.pem \\\\ --audit-log-maxage=30 \\\\ --audit-log-maxbackup=3 \\\\ --audit-log-maxsize=100 \\\\ --audit-log-path=/etc/kubernetes/server/logs/k8s-audit.log\\\" \",\"字段描述:\",\"--logtostderr：启用日志\",\"---v：日志等级\",\"--log-dir：日志目录\",\"--etcd-servers：etcd集群地址\",\"--bind-address：监听地址\",\"--secure-port：https安全端口\",\"--advertise-address：集群通告地址\",\"--allow-privileged：启用授权\",\"--service-cluster-ip-range：Service虚拟IP地址段\",\"--enable-admission-plugins：准入控制模块\",\"--authorization-mode：认证授权，启用RBAC授权和节点自管理\",\"--enable-bootstrap-token-auth：启用TLS bootstrap机制\",\"--token-auth-file：bootstrap token文件\",\"--service-node-port-range：Service nodeport类型默认分配端口范围\",\"--kubelet-client-xxx：apiserver访问kubelet客户端证书\",\"--tls-xxx-file：apiserver https证书\",\"--etcd-xxxfile：连接Etcd集群证书\",\"--audit-log-xxx：审计日志\"]},\"765\":{\"h\":\"3. TLS Bootstrapping 机制\",\"t\":[\"token-auth-file 需要的 token 文件请查看 [创建 TLS 证书和秘钥](/passages/2020-08-12-kubernetes-generate-tls.html#10.1 生成token认证文件)\"]},\"766\":{\"h\":\"4. 创建 kube-apiserver的service配置文件\",\"t\":[\"# 创建 kube-apiserver.service 文件 vim /lib/systemd/system/kube-apiserver.service # kube-apiserver.service 内容如下 [Unit] Description=Kubernetes API Service Documentation=https://github.com/kubernetes/kubernetes After=network.target [Service] EnvironmentFile=/etc/kubernetes/server/cfg/kube-apiserver.conf ExecStart=/etc/kubernetes/server/bin/kube-apiserver $KUBE_APISERVER_OPTS Restart=on-failure Type=notify RestartSec=5 LimitNOFILE=65536 [Install] WantedBy=multi-user.target \"]},\"767\":{\"h\":\"5. 启动并设置开机启动\",\"t\":[\"systemctl daemon-reload systemctl start kube-apiserver systemctl enable kube-apiserver # 查看日志是否启动异常 journalctl -f -u kube-apiserver \"]},\"768\":{\"h\":\"6. 授权kubelet-bootstrap用户允许请求证书\",\"t\":[\"kubectl create clusterrolebinding kubelet-bootstrap \\\\ --clusterrole=system:node-bootstrapper \\\\ --user=kubelet-bootstrap \\\\ --group=kubelet-bootstrap \"]},\"769\":{\"h\":\"二、部署 kube-controller-manager 组件\"},\"770\":{\"h\":\"1. 简介\",\"t\":[\"Controller Manager由kube-controller-manager和cloud-controller-manager组成，是Kubernetes的大脑，它通过apiserver监控整个集群的状态，并确保集群处于预期的工作状态。 kube-controller-manager由一系列的控制器组成，像Replication Controller控制副本，Node Controller节点控制，Deployment Controller管理deployment等等 cloud-controller-manager在Kubernetes启用Cloud Provider的时候才需要，用来配合云服务提供商的控制\",\"controller-manager、scheduler和apiserver 三者的功能紧密相关，一般运行在同一个机器上，我们可以把它们当做一个整体来看，所以保证了apiserver的高可用即是保证了三个模块的高可用。也可以同时启动多个controller-manager进程，但只有一个会被选举为leader提供服务。\"]},\"771\":{\"h\":\"2. 创建kube-controller的配置文件\",\"t\":[\"# 创建kube-controller-manager.conf配置文件 vim /etc/kubernetes/server/cfg/kube-controller-manager.conf # kube-controller-manager.conf 内容如下: KUBE_CONTROLLER_MANAGER_OPTS=\\\"--logtostderr=false \\\\ --v=2 \\\\ --log-dir=/etc/kubernetes/server/logs \\\\ --leader-elect=true \\\\ --master=127.0.0.1:8080 \\\\ --bind-address=127.0.0.1 \\\\ --allocate-node-cidrs=true \\\\ --cluster-cidr=10.244.0.0/16 \\\\ --service-cluster-ip-range=10.0.0.0/24 \\\\ --cluster-signing-cert-file=/etc/kubernetes/ca/ca.pem \\\\ --cluster-signing-key-file=/etc/kubernetes/ca/ca-key.pem \\\\ --root-ca-file=/etc/kubernetes/ca/ca.pem \\\\ --service-account-private-key-file=/etc/kubernetes/ca/ca-key.pem \\\\ --experimental-cluster-signing-duration=87600h0m0s\\\" \",\"字段描述：\",\"--master：通过本地非安全本地端口8080连接apiserver。\",\"--leader-elect：当该组件启动多个时，自动选举（HA）\",\"--cluster-signing-cert-file/--cluster-signing-key-file：自动为kubelet颁发证书的CA，与apiserver保持一致\"]},\"772\":{\"h\":\"3. 创建 kube-controller的service配置文件\",\"t\":[\"# 创建kube-controller-manager.service文件 vim /lib/systemd/system/kube-controller-manager.service # kube-controller-manager.service 内容如下: [Unit] Description=Kubernetes Controller Manager Documentation=https://github.com/kubernetes/kubernetes [Service] EnvironmentFile=/etc/kubernetes/server/cfg/kube-controller-manager.conf ExecStart=/etc/kubernetes/server/bin/kube-controller-manager $KUBE_CONTROLLER_MANAGER_OPTS Restart=on-failure RestartSec=5 [Install] WantedBy=multi-user.target \"]},\"773\":{\"h\":\"4. 启动并设置开机启动\",\"t\":[\"systemctl daemon-reload systemctl start kube-controller-manager systemctl enable kube-controller-manager # 查看日志是否启动异常 journalctl -f -u kube-controller-manager \"]},\"774\":{\"h\":\"三、部署 kube-scheduler 组件\"},\"775\":{\"h\":\"1. 简介\",\"t\":[\"kube-scheduler 负责分配调度Pod到集群内的节点上，它监听kube-apiserver，查询还未分配Node的Pod，然后根据调度策略为这些Pod分配节点。我们前面讲到的kubernetes的各种调度策略就是它实现的。\"]},\"776\":{\"h\":\"2. 创建kube-scheduler的配置文件\",\"t\":[\"# 创建kube-scheduler.conf配置文件 vim /etc/kubernetes/server/cfg/kube-scheduler.conf # kube-scheduler.conf 内容如下: KUBE_SCHEDULER_OPTS=\\\"--logtostderr=false \\\\ --v=2 \\\\ --log-dir=/etc/kubernetes/server/logs \\\\ --leader-elect \\\\ --master=127.0.0.1:8080 \\\\ --bind-address=127.0.0.1\\\" \",\"字段描述：\",\"--master：通过本地非安全本地端口8080连接apiserver。\",\"--leader-elect：当该组件启动多个时，自动选举（HA）\"]},\"777\":{\"h\":\"3. 创建 kube-controller的service配置文件\",\"t\":[\"# 创建kube-scheduler.service文件 vim /lib/systemd/system/kube-scheduler.service # kube-scheduler.service 内容如下: [Unit] Description=Kubernetes Scheduler Documentation=https://github.com/kubernetes/kubernetes [Service] EnvironmentFile=/etc/kubernetes/server/cfg/kube-scheduler.conf ExecStart=/etc/kubernetes/server/bin/kube-scheduler $KUBE_SCHEDULER_OPTS Restart=on-failure [Install] WantedBy=multi-user.target \"]},\"778\":{\"h\":\"4. 启动并设置开机启动\",\"t\":[\"systemctl daemon-reload systemctl start kube-scheduler systemctl enable kube-scheduler # 查看日志是否启动异常 journalctl -f -u kube-scheduler \"]},\"779\":{\"h\":\"四、查看集群状态\",\"t\":[\"所有组件都已经启动成功，通过kubectl工具查看当前集群组件状态：\",\"kubectl get cs NAME STATUS MESSAGE ERROR scheduler Healthy ok controller-manager Healthy ok etcd-0 Healthy {\\\"health\\\":\\\"true\\\"} \",\"如上输出说明Master节点组件运行正常。\"]},\"780\":{\"h\":\"部署Node节点\",\"t\":[\"kubernetes master 节点包含的组件：\",\"kubelet\",\"kube-proxy\",\"core-dns\"]},\"781\":{\"h\":\"一、创建工作目录并拷贝二进制文件\",\"t\":[\"# 在所有worker node创建工作目录： mkdir -p /etc/kubernetes/{bin,cfg,logs} # 从master节点拷贝： cd kubernetes/server/bin scp kubelet kube-proxy root@192.168.10.101:/etc/kubernetes/bin scp kubelet kube-proxy root@192.168.10.103:/etc/kubernetes/bin # 分发 证书 scp -r /etc/kubernetes/ca root@192.168.10.101:/etc/kubernetes/ scp -r /etc/kubernetes/ca root@192.168.10.103:/etc/kubernetes/ \"]},\"782\":{\"h\":\"二、部署kubelet\",\"t\":[\"我们这里让kubelet使用引导token的方式认证，所以认证方式跟之前的组件不同，它的证书不是手动生成，而是由工作节点TLS BootStrap 向 api-server 请求，由主节点的controller-manager 自动签发。\"]},\"783\":{\"h\":\"2.1 创建kubelet配置文件\",\"t\":[\"# 需要修改 hostname-override cat > /etc/kubernetes/cfg/kubelet.conf << EOF KUBELET_OPTS=\\\"--logtostderr=false \\\\\\\\ --v=2 \\\\\\\\ --log-dir=/etc/kubernetes/logs \\\\\\\\ --hostname-override=server01 \\\\\\\\ --network-plugin=cni \\\\\\\\ --cni-bin-dir=/opt/cni/bin \\\\\\\\ --kubeconfig=/etc/kubernetes/cfg/kubelet.kubeconfig \\\\\\\\ --bootstrap-kubeconfig=/etc/kubernetes/cfg/bootstrap.kubeconfig \\\\\\\\ --config=/etc/kubernetes/cfg/kubelet-config.yml \\\\\\\\ --cert-dir=/etc/kubernetes/ca \\\\\\\\ --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google-containers/pause-amd64:3.0\\\" EOF \",\"字段描述：\",\"--hostname-override：显示名称，集群中唯一，需要修改成你之前设置主机名，我的是 server01\",\"--network-plugin：启用CNI\",\"--cni-bin-dir：实际的 CNI 插件可执行文件位置\",\"--kubeconfig：用于连接apiserver\",\"--bootstrap-kubeconfig：首次启动向apiserver申请证书\",\"--config：配置参数文件\",\"--cert-dir：kubelet证书生成目录\",\"--pod-infra-container-image：管理Pod网络容器的镜像\"]},\"784\":{\"h\":\"2.2 配置参数文件\",\"t\":[\"cat > /etc/kubernetes/cfg/kubelet-config.yml << EOF kind: KubeletConfiguration apiVersion: kubelet.config.k8s.io/v1beta1 address: 0.0.0.0 port: 10250 readOnlyPort: 10255 cgroupDriver: cgroupfs clusterDNS: - 10.0.0.2 clusterDomain: cluster.local failSwapOn: false authentication: anonymous: enabled: false webhook: cacheTTL: 2m0s enabled: true x509: clientCAFile: /etc/kubernetes/ca/ca.pem authorization: mode: Webhook webhook: cacheAuthorizedTTL: 5m0s cacheUnauthorizedTTL: 30s evictionHard: imagefs.available: 15% memory.available: 100Mi nodefs.available: 10% nodefs.inodesFree: 5% maxOpenFiles: 1000000 maxPods: 110 EOF \"]},\"785\":{\"h\":\"2.3 生成bootstrap.kubeconfig文件\",\"t\":[\"这个配置是用来完成bootstrap token认证的，保存了像用户，token等重要的认证信息，这个文件可以借助kubectl命令生成：（也可以自己写配置）\",\"# kubectl 命令可以在 master 节点执行，也可以把 kubectl 命令拷贝到 node 节点 scp /usr/local/bin/kubectl root@192.168.10.101:/usr/local/bin # 指定apiserver的地址和证书位置（ip自行修改） kubectl config set-cluster kubernetes \\\\ --certificate-authority=/etc/kubernetes/ca/ca.pem \\\\ --embed-certs=true \\\\ --server=https://192.168.10.102:6443 \\\\ --kubeconfig=bootstrap.kubeconfig # 设置客户端认证参数(注意替换token) kubectl config set-credentials kubelet-bootstrap \\\\ --token=71dacbf4a541549a2426e3fae9b03a0f \\\\ --kubeconfig=bootstrap.kubeconfig # 设置上下文 kubectl config set-context default \\\\ --cluster=kubernetes \\\\ --user=kubelet-bootstrap \\\\ --kubeconfig=bootstrap.kubeconfig # 设置当前上下文 kubectl config use-context default --kubeconfig=bootstrap.kubeconfig # 移动到配置文件路径 mv bootstrap.kubeconfig /etc/kubernetes/cfg \"]},\"786\":{\"h\":\"2.4 systemd管理kubelet\",\"t\":[\"cat > /lib/systemd/system/kubelet.service << EOF [Unit] Description=Kubernetes Kubelet After=docker.service [Service] EnvironmentFile=/etc/kubernetes/cfg/kubelet.conf ExecStart=/etc/kubernetes/bin/kubelet \\\\$KUBELET_OPTS Restart=on-failure LimitNOFILE=65536 [Install] WantedBy=multi-user.target EOF \"]},\"787\":{\"h\":\"2.5 启动并设置开机启动\",\"t\":[\"systemctl daemon-reload systemctl start kubelet systemctl enable kubelet # 查看日志是否启动异常 journalctl -f -u kubelet tail -100f /etc/kubernetes/logs/kubelet.ERROR \"]},\"788\":{\"h\":\"2.6 批准kubelet证书申请并加入集群\",\"t\":[\"#--------*在主节点执行*--------- # 查看kubelet证书请求 kubectl get csr NAME AGE SIGNERNAME REQUESTOR CONDITION node-csr-XXXX 6m3s kubernetes.io/kube-apiserver-client-kubelet kubelet-bootstrap Pending # 批准申请 $ kubectl get csr|grep 'Pending' | awk '{print $1}'| xargs kubectl certificate approve # 查看节点 kubectl get node NAME STATUS ROLES AGE VERSION server01 NotReady <none> 2m23s v1.18.6 #----------------------------- \",\"提示\",\"注：由于网络插件还没有部署，节点会没有准备就绪 NotReady\"]},\"789\":{\"h\":\"三、部署kube-proxy\"},\"790\":{\"h\":\"3.1 创建kube-proxy配置文件\",\"t\":[\"cat > /etc/kubernetes/cfg/kube-proxy.conf << EOF KUBE_PROXY_OPTS=\\\"--logtostderr=false \\\\\\\\ --v=2 \\\\\\\\ --log-dir=/etc/kubernetes/logs \\\\\\\\ --config=/etc/kubernetes/cfg/kube-proxy-config.yml\\\" EOF \"]},\"791\":{\"h\":\"3.2 配置参数文件\",\"t\":[\"# 注意修改 hostnameOverride 显示名称，集群中唯一 cat > /etc/kubernetes/cfg/kube-proxy-config.yml << EOF kind: KubeProxyConfiguration apiVersion: kubeproxy.config.k8s.io/v1alpha1 bindAddress: 0.0.0.0 metricsBindAddress: 0.0.0.0:10249 clientConnection: kubeconfig: /etc/kubernetes/cfg/kube-proxy.kubeconfig hostnameOverride: 192.168.10.101 clusterCIDR: 10.0.0.0/24 EOF \"]},\"792\":{\"h\":\"3.3 生成kube-proxy.kubeconfig文件\",\"t\":[\"# 设置集群参数（注意替换ip） kubectl config set-cluster kubernetes \\\\ --certificate-authority=/etc/kubernetes/ca/ca.pem \\\\ --embed-certs=true \\\\ --server=https://192.168.10.102:6443 \\\\ --kubeconfig=kube-proxy.kubeconfig # 客户端认证参数 kubectl config set-credentials kube-proxy \\\\ --client-certificate=/etc/kubernetes/ca/kube-proxy/kube-proxy.pem \\\\ --client-key=/etc/kubernetes/ca/kube-proxy/kube-proxy-key.pem \\\\ --embed-certs=true \\\\ --kubeconfig=kube-proxy.kubeconfig # 设置上下文参数 kubectl config set-context default \\\\ --cluster=kubernetes \\\\ --user=kube-proxy \\\\ --kubeconfig=kube-proxy.kubeconfig # 选择上下文 kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig # 移动到合适位置 mv kube-proxy.kubeconfig /etc/kubernetes/cfg/ \"]},\"793\":{\"h\":\"3.4 systemd管理kube-proxy\",\"t\":[\"cat > /lib/systemd/system/kube-proxy.service << EOF [Unit] Description=Kubernetes Proxy After=network.target [Service] EnvironmentFile=/etc/kubernetes/cfg/kube-proxy.conf ExecStart=/etc/kubernetes/bin/kube-proxy \\\\$KUBE_PROXY_OPTS Restart=on-failure LimitNOFILE=65536 [Install] WantedBy=multi-user.target EOF \"]},\"794\":{\"h\":\"3.5 启动并设置开机启动\",\"t\":[\"systemctl daemon-reload systemctl start kube-proxy systemctl enable kube-proxy # 查看日志是否启动异常 journalctl -f -u kube-proxy tail -100f /etc/kubernetes/logs/kube-proxy.ERROR \"]},\"795\":{\"h\":\"部署CNI网络\"},\"796\":{\"h\":\"1.简介\",\"t\":[\"kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通\",\"通过给 Kubelet 传递 --network-plugin=cni 命令行选项来选择 CNI 插件。 Kubelet 从 --cni-conf-dir （默认是 /etc/cni/net.d） 读取文件并使用该文件中的 CNI 配置来设置每个 pod 的网络。 CNI 配置文件必须与 CNI 规约匹配，并且配置引用的任何所需的 CNI 插件都必须存在于 --cni-bin-dir（默认是 /opt/cni/bin）\"]},\"797\":{\"h\":\"2. 下载 CNI\",\"t\":[\"准备二进制文件\",\"下载地址：https://github.com/containernetworking/plugins/releases\",\"解压二进制包并移动到默认工作目录：\",\"mkdir -p /opt/cni/bin tar zxvf cni-plugins-linux-amd64-v0.8.6.tgz -C /opt/cni/bin \"]},\"798\":{\"h\":\"3. flannel 插件\"},\"799\":{\"h\":\"3.1 Flannel介绍\",\"t\":[\"以下内容转载自：https://www.cnblogs.com/itzgr/p/12558767.html#_label0\",\"Kubernetes的网络模型假定了所有Pod都在一个可以直接连通的扁平网络空间中。若需要实现这个网络假设，需要实现不同节点上的Docker容器之间的互相访问，然后运行Kubernetes。目前已经有多个开源组件支持容器网络模型。如Flannel、Open vSwitch、直接路由和Calico。\",\"Flannel之所以可以搭建Kubernetes依赖的底层网络，是因为它能实现以下两点。\",\"它能协助Kubernetes，给每一个Node上的Docker容器都分配互相不冲突的IP地址。\",\"它能在这些IP地址之间建立一个覆盖网络（Overlay Network），通过这个覆盖网络，将数据包原封不动地传递到目标容器内。\",\"Flannel 架构图：\",\"如上图所示，Flannel首先创建了一个名为 flannel0 的网桥，而且这个网桥的一端连接 docker0 网桥，另一端连接一个叫作flanneld的服务进程。\",\"flanneld进程上连etcd，利用etcd来管理可分配的IP地址段资源，同时监控etcd中每个Pod的实际地址，并在内存中建立了一个Pod节点路由表；\",\"​ flanneld进程下连docker0和物理网络，使用内存中的Pod节点路由表，将docker0发给它的数据包包装起来，利用物理网络的连接将数据包投递到目标flanneld上，从而完成Pod到Pod之间的直接地址通信。\",\"​ Flannel之间的底层通信协议的可选技术包括UDP、VxLan、AWS VPC等多种方式。通过源flanneld封包、目标flanneld解包，最终docker0收到的就是原始的数据，对容器应用来说是透明的，感觉不到中间Flannel的存在。\",\"​ Flannel每次分配的地址段都在同一个公共区域获取，从而实现不同Node上的Pod分配的IP不产生冲突。而且在Flannel分配好地址段后，其余操作由Docker完成的，Flannel通过修改Docker的启动参数将分配给它的地址段传递进去：\",\"--bip=172.17.18.1/24\",\"通过如上方式，Flannel就控制了每个Node上的docker0地址段的地址，从而保障了所有Pod的IP地址在同一个水平网络中且不产生冲突。\",\"​ Flannel完美地实现了对Kubernetes网络的支持，但是它引入了多个网络组件，在网络通信时需要转到flannel0网络接口，再转到用户态的flanneld程序，到对端后还需要走这个过程的反过程，所以也会引入一些网络的时延损耗。\",\"另外，Flannel模型默认采用了UDP作为底层传输协议，UDP本身是非可靠协议，虽然两端的TCP实现了可靠传输，但在大流量、高并发的应用场景下还建议多次测试。\"]},\"800\":{\"h\":\"3.2 部署flannel\",\"t\":[\"# github 上的文件，可能会下载失败，可以本地下载上传至虚拟机 wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml # 替换 docker 源 sed -i -r \\\"s#quay.io/coreos/flannel:.*-amd64#registry.cn-shanghai.aliyuncs.com/gcr-k8s/flannel:v0.12.0-amd64#g\\\" kube-flannel.yml # 修改ip配置要与 kube-controller 配置中的 cluster-cidr=172.20.0.0/16 一样 net-conf.json: | { \\\"Network\\\": \\\"172.20.0.0/16\\\", \\\"Backend\\\": { \\\"Type\\\": \\\"vxlan\\\" } } # 启动 kubectl apply -f kube-flannel.yml # 查看 kubectl get pods --namespace kube-system kubectl get svc --namespace kube-system \",\"提示\",\"注：如果Node有多个网卡的话，参考 flannel issues39701， 目前需要在kube-flannel.yml中使用--iface参数指定集群主机内网网卡的名称， 否则可能会出现dns无法解析。容器无法通信的情况，需要将kube-flannel.yml下载到本地， flanneld启动参数加上--iface=iface-name\"]},\"801\":{\"h\":\"4. Calico 插件\"},\"802\":{\"h\":\"4.1 Calco组件简介\",\"t\":[\"​ Calico是一个基于BGP的纯三层的网络方案，与OpenStack、Kubernetes、AWS、GCE等云平台都能够良好地集成。Calico在每个计算节点都利用Linux Kernel实现了一个高效的vRouter来负责数据转发。每个vRouter都通过BGP1协议把在本节点上运行的容器的路由信息向整个Calico网络广播，并自动设置到达其他节点的路由转发规则。\",\"​ Calico保证所有容器之间的数据流量都是通过IP路由的方式完成互联互通的。Calico节点组网时可以直接利用数据中心的网络结构（L2或者L3），不需要额外的NAT、隧道或者Overlay Network，没有额外的封包解包，能够节约CPU运算，提高网络效率。\",\"qUxtPP\"]},\"803\":{\"h\":\"4.2 Calico 架构\",\"t\":[\"0IZcpm\",\"Calico的主要组件：\",\"Felix：Calico Agent，运行在每个Node上，负责为容器设置网络资源（IP地址、路由规则、iptables规则等），保证跨主机容器网络互通。\",\"etcd：Calico使用的后端存储。\",\"BGP Client：负责把Felix在各Node上设置的路由信息通过BGP协议广播到Calico网络。\",\"Route Reflector：通过一个或者多个BGP Route Reflector来完成大规模集群的分级路由分发。\",\"CalicoCtl：Calico命令行管理工具。\"]},\"804\":{\"h\":\"4.3 Calico 部署步骤过程\",\"t\":[\"在Kubernetes中部署Calico的主要步骤如下：\",\"修改Kubernetes服务的启动参数，并重启服务。\",\"设置Master上kube-apiserver服务的启动参数：--allow-privileged=true（因为calico-node需要以特权模式运行在各Node上）。\",\"设置各Node上kubelet服务的启动参数：--networkplugin=cni（使用CNI网络插件）。\",\"创建Calico服务，主要包括calico-node和calico policy controller。需要创建的资源对象如下：\",\"创建ConfigMap calico-config，包含Calico所需的配置参数。\",\"创建Secret calico-etcd-secrets，用于使用TLS方式连接etcd。\",\"在每个Node上都运行calico/node容器，部署为DaemonSet。\",\"在每个Node上都安装Calico CNI二进制文件和网络配置参数（由install-cni容器完成）。\",\"部署一个名为calico/kube-policy-controller的Deployment，以对接Kubernetes集群中为Pod设置的Network Policy。\"]},\"805\":{\"h\":\"4.4 部署 calico\",\"t\":[\"# 下载 yaml 文件 wget https://docs.projectcalico.org/v3.14/getting-started/kubernetes/installation/hosted/calico.yaml # 修改 - name: CALICO_IPV4POOL_CIDR value: 172.20.0.0/16 sed -i -e \\\"s?192.168.0.0/16?172.20.0.0/16?g\\\" canal.yaml \"]},\"806\":{\"h\":\"4.4.1 需要修改如下几处配置：\",\"t\":[\"ConfigMap 配置修改\",\"kind: ConfigMap apiVersion: v1 metadata: name: calico-config namespace: kube-system data: etcd_endpoints: \\\"http://192.168.10.102:2379\\\" etcd_ca: \\\"/calico-secrets/etcd-ca\\\" # \\\"/calico-secrets/etcd-ca\\\" etcd_cert: \\\"calico-secrets/etcd-cert\\\" # \\\"/calico-secrets/etcd-cert\\\" etcd_key: \\\"/calico-secrets/etcd-key\\\" # \\\"/calico-secrets/etcd-key\\\" typha_service_name: \\\"none\\\" calico_backend: \\\"bird\\\" \",\"对主要参数说明如下：\",\"etcd_endpoints：Calico使用etcd来保存网络拓扑和状态，该参数指定etcd服务的地址，可手动设置。\",\"calico_backend：Calico的后端，默认为bird。\",\"cni_network_config：符合CNI规范的网络配置。其中 type=calico 表示kubelet将从 /opt/cni/bin 目录下搜索名为calico的可执行文件，并调用它来完成容器网络的设置。ipam中的 type=calico-ipam 表示kubelet将在 /opt/cni/bin 目录下搜索名为calico-ipam的可执行文件，用于完成容器IP地址的分配。\",\"修改 Pods 使用的 IP 网段 , 配置文件默认使用 192.168.0.0/16 网段\",\"Secret 配置修改\",\"apiVersion: v1 kind: Secret type: Opaque metadata: name: calico-etcd-secrets namespace: kube-system data: # Example command for encoding a file contents: cat <file> | base64 -w 0 # 如果配置了TLS ，则需要设置相应的证书和密钥文件路径 etcd-key: (cat /etc/kubernetes/ca/server/server-key.pem | base64 -w 0) # 将输出结果填写在这 etcd-cert: (cat /etc/kubernetes/ca/server/server.pem | base64 -w 0) # 将输出结果填写在这 etcd-ca: (cat /etc/kubernetes/ca/ca.pem | base64 -w 0) # 将输出结果填写在这 \",\"DaemonSet 配置修改 添加网卡发现规则\",\"containers: - name: calico-node image: calico/node:v3.14.2 env: # .../ # Auto-detect the BGP IP address. - name: IP value: \\\"autodetect\\\" # Calico 模式设置 - name: CALICO_IPV4POOL_IPIP value: \\\"Always\\\" # 定义ipv4自动发现网卡规则 - name: IP_AUTODETECTION_METHOD value: \\\"interface=enp.*\\\" # no effect. This should fall within `--cluster-cidr`. # 需要修改此处，打开注释替换 pod ip - name: CALICO_IPV4POOL_CIDR value: \\\"172.20.0.0/16\\\" \",\"在该Pod中包括如下两个容器：\",\"install-cni：在Node上安装CNI二进制文件到 /opt/cni/bin 目录下，并安装相应的网络配置文件到 /etc/cni/net.d 目录下，设置为initContainers并在运行完成后退出。\",\"calico-node：Calico服务程序，用于设置Pod的网络资源，保证Pod的网络与各Node互联互通。它还需要以hostNetwork模式运行，直接使用宿主机网络。\",\"calico-node服务的主要参数如下。\",\"CALICO_IPV4POOL_CIDR：Calico IPAM的IP地址池，Pod的IP地址将从该池中进行分配。\",\"CALICO_IPV4POOL_IPIP：是否启用IPIP模式。启用IPIP模式时，Calico将在Node上创建一个名为tunl0的虚拟隧道。\",\"IP_AUTODETECTION_METHOD：获取Node IP地址的方式，默认使用第1个网络接口的IP地址，对于安装了多块网卡的Node，可以使用正则表达式选择正确的网卡，例如\\\"interface=eth.*\\\"表示选择名称以eth开头的网卡的IP地址。\",\"FELIX_IPV6SUPPORT：是否启用IPv6。\",\"FELIX_LOGSEVERITYSCREEN：日志级别。\",\"securityContext.privileged=true：以特权模式运行。\",\"另外，如果启用RBAC权限控制，则可以设置ServiceAccount。\",\"IP Pool可以使用两种模式：BGP或IPIP。使用IPIP模式时，设置 CALICO_IPV4POOL_IPIP=\\\"always\\\" ，不使用IPIP模式时，设置CALICO_IPV4POOL_IPIP=\\\"off\\\" ，此时将使用BGP模式。\",\"calico-kube-controllers解析配置\",\"calico-kube-controllers容器，用于对接Kubernetes集群中为Pod设置的Network Policy\",\"如果启用RBAC权限控制，则可以设置ServiceAccount。用户在Kubernetes集群中设置了Pod的Network Policy之后，calicokube-controllers就会自动通知各Node上的calico-node服务，在宿主机上设置相应的iptables规则，完成Pod间网络访问策略的设置。\"]},\"807\":{\"h\":\"4.4.2 修改完 yaml 文件，执行部署\",\"t\":[\"# 部署 kubectl apply -f calico.yaml # 查看 calico pods kubectl get pods -n kube-system # 查看 node 是否正常，现在 node 服务正常了 kubectl get node NAME STATUS ROLES AGE VERSION 192.168.10.101 Ready <none> 4d4h v1.18.6 192.168.10.102 Ready <none> 4d4h v1.18.6 \"]},\"808\":{\"h\":\"5. 通过系统服务+Docker方式部署\"},\"809\":{\"h\":\"5.1 配置 service 文件\",\"t\":[\"vim /lib/systemd/system/kube-calico.service\",\"注意修改 IP 以及证书位置\",\"[Unit] Description=calico node After=docker.service Requires=docker.service [Service] User=root PermissionsStartOnly=true ExecStart=/usr/bin/docker run --net=host --privileged --name=calico-node \\\\ -e ETCD_ENDPOINTS=https://192.168.10.102:2379 \\\\ -e ETCD_CA_CERT_FILE=/etc/kubernetes/ca/ca.pem \\\\ -e ETCD_CERT_FILE=/etc/kubernetes/ca/calico/calico.pem \\\\ -e ETCD_KEY_FILE=/etc/kubernetes/ca/calico/calico-key.pem \\\\ -e CALICO_LIBNETWORK_ENABLED=true \\\\ -e CALICO_NETWORKING_BACKEND=bird \\\\ -e CALICO_DISABLE_FILE_LOGGING=true \\\\ -e CALICO_IPV4POOL_CIDR=172.20.0.0/16 \\\\ -e CALICO_IPV4POOL_IPIP=off \\\\ -e FELIX_DEFAULTENDPOINTTOHOSTACTION=ACCEPT \\\\ -e FELIX_IPV6SUPPORT=false \\\\ -e FELIX_LOGSEVERITYSCREEN=info \\\\ -e FELIX_IPINIPMTU=1440 \\\\ -e FELIX_HEALTHENABLED=true \\\\ -e IP=192.168.10.101 \\\\ -v /etc/kubernetes/ca:/etc/kubernetes/ca \\\\ -v /var/run/calico:/var/run/calico \\\\ -v /lib/modules:/lib/modules \\\\ -v /run/docker/plugins:/run/docker/plugins \\\\ -v /var/run/docker.sock:/var/run/docker.sock \\\\ -v /var/log/calico:/var/log/calico \\\\ calico/node:v3.14.2 ExecStop=/usr/bin/docker rm -f calico-node Restart=always RestartSec=10 [Install] WantedBy=multi-user.target \"]},\"810\":{\"h\":\"5.2 启动 kube-calico 服务\",\"t\":[\"systemctl daemon-reload # 修改配置重启的时候用 systemctl enable kube-calico.service service kube-calico start # 查看日志 journalctl -f -u kube-calico \"]},\"811\":{\"h\":\"5.3 calico 客户端工具 calicoctl\",\"t\":[\"下载 calicoctl 二进制文件, 下载地址：https://github.com/projectcalico/calicoctl/releases\",\"chmod 755 calicoctl mv calicoctl /usr/local/bin/ \"]},\"812\":{\"h\":\"5.4 查看节点运行情况\",\"t\":[\"calicoctl node status Calico process is running. IPv4 BGP status +---------------+-------------------+-------+----------+-------------+ | PEER ADDRESS | PEER TYPE | STATE | SINCE | INFO | +---------------+-------------------+-------+----------+-------------+ | 192.168.10.101 | node-to-node mesh | up | 13:13:13 | Established | +---------------+-------------------+-------+----------+-------------+ IPv6 BGP status No IPv6 peers found. \",\"查看端口BGP 协议是通过TCP 连接来建立邻居的，因此可以用netstat 命令验证 BGP Peer\",\"netstat -natp|grep ESTABLISHED|grep 179 tcp 0 0 192.168.10.102:60959 192.168.10.103:179 ESTABLISHED 29680/bird \"]},\"813\":{\"h\":\"5.5 配置 IP Pool\",\"t\":[\"提示\",\"注：请看官方配置文件：https://docs.projectcalico.org/getting-started/clis/calicoctl/configure/overview\",\"默认情况下，calicoctl将在上查找配置文件/etc/calico/calicoctl.cfg。您可以将该--config选项与需要数据存储访问的命令一起使用，以覆盖此选项。该文件可以是YAML或JSON格式。它必须有效并且可由读取calicoctl。以下是一个YAML示例：\",\"vim /etc/calico/calicoctl.cfg\",\"apiVersion: projectcalico.org/v3 kind: CalicoAPIConfig metadata: spec: etcdEndpoints: https://192.168.10.102:2379 etcdKeyFile: /etc/kubernetes/ca/calico/calico-key.pem etcdCertFile: /etc/kubernetes/ca/calico/calico.pem etcdCACertFile: /etc/kubernetes/ca/ca.pem \",\"查看集群ippool情况\",\"calicoctl get ipPool -o yaml\",\"# 输出内容如下 - apiVersion: projectcalico.org/v3 kind: IPPool metadata: creationTimestamp: \\\"2020-08-14T10:38:44Z\\\" name: default-ipv4-ippool resourceVersion: \\\"13109\\\" uid: 3e3b1506-e9a8-4d02-96f7-2ceb63ade2ea spec: blockSize: 26 cidr: 172.20.0.0/16 ipipMode: Never natOutgoing: true nodeSelector: all() vxlanMode: Never kind: IPPoolList metadata: resourceVersion: \\\"57796\\\" \"]},\"814\":{\"h\":\"6. 授权Apiserver访问kubelet\",\"t\":[\"cat > /etc/kubernetes/server/cfg/apiserver-to-kubelet-rbac.yaml << EOF apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: annotations: rbac.authorization.kubernetes.io/autoupdate: \\\"true\\\" labels: kubernetes.io/bootstrapping: rbac-defaults name: system:kube-apiserver-to-kubelet rules: - apiGroups: - \\\"\\\" resources: - nodes/proxy - nodes/stats - nodes/log - nodes/spec - nodes/metrics - pods/log verbs: - \\\"*\\\" --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: system:kube-apiserver namespace: \\\"\\\" roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: system:kube-apiserver-to-kubelet subjects: - apiGroup: rbac.authorization.k8s.io kind: User name: kubernetes EOF # 启动 kubectl apply -f apiserver-to-kubelet-rbac.yaml \"]},\"815\":{\"h\":\"部署Dashboard和CoreDNS\"},\"816\":{\"h\":\"一、部署Dashboard\"},\"817\":{\"h\":\"1.1 Dashboard简介\",\"t\":[\"Dashboard 是基于网页的 Kubernetes 用户界面。您可以使用 Dashboard 将容器应用部署到 Kubernetes 集群中，也可以对容器应用排错，还能管理集群资源。您可以使用 Dashboard 获取运行在集群中的应用的概览信息，也可以创建或者修改 Kubernetes 资源（如 Deployment，Job，DaemonSet 等等）。例如，您可以对 Deployment 实现弹性伸缩、发起滚动升级、重启 Pod 或者使用向导创建新的应用。\",\"Dashboard 同时展示了 Kubernetes 集群中的资源状态信息和所有报错信息。\",\"ui-dashboard\"]},\"818\":{\"h\":\"1.2 下载 YAML 文件\",\"t\":[\"wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml # 默认Dashboard只能集群内部访问，修改Service为NodePort类型，暴露到外部： vim recommended.yaml # 修改如下 kind: Service apiVersion: v1 metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboard spec: ports: - port: 443 targetPort: 8443 nodePort: 30001 type: NodePort selector: k8s-app: kubernetes-dashboard # 启动服务 kubectl apply -f recommended.yaml # 查看 kubectl get pods,svc -n kubernetes-dashboard \",\"访问地址：https://NodeIP:30001\"]},\"819\":{\"h\":\"二、部署 DNS\"},\"820\":{\"h\":\"2.1 coreDNS简介\",\"t\":[\"服务发现是 K8s 的一项很重要的功能。K8s 的服务发现有两种方式，一种是将 svc 的 ClusterIP 以环境变量的方式注入到 pod 中；一种就是 DNS，从 1.13 版本开始，coreDNS 就取代了 kube dns 成为了内置的 DNS 服务器。\"]},\"821\":{\"h\":\"2.2 下载部署脚本\",\"t\":[\"git clone https://github.com/coredns/deployment.git cd deployment/kubernetes \"]},\"822\":{\"h\":\"2.3 部署\",\"t\":[\"总体流程是我们使用 deploy.sh 生成 yaml 并保存成 coredns.yaml 文件并执行 kubectl apply -f coredns.yaml 进行部署 ，如果要卸载，执行 kubectl delete -f coredns.yaml\",\"deploy.sh 脚本依赖 jq 命令，所以先确保 jq 已安装: apt install -y jq\",\"提示\",\"如果集群中没有 kube-dns 或低版本 coredns，我们直接用 -i 参数指定集群 DNS 的 CLUSTER IP，这个 IP 是安装集群时就确定好的，可以在 kubelet 的 clusterDNS 配置设置，示例:\",\"./deploy.sh -i 10.0.0.2 > coredns.yaml kubectl apply -f coredns.yaml # 查看是否部署成功 kubectl get pods -n kube-system > NAME READY STATUS RESTARTS AGE coredns-5ffbfd976d-j6shb 1/1 Running 0 32s \"]},\"823\":{\"h\":\"Ubuntu18.04 安装nginx\",\"t\":[\"提示\",\"目前支持两种安装方式，一种是apt-get的方式，另一种是编译nginx源码包的方式\"]},\"824\":{\"h\":\"一、apt-get安装nginx\",\"t\":[\"更新源\",\"apt-get update apt-get install nginx \",\"查看nginx是否安装成功 nginx -v\",\"启动nginx\",\"service nginx start \",\"nginx 文件安装完成之后的文件位置：\",\"/usr/sbin/nginx：主程序\",\"/etc/nginx：存放配置文件\",\"/usr/share/nginx：存放静态文件\",\"/var/log/nginx：存放日志\"]},\"825\":{\"h\":\"二、编译nginx源码\",\"t\":[\"下载源码包，或者去Nginx官网下载源码包\",\"wget https://nginx.org/download/nginx-1.17.8.tar.gz \",\"安装编译需要的依赖\",\"apt-get -y install build-essential \\\\ libtool \\\\ libpcre3 \\\\ libpcre3-dev \\\\ zlib1g-dev \\\\ libssl-dev \",\"运行如下命令\",\"tar xvf nginx-1.17.8.tar.gz # 解压 rm -rf nginx-1.17.8.tar.gz # 删除压缩包 cd nginx-1.17.8 ./configure --prefix=/usr/local/nginx \\\\ --conf-path=/usr/local/nginx/config/nginx.conf \\\\ --user=nginx --group=nginx \\\\ --error-log-path=/usr/local/nginx/nginxlog/error.log \\\\ --http-log-path=/usr/local/nginx/nginxlog/access.log \\\\ --pid-path=/usr/local/nginx/pids/nginx.pid \\\\ --lock-path=/usr/local/nginx/locks/nginx.lock \\\\ --with-http_ssl_module \\\\ --with-http_stub_status_module \\\\ --with-http_gzip_static_module \\\\ --http-client-body-temp-path=/usr/local/nginx/tmp/client \\\\ --http-proxy-temp-path=/usr/local/nginx/tmp/proxy \\\\ --http-fastcgi-temp-path=/usr/local/nginx/tmp/fastcgi \\\\ --http-uwsgi-temp-path=/usr/local/nginx/tmp/uwsgi \\\\ --http-scgi-temp-path=/usr/local/nginx/tmp/scgi make make install cd .. rm -rf nginx-1.17.8 # 完善目录 mkdir -pv /usr/local/nginx/tmp/{client,proxy,fastcgi,uwsgi,scgi} # 添加nginx用户 useradd nginx \",\"启动nginx\",\"/usr/local/nginx/sbin/nginx \"]},\"826\":{\"h\":\"nginx常用命令\"},\"827\":{\"h\":\"启动、重启、停止命令\",\"t\":[\"# 启动 /usr/local/nginx/sbin/nginx # 重启 /usr/local/nginx/sbin/nginx -s reload # 停止 /usr/local/nginx/sbin/nginx -s stop # 完整有序的停止nginx /usr/local/nginx/sbin/nginx -s quit \"]},\"828\":{\"h\":\"检查配置文件是否正确\",\"t\":[\"/usr/local/nginx/sbin/nginx -t \"]},\"829\":{\"h\":\"Nginx\"},\"830\":{\"h\":\"Mac安装JDK8启动项目慢解决方案\",\"t\":[\"在使用 Mac 系统启动 SpringBoot 项目时，切换到 JDK8 发现启动超级慢，切换回 JDK12 又不会这样，后来才发现是MacOS 使用 Java8 的时候都会出现获取主机名会出现这个时间超长的问题\",\"系统环境\",\"macOS Catalina 10.15.4\",\"JDK版本 - 1.8.0.292\"]},\"831\":{\"h\":\"解决方案\",\"t\":[\"打开终端输入 hostname ，查看你的mac的主机名称，把它给复制下来\",\"修改 /etc/hosts文件 ，大家应该都知道这个文件是做什么的\",\"没修改前应该是这个样子\",\"## 127.0.0.1 localhost 255.255.255.255 broadcasthost ::1 localhost \",\"修改后\",\"## 127.0.0.1 localhost macBook-Pro.local 255.255.255.255 broadcasthost ::1 localhost macBook-Pro.local \",\"macBook-Pro.local 即是前边复制下的主机名\",\"好了，再运行项目就可以了, 只有在 JDK8 才会出现该问题，在 JDK11 正常。\"]},\"832\":{\"h\":\"疑难杂症\"}},\"dirtCount\":0,\"index\":[[\"疑难杂症\",{\"0\":{\"832\":1}}],[\"脚本依赖\",{\"1\":{\"822\":1}}],[\"暴露到外部\",{\"1\":{\"818\":1}}],[\"资源\",{\"1\":{\"817\":1}}],[\"资源名称\",{\"1\":{\"538\":1,\"567\":1}}],[\"协议是通过tcp\",{\"1\":{\"812\":1}}],[\"协议部分为自定义的\",{\"1\":{\"658\":1}}],[\"符合cni规范的网络配置\",{\"1\":{\"806\":1}}],[\"符号\",{\"1\":{\"364\":1}}],[\"符号被过滤\",{\"1\":{\"316\":1}}],[\"隧道或者overlay\",{\"1\":{\"802\":1}}],[\"感觉不到中间flannel的存在\",{\"1\":{\"799\":1}}],[\"感谢\",{\"1\":{\"163\":1}}],[\"架构\",{\"0\":{\"803\":1}}],[\"架构图\",{\"1\":{\"799\":1}}],[\"架中的\",{\"1\":{\"654\":1}}],[\"若需要实现这个网络假设\",{\"1\":{\"799\":1}}],[\"若是append多个元素\",{\"1\":{\"11\":1}}],[\"规约匹配\",{\"1\":{\"796\":1}}],[\"规范的一部分\",{\"1\":{\"517\":1}}],[\"规范四\",{\"1\":{\"89\":1}}],[\"规范三\",{\"1\":{\"89\":1}}],[\"规范二\",{\"1\":{\"89\":1}}],[\"规范1\",{\"1\":{\"89\":1}}],[\"管理pod网络容器的镜像\",{\"1\":{\"783\":1}}],[\"管理流程部署的id\",{\"1\":{\"535\":1}}],[\"首次启动向apiserver申请证书\",{\"1\":{\"783\":1}}],[\"首先创建\",{\"1\":{\"636\":1}}],[\"首先需要先了解\",{\"1\":{\"427\":1}}],[\"首先修改配置文件\",{\"1\":{\"411\":1}}],[\"首先运行以下命令\",{\"1\":{\"375\":1}}],[\"首先要在mongodb的data文件夹里新建一个\",{\"1\":{\"368\":1}}],[\"首先我们先准备接下来查询的\",{\"1\":{\"351\":1}}],[\"首先ik分词器是在elasticsearch安装目录的puligins文件夹中\",{\"1\":{\"323\":1}}],[\"首先会将每个名称进行分词\",{\"1\":{\"277\":1}}],[\"首先\",{\"1\":{\"265\":1,\"358\":1}}],[\"首先调用父类super\",{\"1\":{\"65\":1}}],[\"像replication\",{\"1\":{\"770\":1}}],[\"像它本身的节点信息\",{\"1\":{\"748\":1}}],[\"像集群有名字\",{\"1\":{\"276\":1}}],[\"十\",{\"0\":{\"745\":1}}],[\"十分高效\",{\"1\":{\"435\":1}}],[\"九\",{\"0\":{\"744\":1}}],[\"授予了调用\",{\"1\":{\"742\":1}}],[\"授权apiserver访问kubelet\",{\"0\":{\"814\":1}}],[\"授权kubelet\",{\"0\":{\"768\":1}}],[\"授权的概念就简单多了\",{\"1\":{\"721\":1}}],[\"授权某个数据库的权限\",{\"1\":{\"416\":1}}],[\"授权\",{\"1\":{\"416\":1,\"725\":1}}],[\"授权多个权限时\",{\"1\":{\"414\":1}}],[\"授权用户所有权限\",{\"0\":{\"416\":1}}],[\"授权用户\",{\"0\":{\"414\":1,\"415\":1}}],[\"绑定\",{\"1\":{\"742\":1}}],[\"预定义的\",{\"1\":{\"742\":1}}],[\"七\",{\"0\":{\"738\":1}}],[\"签发proxy证书\",{\"0\":{\"743\":1}}],[\"签发admin证书\",{\"0\":{\"740\":1}}],[\"签发\",{\"0\":{\"737\":1}}],[\"签发etcd证书\",{\"0\":{\"734\":1}}],[\"浏览器使用该字段验证网站是否合法\",{\"1\":{\"730\":1}}],[\"证书文件\",{\"0\":{\"760\":1}}],[\"证书配置\",{\"0\":{\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"证书\",{\"0\":{\"732\":1,\"735\":1,\"737\":1,\"738\":1,\"741\":1},\"1\":{\"755\":1,\"781\":1}}],[\"证书和私钥\",{\"0\":{\"731\":1}}],[\"证书和秘钥\",{\"1\":{\"716\":1,\"760\":1,\"765\":1}}],[\"证书签名请求\",{\"0\":{\"730\":1}}],[\"证书中\",{\"1\":{\"729\":1}}],[\"证书位置\",{\"0\":{\"727\":1}}],[\"撤销证书等\",{\"1\":{\"726\":1}}],[\"撤销已经赋予给\",{\"1\":{\"418\":1}}],[\"他会观察所有的请求\",{\"1\":{\"725\":1}}],[\"禁止所有请求\",{\"1\":{\"725\":1}}],[\"禁止grant创建密码为空的用户\",{\"1\":{\"424\":1}}],[\"顺序为\",{\"1\":{\"725\":1}}],[\"顺序排列结果\",{\"1\":{\"394\":1}}],[\"准备二进制文件\",{\"1\":{\"797\":1}}],[\"准备环境\",{\"0\":{\"712\":1,\"714\":1}}],[\"准入控制模块\",{\"1\":{\"764\":1}}],[\"准入控制本质上为一段准入代码\",{\"1\":{\"725\":1}}],[\"甚至对集群进行改动\",{\"1\":{\"723\":1}}],[\"甚至内容可能会从我喜欢你修改成我不喜欢你了\",{\"1\":{\"719\":1}}],[\"认证授权\",{\"1\":{\"764\":1}}],[\"认证授权过程只存在https形式的api中\",{\"1\":{\"722\":1}}],[\"认证\",{\"1\":{\"723\":1}}],[\"业内也有成熟的方案来解决\",{\"1\":{\"720\":1}}],[\"业务代码\",{\"1\":{\"666\":1}}],[\"业务系统和activiti结合时少不了流程变量\",{\"1\":{\"519\":1}}],[\"业务系统按照预先定义的流程进行执行\",{\"1\":{\"486\":1}}],[\"业务key\",{\"1\":{\"513\":1}}],[\"业务标识来源于业务系统\",{\"1\":{\"513\":1}}],[\"业务标识和流程实例一一对应\",{\"1\":{\"513\":1}}],[\"业务标识\",{\"0\":{\"513\":1},\"1\":{\"513\":1}}],[\"业务流程建模\",{\"0\":{\"488\":1}}],[\"业务实现\",{\"1\":{\"484\":6}}],[\"业务逻辑实现\",{\"1\":{\"484\":1}}],[\"毕竟是网络安全层面的问题\",{\"1\":{\"720\":1}}],[\"毕业前的焦虑\",{\"1\":{\"2\":1}}],[\"防不胜防了\",{\"1\":{\"719\":1}}],[\"防止什么问题呢\",{\"1\":{\"719\":1}}],[\"防止什么问题的发生入手\",{\"1\":{\"719\":1}}],[\"防止以后再遇到\",{\"1\":{\"672\":1}}],[\"防止随意修改数据\",{\"1\":{\"88\":1}}],[\"想理解认证\",{\"1\":{\"719\":1}}],[\"步骤介绍\",{\"0\":{\"716\":1}}],[\"步骤分为\",{\"1\":{\"454\":1}}],[\"永久\",{\"1\":{\"715\":1}}],[\"临时\",{\"1\":{\"715\":1}}],[\"临近过年\",{\"1\":{\"2\":1}}],[\"切换回\",{\"1\":{\"830\":1}}],[\"切换到\",{\"1\":{\"830\":1}}],[\"切换分支\",{\"1\":{\"710\":1}}],[\"切换开销小\",{\"1\":{\"205\":1}}],[\"忽略某个文件\",{\"1\":{\"707\":1}}],[\"忽略已提交文件的修改\",{\"0\":{\"707\":1}}],[\"忽略权限\",{\"1\":{\"127\":3,\"128\":2,\"129\":1}}],[\"仓库\",{\"1\":{\"705\":1}}],[\"仓库到\",{\"1\":{\"680\":1}}],[\"建立项目仓库\",{\"0\":{\"704\":1}}],[\"建议使用\",{\"1\":{\"643\":1}}],[\"建议使用枚举\",{\"1\":{\"159\":1}}],[\"建议都用缓冲流\",{\"1\":{\"251\":1}}],[\"太过于麻烦\",{\"1\":{\"703\":1}}],[\"账号\",{\"0\":{\"698\":1}}],[\"账号信息\",{\"1\":{\"303\":1}}],[\"连接来建立邻居的\",{\"1\":{\"812\":1}}],[\"连接etcd集群证书\",{\"1\":{\"764\":1}}],[\"连接\",{\"0\":{\"696\":1}}],[\"连接超时配置\",{\"1\":{\"651\":1}}],[\"挂载mysql数据\",{\"1\":{\"692\":1}}],[\"挂载mysql配置文件\",{\"1\":{\"692\":1}}],[\"挂载日志文件\",{\"1\":{\"692\":1}}],[\"挂起状态\",{\"1\":{\"542\":1}}],[\"挂起的作业数量\",{\"1\":{\"540\":1}}],[\"挂起期间\",{\"1\":{\"222\":1}}],[\"镜像\",{\"0\":{\"691\":1}}],[\"镜像id\",{\"1\":{\"689\":1}}],[\"拉取指定版本\",{\"1\":{\"691\":1}}],[\"拉取\",{\"0\":{\"691\":1}}],[\"拥有诸多好处\",{\"1\":{\"690\":1}}],[\"拥有push\",{\"1\":{\"181\":1}}],[\"科大镜像站\",{\"1\":{\"686\":1}}],[\"国内的几个源\",{\"1\":{\"686\":1}}],[\"国人\",{\"1\":{\"321\":1}}],[\"离线安装\",{\"0\":{\"681\":1}}],[\"填充目标路由order\",{\"1\":{\"671\":1}}],[\"填充生成order\",{\"1\":{\"671\":1}}],[\"填坑笔记\",{\"0\":{\"559\":1},\"1\":{\"527\":1}}],[\"故此\",{\"1\":{\"671\":1}}],[\"咔咔改造一顿就好了\",{\"1\":{\"665\":1}}],[\"订阅服务\",{\"1\":{\"658\":1}}],[\"订单\",{\"1\":{\"636\":1}}],[\"订单服务中\",{\"1\":{\"639\":1}}],[\"订单服务\",{\"1\":{\"636\":1}}],[\"订单状态\",{\"1\":{\"160\":1}}],[\"框\",{\"1\":{\"654\":1}}],[\"框架中集成\",{\"1\":{\"265\":1}}],[\"框架\",{\"0\":{\"7\":1},\"1\":{\"279\":1,\"328\":1,\"331\":1,\"348\":1,\"365\":1,\"378\":1,\"381\":1,\"603\":1,\"636\":1,\"652\":1}}],[\"断言\",{\"1\":{\"654\":1}}],[\"核心概念\",{\"0\":{\"654\":1}}],[\"路由规则\",{\"1\":{\"803\":1}}],[\"路由规则会通过获取对应的\",{\"1\":{\"661\":1}}],[\"路由详情集合\",{\"1\":{\"671\":2}}],[\"路由设置\",{\"1\":{\"657\":1}}],[\"路由的规则为\",{\"1\":{\"656\":1}}],[\"路由条件\",{\"1\":{\"656\":1}}],[\"路由配置方式\",{\"0\":{\"656\":1}}],[\"路由\",{\"1\":{\"654\":1}}],[\"路由管理方式\",{\"1\":{\"653\":1}}],[\"路径要改成自己的路径\",{\"1\":{\"27\":1}}],[\"秒\",{\"1\":{\"651\":1}}],[\"工作流程\",{\"1\":{\"745\":1}}],[\"工作原理如下图👇\",{\"1\":{\"654\":1}}],[\"工厂可以组合使用\",{\"1\":{\"659\":1}}],[\"工厂通过不同的\",{\"1\":{\"659\":1}}],[\"工厂\",{\"1\":{\"659\":1}}],[\"工厂类\",{\"1\":{\"649\":1}}],[\"工具类\",{\"0\":{\"196\":1}}],[\"工具链接\",{\"0\":{\"16\":1}}],[\"工具\",{\"0\":{\"14\":1}}],[\"替换\",{\"1\":{\"800\":1}}],[\"替换成\",{\"1\":{\"644\":1}}],[\"替换指定区间的字符串\",{\"1\":{\"147\":1}}],[\"替换指定位置的字符\",{\"1\":{\"147\":1}}],[\"套装\",{\"1\":{\"644\":1}}],[\"英文名称为load\",{\"1\":{\"642\":1}}],[\"英特尔9代i7h高性能处理器\",{\"1\":{\"351\":1}}],[\"英特尔酷睿i5\",{\"1\":{\"351\":1,\"353\":1}}],[\"轮询策略\",{\"1\":{\"641\":1}}],[\"远程调用的类\",{\"1\":{\"639\":1}}],[\"远程数据服务\",{\"1\":{\"430\":1}}],[\"教程\",{\"1\":{\"636\":1}}],[\"教练我想\",{\"1\":{\"3\":1}}],[\"商品的\",{\"1\":{\"636\":1}}],[\"商品服务中的\",{\"1\":{\"639\":1}}],[\"商品服务\",{\"1\":{\"636\":1}}],[\"商品价格监控网站\",{\"1\":{\"271\":1}}],[\"→\",{\"1\":{\"635\":1}}],[\"详情可以参考\",{\"1\":{\"631\":1}}],[\"详细方案请看\",{\"1\":{\"625\":1}}],[\"早期在启动类上需要加上\",{\"1\":{\"628\":1}}],[\"早餐\",{\"1\":{\"386\":2,\"394\":2}}],[\"趟坑记录\",{\"0\":{\"672\":1},\"1\":{\"625\":1,\"635\":1}}],[\"登录系统\",{\"1\":{\"620\":1}}],[\"搭建文档\",{\"1\":{\"618\":1}}],[\"搭建\",{\"0\":{\"617\":1,\"655\":1}}],[\"搭建简单\",{\"1\":{\"615\":1}}],[\"难以上手\",{\"1\":{\"614\":1}}],[\"难免会遇到修改密码的需求\",{\"1\":{\"407\":1}}],[\"熔断降级\",{\"1\":{\"612\":1,\"613\":1}}],[\"负载\",{\"1\":{\"642\":1}}],[\"负载均衡的包\",{\"1\":{\"677\":1}}],[\"负载均衡的操作\",{\"1\":{\"636\":1}}],[\"负载均衡策略\",{\"0\":{\"646\":1}}],[\"负载均衡器在哪里使用\",{\"0\":{\"645\":1}}],[\"负载均衡\",{\"0\":{\"642\":1},\"1\":{\"642\":1,\"658\":1}}],[\"负载均衡ribbon\",{\"1\":{\"611\":1}}],[\"负载均配\",{\"1\":{\"612\":1}}],[\"负责把felix在各node上设置的路由信息通过bgp协议广播到calico网络\",{\"1\":{\"803\":1}}],[\"负责为容器设置网络资源\",{\"1\":{\"803\":1}}],[\"负责分配调度pod到集群内的节点上\",{\"1\":{\"775\":1}}],[\"负责人\",{\"1\":{\"569\":1}}],[\"负责回收管理\",{\"1\":{\"43\":1}}],[\"帮助企业迅速搭建客户触达通道\",{\"1\":{\"610\":1}}],[\"帮助构建json格式的请求体\",{\"1\":{\"350\":1,\"352\":1}}],[\"智能的互联化通讯能力\",{\"1\":{\"610\":1}}],[\"覆盖了一个证书的整个生命周期\",{\"1\":{\"726\":1}}],[\"覆盖全球的短信服务\",{\"1\":{\"610\":1}}],[\"覆盖compareto方法\",{\"1\":{\"189\":1}}],[\"精准\",{\"1\":{\"610\":1}}],[\"精确值匹配\",{\"1\":{\"311\":1}}],[\"低成本\",{\"1\":{\"610\":1}}],[\"安全性验证等功能\",{\"1\":{\"666\":1}}],[\"安全\",{\"1\":{\"610\":1}}],[\"安装编译需要的依赖\",{\"1\":{\"825\":1}}],[\"安装nginx\",{\"0\":{\"823\":1}}],[\"安装是否成功\",{\"1\":{\"680\":1}}],[\"安装方式请看ubuntu安装docker\",{\"1\":{\"757\":1}}],[\"安装方式\",{\"0\":{\"679\":1,\"713\":1}}],[\"安装docker\",{\"0\":{\"678\":1},\"1\":{\"680\":1}}],[\"安装后\",{\"1\":{\"371\":1}}],[\"安装路径配置到环境变量中\",{\"1\":{\"369\":1}}],[\"安装过程中\",{\"1\":{\"367\":1}}],[\"安装教程\",{\"0\":{\"365\":1}}],[\"安装完插件后需重启es\",{\"1\":{\"317\":1}}],[\"安装中文分词器\",{\"0\":{\"315\":1}}],[\"安装\",{\"0\":{\"281\":1,\"283\":1,\"317\":1,\"374\":1,\"726\":1},\"1\":{\"265\":1,\"370\":1,\"680\":1,\"690\":1,\"716\":1}}],[\"安装目录的\",{\"1\":{\"27\":1}}],[\"安装插件\",{\"0\":{\"19\":1}}],[\"阿里使用过的组件经历了考验\",{\"1\":{\"615\":1}}],[\"阿里巴巴开源产品\",{\"1\":{\"612\":2}}],[\"阿里巴巴矢量图标库\",{\"1\":{\"16\":2}}],[\"阿里云也有镜像\",{\"1\":{\"686\":1}}],[\"阿里云镜像加速器\",{\"1\":{\"684\":1}}],[\"阿里云短信服务\",{\"1\":{\"610\":1}}],[\"阿里云提供的海量\",{\"1\":{\"610\":1}}],[\"阿里云对象存储\",{\"1\":{\"610\":1}}],[\"适配\",{\"1\":{\"610\":1}}],[\"适用于备份\",{\"1\":{\"452\":1}}],[\"适用于\",{\"1\":{\"420\":1}}],[\"适用于只用一次的类\",{\"1\":{\"80\":1}}],[\"监听地址\",{\"1\":{\"764\":1}}],[\"监听\",{\"1\":{\"752\":1}}],[\"监听器分配\",{\"0\":{\"518\":1}}],[\"监控\",{\"1\":{\"610\":1}}],[\"限流控制等\",{\"1\":{\"653\":1}}],[\"限流降级功能的接入\",{\"1\":{\"610\":1}}],[\"限时业务\",{\"0\":{\"434\":1}}],[\"限时优惠200\",{\"1\":{\"351\":1}}],[\"致力于提供微服务开发的一站式解决方案\",{\"1\":{\"609\":1}}],[\"贴有该注解用户参数使用自定义的参数解析器\",{\"1\":{\"605\":1}}],[\"各种参数注解\",{\"1\":{\"603\":1}}],[\"呜呜呜\",{\"1\":{\"597\":1}}],[\"尝试设置legcount的值\",{\"1\":{\"595\":1}}],[\"机制\",{\"0\":{\"745\":1,\"765\":1}}],[\"机\",{\"1\":{\"595\":1}}],[\"述\",{\"1\":{\"595\":1}}],[\"描\",{\"1\":{\"595\":1}}],[\"描述\",{\"1\":{\"308\":1,\"350\":1,\"364\":1,\"500\":1,\"537\":1,\"538\":1,\"539\":1,\"543\":1,\"550\":1,\"551\":1,\"552\":1,\"554\":1,\"555\":1,\"557\":1,\"590\":1,\"597\":1}}],[\"描述进程和线程的区别\",{\"1\":{\"201\":1}}],[\"判定是否可以操作的方法有如下👇\",{\"1\":{\"595\":1}}],[\"判断节点类型\",{\"1\":{\"569\":1}}],[\"判断能否处理本次请求\",{\"1\":{\"483\":1}}],[\"判断hash对象是含有某个键\",{\"1\":{\"441\":1}}],[\"判断是否需要自动执行\",{\"1\":{\"484\":1}}],[\"判断是否是目录\",{\"1\":{\"236\":1}}],[\"判断是否存在等方法\",{\"1\":{\"236\":1}}],[\"判断文件是否存在\",{\"1\":{\"236\":1}}],[\"判断map中是否包含指定\",{\"1\":{\"193\":2}}],[\"判断当前map中键值对个数是否为0\",{\"1\":{\"193\":1}}],[\"判断当前列表中元素个数是否为0\",{\"1\":{\"176\":1}}],[\"判断列表是否存在指定对象\",{\"1\":{\"176\":1}}],[\"判断下面代码会输出什么结果👇\",{\"1\":{\"155\":1}}],[\"判断\",{\"1\":{\"108\":1,\"150\":1,\"443\":1}}],[\"判断该对象是否是某一个类\",{\"1\":{\"108\":1}}],[\"判断两个对象的引用地址是否相等\",{\"1\":{\"57\":1}}],[\"判断两个对象是否等价\",{\"1\":{\"57\":2}}],[\"判断两个变量的值是否相等\",{\"1\":{\"57\":1}}],[\"判断两个\",{\"1\":{\"57\":1}}],[\"声明\",{\"1\":{\"653\":1}}],[\"声明式http客户端\",{\"1\":{\"611\":1}}],[\"声明整型变量a并赋初值\",{\"1\":{\"594\":1}}],[\"声明一个空结构体\",{\"1\":{\"589\":1,\"591\":1}}],[\"均可以此方式返回\",{\"1\":{\"594\":1}}],[\"明\",{\"1\":{\"594\":1}}],[\"明天的事儿明天再说\",{\"1\":{\"0\":1}}],[\"说\",{\"1\":{\"594\":1}}],[\"说明\",{\"1\":{\"362\":1,\"417\":1,\"510\":1,\"565\":1,\"569\":1,\"631\":1}}],[\"`\",{\"1\":{\"591\":1,\"806\":1}}],[\"`json\",{\"1\":{\"591\":1}}],[\"暂时存储现在的操作\",{\"1\":{\"709\":1}}],[\"暂存当前操作\",{\"1\":{\"710\":1}}],[\"暂存\",{\"1\":{\"708\":1}}],[\"暂无批注\",{\"1\":{\"575\":1}}],[\"暂停状态\",{\"1\":{\"540\":1}}],[\"暂停渲染图片\",{\"1\":{\"204\":1}}],[\"宋体\",{\"1\":{\"568\":4}}],[\"取得了路径\",{\"1\":{\"657\":1}}],[\"取代了\",{\"1\":{\"653\":1}}],[\"取整数值\",{\"1\":{\"596\":1}}],[\"取出dog实例地址的元素\",{\"1\":{\"595\":1}}],[\"取值指向的元素值\",{\"1\":{\"595\":1}}],[\"取变量a的反射类型对象\",{\"1\":{\"592\":1}}],[\"取最新的数据\",{\"1\":{\"565\":1}}],[\"取消授权命令\",{\"0\":{\"418\":1}}],[\"取消权限\",{\"1\":{\"126\":1,\"128\":1}}],[\"取消权限后记得还原权限\",{\"1\":{\"126\":1}}],[\"办理时间\",{\"1\":{\"557\":1}}],[\"组成kubernetes集群\",{\"1\":{\"713\":1}}],[\"组成的\",{\"1\":{\"191\":1}}],[\"组件信息\",{\"1\":{\"748\":1}}],[\"组件\",{\"0\":{\"762\":1,\"769\":1,\"774\":1},\"1\":{\"635\":1,\"714\":1}}],[\"组id\",{\"1\":{\"555\":1}}],[\"附件地址url\",{\"1\":{\"552\":1}}],[\"附件类型\",{\"1\":{\"552\":1}}],[\"附件名称\",{\"1\":{\"552\":1}}],[\"附件id\",{\"1\":{\"552\":1}}],[\"耗时时间\",{\"1\":{\"551\":1}}],[\"活动结束时间\",{\"1\":{\"551\":1}}],[\"活动开始时间\",{\"1\":{\"551\":1}}],[\"活动类型startevent\",{\"1\":{\"551\":1}}],[\"活动名称\",{\"1\":{\"551\":1}}],[\"活动id\",{\"1\":{\"551\":2}}],[\"委托任务被解决后为resolved\",{\"1\":{\"542\":1}}],[\"画图时的id\",{\"1\":{\"557\":1}}],[\"画图时任务的id对应\",{\"1\":{\"542\":1}}],[\"画流程图时的id\",{\"1\":{\"535\":1}}],[\"画流程图时的name\",{\"1\":{\"535\":1}}],[\"起动器\",{\"1\":{\"541\":1,\"555\":1}}],[\"受让人\",{\"1\":{\"541\":1,\"555\":1}}],[\"受保护成员和私有成员\",{\"1\":{\"126\":1}}],[\"受保护的\",{\"1\":{\"91\":1}}],[\"毫秒\",{\"1\":{\"540\":1,\"551\":1,\"556\":1,\"557\":1}}],[\"锁住的时间\",{\"1\":{\"540\":1}}],[\"父项目\",{\"1\":{\"636\":1}}],[\"父任务id\",{\"1\":{\"542\":1,\"557\":1}}],[\"父id\",{\"1\":{\"540\":1}}],[\"父类的\",{\"1\":{\"148\":2}}],[\"父类引用变量指向于子类对象\",{\"1\":{\"103\":1}}],[\"父类引用指向子类对象\",{\"1\":{\"102\":1}}],[\"父类\",{\"1\":{\"77\":3,\"84\":1,\"103\":1,\"107\":2}}],[\"父类必须实现clone方法\",{\"1\":{\"65\":1}}],[\"元信息\",{\"1\":{\"537\":1}}],[\"元素是否是集合\",{\"1\":{\"443\":1}}],[\"元素的排列顺序由分数的大小决定\",{\"1\":{\"438\":1}}],[\"元素的最低值和最高值相对比\",{\"1\":{\"364\":1}}],[\"元素\",{\"1\":{\"185\":1}}],[\"元素中记录了\",{\"1\":{\"168\":1}}],[\"元素中只记录了下一个元素的位置\",{\"1\":{\"168\":1}}],[\"乐观锁\",{\"1\":{\"536\":1,\"544\":1,\"548\":1}}],[\"乐子人的博客\",{\"1\":{\"15\":1}}],[\"租户id\",{\"1\":{\"534\":1,\"535\":1,\"537\":1,\"540\":1,\"542\":1,\"548\":1,\"551\":1,\"556\":1,\"557\":1}}],[\"唯一id\",{\"1\":{\"536\":1,\"556\":1,\"557\":1,\"558\":1}}],[\"唯一标识\",{\"1\":{\"534\":1}}],[\"唯一不同就是线程安全与否\",{\"1\":{\"147\":1}}],[\"失败次数>重试次数\",{\"1\":{\"533\":1}}],[\"失败或跳过了多少个碎片的细目分类\",{\"1\":{\"299\":1}}],[\"历史身份连接表\",{\"0\":{\"555\":1}}],[\"历史审批意见表\",{\"0\":{\"553\":1}}],[\"历史流程变量表\",{\"0\":{\"558\":1}}],[\"历史流程附件表\",{\"0\":{\"552\":1}}],[\"历史流程实例表\",{\"0\":{\"556\":1},\"1\":{\"533\":1}}],[\"历史活动信息表\",{\"0\":{\"551\":1}}],[\"历史变量表\",{\"1\":{\"533\":1}}],[\"历史任务实例表\",{\"1\":{\"533\":1}}],[\"历史任务表\",{\"0\":{\"557\":1},\"1\":{\"503\":1}}],[\"历史用户信息表\",{\"1\":{\"533\":1}}],[\"历史详情表\",{\"0\":{\"554\":1},\"1\":{\"533\":1}}],[\"历史意见表\",{\"1\":{\"533\":1}}],[\"历史附件表\",{\"1\":{\"533\":1}}],[\"历史节点表\",{\"1\":{\"533\":1}}],[\"异步响应式\",{\"1\":{\"645\":1}}],[\"异或网关或基于数据的排他网关\",{\"1\":{\"530\":1}}],[\"异常原因\",{\"0\":{\"561\":1}}],[\"异常详细以及解决方案请看\",{\"1\":{\"527\":1}}],[\"异常\",{\"1\":{\"43\":5,\"62\":1,\"172\":1}}],[\"领取任务以及完成任务添加批注\",{\"0\":{\"582\":1}}],[\"领取任务\",{\"1\":{\"528\":1}}],[\"领取\",{\"0\":{\"528\":1}}],[\"领券立减\",{\"1\":{\"351\":1}}],[\"候选人等信息\",{\"1\":{\"569\":1}}],[\"候选人组id\",{\"1\":{\"541\":1}}],[\"候选人\",{\"1\":{\"526\":2,\"541\":1,\"555\":1,\"569\":1,\"580\":1}}],[\"针对这种情况\",{\"1\":{\"723\":1}}],[\"针对这种情况可以给任务设置多个候选人\",{\"1\":{\"525\":1}}],[\"针对rdb不适合实时持久化的问题\",{\"1\":{\"452\":1}}],[\"固定设置任务负责人\",{\"1\":{\"525\":1}}],[\"固定分配\",{\"0\":{\"516\":1}}],[\"决定流程走向\",{\"1\":{\"522\":1}}],[\"孙七\",{\"1\":{\"518\":1}}],[\"赵六\",{\"1\":{\"518\":1}}],[\"极少使用\",{\"0\":{\"518\":1}}],[\"极速体验\",{\"1\":{\"351\":1,\"353\":1}}],[\"状态已完成\",{\"1\":{\"584\":1}}],[\"状态修改为已挂起\",{\"1\":{\"514\":1}}],[\"状态修改为已激活\",{\"1\":{\"514\":1}}],[\"状态\",{\"1\":{\"514\":2}}],[\"激活时间\",{\"1\":{\"514\":2}}],[\"激活\",{\"0\":{\"514\":1},\"1\":{\"514\":1}}],[\"级联删除流程定义\",{\"1\":{\"510\":1}}],[\"级别高于none\",{\"1\":{\"496\":1}}],[\"涉及流程定义信息查询\",{\"1\":{\"508\":1}}],[\"涉及\",{\"1\":{\"507\":1}}],[\"涉及的\",{\"1\":{\"506\":1}}],[\"审计日志\",{\"1\":{\"764\":1}}],[\"审批人\",{\"1\":{\"569\":1}}],[\"审批批注\",{\"1\":{\"506\":1}}],[\"审批通过\",{\"1\":{\"505\":1}}],[\"审核自动执行器\",{\"1\":{\"484\":1}}],[\"做为底层支持来匹配到转发路由\",{\"1\":{\"659\":1}}],[\"做乐观锁用\",{\"1\":{\"552\":1}}],[\"做装饰\",{\"1\":{\"502\":1}}],[\"做排行\",{\"1\":{\"444\":1}}],[\"六\",{\"0\":{\"501\":1,\"735\":1}}],[\"五\",{\"0\":{\"500\":1,\"732\":1}}],[\"五种数据类型\",{\"0\":{\"437\":1}}],[\"五种数据结构\",{\"1\":{\"427\":1}}],[\"右键点击leave\",{\"1\":{\"499\":1}}],[\"右边\",{\"1\":{\"442\":1}}],[\"右边存储较大的元素\",{\"1\":{\"188\":1}}],[\"右边不参与运算\",{\"1\":{\"42\":1}}],[\"右边都参与运算\",{\"1\":{\"42\":1}}],[\"绘制流程图\",{\"0\":{\"498\":1}}],[\"扭转到下一个节点\",{\"1\":{\"492\":1}}],[\"部门经理审批\",{\"1\":{\"518\":2}}],[\"部署dashboard\",{\"0\":{\"816\":1}}],[\"部署dashboard和coredns\",{\"0\":{\"815\":1}}],[\"部署一个名为calico\",{\"1\":{\"804\":1}}],[\"部署为daemonset\",{\"1\":{\"804\":1}}],[\"部署步骤过程\",{\"0\":{\"804\":1}}],[\"部署flannel\",{\"0\":{\"800\":1}}],[\"部署kube\",{\"0\":{\"789\":1}}],[\"部署kubelet\",{\"0\":{\"782\":1}}],[\"部署成功\",{\"1\":{\"756\":1}}],[\"部署多个etcd\",{\"0\":{\"755\":1}}],[\"部署\",{\"0\":{\"750\":1,\"757\":1,\"762\":1,\"769\":1,\"774\":1,\"805\":1,\"819\":1,\"822\":1},\"1\":{\"807\":1}}],[\"部署etcd节点\",{\"0\":{\"747\":1}}],[\"部署coredns\",{\"1\":{\"716\":1}}],[\"部署cni网络\",{\"0\":{\"795\":1}}],[\"部署cni\",{\"1\":{\"716\":1}}],[\"部署node节点\",{\"0\":{\"780\":1},\"1\":{\"716\":1}}],[\"部署master节点\",{\"1\":{\"716\":1}}],[\"部署时间\",{\"1\":{\"534\":1}}],[\"部署的名字\",{\"1\":{\"534\":1}}],[\"部署id\",{\"1\":{\"534\":1}}],[\"部署信息表\",{\"1\":{\"502\":1,\"533\":1}}],[\"部署流程文件涉及的表结构\",{\"1\":{\"502\":1}}],[\"部署流程定义\",{\"0\":{\"502\":1}}],[\"部署zip文件\",{\"1\":{\"502\":1}}],[\"部署业务流程定义\",{\"1\":{\"489\":1}}],[\"部署业务流程\",{\"0\":{\"489\":1}}],[\"部分配置差别难以区分和合理应用\",{\"1\":{\"614\":1}}],[\"部分环境搭建复杂\",{\"1\":{\"614\":1}}],[\"部分组件停止维护和更新\",{\"1\":{\"614\":1}}],[\"部分加上一句\",{\"1\":{\"411\":1}}],[\"部分\",{\"1\":{\"286\":1}}],[\"减少业务系统由于流程变更进行系统升级改造的工作量\",{\"1\":{\"486\":1}}],[\"减轻客户端数据访问压力\",{\"1\":{\"427\":1,\"430\":1}}],[\"笔记\",{\"0\":{\"485\":1}}],[\"容器无法通信的情况\",{\"1\":{\"800\":1}}],[\"容器后台运行\",{\"1\":{\"692\":1}}],[\"容器比虚拟机更加轻量化\",{\"1\":{\"690\":1}}],[\"容器id\",{\"1\":{\"689\":5}}],[\"容器\",{\"0\":{\"692\":1,\"695\":1},\"1\":{\"484\":1}}],[\"容量长度比新字符串长度小\",{\"1\":{\"151\":1}}],[\"允许所有请求\",{\"1\":{\"725\":1}}],[\"允许将流程分成多条分支\",{\"1\":{\"531\":1}}],[\"允许动态地新增或者删除责任\",{\"1\":{\"481\":1}}],[\"允许向一个现有的对象添加新的功能\",{\"1\":{\"256\":1}}],[\"责任链\",{\"0\":{\"481\":1},\"1\":{\"480\":1}}],[\"责任链模式的结构\",{\"0\":{\"483\":1}}],[\"责任链模式的结构与实现\",{\"0\":{\"482\":1}}],[\"责任链模式是一种对象行为型模式\",{\"1\":{\"481\":1}}],[\"责任链模式\",{\"0\":{\"480\":1}}],[\"糖3\",{\"1\":{\"477\":1}}],[\"糖\",{\"1\":{\"477\":1}}],[\"配料\",{\"1\":{\"477\":1}}],[\"配置设置\",{\"1\":{\"822\":1}}],[\"配置设置自动做快照持久化方式\",{\"1\":{\"451\":1}}],[\"配置修改\",{\"1\":{\"806\":3}}],[\"配置中的\",{\"1\":{\"800\":1}}],[\"配置中心\",{\"1\":{\"612\":1,\"630\":1,\"658\":1}}],[\"配置来设置每个\",{\"1\":{\"796\":1}}],[\"配置参数文件\",{\"0\":{\"784\":1,\"791\":1},\"1\":{\"783\":1}}],[\"配置好root账户\",{\"1\":{\"714\":1}}],[\"配置时\",{\"1\":{\"673\":1}}],[\"配置string\",{\"1\":{\"670\":1}}],[\"配置分组\",{\"1\":{\"669\":1}}],[\"配置如下\",{\"1\":{\"668\":1}}],[\"配置了一个\",{\"1\":{\"656\":1}}],[\"配置响应gzip压缩\",{\"1\":{\"650\":1}}],[\"配置压缩数据大小的下限\",{\"1\":{\"650\":1}}],[\"配置压缩支持的mime\",{\"1\":{\"650\":1}}],[\"配置格式\",{\"1\":{\"632\":1}}],[\"配置复杂\",{\"1\":{\"614\":1}}],[\"配置管理和服务管理\",{\"1\":{\"616\":1}}],[\"配置管理\",{\"1\":{\"611\":1,\"631\":1}}],[\"配置更改时自动刷新\",{\"1\":{\"610\":1}}],[\"配置方式如下\",{\"1\":{\"606\":1}}],[\"配置信息\",{\"1\":{\"496\":1,\"548\":1}}],[\"配置选项\",{\"0\":{\"464\":1}}],[\"配置内存阈值\",{\"1\":{\"463\":1}}],[\"配置aof\",{\"0\":{\"455\":1}}],[\"配置\",{\"0\":{\"809\":1,\"813\":1},\"1\":{\"380\":1,\"495\":1,\"690\":1}}],[\"配置mongodb\",{\"0\":{\"368\":1}}],[\"配置多重护眼\",{\"1\":{\"351\":1}}],[\"配置环境\",{\"0\":{\"328\":1}}],[\"配置文件默认使用\",{\"1\":{\"806\":1}}],[\"配置文件必须与\",{\"1\":{\"796\":1}}],[\"配置文件加载方式进行了重构\",{\"1\":{\"674\":1}}],[\"配置文件失效\",{\"0\":{\"673\":1}}],[\"配置文件id\",{\"1\":{\"669\":1}}],[\"配置文件中的\",{\"1\":{\"657\":1}}],[\"配置文件示例如下\",{\"1\":{\"656\":1}}],[\"配置文件参数说明\",{\"1\":{\"496\":1}}],[\"配置文件名\",{\"1\":{\"451\":1}}],[\"配置文件\",{\"0\":{\"282\":1,\"330\":1,\"380\":1,\"423\":1,\"638\":1,\"668\":1,\"729\":1},\"1\":{\"423\":1,\"625\":1,\"674\":1}}],[\"配置文\",{\"1\":{\"27\":1}}],[\"奶茶\",{\"1\":{\"477\":1}}],[\"奶茶店中有各种各样的奶茶\",{\"1\":{\"477\":1}}],[\"珍珠等配料\",{\"1\":{\"477\":1}}],[\"珍珠奶茶\",{\"1\":{\"477\":3}}],[\"布丁5\",{\"1\":{\"477\":1}}],[\"布丁\",{\"1\":{\"477\":3}}],[\"布尔值\",{\"1\":{\"364\":1}}],[\"布尔或者那些\",{\"1\":{\"311\":1}}],[\"布尔型是\",{\"1\":{\"49\":1}}],[\"店员会问是否要加\",{\"1\":{\"477\":1}}],[\"蓝莓10\",{\"1\":{\"477\":1}}],[\"蓝莓奶茶\",{\"1\":{\"477\":3}}],[\"蓝水翡翠\",{\"1\":{\"351\":1}}],[\"角色是为了完成各种工作而创造\",{\"1\":{\"724\":1}}],[\"角色\",{\"1\":{\"476\":4,\"477\":2,\"483\":3}}],[\"耦合度高\",{\"1\":{\"475\":1}}],[\"不改变原有类\",{\"1\":{\"475\":1}}],[\"三者的功能紧密相关\",{\"1\":{\"757\":1,\"770\":1}}],[\"三方客户端封装\",{\"1\":{\"645\":1}}],[\"三\",{\"0\":{\"472\":1,\"494\":1,\"577\":1,\"726\":1,\"774\":1,\"789\":1}}],[\"三是线程抛出未捕获的异常\",{\"1\":{\"216\":1}}],[\"种类\",{\"0\":{\"588\":1}}],[\"种\",{\"1\":{\"469\":1}}],[\"种设计模式\",{\"0\":{\"469\":1}}],[\"万字总结之设计模式七大原则\",{\"1\":{\"468\":1}}],[\"迪米特法则\",{\"1\":{\"468\":1}}],[\"尽量使用合成\",{\"1\":{\"468\":1}}],[\"尽可能的隐藏信息和功能实现细节\",{\"1\":{\"88\":1}}],[\"合成\",{\"1\":{\"468\":2}}],[\"合法就使用\",{\"1\":{\"152\":1}}],[\"依托\",{\"1\":{\"609\":1}}],[\"依赖\",{\"1\":{\"655\":2}}],[\"依赖版本的锁定\",{\"1\":{\"636\":1}}],[\"依赖于抽象\",{\"1\":{\"468\":1}}],[\"依赖倒转原则\",{\"1\":{\"468\":2}}],[\"依靠外部类实例化\",{\"1\":{\"75\":1}}],[\"里氏代换原则\",{\"1\":{\"468\":2}}],[\"里面创建一个空分支\",{\"1\":{\"706\":1}}],[\"里面记录日志的时候\",{\"1\":{\"453\":1}}],[\"里面有\",{\"1\":{\"308\":1,\"310\":1}}],[\"里面有一个\",{\"1\":{\"121\":1}}],[\"里面的内容\",{\"1\":{\"275\":1}}],[\"便于其他程序员阅读\",{\"1\":{\"467\":1}}],[\"稳健性以及安全性的解决方案\",{\"1\":{\"466\":1}}],[\"告诉你内存不足\",{\"1\":{\"464\":1}}],[\"报错\",{\"1\":{\"464\":1}}],[\"报错的原因\",{\"1\":{\"422\":1}}],[\"什么都不干\",{\"1\":{\"464\":1}}],[\"什么是授权\",{\"0\":{\"721\":1}}],[\"什么是\",{\"0\":{\"268\":1,\"430\":1}}],[\"什么是反射机制\",{\"0\":{\"120\":1}}],[\"什么是接口\",{\"0\":{\"93\":1}}],[\"什么是抽象类\",{\"0\":{\"92\":1}}],[\"什么是内部类\",{\"1\":{\"80\":1}}],[\"什么是编程\",{\"0\":{\"31\":1}}],[\"仅在启动时注册指定的对应文件\",{\"1\":{\"670\":1}}],[\"仅在其中一个主要词汇文件main\",{\"1\":{\"322\":1}}],[\"仅与时间相关\",{\"1\":{\"463\":1}}],[\"淘汰的数据为最长时间没有被使用\",{\"1\":{\"463\":1}}],[\"至于要删除多少过期key\",{\"1\":{\"462\":1}}],[\"至此\",{\"1\":{\"338\":1,\"607\":1}}],[\"至此出现多任务操作系统\",{\"1\":{\"203\":1}}],[\"隔一段时间\",{\"1\":{\"462\":1}}],[\"隔开就行\",{\"1\":{\"95\":1}}],[\"惰性删除\",{\"0\":{\"460\":1}}],[\"那就为所欲为\",{\"1\":{\"719\":1}}],[\"那占用的内存就会变得越来越大\",{\"1\":{\"458\":1}}],[\"那么将该节点生成的文件拷贝到其他节点\",{\"1\":{\"755\":1}}],[\"那么整个请求的结果将会立即返回\",{\"1\":{\"725\":1}}],[\"那么是不会进行认证授权的\",{\"1\":{\"722\":1}}],[\"那么可以选用\",{\"1\":{\"690\":1}}],[\"那么会自动在相关的\",{\"1\":{\"645\":1}}],[\"那么会不会是事务\",{\"1\":{\"262\":1}}],[\"那么在启动时会报错\",{\"1\":{\"635\":1}}],[\"那么在历史记录中就不会记录是哪个用户执行了这个任务\",{\"1\":{\"528\":1,\"582\":1}}],[\"那么在反序列化时\",{\"1\":{\"254\":1}}],[\"那么作用域范围没有流程实例大\",{\"1\":{\"521\":1}}],[\"那么申请人的请假信息\",{\"1\":{\"512\":1}}],[\"那么我们可以把\",{\"1\":{\"484\":1}}],[\"那么我们新建两个\",{\"1\":{\"59\":1}}],[\"那么被再次访问的概率也就很小了\",{\"1\":{\"463\":1}}],[\"那么这些数据如果过期了\",{\"1\":{\"459\":1}}],[\"那么这个选项就有用了\",{\"1\":{\"424\":1}}],[\"那么这个sql是不合法的\",{\"1\":{\"421\":1,\"424\":1}}],[\"那么这个\",{\"1\":{\"257\":1}}],[\"那么也会触发bgsave操作\",{\"1\":{\"450\":1}}],[\"那么主进程直接返回\",{\"1\":{\"449\":1}}],[\"那么抛出错误\",{\"1\":{\"424\":1}}],[\"那么数据被零除时mysql返回null\",{\"1\":{\"424\":1}}],[\"那么它的结构如下\",{\"1\":{\"303\":1}}],[\"那么事务就可以启动了\",{\"1\":{\"262\":1}}],[\"那么报异常\",{\"1\":{\"254\":1}}],[\"那么就需要填入其他\",{\"1\":{\"733\":1}}],[\"那么就可以用到\",{\"1\":{\"708\":1}}],[\"那么就只能看到\",{\"1\":{\"499\":1}}],[\"那么就fork一个新的子进程进行持久化数据\",{\"1\":{\"449\":1}}],[\"那么就移除这个元素\",{\"1\":{\"444\":1}}],[\"那么就移除这个键\",{\"1\":{\"441\":1}}],[\"那么就无法执行\",{\"1\":{\"222\":1}}],[\"那么就会一直等待下去\",{\"1\":{\"222\":1}}],[\"那么就会从\",{\"1\":{\"140\":1}}],[\"那么就会将该变量存储的数组地址\",{\"1\":{\"63\":1}}],[\"那么就会引用相同的对象\",{\"1\":{\"41\":1}}],[\"那么其它线程就无法进入对象的同步方法或者同步控制块中\",{\"1\":{\"222\":1}}],[\"那么list接口的实现类都会遵循这一种规范\",{\"1\":{\"174\":1}}],[\"那么直接将\",{\"1\":{\"151\":2}}],[\"那么jvm会默认调用父类的无参构造super\",{\"1\":{\"70\":1}}],[\"那么\",{\"1\":{\"42\":1,\"182\":1,\"308\":1,\"343\":1,\"603\":1,\"625\":1,\"651\":1}}],[\"恢复暂存操作\",{\"1\":{\"709\":1}}],[\"恢复时就不再用日志了\",{\"1\":{\"456\":1}}],[\"恢复权限\",{\"1\":{\"129\":1}}],[\"加入集群的当前状态\",{\"1\":{\"752\":1}}],[\"加入\",{\"1\":{\"692\":1}}],[\"加载自己的配置类\",{\"1\":{\"648\":1}}],[\"加载aof出错如何处理\",{\"1\":{\"455\":1}}],[\"加糖+加布丁\",{\"1\":{\"477\":1}}],[\"加糖\",{\"1\":{\"477\":2}}],[\"加上此参数的目的是跳过权限验证\",{\"1\":{\"411\":1}}],[\"推荐\",{\"1\":{\"454\":1}}],[\"推荐一些老字号\",{\"1\":{\"341\":1,\"343\":1}}],[\"立即执行对key的删除操作\",{\"1\":{\"461\":1}}],[\"立即生效\",{\"1\":{\"18\":1}}],[\"立马同步地将日志写回磁盘\",{\"1\":{\"454\":1}}],[\"避免额外的检查开销\",{\"1\":{\"453\":1}}],[\"避免多线程引起的安全问题\",{\"1\":{\"178\":1}}],[\"频繁执行成本较高\",{\"1\":{\"452\":1}}],[\"缺点\",{\"1\":{\"452\":1}}],[\"缺省\",{\"1\":{\"91\":1}}],[\"优缺点\",{\"0\":{\"481\":1}}],[\"优点\",{\"1\":{\"452\":1}}],[\"优先级\",{\"1\":{\"542\":1,\"557\":1}}],[\"优先级越高\",{\"1\":{\"226\":1}}],[\"优先考虑抽象类\",{\"1\":{\"99\":1}}],[\"优先使用接口\",{\"1\":{\"99\":1}}],[\"压缩配置\",{\"1\":{\"650\":1}}],[\"压缩后的文件体积远远小于内存大小\",{\"1\":{\"452\":1}}],[\"压缩后的文件远远小于内存大小\",{\"1\":{\"451\":1}}],[\"压缩\",{\"1\":{\"451\":1}}],[\"读者可以按照这个规则\",{\"1\":{\"451\":1}}],[\"读取超时配置\",{\"1\":{\"651\":1}}],[\"读取\",{\"0\":{\"633\":1},\"1\":{\"631\":1,\"673\":1}}],[\"读取单个或多个元素\",{\"1\":{\"438\":1}}],[\"读取数据库\",{\"1\":{\"433\":1}}],[\"读取前\",{\"1\":{\"433\":1}}],[\"读取文件并使用该文件中的\",{\"1\":{\"796\":1}}],[\"读取文件\",{\"1\":{\"254\":1}}],[\"读取一行\",{\"1\":{\"253\":1}}],[\"周期性执行条件的设置格式为\",{\"1\":{\"451\":1}}],[\"待快照数据写入完成后再原子替换旧的rdb文件\",{\"1\":{\"449\":1}}],[\"手动为每个node节点配置tls认证比较麻烦\",{\"1\":{\"723\":1}}],[\"手动部署每个组件\",{\"1\":{\"713\":1}}],[\"手动启动dockerd的时候\",{\"1\":{\"687\":1}}],[\"手动触发分别对应\",{\"1\":{\"449\":1}}],[\"手动触发\",{\"0\":{\"449\":1},\"1\":{\"448\":1}}],[\"手机验证码等业务场景\",{\"1\":{\"434\":1}}],[\"触发rdb持久化过程分为\",{\"1\":{\"448\":1}}],[\"触控\",{\"1\":{\"351\":1,\"353\":1}}],[\"菜鸟教程\",{\"1\":{\"445\":1}}],[\"榜单可以按照用户关注数\",{\"1\":{\"444\":1}}],[\"排他网关\",{\"0\":{\"530\":1},\"1\":{\"530\":1}}],[\"排除spring\",{\"0\":{\"497\":1}}],[\"排行榜\",{\"1\":{\"444\":1}}],[\"排序也可以通过nativesearchquerybuilder完成\",{\"1\":{\"354\":1}}],[\"排序也可以自定义排序\",{\"1\":{\"195\":1}}],[\"排序\",{\"0\":{\"354\":1},\"1\":{\"354\":1,\"389\":1}}],[\"排序字段\",{\"1\":{\"353\":1}}],[\"排序操作\",{\"1\":{\"198\":1}}],[\"排序查询等方法\",{\"1\":{\"197\":1}}],[\"降序\",{\"1\":{\"511\":1}}],[\"降序返回排名\",{\"1\":{\"444\":1}}],[\"降低耦合度\",{\"1\":{\"481\":1}}],[\"降低mysql的读写压力\",{\"1\":{\"440\":1}}],[\"升序返回排名\",{\"1\":{\"444\":1}}],[\"升级双通道16g内存一步到位\",{\"1\":{\"351\":1}}],[\"追加名称对应的分数\",{\"1\":{\"444\":1}}],[\"收集统计信息和指标\",{\"1\":{\"664\":1}}],[\"收藏等\",{\"1\":{\"443\":1}}],[\"收录西欧语言\",{\"1\":{\"238\":1}}],[\"差集\",{\"1\":{\"443\":2}}],[\"差集等\",{\"1\":{\"438\":1}}],[\"展示新的列表信息\",{\"1\":{\"442\":1}}],[\"微博timeline\",{\"1\":{\"442\":1}}],[\"微信\",{\"1\":{\"160\":1}}],[\"递增值\",{\"1\":{\"441\":1}}],[\"递增hashkey对应的值\",{\"1\":{\"441\":1}}],[\"计数器\",{\"1\":{\"440\":1}}],[\"计算出元素的位置\",{\"1\":{\"186\":1}}],[\"计算出\",{\"1\":{\"116\":1}}],[\"计算机性能\",{\"1\":{\"204\":1}}],[\"计算机做出一个操作\",{\"1\":{\"202\":1}}],[\"计算机是使用时间戳存储表示时间\",{\"1\":{\"112\":1}}],[\"计算机语言是为了实现人与计算机通讯的\",{\"1\":{\"31\":1}}],[\"计算机编程\",{\"1\":{\"31\":1}}],[\"经常会遇到项目中有个必要的配置文件\",{\"1\":{\"707\":1}}],[\"经常会遇到很多地方都需要获取当前的登录用户对象\",{\"1\":{\"603\":1}}],[\"经典使用场景\",{\"1\":{\"440\":1}}],[\"经过的毫秒数\",{\"1\":{\"112\":1}}],[\"简介\",{\"0\":{\"653\":1,\"748\":1,\"763\":1,\"770\":1,\"775\":1,\"796\":1}}],[\"简化了对象\",{\"1\":{\"481\":1}}],[\"简单定义\",{\"1\":{\"468\":1}}],[\"简单的理解就是淘汰一段时间内\",{\"1\":{\"463\":1}}],[\"简单的理解就是从数据库中删除最近最少访问的数据\",{\"1\":{\"463\":1}}],[\"简单来说\",{\"1\":{\"456\":1}}],[\"简单聚合\",{\"0\":{\"313\":1}}],[\"简述\",{\"1\":{\"440\":1,\"441\":1,\"442\":1,\"443\":2,\"444\":1}}],[\"讨论的是存储值的数据类型\",{\"1\":{\"437\":1}}],[\"另外\",{\"1\":{\"799\":1,\"806\":1}}],[\"另外在点赞前判断是否点赞过就利用了\",{\"1\":{\"435\":1}}],[\"另一种是编译nginx源码包的方式\",{\"1\":{\"823\":1}}],[\"另一端连接一个叫作flanneld的服务进程\",{\"1\":{\"799\":1}}],[\"另一个是通过使用\",{\"1\":{\"298\":1}}],[\"另一个是线程被强制性地终止\",{\"1\":{\"216\":1}}],[\"另一个变量的值也会跟着改变\",{\"1\":{\"63\":1}}],[\"好友等相互关系的存储\",{\"0\":{\"435\":1}}],[\"好了\",{\"1\":{\"4\":1,\"831\":1}}],[\"点赞\",{\"0\":{\"435\":1},\"1\":{\"443\":1}}],[\"点击导出按钮\",{\"1\":{\"499\":1}}],[\"点击查看\",{\"1\":{\"150\":1}}],[\"点击注册即可完成激活插件\",{\"1\":{\"20\":1}}],[\"到对端后还需要走这个过程的反过程\",{\"1\":{\"799\":1}}],[\"到本地\",{\"1\":{\"704\":1}}],[\"到底是怎么从\",{\"1\":{\"603\":1}}],[\"到时间后redis会删除它\",{\"1\":{\"434\":1}}],[\"到处运行\",{\"0\":{\"34\":1,\"35\":1},\"1\":{\"34\":1,\"35\":1}}],[\"丰富的特性\",{\"1\":{\"431\":1}}],[\"丰富的数据类型\",{\"1\":{\"431\":1}}],[\"意见\",{\"1\":{\"553\":1}}],[\"意思是\",{\"1\":{\"440\":1}}],[\"意思就是要么成功执行要么失败完全不执行\",{\"1\":{\"431\":1}}],[\"意味着类的版本不同\",{\"1\":{\"254\":1}}],[\"及\",{\"1\":{\"431\":1}}],[\"持久化机制\",{\"0\":{\"446\":1}}],[\"持久化\",{\"0\":{\"448\":1,\"453\":1},\"1\":{\"427\":1,\"431\":1,\"453\":1}}],[\"哨兵等\",{\"1\":{\"427\":1}}],[\"事务\",{\"1\":{\"427\":1}}],[\"事件json数据\",{\"1\":{\"550\":1}}],[\"事件日志表\",{\"0\":{\"550\":1},\"1\":{\"550\":1}}],[\"事件名称\",{\"1\":{\"548\":1}}],[\"事件类型\",{\"1\":{\"548\":1}}],[\"事件发布或订阅\",{\"1\":{\"429\":1,\"430\":1}}],[\"事件\",{\"1\":{\"308\":1,\"553\":1}}],[\"事件数据和指标\",{\"1\":{\"271\":1}}],[\"消息中间件\",{\"1\":{\"613\":1}}],[\"消息驱动rocketmq\",{\"1\":{\"611\":1}}],[\"消息驱动能力\",{\"1\":{\"610\":1}}],[\"消息队列\",{\"1\":{\"442\":2}}],[\"消息\",{\"1\":{\"427\":1}}],[\"列表\",{\"1\":{\"429\":1,\"430\":1}}],[\"列表类型\",{\"0\":{\"442\":1},\"1\":{\"427\":1,\"437\":1}}],[\"列举的条件\",{\"1\":{\"308\":1}}],[\"散列类型\",{\"0\":{\"441\":1},\"1\":{\"427\":1,\"437\":1}}],[\"散列函数\",{\"1\":{\"186\":1}}],[\"定时作业数量\",{\"1\":{\"540\":1}}],[\"定时删除\",{\"0\":{\"461\":1}}],[\"定期删除+惰性删除\",{\"1\":{\"462\":1}}],[\"定期删除\",{\"0\":{\"462\":1}}],[\"定位是缓存\",{\"1\":{\"427\":1,\"430\":1}}],[\"定义ipv4自动发现网卡规则\",{\"1\":{\"806\":1}}],[\"定义局部过滤器\",{\"0\":{\"665\":1}}],[\"定义当前feignclient的统一前缀\",{\"1\":{\"649\":1}}],[\"定义容错的类\",{\"1\":{\"649\":1}}],[\"定义zip文件的输入流\",{\"1\":{\"502\":1}}],[\"定义业务流程\",{\"1\":{\"488\":1}}],[\"定义具体实现事项\",{\"1\":{\"484\":1}}],[\"定义具体构件\",{\"1\":{\"477\":1}}],[\"定义抽象的handler接口\",{\"1\":{\"484\":1}}],[\"定义抽象装饰\",{\"1\":{\"477\":1}}],[\"定义抽象构件角色\",{\"1\":{\"477\":1}}],[\"定义一个处理请求的接口\",{\"1\":{\"483\":1}}],[\"定义一个\",{\"1\":{\"476\":1,\"589\":1}}],[\"定义如何查询\",{\"1\":{\"303\":1}}],[\"定义了应该有什么功能\",{\"1\":{\"93\":1}}],[\"定义在方法\",{\"1\":{\"80\":1}}],[\"定义\",{\"1\":{\"46\":2,\"47\":1,\"95\":1,\"115\":1}}],[\"定义数组的语法\",{\"1\":{\"46\":1}}],[\"启用ipip模式时\",{\"1\":{\"806\":1}}],[\"启用cni\",{\"1\":{\"783\":1}}],[\"启用tls\",{\"1\":{\"764\":1}}],[\"启用rbac授权和节点自管理\",{\"1\":{\"764\":1}}],[\"启用授权\",{\"1\":{\"764\":1}}],[\"启用日志\",{\"1\":{\"764\":1}}],[\"启用\",{\"0\":{\"745\":1}}],[\"启用ansi\",{\"1\":{\"424\":1}}],[\"启动nginx\",{\"1\":{\"824\":1,\"825\":1}}],[\"启动服务\",{\"1\":{\"818\":1}}],[\"启动服务发现\",{\"0\":{\"625\":1}}],[\"启动时自动配置\",{\"1\":{\"687\":1}}],[\"启动并设置开机启动\",{\"0\":{\"685\":1,\"754\":1,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1}}],[\"启动测试\",{\"0\":{\"641\":1}}],[\"启动类\",{\"0\":{\"637\":1}}],[\"启动配置管理\",{\"0\":{\"629\":1}}],[\"启动命令\",{\"1\":{\"619\":2}}],[\"启动一个流程实例\",{\"1\":{\"503\":2}}],[\"启动一个流程实例表示开始一次业务流程的运行\",{\"1\":{\"490\":1}}],[\"启动程序\",{\"1\":{\"497\":1}}],[\"启动流程实例时\",{\"1\":{\"513\":1}}],[\"启动流程实例涉及的表结构\",{\"1\":{\"503\":1}}],[\"启动流程实例\",{\"0\":{\"490\":1,\"503\":1}}],[\"启动mongod服务器\",{\"1\":{\"377\":1}}],[\"启动也不会创建\",{\"1\":{\"335\":1}}],[\"启动\",{\"0\":{\"619\":1,\"692\":1,\"810\":1,\"827\":1},\"1\":{\"24\":1,\"261\":1,\"689\":1,\"800\":1,\"814\":1,\"827\":1}}],[\"启动就很慢了\",{\"1\":{\"18\":1}}],[\"视频信息等\",{\"1\":{\"441\":1}}],[\"视为字符串的连接操作符而非或运算符\",{\"1\":{\"424\":1}}],[\"视图等权限\",{\"0\":{\"415\":1}}],[\"果未给出该模式\",{\"1\":{\"424\":1}}],[\"果蔬生菜\",{\"1\":{\"385\":2}}],[\"希望插入的值为0\",{\"1\":{\"424\":1}}],[\"希望不会立flag\",{\"1\":{\"3\":1}}],[\"客户端工具\",{\"0\":{\"811\":1}}],[\"客户端认证参数\",{\"1\":{\"792\":1}}],[\"客户端通告地址\",{\"1\":{\"752\":1}}],[\"客户端访问监听地址\",{\"1\":{\"752\":1}}],[\"客户端的token信息与预先定义的token匹配认证通过后\",{\"1\":{\"723\":1}}],[\"客户端证书认证叫作tls双向认证\",{\"1\":{\"723\":1}}],[\"客户端证书认证\",{\"1\":{\"723\":1}}],[\"客户端负载均衡loadbalancer\",{\"1\":{\"658\":1,\"676\":1}}],[\"客户端向\",{\"1\":{\"654\":1}}],[\"客户端\",{\"1\":{\"610\":1}}],[\"客户端执行\",{\"1\":{\"449\":1}}],[\"客户端执行命令\",{\"1\":{\"422\":1}}],[\"客户类\",{\"1\":{\"483\":1}}],[\"客户只需要将请求发送到责任链上即可\",{\"1\":{\"480\":1}}],[\"客户可以遍历游标以检索结果\",{\"1\":{\"363\":1}}],[\"跟之前类似生成三个文件server\",{\"1\":{\"737\":1}}],[\"跟之前类似生成三个文件etcd\",{\"1\":{\"734\":1}}],[\"跟流程实例相关\",{\"1\":{\"570\":1}}],[\"跟流程定义相关\",{\"1\":{\"564\":1}}],[\"跟\",{\"1\":{\"418\":1,\"577\":1}}],[\"跟新字符串长度进行比较\",{\"1\":{\"151\":1}}],[\"权限与角色相关联\",{\"1\":{\"724\":1}}],[\"权限校验\",{\"1\":{\"653\":1}}],[\"权限名称\",{\"1\":{\"417\":1}}],[\"权限\",{\"1\":{\"413\":1}}],[\"赋权\",{\"1\":{\"680\":1}}],[\"赋予用户权限命令的简单格式可概括为\",{\"1\":{\"413\":1}}],[\"赋值成新的数组容量newcapacity\",{\"1\":{\"151\":1}}],[\"赋值成新的数组容量\",{\"1\":{\"151\":1}}],[\"跳过权限\",{\"1\":{\"411\":1}}],[\"密码后\",{\"1\":{\"411\":1}}],[\"密码的场景还是比较常见的\",{\"1\":{\"411\":1}}],[\"密码\",{\"0\":{\"411\":1},\"1\":{\"411\":1}}],[\"密码太简单\",{\"1\":{\"407\":1}}],[\"忘记\",{\"0\":{\"411\":1},\"1\":{\"411\":1}}],[\"忘记登陆密码等\",{\"1\":{\"407\":1}}],[\"价格也不一致\",{\"1\":{\"477\":1}}],[\"价格\",{\"1\":{\"394\":1}}],[\"示例\",{\"1\":{\"394\":1,\"822\":1}}],[\"$1\",{\"1\":{\"788\":1}}],[\"$kubelet\",{\"1\":{\"786\":1}}],[\"$kube\",{\"1\":{\"766\":1,\"772\":1,\"777\":1,\"793\":1}}],[\"$mainpid\",{\"1\":{\"683\":1}}],[\"$within\",{\"1\":{\"398\":1}}],[\"$regex\",{\"0\":{\"397\":1},\"1\":{\"397\":1}}],[\"$\",{\"1\":{\"387\":1,\"522\":2,\"627\":1,\"631\":3,\"633\":1,\"657\":1,\"658\":1,\"669\":2,\"680\":2,\"689\":4,\"726\":5,\"788\":1}}],[\"借助它可以非常方便的读写mongo库\",{\"1\":{\"384\":1}}],[\"卸载\",{\"0\":{\"376\":1}}],[\"停止命令\",{\"0\":{\"827\":1}}],[\"停止\",{\"1\":{\"375\":2,\"689\":1,\"827\":1}}],[\"停用词过滤\",{\"1\":{\"316\":1}}],[\"确保没有违反已经定义好的约束条件\",{\"1\":{\"725\":1}}],[\"确保\",{\"1\":{\"375\":1}}],[\"确保释放锁\",{\"1\":{\"233\":1}}],[\"验证\",{\"1\":{\"375\":1,\"680\":2,\"726\":1}}],[\"未安装的错误\",{\"1\":{\"371\":1}}],[\"未付款\",{\"1\":{\"160\":1}}],[\"命令验证\",{\"1\":{\"812\":1}}],[\"命令行选项来选择\",{\"1\":{\"796\":1}}],[\"命令拷贝到\",{\"1\":{\"785\":1}}],[\"命令可以在\",{\"1\":{\"785\":1}}],[\"命令可以废弃\",{\"1\":{\"449\":1}}],[\"命令相关的操作\",{\"0\":{\"709\":1}}],[\"命令了\",{\"1\":{\"707\":1,\"708\":1}}],[\"命令提交代码\",{\"1\":{\"705\":1}}],[\"命令追加\",{\"1\":{\"454\":2}}],[\"命令重新加载\",{\"1\":{\"450\":1}}],[\"命令或者自动触发bgsave命令\",{\"1\":{\"449\":1}}],[\"命令是针对\",{\"1\":{\"449\":1}}],[\"命令执行\",{\"1\":{\"440\":1,\"441\":1,\"442\":1,\"444\":1}}],[\"命令说明\",{\"1\":{\"440\":1}}],[\"命令使用\",{\"1\":{\"440\":1,\"441\":1,\"442\":1,\"443\":1,\"444\":1}}],[\"命令设置一个键的生存时间\",{\"1\":{\"434\":1}}],[\"命令\",{\"0\":{\"410\":1},\"1\":{\"440\":1,\"441\":1,\"442\":1,\"443\":2,\"444\":1,\"449\":1,\"822\":1}}],[\"命令来启动该mongodb\",{\"1\":{\"375\":1}}],[\"命令前\",{\"1\":{\"369\":1}}],[\"命中结果\",{\"1\":{\"312\":2}}],[\"平时我们用到\",{\"1\":{\"432\":1}}],[\"平台我们使用\",{\"1\":{\"377\":1}}],[\"平台\",{\"1\":{\"370\":1,\"616\":1}}],[\"平台的\",{\"1\":{\"370\":1}}],[\"平台的安装\",{\"0\":{\"367\":1,\"370\":1,\"377\":1}}],[\"平均售价\",{\"1\":{\"356\":6}}],[\"平均\",{\"1\":{\"168\":2}}],[\"假\",{\"1\":{\"364\":1}}],[\"假如设置了none则是按照顺序输出\",{\"1\":{\"347\":1}}],[\"位系统的安装文件\",{\"1\":{\"366\":1}}],[\"位\",{\"1\":{\"364\":1}}],[\"位或\",{\"1\":{\"364\":1}}],[\"位于\",{\"1\":{\"113\":1}}],[\"游标\",{\"1\":{\"363\":1}}],[\"游啊游\",{\"1\":{\"104\":2}}],[\"域\",{\"1\":{\"362\":1}}],[\"完整有序的停止nginx\",{\"1\":{\"827\":1}}],[\"完善目录\",{\"1\":{\"825\":1}}],[\"完全是一个干净的分支\",{\"1\":{\"706\":1}}],[\"完全索引\",{\"1\":{\"360\":1}}],[\"完成pod间网络访问策略的设置\",{\"1\":{\"806\":1}}],[\"完成候选人任务\",{\"0\":{\"528\":1}}],[\"完成任务的时间\",{\"1\":{\"500\":1}}],[\"完成任务\",{\"1\":{\"492\":1,\"506\":1,\"528\":1,\"582\":1}}],[\"完成后自动结束\",{\"1\":{\"449\":1}}],[\"完成分页功能\",{\"1\":{\"303\":1}}],[\"易存储对象类型的数据\",{\"1\":{\"360\":1}}],[\"易使用\",{\"1\":{\"360\":1}}],[\"易部署\",{\"1\":{\"360\":1}}],[\"旨在为\",{\"1\":{\"360\":1}}],[\"高并发的应用场景下还建议多次测试\",{\"1\":{\"799\":1}}],[\"高效\",{\"1\":{\"610\":1}}],[\"高效并且对业务零侵入地解决分布式事务问题\",{\"1\":{\"610\":1}}],[\"高效的数据存储\",{\"1\":{\"360\":1}}],[\"高内聚低耦合\",{\"1\":{\"467\":1}}],[\"高速队列等场景\",{\"1\":{\"429\":1,\"430\":1}}],[\"高可靠\",{\"1\":{\"610\":1}}],[\"高可靠的云存储服务\",{\"1\":{\"610\":1}}],[\"高可拓展方面\",{\"1\":{\"427\":1}}],[\"高可用的定时\",{\"1\":{\"610\":1}}],[\"高可用方面包括\",{\"1\":{\"427\":1}}],[\"高可用\",{\"1\":{\"427\":1}}],[\"高版本group\",{\"0\":{\"421\":1}}],[\"高性能的\",{\"1\":{\"360\":1}}],[\"高亮显示\",{\"0\":{\"568\":1}}],[\"高亮关键字\",{\"1\":{\"342\":1}}],[\"高亮设置\",{\"0\":{\"342\":1},\"1\":{\"348\":1}}],[\"高亮\",{\"1\":{\"271\":1}}],[\"高亮查询\",{\"0\":{\"339\":1},\"1\":{\"265\":2}}],[\"官网的版本选择描述中\",{\"1\":{\"617\":1}}],[\"官网\",{\"1\":{\"377\":1}}],[\"官网教程\",{\"1\":{\"370\":1}}],[\"官网文档地址\",{\"1\":{\"616\":1}}],[\"官网文档\",{\"1\":{\"359\":1}}],[\"官方地址\",{\"1\":{\"713\":1}}],[\"官方推出的第二代网关框架\",{\"1\":{\"653\":1}}],[\"官方建议使用spring\",{\"1\":{\"643\":1}}],[\"官方建议我们使用\",{\"1\":{\"635\":1}}],[\"官方网址\",{\"1\":{\"486\":1,\"653\":1}}],[\"官方提供了测试数据\",{\"1\":{\"294\":1}}],[\"官方批量操作文档\",{\"1\":{\"293\":1}}],[\"官方中文文档\",{\"1\":{\"286\":1}}],[\"官方安装教程\",{\"1\":{\"280\":1}}],[\"官方教程\",{\"0\":{\"280\":1}}],[\"官方文档\",{\"1\":{\"266\":1,\"286\":1,\"644\":1}}],[\"地理附近查询\",{\"0\":{\"403\":1}}],[\"地理空间查询\",{\"0\":{\"398\":1}}],[\"地理位置查询\",{\"1\":{\"358\":1}}],[\"地址\",{\"1\":{\"70\":1,\"620\":1}}],[\"灵活\",{\"1\":{\"357\":1}}],[\"台\",{\"1\":{\"356\":1}}],[\"求平均值\",{\"0\":{\"356\":1},\"1\":{\"356\":1}}],[\"嵌套聚合\",{\"0\":{\"356\":1}}],[\"遍历结构体所有成员\",{\"1\":{\"591\":1}}],[\"遍历集合\",{\"1\":{\"509\":1}}],[\"遍历任务列表\",{\"1\":{\"505\":1,\"513\":1,\"527\":1}}],[\"遍历\",{\"1\":{\"355\":1,\"356\":1}}],[\"遍历字段\",{\"1\":{\"129\":1}}],[\"条件都满足\",{\"1\":{\"524\":1}}],[\"条数据\",{\"1\":{\"389\":1}}],[\"条\",{\"1\":{\"353\":1}}],[\"利用物理网络的连接将数据包投递到目标flanneld上\",{\"1\":{\"799\":1}}],[\"利用etcd来管理可分配的ip地址段资源\",{\"1\":{\"799\":1}}],[\"利用\",{\"1\":{\"484\":1}}],[\"利用这一特性可以运用在限时的优惠活动信息\",{\"1\":{\"434\":1}}],[\"利用nativesearchquerybuilder可以方便的实现分页\",{\"1\":{\"353\":1}}],[\"利用反射动态创建对象实例\",{\"1\":{\"119\":1}}],[\"拯救者y7000p\",{\"1\":{\"351\":1}}],[\"联想\",{\"1\":{\"351\":2,\"355\":1,\"356\":1}}],[\"专业级调校mx150\",{\"1\":{\"351\":1,\"352\":1}}],[\"屏下指纹解锁\",{\"1\":{\"351\":1,\"352\":1}}],[\"索尼4800万广角微距三摄\",{\"1\":{\"351\":1,\"352\":1}}],[\"索引对象\",{\"1\":{\"350\":1}}],[\"索引是否存在\",{\"1\":{\"338\":1}}],[\"索引名称\",{\"1\":{\"333\":1,\"348\":1}}],[\"索引下\",{\"1\":{\"303\":1}}],[\"索引下的\",{\"1\":{\"289\":1}}],[\"索引一个文档\",{\"0\":{\"289\":1}}],[\"索引\",{\"0\":{\"273\":1,\"338\":1},\"1\":{\"46\":1,\"167\":1,\"273\":1,\"276\":1,\"295\":1,\"362\":1,\"590\":1}}],[\"索引超出范围会引发\",{\"1\":{\"45\":1}}],[\"成为了内置的\",{\"1\":{\"820\":1}}],[\"成套的产品搭配完善的可视化界面给开发运维带来极大的便利\",{\"1\":{\"615\":1}}],[\"成交价2799\",{\"1\":{\"351\":1,\"352\":1}}],[\"成员内部类的访问修饰符是默认访问权限\",{\"1\":{\"81\":1}}],[\"成员可以用修饰符修饰\",{\"1\":{\"80\":1}}],[\"成员变量会被隐式地指定为\",{\"1\":{\"94\":1}}],[\"成员变量\",{\"1\":{\"78\":1}}],[\"成员方法\",{\"1\":{\"68\":1,\"70\":1}}],[\"水滴全面屏拍照智能游戏手机\",{\"1\":{\"351\":1,\"352\":1}}],[\"骁龙855\",{\"1\":{\"351\":1,\"352\":1}}],[\"哈曼卡顿专业调音\",{\"1\":{\"351\":1}}],[\"哈希\",{\"1\":{\"429\":1,\"430\":1}}],[\"哈希值\",{\"1\":{\"186\":1}}],[\"哈希表\",{\"1\":{\"165\":1}}],[\"哈希码值\",{\"1\":{\"56\":1,\"59\":3}}],[\"哈希码\",{\"1\":{\"52\":1}}],[\"爆款平板推荐\",{\"1\":{\"351\":1}}],[\"冰川蓝\",{\"1\":{\"351\":1}}],[\"冰河银\",{\"1\":{\"351\":1}}],[\"麒麟8核芯片\",{\"1\":{\"351\":1}}],[\"麒麟980\",{\"1\":{\"351\":2}}],[\"魔法一碰传高速传输\",{\"1\":{\"351\":1}}],[\"魔鬼中的天使\",{\"1\":{\"326\":2}}],[\"酷睿i7\",{\"1\":{\"351\":1}}],[\"荣耀平板5\",{\"1\":{\"351\":1}}],[\"荣耀magicbook\",{\"1\":{\"351\":1}}],[\"荣耀\",{\"1\":{\"351\":3,\"355\":1,\"356\":1}}],[\"荣耀20系列2699起\",{\"1\":{\"351\":1}}],[\"荣耀20\",{\"1\":{\"351\":1}}],[\"白条6期免息\",{\"1\":{\"351\":1}}],[\"白色\",{\"1\":{\"351\":1}}],[\"拍照手机\",{\"1\":{\"351\":1}}],[\"香槟金\",{\"1\":{\"351\":1}}],[\"石墨烯液冷散热\",{\"1\":{\"351\":1,\"353\":1}}],[\"华为暑期购\",{\"1\":{\"351\":1}}],[\"华为平板\",{\"1\":{\"351\":1}}],[\"华为\",{\"1\":{\"351\":4,\"353\":2,\"354\":1,\"355\":1,\"356\":1}}],[\"华为huawei\",{\"1\":{\"351\":1}}],[\"灰\",{\"1\":{\"351\":1,\"353\":1}}],[\"买ipad即送蓝牙耳机\",{\"1\":{\"351\":1}}],[\"金色\",{\"1\":{\"351\":1}}],[\"劵后更优惠\",{\"1\":{\"351\":1}}],[\"轻薄设计灵动有型\",{\"1\":{\"351\":1,\"353\":1}}],[\"轻薄本\",{\"1\":{\"351\":1}}],[\"轻松月付\",{\"1\":{\"351\":2}}],[\"轻松吃遍地道<b>上海<\",{\"1\":{\"341\":1}}],[\"轻松吃遍地道<em>上海<\",{\"1\":{\"341\":1}}],[\"轻松吃遍地道上海小吃\",{\"1\":{\"341\":2}}],[\"苹果笔记本电脑\",{\"1\":{\"351\":1}}],[\"八\",{\"0\":{\"741\":1}}],[\"八月精选\",{\"1\":{\"351\":1}}],[\"八代i7\",{\"1\":{\"351\":1}}],[\"八大基本数据类型都有自己的缓存池\",{\"1\":{\"154\":1}}],[\"八大基本类型\",{\"1\":{\"38\":1}}],[\"享只换不修\",{\"1\":{\"351\":2}}],[\"换种方式修改\",{\"1\":{\"698\":1}}],[\"换成\",{\"1\":{\"418\":1}}],[\"换修无忧版\",{\"1\":{\"351\":2}}],[\"换句话说\",{\"1\":{\"203\":1}}],[\"选\",{\"1\":{\"351\":2}}],[\"选择上下文\",{\"1\":{\"792\":1}}],[\"选择自己需要的版本\",{\"1\":{\"691\":1}}],[\"选择你需要的\",{\"1\":{\"681\":1}}],[\"选择合适的集合类\",{\"1\":{\"165\":1}}],[\"选择不同的数据结构\",{\"1\":{\"165\":1}}],[\"面向集合存储\",{\"1\":{\"360\":1}}],[\"面向对象的设计模式有七大基本原则\",{\"1\":{\"468\":1}}],[\"面向对象的相关知识\",{\"1\":{\"86\":1}}],[\"面向对象\",{\"0\":{\"86\":1},\"1\":{\"110\":1}}],[\"面容识别\",{\"1\":{\"351\":1}}],[\"模版请求自动转换成客户端负载均衡的服务调用\",{\"1\":{\"643\":1}}],[\"模型最后一次修改时间\",{\"1\":{\"537\":1}}],[\"模型类别\",{\"1\":{\"537\":1}}],[\"模型key\",{\"1\":{\"537\":1}}],[\"模型名称\",{\"1\":{\"537\":1}}],[\"模式设置\",{\"1\":{\"806\":1}}],[\"模式的定义\",{\"1\":{\"480\":1}}],[\"模式自由\",{\"1\":{\"360\":1}}],[\"模糊匹配\",{\"1\":{\"386\":1}}],[\"模糊查询\",{\"0\":{\"386\":1}}],[\"模糊\",{\"1\":{\"350\":1}}],[\"模拟买票\",{\"1\":{\"206\":1}}],[\"模拟买票过程\",{\"1\":{\"206\":1}}],[\"词条\",{\"1\":{\"350\":1}}],[\"构建流程引擎时创建数据库表\",{\"1\":{\"495\":1}}],[\"构建流程引擎时创建数据库报表\",{\"1\":{\"495\":1}}],[\"构建流程引擎时\",{\"1\":{\"495\":1}}],[\"构建排序请求\",{\"1\":{\"354\":1}}],[\"构建分页\",{\"1\":{\"353\":1}}],[\"构建分词查询条件对象\",{\"1\":{\"350\":1}}],[\"构建具体的查询对象\",{\"1\":{\"352\":1}}],[\"构建查询条件\",{\"1\":{\"352\":1,\"353\":1,\"354\":1}}],[\"构建查询对象\",{\"1\":{\"348\":1}}],[\"构造后传入\",{\"1\":{\"596\":1}}],[\"构造器传入该比较器的实现类\",{\"1\":{\"190\":1}}],[\"构造器时\",{\"1\":{\"126\":1}}],[\"构造一个容量是\",{\"1\":{\"146\":1}}],[\"构造方法\",{\"0\":{\"146\":1},\"1\":{\"114\":1}}],[\"构造函数参数\",{\"1\":{\"596\":1}}],[\"构造函数\",{\"1\":{\"77\":2,\"124\":1}}],[\"片段的排序\",{\"1\":{\"347\":1}}],[\"标准库的设计了\",{\"1\":{\"478\":1}}],[\"标签\",{\"1\":{\"345\":1,\"346\":1,\"443\":1}}],[\"标记\",{\"1\":{\"345\":1,\"346\":1,\"468\":1}}],[\"哪个用户的已办\",{\"1\":{\"584\":1}}],[\"哪些是老<b>上海<\",{\"1\":{\"341\":1,\"343\":2}}],[\"哪些是老上海小吃\",{\"1\":{\"341\":1}}],[\"哪里会用到反射\",{\"1\":{\"119\":1}}],[\"|\",{\"1\":{\"341\":2,\"371\":2,\"372\":1,\"412\":4,\"422\":4,\"680\":1,\"697\":20,\"699\":39,\"707\":1,\"731\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1,\"746\":2,\"788\":2,\"800\":1,\"806\":4,\"812\":12}}],[\"||\",{\"1\":{\"58\":1,\"60\":1,\"151\":1,\"424\":1,\"599\":1}}],[\"懒人吃货指南\",{\"1\":{\"341\":2}}],[\"旧版本的\",{\"1\":{\"338\":1,\"349\":1}}],[\"弃用了\",{\"1\":{\"635\":1,\"658\":1,\"676\":1}}],[\"弃用了接受类型的\",{\"1\":{\"274\":1}}],[\"弃用\",{\"1\":{\"337\":2}}],[\"映射结构\",{\"0\":{\"341\":1}}],[\"映射结构如下👇\",{\"1\":{\"335\":1}}],[\"映射一个枚举实例\",{\"1\":{\"161\":1}}],[\"攻略中带上海的数据\",{\"1\":{\"340\":1}}],[\"攻略简介\",{\"1\":{\"332\":1}}],[\"攻略标题\",{\"1\":{\"332\":2}}],[\"攻略id\",{\"1\":{\"332\":1}}],[\"交互\",{\"1\":{\"327\":1}}],[\"此外\",{\"1\":{\"655\":1}}],[\"此项目包含开发分布式应用服务的必需组件\",{\"1\":{\"609\":1}}],[\"此处锁住整个refresh方法\",{\"1\":{\"671\":1}}],[\"此处将\",{\"1\":{\"604\":1}}],[\"此处安装第三方分词器ik\",{\"1\":{\"315\":1}}],[\"此时将使用bgp模式\",{\"1\":{\"806\":1}}],[\"此时我们就完成了在同一个仓库管理不同项目的需求了\",{\"1\":{\"706\":1}}],[\"此时需要指定提交分支\",{\"1\":{\"706\":1}}],[\"此时需要把信息做编码和解码处理\",{\"1\":{\"239\":1}}],[\"此时\",{\"1\":{\"705\":1}}],[\"此时可以在该分支目录上初始化你的项目\",{\"1\":{\"705\":1}}],[\"此时就需要使用到businesskey\",{\"1\":{\"512\":1}}],[\"此时为\",{\"1\":{\"342\":1}}],[\"此时再重新编译\",{\"1\":{\"254\":1}}],[\"此时用户点击了相机\",{\"1\":{\"204\":1}}],[\"此时认为两个为同一个对象\",{\"1\":{\"189\":1}}],[\"此时要求元素必须具备\",{\"1\":{\"188\":1}}],[\"此时常量池中是没有\",{\"1\":{\"155\":1}}],[\"此时少年望着空荡荡的博客陷入深思\",{\"1\":{\"3\":1}}],[\"您只需要添加一些注解和少量配置\",{\"1\":{\"609\":1}}],[\"您必须单独指定每个组件包以及版本号\",{\"1\":{\"374\":1}}],[\"您可以对\",{\"1\":{\"817\":1}}],[\"您可以将该\",{\"1\":{\"813\":1}}],[\"您可以表达查询\",{\"1\":{\"403\":1}}],[\"您可以使用以下查询\",{\"1\":{\"400\":2,\"401\":1,\"402\":2}}],[\"您可以使用\",{\"1\":{\"375\":1,\"817\":2}}],[\"您可以安装\",{\"1\":{\"374\":1}}],[\"您可以\",{\"1\":{\"371\":1}}],[\"您可以执行查询和多个聚合\",{\"1\":{\"312\":1}}],[\"您有执行搜索返回\",{\"1\":{\"312\":1}}],[\"回退版本号\",{\"1\":{\"538\":1,\"540\":1}}],[\"回退版本\",{\"1\":{\"535\":1,\"536\":1,\"537\":1,\"539\":1,\"541\":1,\"542\":1,\"544\":1,\"548\":1,\"552\":1,\"558\":1}}],[\"回聚合结果\",{\"1\":{\"312\":1}}],[\"回想这段时间\",{\"1\":{\"2\":1}}],[\"聚合复用原则\",{\"1\":{\"468\":2}}],[\"聚合的构建工厂类\",{\"1\":{\"355\":1}}],[\"聚合字段为brand\",{\"1\":{\"355\":1,\"356\":1}}],[\"聚合名称为brands\",{\"1\":{\"355\":1,\"356\":1}}],[\"聚合类型为terms\",{\"1\":{\"355\":1,\"356\":1}}],[\"聚合\",{\"0\":{\"355\":1},\"1\":{\"468\":1}}],[\"聚合排序\",{\"0\":{\"314\":1}}],[\"聚合函数\",{\"1\":{\"312\":1}}],[\"聚合提供了从数据中分组和提取数据的能力\",{\"1\":{\"312\":1}}],[\"聚合查询\",{\"0\":{\"312\":1}}],[\"过期时间设置成了\",{\"1\":{\"729\":1}}],[\"过期策略\",{\"0\":{\"459\":1}}],[\"过期策略和\",{\"1\":{\"458\":1}}],[\"过期等等特性\",{\"1\":{\"431\":1}}],[\"过滤器就是在请求的传递过程中\",{\"1\":{\"664\":1}}],[\"过滤器\",{\"0\":{\"664\":1},\"1\":{\"654\":2}}],[\"过滤\",{\"1\":{\"310\":2}}],[\"过滤模式来进行\",{\"1\":{\"308\":1}}],[\"过时方法\",{\"1\":{\"125\":1}}],[\"须不包含\",{\"1\":{\"308\":1}}],[\"着\",{\"1\":{\"308\":1}}],[\"任务调度服务\",{\"1\":{\"610\":1}}],[\"任务有关\",{\"1\":{\"577\":1}}],[\"任务分类\",{\"1\":{\"557\":1}}],[\"任务分配后触发\",{\"1\":{\"518\":1}}],[\"任务分配负责人\",{\"0\":{\"515\":1}}],[\"任务分配\",{\"1\":{\"507\":1}}],[\"任务拥有者\",{\"1\":{\"557\":1}}],[\"任务办理人\",{\"1\":{\"551\":1,\"557\":1}}],[\"任务被拾取时间\",{\"1\":{\"557\":1}}],[\"任务被拾取的时间\",{\"1\":{\"542\":1}}],[\"任务被委托时\",{\"1\":{\"542\":1}}],[\"任务类别\",{\"1\":{\"542\":1}}],[\"任务委托状态\",{\"1\":{\"542\":1}}],[\"任务描述\",{\"1\":{\"542\":1,\"557\":1}}],[\"任务数量\",{\"1\":{\"540\":1}}],[\"任务完成后触发\",{\"1\":{\"518\":1}}],[\"任务创建后触发\",{\"1\":{\"518\":1}}],[\"任务相关事件包括\",{\"1\":{\"518\":1}}],[\"任务监听器是发生对应的任务相关事件时执行自定义的java逻辑或表达式\",{\"1\":{\"518\":1}}],[\"任务候选人\",{\"0\":{\"525\":1},\"1\":{\"507\":1}}],[\"任务耗时\",{\"1\":{\"506\":1}}],[\"任务结束时间\",{\"1\":{\"506\":1,\"557\":1}}],[\"任务开始时间\",{\"1\":{\"506\":1,\"557\":1}}],[\"任务审核人\",{\"1\":{\"506\":1}}],[\"任务\",{\"1\":{\"505\":1,\"524\":1,\"526\":1}}],[\"任务名称\",{\"1\":{\"504\":1,\"506\":1,\"513\":1,\"527\":1,\"542\":1,\"557\":1}}],[\"任务负责人\",{\"1\":{\"504\":1,\"505\":1,\"527\":1}}],[\"任务id\",{\"1\":{\"504\":1,\"513\":1,\"527\":1,\"528\":1,\"541\":1,\"550\":1,\"551\":1,\"553\":1,\"555\":1}}],[\"任务查询\",{\"1\":{\"504\":2}}],[\"任务的id\",{\"1\":{\"557\":1}}],[\"任务的办理人\",{\"1\":{\"542\":1}}],[\"任务的拥有者\",{\"1\":{\"542\":1}}],[\"任务的key\",{\"1\":{\"542\":1}}],[\"任务的负责人就可以查询自己当前能够处理的任务了\",{\"1\":{\"504\":1}}],[\"任务的参与者\",{\"1\":{\"500\":1}}],[\"任务在这张表中就被删除掉了\",{\"1\":{\"503\":1}}],[\"任何地点存储和访问任意类型的数据\",{\"1\":{\"610\":1}}],[\"任何时间\",{\"1\":{\"610\":1}}],[\"任何一个的\",{\"1\":{\"312\":1}}],[\"任何\",{\"1\":{\"308\":1}}],[\"任意具体时刻都只有一个任\",{\"1\":{\"203\":1}}],[\"整数类型的值放这\",{\"1\":{\"558\":1}}],[\"整数或浮点数\",{\"1\":{\"438\":1}}],[\"整合的依赖\",{\"1\":{\"496\":1}}],[\"整型数值\",{\"1\":{\"364\":1}}],[\"整型为\",{\"1\":{\"49\":1}}],[\"整体单词\",{\"1\":{\"306\":1}}],[\"短信平台\",{\"1\":{\"613\":1}}],[\"短语匹配\",{\"0\":{\"306\":1}}],[\"短路与\",{\"1\":{\"42\":1}}],[\"匹配\",{\"0\":{\"661\":1}}],[\"匹配规则\",{\"0\":{\"659\":1}}],[\"匹配某个属性的值\",{\"1\":{\"311\":1}}],[\"匹配查询\",{\"0\":{\"305\":1}}],[\"匹配所有文档\",{\"1\":{\"302\":1}}],[\"询类型完成复杂查询\",{\"1\":{\"303\":1}}],[\"举个🌰\",{\"1\":{\"340\":1,\"387\":1}}],[\"举个例子方便大家理解\",{\"1\":{\"462\":1}}],[\"举个例子\",{\"1\":{\"303\":1}}],[\"举例\",{\"1\":{\"256\":1,\"271\":1}}],[\"举例说明\",{\"1\":{\"201\":1}}],[\"空指针时返回\",{\"1\":{\"595\":1}}],[\"空查询\",{\"1\":{\"302\":1}}],[\"空间\",{\"1\":{\"48\":1}}],[\"功能的绝大部分\",{\"1\":{\"301\":1}}],[\"检测历史表是否存在\",{\"1\":{\"496\":1}}],[\"检查配置文件是否正确\",{\"0\":{\"828\":1}}],[\"检查数据库的版本和依赖库的版本\",{\"1\":{\"495\":1}}],[\"检查多少数据\",{\"1\":{\"462\":1}}],[\"检查是否安装成功\",{\"1\":{\"377\":1}}],[\"检查clone中是否有不完全拷贝\",{\"1\":{\"65\":1}}],[\"检索信息\",{\"0\":{\"299\":1}}],[\"插入零日期会抛出错误而不是警告\",{\"1\":{\"424\":1}}],[\"插入0或null代表生成下一个自增长值\",{\"1\":{\"424\":1}}],[\"插入数据时\",{\"1\":{\"433\":1}}],[\"插入数据\",{\"1\":{\"296\":1}}],[\"插件都必须存在于\",{\"1\":{\"796\":1}}],[\"插件可执行文件位置\",{\"1\":{\"783\":1}}],[\"插件\",{\"0\":{\"798\":1,\"801\":1},\"1\":{\"488\":2,\"796\":1}}],[\"插件配置\",{\"0\":{\"21\":1}}],[\"插件注册\",{\"0\":{\"20\":1}}],[\"行为类型\",{\"1\":{\"553\":1}}],[\"行为型\",{\"0\":{\"480\":1}}],[\"行为型模式\",{\"0\":{\"472\":1},\"1\":{\"469\":1}}],[\"行与行之间要以换行符相隔\",{\"1\":{\"293\":1}}],[\"行资源分配的基本单位\",{\"1\":{\"204\":1}}],[\"批准申请\",{\"1\":{\"788\":1}}],[\"批准kubelet证书申请并加入集群\",{\"0\":{\"788\":1}}],[\"批注信息\",{\"1\":{\"505\":1}}],[\"批量取出键值\",{\"1\":{\"440\":1}}],[\"批量存入键值对\",{\"1\":{\"440\":1}}],[\"批量导入数据\",{\"1\":{\"351\":1}}],[\"批量插入数据\",{\"0\":{\"296\":1}}],[\"批量操作语法\",{\"1\":{\"293\":1}}],[\"批量\",{\"0\":{\"293\":1}}],[\"批处理操作系统\",{\"1\":{\"202\":1}}],[\"带有结构体tag的字段\",{\"1\":{\"591\":1}}],[\"带参数\",{\"1\":{\"503\":1}}],[\"带触控栏\",{\"1\":{\"351\":1}}],[\"带\",{\"1\":{\"291\":2}}],[\"带着bat大厂的面试题去理解\",{\"0\":{\"210\":1}}],[\"带着bat大厂的面试问题去理解\",{\"0\":{\"119\":1,\"201\":1}}],[\"带着\",{\"1\":{\"123\":1}}],[\"团队选择的一种废弃type的方案\",{\"1\":{\"289\":1}}],[\"号数据为\",{\"1\":{\"289\":1}}],[\"健康状况\",{\"1\":{\"288\":1}}],[\"健身计划\",{\"1\":{\"2\":1}}],[\"端口是为了接收其他\",{\"1\":{\"752\":1}}],[\"端口映射到主机的\",{\"1\":{\"692\":1}}],[\"端口\",{\"1\":{\"283\":1,\"692\":1,\"752\":1}}],[\"能通过\",{\"1\":{\"796\":1}}],[\"能获取对象的数据\",{\"1\":{\"585\":1}}],[\"能获取对象的类型的信息\",{\"1\":{\"585\":1}}],[\"能直观\",{\"1\":{\"441\":1}}],[\"能够节约cpu运算\",{\"1\":{\"802\":1}}],[\"能够访问说明我们的代码配置成功\",{\"1\":{\"657\":1}}],[\"能够让程序操作不同类型的对象\",{\"1\":{\"585\":1}}],[\"能够提升已有代码的灵活性和可复用性\",{\"1\":{\"469\":1}}],[\"能够看出不同的分词器\",{\"1\":{\"321\":1}}],[\"能够实现根据key快速查找value\",{\"1\":{\"191\":1}}],[\"能访问\",{\"1\":{\"283\":1}}],[\"人\",{\"1\":{\"277\":1}}],[\"人生乱套我睡觉\",{\"1\":{\"0\":1}}],[\"东京奥运会举办\",{\"1\":{\"277\":1}}],[\"泱泱中华文化\",{\"1\":{\"277\":1}}],[\"采用上述配置\",{\"1\":{\"631\":1}}],[\"采用继承关系很难实现\",{\"1\":{\"478\":1}}],[\"采用写日志有两方面好处\",{\"1\":{\"453\":1}}],[\"采用的是正向索引\",{\"1\":{\"277\":1}}],[\"采集和组合公共数据\",{\"1\":{\"271\":1}}],[\"倒排索引也可以称为反向索引\",{\"1\":{\"277\":1}}],[\"倒排索引\",{\"0\":{\"277\":1}}],[\"倒排索引比较适合全文本搜索\",{\"1\":{\"270\":1}}],[\"副本\",{\"1\":{\"276\":1}}],[\"备份\",{\"1\":{\"276\":1}}],[\"节点会没有准备就绪\",{\"1\":{\"788\":1}}],[\"节点执行\",{\"1\":{\"785\":1}}],[\"节点包含的组件\",{\"1\":{\"757\":1,\"780\":1}}],[\"节点2改为etcd\",{\"1\":{\"755\":1}}],[\"节点名称2\",{\"1\":{\"752\":1}}],[\"节点名称1\",{\"1\":{\"752\":1}}],[\"节点名称\",{\"1\":{\"752\":1}}],[\"节点角色\",{\"1\":{\"714\":1}}],[\"节点类型\",{\"1\":{\"576\":1}}],[\"节点详细信息保存在act\",{\"1\":{\"540\":1}}],[\"节点可认为是事件或任务\",{\"1\":{\"540\":1}}],[\"节点也有自己的名称\",{\"1\":{\"276\":1}}],[\"节点\",{\"0\":{\"757\":1},\"1\":{\"276\":1,\"785\":1,\"796\":1}}],[\"节点流的功能都比较单一\",{\"1\":{\"251\":1}}],[\"节点流功能单一\",{\"1\":{\"240\":1}}],[\"节点流\",{\"1\":{\"240\":1}}],[\"格式的\",{\"1\":{\"275\":1}}],[\"格式化成\",{\"1\":{\"115\":1}}],[\"格式化\",{\"1\":{\"115\":1,\"197\":1}}],[\"格式化和解析字符串时间的\",{\"1\":{\"113\":1}}],[\"某种类型\",{\"1\":{\"275\":1}}],[\"保持唯一\",{\"1\":{\"656\":1}}],[\"保值换新\",{\"1\":{\"351\":2}}],[\"保存了像用户\",{\"1\":{\"785\":1}}],[\"保存历史数据的最高级别\",{\"1\":{\"496\":1}}],[\"保存流程实例与流程行为\",{\"1\":{\"496\":1}}],[\"保存在resource\",{\"1\":{\"499\":1}}],[\"保存在哪个索引的哪个类型下\",{\"1\":{\"289\":1}}],[\"保存在某个索引\",{\"1\":{\"275\":1}}],[\"保存一个数据\",{\"1\":{\"289\":1}}],[\"保存\",{\"0\":{\"289\":1}}],[\"保证pod的网络与各node互联互通\",{\"1\":{\"806\":1}}],[\"保证跨主机容器网络互通\",{\"1\":{\"803\":1}}],[\"保证刷新逻辑不存在线程安全问题\",{\"1\":{\"671\":1}}],[\"保证\",{\"1\":{\"222\":1}}],[\"保证了元素的唯一\",{\"1\":{\"185\":1}}],[\"保证数据的安全性\",{\"1\":{\"88\":1}}],[\"保证等价的两个对象的哈希码值也相等\",{\"1\":{\"59\":1}}],[\"文本类型的值放这\",{\"1\":{\"558\":2}}],[\"文本类型对应的值\",{\"1\":{\"544\":2}}],[\"文章所使用的的\",{\"1\":{\"486\":1}}],[\"文化\",{\"1\":{\"277\":1}}],[\"文档中的名称\",{\"1\":{\"363\":1}}],[\"文档包含字段名称和值\",{\"1\":{\"363\":1}}],[\"文档的相关性得分\",{\"1\":{\"299\":1}}],[\"文档的排序位置\",{\"1\":{\"299\":1}}],[\"文档是\",{\"1\":{\"275\":1}}],[\"文档\",{\"0\":{\"275\":1},\"1\":{\"291\":1,\"361\":1,\"362\":1,\"363\":1}}],[\"文件安装完成之后的文件位置\",{\"1\":{\"824\":1}}],[\"文件并执行\",{\"1\":{\"822\":1}}],[\"文件请查看\",{\"1\":{\"765\":1}}],[\"文件内容如下\",{\"1\":{\"730\":1,\"733\":1}}],[\"文件即可\",{\"1\":{\"699\":1}}],[\"文件夹下\",{\"1\":{\"699\":1}}],[\"文件夹下生成了管理文件rebel\",{\"1\":{\"24\":1}}],[\"文件中\",{\"1\":{\"525\":1}}],[\"文件重命名为\",{\"1\":{\"499\":1}}],[\"文件重写策略\",{\"1\":{\"455\":1}}],[\"文件快速恢复的好处\",{\"1\":{\"456\":1}}],[\"文件写入和同步\",{\"1\":{\"454\":1}}],[\"文件写入\",{\"1\":{\"454\":1}}],[\"文件保存路径\",{\"1\":{\"451\":1}}],[\"文件名称\",{\"1\":{\"451\":1}}],[\"文件路径\",{\"1\":{\"369\":1}}],[\"文件下载地址\",{\"1\":{\"295\":1}}],[\"文件也会升级\",{\"1\":{\"254\":1}}],[\"文件字符流\",{\"0\":{\"248\":1}}],[\"文件字节流\",{\"0\":{\"244\":1}}],[\"文件大小\",{\"1\":{\"236\":1}}],[\"文件\",{\"0\":{\"329\":1,\"379\":1,\"567\":1,\"761\":1,\"807\":1,\"809\":1,\"818\":1},\"1\":{\"36\":1,\"80\":1,\"296\":1,\"329\":1,\"367\":1,\"372\":1,\"379\":1,\"499\":1,\"636\":2,\"729\":1,\"730\":1,\"755\":1,\"764\":1,\"766\":1,\"805\":1}}],[\"了负责人\",{\"1\":{\"503\":1}}],[\"了解即可\",{\"1\":{\"521\":1}}],[\"了解其相关的一些使用\",{\"1\":{\"427\":1}}],[\"了解\",{\"1\":{\"427\":1}}],[\"了解了对称加密和非对称加密后\",{\"1\":{\"720\":1}}],[\"了解了\",{\"1\":{\"358\":1}}],[\"了解这一点是很重要的\",{\"1\":{\"308\":1}}],[\"了解完\",{\"1\":{\"265\":1}}],[\"了\",{\"1\":{\"274\":1,\"321\":1,\"338\":1}}],[\"版本开始\",{\"1\":{\"674\":1,\"820\":1}}],[\"版本环境如下👇\",{\"1\":{\"652\":1}}],[\"版本弃用\",{\"1\":{\"634\":1}}],[\"版本说明以及坑\",{\"0\":{\"635\":1}}],[\"版本说明\",{\"1\":{\"626\":1,\"630\":1}}],[\"版本说明wiki\",{\"1\":{\"617\":1}}],[\"版本会有冲突\",{\"1\":{\"496\":1}}],[\"版本为\",{\"1\":{\"486\":1}}],[\"版本兼容rdb文件问题\",{\"1\":{\"452\":1}}],[\"版本后已经不再支持\",{\"1\":{\"366\":1}}],[\"版本适配说明\",{\"1\":{\"327\":1}}],[\"版本一致\",{\"1\":{\"317\":1}}],[\"版本号\",{\"1\":{\"290\":1}}],[\"版本\",{\"1\":{\"279\":1,\"291\":1,\"328\":1,\"348\":1,\"365\":1,\"370\":1,\"372\":1,\"378\":1,\"534\":1,\"535\":1,\"560\":1,\"635\":1,\"636\":1,\"652\":1,\"658\":1,\"676\":1,\"681\":1}}],[\"版本是\",{\"1\":{\"279\":1,\"625\":1}}],[\"版本起已废弃\",{\"1\":{\"274\":1}}],[\"版本对应关系可以查看\",{\"1\":{\"617\":1}}],[\"版本对\",{\"1\":{\"156\":1}}],[\"动作不能有请求体\",{\"1\":{\"293\":1}}],[\"动作\",{\"1\":{\"273\":1}}],[\"动词\",{\"1\":{\"273\":1}}],[\"动态路由服务实现\",{\"0\":{\"671\":1},\"1\":{\"671\":1}}],[\"动态路由监听\",{\"0\":{\"670\":1},\"1\":{\"670\":1}}],[\"动态更新配置文件\",{\"0\":{\"669\":1}}],[\"动态配置管理\",{\"1\":{\"612\":1}}],[\"动态设置描述\",{\"1\":{\"542\":1}}],[\"动态设置元素\",{\"1\":{\"47\":1}}],[\"动态地给该对象增加一些职责\",{\"1\":{\"474\":1}}],[\"动态修改\",{\"1\":{\"451\":1}}],[\"动态调用对象的方法\",{\"1\":{\"120\":1}}],[\"动态的获取信息\",{\"1\":{\"120\":1}}],[\"动态定义数组的语法\",{\"1\":{\"47\":1}}],[\"动态初始化\",{\"0\":{\"47\":1}}],[\"动态链接等信息\",{\"1\":{\"43\":1}}],[\"日志级别\",{\"1\":{\"806\":1}}],[\"日志目录\",{\"1\":{\"764\":1}}],[\"日志等级\",{\"1\":{\"764\":1}}],[\"日志\",{\"1\":{\"456\":1}}],[\"日志记录\",{\"1\":{\"456\":1}}],[\"日志记录这期间的所有命令操作\",{\"1\":{\"456\":1}}],[\"日志也只用记录两次快照间的操作\",{\"1\":{\"456\":1}}],[\"日志和内存快照的方法\",{\"1\":{\"456\":1}}],[\"日志中就有可能记录了错误的命令\",{\"1\":{\"453\":1}}],[\"日志数据分析\",{\"1\":{\"271\":1}}],[\"日常生活中我们使用搜索工具尝试查询一些信息的时候\",{\"1\":{\"339\":1}}],[\"日期时间\",{\"1\":{\"364\":1}}],[\"日期时间操作\",{\"1\":{\"113\":1}}],[\"日期时间的相关类\",{\"1\":{\"111\":1}}],[\"日期时间类\",{\"0\":{\"111\":1}}],[\"电商网站\",{\"1\":{\"271\":1}}],[\"搜索了多少个碎片\",{\"1\":{\"299\":1}}],[\"搜索请求是否超时\",{\"1\":{\"299\":1}}],[\"搜索api的最基础的形式是没有指定任何查询的空搜索\",{\"1\":{\"299\":1}}],[\"搜索商品\",{\"1\":{\"271\":1}}],[\"搜索推荐等等\",{\"1\":{\"271\":1}}],[\"搜索和分析海量数据\",{\"1\":{\"264\":1,\"265\":1}}],[\"样式的查询\",{\"1\":{\"270\":1}}],[\"样式的查询语言\",{\"1\":{\"270\":1}}],[\"你也可以通过简单的配置\",{\"1\":{\"644\":1}}],[\"你也可以使用负数下标\",{\"1\":{\"442\":1}}],[\"你长期不用的数据\",{\"1\":{\"463\":1}}],[\"你可以自定义\",{\"1\":{\"727\":1}}],[\"你可以同时使用一种或多种认证方式\",{\"1\":{\"723\":1}}],[\"你可以添加一个元素到列表的头部\",{\"1\":{\"442\":1}}],[\"你可以通过点击\",{\"1\":{\"367\":1}}],[\"你可以进入mongodb官网下载安装\",{\"1\":{\"366\":1}}],[\"你可以指定自己的日期时间\",{\"1\":{\"364\":1}}],[\"你可以使用\",{\"1\":{\"303\":1}}],[\"你可以为其指定任意的名字\",{\"1\":{\"276\":1}}],[\"你没法直接用\",{\"1\":{\"268\":1}}],[\"你生成的guid\",{\"1\":{\"20\":1}}],[\"去获取用户信息\",{\"1\":{\"603\":1}}],[\"去哪里能吃到地道的\",{\"1\":{\"341\":1,\"343\":1}}],[\"去一个地方旅行当然要尝尝当地的特色美食\",{\"1\":{\"341\":1,\"343\":1}}],[\"去探索你的数据\",{\"1\":{\"268\":1}}],[\"去常量池中寻找后发现\",{\"1\":{\"155\":1}}],[\"复杂的查询就需要使用\",{\"1\":{\"338\":1}}],[\"复杂查询\",{\"0\":{\"314\":1,\"349\":1},\"1\":{\"265\":1,\"338\":1,\"349\":1}}],[\"复合语句之间可以互相嵌套\",{\"1\":{\"308\":1}}],[\"复合语句可以合并\",{\"1\":{\"308\":1}}],[\"复合查询\",{\"0\":{\"308\":1}}],[\"复制一份给新的对象\",{\"1\":{\"63\":2}}],[\"复制下面激活码\",{\"1\":{\"27\":1}}],[\"复制粘贴\",{\"1\":{\"2\":1}}],[\"集群token\",{\"1\":{\"752\":1}}],[\"集群节点地址\",{\"1\":{\"752\":1}}],[\"集群通告地址\",{\"1\":{\"752\":1,\"764\":1}}],[\"集群通信监听地址\",{\"1\":{\"752\":1}}],[\"集群中的资源状态信息和所有报错信息\",{\"1\":{\"817\":1}}],[\"集群中的一种资源\",{\"1\":{\"723\":1}}],[\"集群中\",{\"1\":{\"817\":1}}],[\"集群中唯一\",{\"1\":{\"752\":1,\"783\":1,\"791\":1}}],[\"集群外部就使用https\",{\"1\":{\"722\":1}}],[\"集群名称可以在配置文件中指定\",{\"1\":{\"276\":1}}],[\"集群名称非常重要\",{\"1\":{\"276\":1}}],[\"集群\",{\"1\":{\"276\":1}}],[\"集群相关\",{\"0\":{\"276\":1}}],[\"集成hystrix\",{\"1\":{\"649\":1}}],[\"集成了\",{\"1\":{\"496\":1,\"497\":1}}],[\"集成\",{\"0\":{\"494\":1,\"496\":1},\"1\":{\"265\":1,\"338\":1,\"348\":1,\"527\":1,\"560\":1,\"667\":1}}],[\"集合我们可以取交集\",{\"1\":{\"443\":1}}],[\"集合成员是唯一的\",{\"1\":{\"443\":1}}],[\"集合结构直接存取\",{\"1\":{\"429\":1,\"430\":1}}],[\"集合类型\",{\"0\":{\"443\":1},\"1\":{\"427\":1,\"437\":1}}],[\"集合不强制执行任何结构\",{\"1\":{\"363\":1}}],[\"集合存在于单个数据库中\",{\"1\":{\"363\":1}}],[\"集合等效于在任何其他rdms\",{\"1\":{\"363\":1}}],[\"集合元素进行排序\",{\"1\":{\"198\":1}}],[\"集合元素进行随机排序\",{\"1\":{\"198\":1}}],[\"集合元素按升序排序\",{\"1\":{\"198\":1}}],[\"集合\",{\"1\":{\"197\":1,\"361\":1,\"362\":1,\"363\":1}}],[\"集合容器主要包括\",{\"1\":{\"172\":1}}],[\"集合继承关系\",{\"1\":{\"171\":1}}],[\"集合是java中提供的一种容器\",{\"1\":{\"171\":1}}],[\"集合框架\",{\"0\":{\"196\":1}}],[\"集合框架的知识体系\",{\"1\":{\"163\":1}}],[\"集合框架体系\",{\"0\":{\"163\":1,\"171\":1}}],[\"集合中的\",{\"1\":{\"198\":1}}],[\"集合中的元素没有\",{\"1\":{\"189\":1}}],[\"集合中\",{\"1\":{\"59\":1,\"191\":1}}],[\"环境的搭建请查看其它文章\",{\"1\":{\"691\":1}}],[\"环境的步骤\",{\"1\":{\"690\":1}}],[\"环境说明\",{\"0\":{\"621\":1}}],[\"环境\",{\"0\":{\"494\":1,\"655\":1},\"1\":{\"560\":1}}],[\"环境搭建\",{\"0\":{\"279\":1},\"1\":{\"358\":1}}],[\"环境搭建以及\",{\"1\":{\"265\":1}}],[\"环境以及可视化客户端工具\",{\"1\":{\"265\":1}}],[\"维基百科\",{\"1\":{\"264\":1,\"271\":1}}],[\"维护\",{\"1\":{\"208\":1}}],[\"知识体系图\",{\"0\":{\"426\":1}}],[\"知识体系相关的大纲以及相应的文章\",{\"1\":{\"425\":1}}],[\"知识体系\",{\"0\":{\"264\":1,\"357\":1,\"425\":1}}],[\"知识点\",{\"0\":{\"29\":1}}],[\"放到请求中\",{\"1\":{\"262\":1}}],[\"跨服务调用场景下的事务传播\",{\"1\":{\"262\":1}}],[\"跨平台原因\",{\"0\":{\"36\":1}}],[\"跨平台原理\",{\"0\":{\"33\":1}}],[\"传递\",{\"1\":{\"796\":1}}],[\"传递事务\",{\"1\":{\"262\":1}}],[\"传送的过程可能会被别的同学偷看\",{\"1\":{\"719\":1}}],[\"传入两个整型值\",{\"1\":{\"596\":1}}],[\"传入年月日信息\",{\"1\":{\"364\":1}}],[\"传入参数为\",{\"1\":{\"150\":1}}],[\"百思不得其解\",{\"1\":{\"262\":1}}],[\"百度云链接\",{\"1\":{\"26\":1}}],[\"问题解决\",{\"0\":{\"262\":1}}],[\"请修改你的证书存放位置\",{\"1\":{\"753\":1}}],[\"请直接看安装\",{\"1\":{\"717\":1}}],[\"请查看\",{\"1\":{\"700\":1}}],[\"请干掉它\",{\"1\":{\"655\":1}}],[\"请检查一下你的依赖中是否含有\",{\"1\":{\"655\":1}}],[\"请假天数就可以设置流程变量\",{\"1\":{\"519\":1}}],[\"请假天数>3\",{\"1\":{\"519\":1}}],[\"请假理由\",{\"1\":{\"512\":1}}],[\"请假时间\",{\"1\":{\"512\":1}}],[\"请假流程启动一个流程实例\",{\"1\":{\"513\":1}}],[\"请假流程\",{\"1\":{\"502\":2}}],[\"请问需要多少钱\",{\"1\":{\"477\":1}}],[\"请发出以下命令\",{\"1\":{\"374\":1}}],[\"请在主机上打开终端或\",{\"1\":{\"372\":1}}],[\"请看官方配置文件\",{\"1\":{\"813\":1}}],[\"请看上一篇有关\",{\"1\":{\"636\":1}}],[\"请看👉\",{\"1\":{\"478\":1}}],[\"请看\",{\"1\":{\"338\":1}}],[\"请注意\",{\"1\":{\"293\":1}}],[\"请求参数来匹配\",{\"1\":{\"659\":1}}],[\"请求参数方式检索\",{\"1\":{\"299\":1}}],[\"请求到达目标服务处理之后再依次执行所有过滤器的\",{\"1\":{\"654\":1}}],[\"请求到达目标服务之前\",{\"1\":{\"654\":1}}],[\"请求\",{\"1\":{\"645\":1,\"782\":1}}],[\"请求会自动进行传递\",{\"1\":{\"480\":1}}],[\"请求方式来区分\",{\"1\":{\"287\":1}}],[\"请求中事务\",{\"1\":{\"262\":1}}],[\"请求调用\",{\"1\":{\"262\":1}}],[\"请求接口调用\",{\"1\":{\"261\":1}}],[\"请先将本站加入友链后\",{\"1\":{\"15\":1}}],[\"例子🌰\",{\"0\":{\"340\":1}}],[\"例子👇\",{\"1\":{\"115\":1}}],[\"例如采用前后端分离\",{\"1\":{\"703\":1}}],[\"例如待办\",{\"1\":{\"542\":1}}],[\"例如小说视频等网站需要对用户上传的小说视频做排行榜\",{\"1\":{\"444\":1}}],[\"例如oracle或ms\",{\"1\":{\"363\":1}}],[\"例如上面的\",{\"1\":{\"345\":1,\"346\":1}}],[\"例如上面👆我们设置了\",{\"1\":{\"343\":1}}],[\"例如\",{\"1\":{\"257\":1,\"277\":2,\"350\":1,\"403\":1,\"478\":2,\"568\":1,\"587\":1,\"645\":1,\"806\":1,\"817\":1}}],[\"序列化版本问题\",{\"1\":{\"254\":1}}],[\"序列化字节写入文件\",{\"1\":{\"254\":1}}],[\"序列化操作\",{\"1\":{\"254\":1}}],[\"序列化在分布式系统在应用非常广泛\",{\"1\":{\"254\":1}}],[\"序列化\",{\"1\":{\"254\":1}}],[\"装饰\",{\"1\":{\"479\":1}}],[\"装饰器的案例模拟\",{\"0\":{\"477\":1}}],[\"装饰器的结构\",{\"0\":{\"476\":1}}],[\"装饰器器主要解决的是直接继承下因功能的不断横向扩展导致子类膨胀的问题\",{\"1\":{\"476\":1}}],[\"装饰器器的核心就是在\",{\"1\":{\"475\":1}}],[\"装饰器模式在\",{\"1\":{\"478\":1}}],[\"装饰器模式通常在以下几种情况使用\",{\"1\":{\"478\":1}}],[\"装饰器模式的应用场景\",{\"0\":{\"478\":1}}],[\"装饰器模式主要包含以下角色\",{\"1\":{\"476\":1}}],[\"装饰器模式中有四个重要的角色\",{\"1\":{\"256\":1}}],[\"装饰器模式\",{\"0\":{\"256\":1,\"474\":1},\"1\":{\"256\":1,\"471\":1,\"478\":1}}],[\"装饰器模式详解\",{\"1\":{\"255\":1,\"479\":1}}],[\"装饰器模式介绍\",{\"0\":{\"475\":1}}],[\"装饰者模式\",{\"0\":{\"255\":1},\"1\":{\"251\":2,\"255\":1}}],[\"装饰设计模式\",{\"1\":{\"251\":1}}],[\"装箱\",{\"1\":{\"40\":1}}],[\"装箱和拆箱概念\",{\"1\":{\"40\":1}}],[\"缓存结束状态\",{\"1\":{\"540\":1}}],[\"缓存\",{\"1\":{\"440\":1,\"441\":1}}],[\"缓存是redis最常见的应用场景\",{\"1\":{\"433\":1}}],[\"缓存热点数据\",{\"0\":{\"433\":1}}],[\"缓存池中默认大小为\",{\"1\":{\"41\":1}}],[\"缓存池分析\",{\"1\":{\"41\":1}}],[\"缓存池\",{\"0\":{\"41\":1},\"1\":{\"154\":1}}],[\"缓冲包装流\",{\"1\":{\"257\":1}}],[\"缓冲区的内容写入aof文件中\",{\"1\":{\"454\":1}}],[\"缓冲区\",{\"1\":{\"454\":1}}],[\"缓冲区包装类\",{\"1\":{\"252\":1,\"253\":1}}],[\"缓冲区才会写入磁盘中\",{\"1\":{\"251\":1}}],[\"缓冲流根据四大基流都有对应的缓冲流\",{\"1\":{\"251\":1}}],[\"缓冲流内置了一个大小为\",{\"1\":{\"251\":1}}],[\"缓冲流\",{\"0\":{\"251\":1}}],[\"刷新路由并没有很高的性能需求\",{\"1\":{\"671\":1}}],[\"刷新权限\",{\"1\":{\"409\":1,\"410\":1,\"698\":1}}],[\"刷新此输出流并强制写出所有缓冲的输出字符\",{\"1\":{\"247\":1}}],[\"刷新缓冲区\",{\"1\":{\"243\":1,\"253\":1}}],[\"写一个类实现\",{\"1\":{\"562\":1}}],[\"写日志之前宕机了\",{\"1\":{\"453\":1}}],[\"写的速度是81000次\",{\"1\":{\"431\":1}}],[\"写到序列化数据文件中\",{\"1\":{\"254\":1}}],[\"写入换行\",{\"1\":{\"253\":1}}],[\"写入一个换行\",{\"1\":{\"253\":1}}],[\"写入到输出流中\",{\"1\":{\"247\":1}}],[\"写什么呢\",{\"1\":{\"3\":1}}],[\"关联用户和集群\",{\"1\":{\"761\":1}}],[\"关联字节数组资源的id\",{\"1\":{\"558\":1}}],[\"关联业务系统的key\",{\"1\":{\"556\":1}}],[\"关联业务系统的业务key\",{\"1\":{\"540\":1}}],[\"关联act\",{\"1\":{\"537\":2}}],[\"关联部署id\",{\"1\":{\"537\":1}}],[\"关系维护到数据库中\",{\"1\":{\"484\":1}}],[\"关于\",{\"1\":{\"621\":1,\"700\":1}}],[\"关于aof的配置如下\",{\"1\":{\"455\":1}}],[\"关于何时将\",{\"1\":{\"454\":1}}],[\"关键api\",{\"1\":{\"355\":1}}],[\"关键字的所有商品\",{\"1\":{\"353\":1}}],[\"关键字修饰\",{\"1\":{\"254\":1}}],[\"关键字建立一个线程后\",{\"1\":{\"212\":1}}],[\"关键字实现\",{\"1\":{\"95\":1}}],[\"关键字定义的一种特殊的抽象类\",{\"1\":{\"93\":1}}],[\"关键字定义的类\",{\"1\":{\"92\":1}}],[\"关键字表示\",{\"1\":{\"68\":1,\"70\":1}}],[\"关键字\",{\"0\":{\"67\":1},\"1\":{\"48\":1,\"73\":1,\"92\":1}}],[\"关闭swap\",{\"1\":{\"715\":1}}],[\"关闭防火墙\",{\"1\":{\"715\":1}}],[\"关闭流程引擎时不删除这些表\",{\"1\":{\"495\":1}}],[\"关闭流程引擎时就删除这些表\",{\"1\":{\"495\":1}}],[\"关闭服务\",{\"0\":{\"619\":1},\"1\":{\"377\":1}}],[\"关闭资源\",{\"1\":{\"254\":2}}],[\"关闭此输出流并释放与此流有关的所有系统资源\",{\"1\":{\"243\":1}}],[\"关闭此输入流并释放与该流关联的所有系统资源\",{\"1\":{\"242\":1,\"246\":1,\"247\":1}}],[\"输入启动容器时指定的密码\",{\"1\":{\"696\":1}}],[\"输入账号密码\",{\"1\":{\"620\":1}}],[\"输入\",{\"1\":{\"369\":1}}],[\"输入字节流使用\",{\"1\":{\"244\":1}}],[\"输入流\",{\"1\":{\"240\":2}}],[\"输出内容如下\",{\"1\":{\"813\":1}}],[\"输出该结果代表\",{\"1\":{\"756\":1}}],[\"输出成员名和tag\",{\"1\":{\"591\":1}}],[\"输出当前用户具有的任务\",{\"1\":{\"504\":1}}],[\"输出相关的流程实例信息\",{\"1\":{\"503\":2}}],[\"输出高亮内容\",{\"1\":{\"348\":1}}],[\"输出字节流使用\",{\"1\":{\"244\":1}}],[\"输出流程定义状态\",{\"1\":{\"514\":1}}],[\"输出流程部署的信息\",{\"1\":{\"502\":2}}],[\"输出流\",{\"0\":{\"245\":1},\"1\":{\"240\":2}}],[\"输出结果如下\",{\"1\":{\"355\":1,\"356\":1}}],[\"输出结果\",{\"1\":{\"103\":1,\"104\":1,\"222\":1}}],[\"输出\",{\"1\":{\"74\":1,\"115\":2,\"134\":1,\"206\":1,\"592\":1}}],[\"按操作提示安装即可\",{\"1\":{\"367\":1}}],[\"按照固定格式写入token\",{\"1\":{\"746\":1}}],[\"按照版本排序\",{\"1\":{\"511\":1}}],[\"按照分数降序输出名称\",{\"1\":{\"444\":1}}],[\"按照分数升序输出名称\",{\"1\":{\"444\":1}}],[\"按照分数范围统计个数\",{\"1\":{\"444\":1}}],[\"按照插入顺序排序\",{\"1\":{\"442\":1}}],[\"按照空格切分\",{\"1\":{\"316\":1}}],[\"按照非字母切分\",{\"1\":{\"316\":1}}],[\"按照年龄聚合\",{\"1\":{\"314\":1}}],[\"按词切分\",{\"1\":{\"316\":1}}],[\"按资源分类i\",{\"0\":{\"250\":1}}],[\"按功能上划分\",{\"1\":{\"240\":1}}],[\"按数据传输单位\",{\"1\":{\"240\":1}}],[\"按流动方向\",{\"1\":{\"240\":1}}],[\"按钮来设置你的安装目录\",{\"1\":{\"367\":1}}],[\"按钮\",{\"1\":{\"22\":1}}],[\"目标flanneld解包\",{\"1\":{\"799\":1}}],[\"目标route\",{\"1\":{\"671\":1}}],[\"目标routes\",{\"1\":{\"671\":3}}],[\"目标服务地址\",{\"1\":{\"656\":1}}],[\"目前支持两种安装方式\",{\"1\":{\"823\":1}}],[\"目前需要在kube\",{\"1\":{\"800\":1}}],[\"目前已经有多个开源组件支持容器网络模型\",{\"1\":{\"799\":1}}],[\"目前已经是\",{\"1\":{\"453\":1}}],[\"目前主要用于kubelet\",{\"1\":{\"745\":1}}],[\"目前只支持\",{\"1\":{\"631\":1}}],[\"目前设定的部门审批人都是李四\",{\"1\":{\"512\":1}}],[\"目前\",{\"1\":{\"447\":1,\"610\":1,\"724\":1}}],[\"目的地\",{\"1\":{\"240\":2}}],[\"目录下搜索名为calico\",{\"1\":{\"806\":1}}],[\"目录下搜索名为calico的可执行文件\",{\"1\":{\"806\":1}}],[\"目录下备用\",{\"1\":{\"744\":1}}],[\"目录下添加\",{\"1\":{\"495\":1}}],[\"目录下的\",{\"1\":{\"27\":1}}],[\"目录下\",{\"1\":{\"27\":1,\"806\":2}}],[\"目录\",{\"0\":{\"12\":1},\"1\":{\"236\":1}}],[\"源\",{\"0\":{\"686\":1},\"1\":{\"680\":1,\"800\":1}}],[\"源数据\",{\"1\":{\"244\":1,\"248\":1,\"252\":1,\"253\":1}}],[\"源数据源\",{\"1\":{\"240\":1}}],[\"源码则知道\",{\"1\":{\"151\":1}}],[\"源码如下👇\",{\"1\":{\"150\":1}}],[\"源码👇\",{\"1\":{\"150\":1}}],[\"源码版本\",{\"1\":{\"148\":1}}],[\"源码中比较的是对象的引用地址\",{\"1\":{\"57\":1}}],[\"源码分析\",{\"0\":{\"53\":1,\"56\":1}}],[\"四\",{\"0\":{\"498\":1,\"728\":1,\"779\":1}}],[\"四大基流\",{\"0\":{\"240\":1}}],[\"四季如夏的广州终于开始降温\",{\"1\":{\"2\":1}}],[\"统一表达式语言\",{\"1\":{\"517\":1}}],[\"统一上传\",{\"1\":{\"502\":1}}],[\"统一编码字符集\",{\"1\":{\"239\":1}}],[\"统不会为线程分配内存\",{\"1\":{\"205\":1}}],[\"乱码问题的根本原因就是\",{\"1\":{\"239\":1}}],[\"二\",{\"0\":{\"471\":1,\"487\":1,\"570\":1,\"722\":1,\"769\":1,\"782\":1,\"819\":1,\"825\":1},\"1\":{\"665\":1}}],[\"二进制文件以及配置\",{\"1\":{\"755\":1}}],[\"二进制文件\",{\"1\":{\"751\":1,\"759\":1,\"811\":1}}],[\"二进制包离线安装\",{\"1\":{\"679\":1}}],[\"二进制资源\",{\"1\":{\"538\":1}}],[\"二进制资源表\",{\"0\":{\"538\":1}}],[\"二进制表\",{\"1\":{\"533\":1}}],[\"二进制数据id\",{\"1\":{\"544\":1}}],[\"二进制数据表\",{\"1\":{\"502\":1}}],[\"二进制数据\",{\"1\":{\"364\":1}}],[\"二进制的\",{\"1\":{\"364\":1}}],[\"二进制格式就是\",{\"1\":{\"239\":1}}],[\"二分查找\",{\"1\":{\"197\":1}}],[\"编程模式\",{\"1\":{\"612\":1}}],[\"编程模型轻松使用这些组件来开发分布式应用服务\",{\"1\":{\"609\":1}}],[\"编程规范性\",{\"1\":{\"467\":1}}],[\"编写全局过滤器\",{\"1\":{\"666\":1}}],[\"编写配置类\",{\"0\":{\"647\":1}}],[\"编写\",{\"1\":{\"351\":1}}],[\"编写对应的\",{\"0\":{\"332\":1,\"382\":1}}],[\"编码的字符串才是合法的\",{\"1\":{\"364\":1}}],[\"编码和解码使用的字符集不是同一种\",{\"1\":{\"239\":1}}],[\"编码\",{\"1\":{\"239\":1,\"699\":1}}],[\"编码解码操作\",{\"0\":{\"239\":1}}],[\"编译nginx源码\",{\"0\":{\"825\":1}}],[\"编译时会生成一个个\",{\"1\":{\"121\":1}}],[\"编译时判断\",{\"1\":{\"105\":1}}],[\"编译时多态\",{\"1\":{\"101\":1}}],[\"编译器会在缓冲池范围内的基本类型自动装箱过程调用\",{\"1\":{\"41\":1}}],[\"编译后生产和平台无关的\",{\"1\":{\"35\":1}}],[\"占两个字节\",{\"1\":{\"238\":2}}],[\"占一个字节\",{\"1\":{\"238\":2}}],[\"补充知识点\",{\"0\":{\"249\":1}}],[\"补充不存在的上层目录\",{\"1\":{\"236\":1}}],[\"补充理解\",{\"1\":{\"91\":1}}],[\"严格区分大小写\",{\"1\":{\"236\":1}}],[\"严重限制开发效率\",{\"1\":{\"18\":1}}],[\"理解认证授权\",{\"0\":{\"718\":1}}],[\"理解\",{\"0\":{\"588\":1}}],[\"理解为文件和文件夹\",{\"1\":{\"236\":1}}],[\"理解string\",{\"0\":{\"136\":1}}],[\"流程开始时间\",{\"1\":{\"540\":1}}],[\"流程模型\",{\"1\":{\"568\":1}}],[\"流程模型id\",{\"1\":{\"537\":1}}],[\"流程模型表\",{\"0\":{\"537\":1}}],[\"流程描述\",{\"1\":{\"535\":1}}],[\"流程设计实体表\",{\"1\":{\"533\":1}}],[\"流程报错\",{\"1\":{\"524\":1}}],[\"流程执行走向\",{\"1\":{\"522\":1}}],[\"流程运转有时需要靠流程变量\",{\"1\":{\"519\":1}}],[\"流程id\",{\"1\":{\"514\":2,\"535\":1}}],[\"流程挂起\",{\"0\":{\"514\":1}}],[\"流程发起之后\",{\"1\":{\"512\":1}}],[\"流程资源下载\",{\"0\":{\"511\":1}}],[\"流程部署\",{\"1\":{\"567\":1}}],[\"流程部署表\",{\"0\":{\"534\":1}}],[\"流程部署id\",{\"1\":{\"509\":1,\"510\":1}}],[\"流程部署的名称\",{\"1\":{\"502\":2}}],[\"流程部署的id\",{\"1\":{\"502\":2}}],[\"流程变量的使用方法\",{\"0\":{\"522\":1}}],[\"流程变量的作用域范围如果仅仅针对一个任务或一个执行实例\",{\"1\":{\"521\":1}}],[\"流程变量的作用域范围的默认值是流程实例\",{\"1\":{\"521\":1}}],[\"流程变量的作用域范围可以是一个流程实例\",{\"1\":{\"521\":1}}],[\"流程变量的作用域\",{\"0\":{\"521\":1}}],[\"流程变量类型\",{\"0\":{\"520\":1}}],[\"流程变量就是activiti在管理工作流时根据管理需要而设置的变量\",{\"1\":{\"519\":1}}],[\"流程变量在activiti中是一个非常重要的角色\",{\"1\":{\"519\":1}}],[\"流程变量\",{\"0\":{\"519\":1},\"1\":{\"507\":1}}],[\"流程启动后\",{\"1\":{\"504\":1}}],[\"流程的参与用户信息\",{\"1\":{\"503\":1}}],[\"流程历史表\",{\"1\":{\"503\":1}}],[\"流程图上正在执行的元素或者已经执行完成的元素称为activity\",{\"1\":{\"503\":1}}],[\"流程图上出现的每一个元素都称为activity\",{\"1\":{\"503\":1}}],[\"流程实例结束时间\",{\"1\":{\"556\":1}}],[\"流程实例开始时间\",{\"1\":{\"556\":1}}],[\"流程实例名称\",{\"1\":{\"540\":1,\"556\":1}}],[\"流程实例挂起\",{\"1\":{\"514\":1}}],[\"流程实例相关\",{\"0\":{\"512\":1,\"570\":1},\"1\":{\"507\":1}}],[\"流程实例\",{\"1\":{\"505\":1,\"576\":1}}],[\"流程实例id\",{\"1\":{\"504\":1,\"506\":1,\"513\":1,\"514\":4,\"527\":1,\"540\":1,\"541\":1,\"542\":1,\"550\":1,\"553\":1,\"555\":1,\"556\":1,\"572\":1}}],[\"流程实例的id\",{\"1\":{\"503\":2,\"513\":1,\"523\":1}}],[\"流程实例根据模板创建而来\",{\"1\":{\"490\":1}}],[\"流程定义\",{\"1\":{\"580\":1,\"584\":1}}],[\"流程定义信息表\",{\"0\":{\"536\":1}}],[\"流程定义表\",{\"0\":{\"535\":1}}],[\"流程定义的动态变更信息\",{\"1\":{\"533\":1}}],[\"流程定义的id\",{\"1\":{\"503\":2,\"513\":1,\"523\":1,\"536\":1}}],[\"流程定义为挂起状态\",{\"1\":{\"514\":1}}],[\"流程定义状态\",{\"1\":{\"514\":1}}],[\"流程定义版本\",{\"1\":{\"509\":1}}],[\"流程定义key\",{\"1\":{\"509\":1,\"556\":1}}],[\"流程定义名称\",{\"1\":{\"509\":1}}],[\"流程定义id\",{\"1\":{\"509\":1,\"513\":1,\"514\":2,\"527\":1,\"541\":1,\"542\":1,\"550\":1,\"556\":1,\"557\":1}}],[\"流程定义相关json信息的id\",{\"1\":{\"536\":1}}],[\"流程定义相关\",{\"0\":{\"508\":1,\"564\":1},\"1\":{\"507\":1}}],[\"流程定义数据表\",{\"1\":{\"502\":1,\"533\":1}}],[\"流程定义就好比一个模板\",{\"1\":{\"490\":1}}],[\"流程引擎通用日志表\",{\"1\":{\"533\":1}}],[\"流程引擎\",{\"0\":{\"500\":1}}],[\"流程如下👇\",{\"1\":{\"121\":1}}],[\"流向\",{\"1\":{\"240\":1}}],[\"流的划分是不一样的\",{\"1\":{\"240\":1}}],[\"流的基础知识以及流的基本操作\",{\"1\":{\"235\":1}}],[\"作业数量\",{\"1\":{\"540\":1}}],[\"作业暂停表\",{\"1\":{\"533\":1}}],[\"作业表\",{\"1\":{\"533\":1}}],[\"作业失败表\",{\"1\":{\"533\":1}}],[\"作用域范围最大\",{\"1\":{\"521\":1}}],[\"作用于整个类\",{\"1\":{\"231\":1,\"232\":1}}],[\"作用于同一个对象\",{\"1\":{\"230\":1}}],[\"作为配置中心\",{\"1\":{\"658\":1}}],[\"作为\",{\"1\":{\"653\":1,\"655\":1}}],[\"作为缓存使用时\",{\"1\":{\"433\":1}}],[\"作为新的负载均衡器\",{\"1\":{\"644\":1}}],[\"作为新的容量\",{\"1\":{\"152\":2}}],[\"作为新的slice的容量\",{\"1\":{\"11\":1}}],[\"作为一个高性能的内存数据库\",{\"1\":{\"458\":1}}],[\"作为一个mongo\",{\"1\":{\"395\":1}}],[\"作为一个萌新\",{\"1\":{\"3\":1}}],[\"作为一个程序猿\",{\"1\":{\"2\":1}}],[\"守护线程是程序运行时在后台提供服务的线程\",{\"1\":{\"224\":1}}],[\"随机干掉数据\",{\"1\":{\"464\":1}}],[\"随机移除某个key\",{\"1\":{\"463\":1}}],[\"随机淘汰\",{\"1\":{\"463\":1}}],[\"随机获取set集合中元素\",{\"1\":{\"443\":1}}],[\"随机弹出集合中的元素\",{\"1\":{\"443\":1}}],[\"随机通知\",{\"1\":{\"222\":2}}],[\"随时生效\",{\"1\":{\"23\":1}}],[\"随时随地分享身边的新鲜事儿\",{\"1\":{\"0\":1}}],[\"休眠\",{\"1\":{\"222\":1}}],[\"继续运行至结束\",{\"1\":{\"222\":2}}],[\"继承抽象构件\",{\"1\":{\"476\":1}}],[\"继承于\",{\"1\":{\"253\":2,\"666\":1}}],[\"继承关系\",{\"0\":{\"103\":1}}],[\"继承\",{\"0\":{\"90\":1,\"218\":1},\"1\":{\"217\":1,\"218\":1}}],[\"拿到锁\",{\"1\":{\"222\":1}}],[\"拿到锁了\",{\"1\":{\"222\":4}}],[\"拿当前元素和另一个元素比较\",{\"1\":{\"189\":1}}],[\"造成死锁\",{\"1\":{\"222\":1}}],[\"睡眠\",{\"1\":{\"214\":1}}],[\"调动的可能性越大\",{\"1\":{\"226\":1}}],[\"调度\",{\"1\":{\"213\":1}}],[\"调用接口时\",{\"1\":{\"651\":1}}],[\"调用的地址\",{\"1\":{\"649\":1}}],[\"调用openfeign\",{\"0\":{\"640\":1}}],[\"调用其他微服务接口的微服务\",{\"1\":{\"623\":1}}],[\"调用链监控sleuth\",{\"1\":{\"611\":1}}],[\"调用完成时\",{\"1\":{\"596\":1}}],[\"调用该函数\",{\"1\":{\"596\":1}}],[\"调用外部流程的流程实例id\",{\"1\":{\"551\":1}}],[\"调用中执行多个索引或删除操作\",{\"1\":{\"293\":1}}],[\"调用\",{\"1\":{\"148\":1,\"219\":1,\"222\":1}}],[\"调用静态方法时\",{\"1\":{\"128\":1}}],[\"调用方法\",{\"1\":{\"126\":1}}],[\"调用方法时实际调用的是实现类实现接口的方法\",{\"1\":{\"104\":1}}],[\"调用方法时实际调用的是子类的方法\",{\"1\":{\"103\":1}}],[\"调用流程\",{\"1\":{\"105\":1}}],[\"调用构造方法必须写在子类构造方法的第一句\",{\"1\":{\"70\":1}}],[\"调用父类的成员变量\",{\"1\":{\"70\":1}}],[\"处使用更保险的策略\",{\"1\":{\"671\":1}}],[\"处设置\",{\"1\":{\"522\":1}}],[\"处理配置信息\",{\"1\":{\"670\":1}}],[\"处理\",{\"1\":{\"654\":1}}],[\"处理任务\",{\"0\":{\"505\":1}}],[\"处理待办任务\",{\"0\":{\"492\":1}}],[\"处理流功能更强\",{\"1\":{\"240\":1}}],[\"处理流\",{\"1\":{\"240\":1,\"251\":1}}],[\"处于运行状态的线程在某些情况下\",{\"1\":{\"214\":1}}],[\"处于线程就绪队列\",{\"1\":{\"213\":1}}],[\"处于就绪状态的线程具备了运行条件\",{\"1\":{\"213\":1}}],[\"处元素进行交换\",{\"1\":{\"198\":1}}],[\"处元素和\",{\"1\":{\"198\":1}}],[\"怎么选择\",{\"1\":{\"210\":1}}],[\"怎么能没有自己的博客呢\",{\"1\":{\"2\":1}}],[\"互斥同步\",{\"0\":{\"208\":1}}],[\"互转\",{\"1\":{\"135\":1}}],[\"票数为负数的结果\",{\"1\":{\"206\":1}}],[\"张票\",{\"1\":{\"206\":1}}],[\"张三\",{\"1\":{\"129\":1,\"254\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"513\":1,\"528\":1}}],[\"共1台\",{\"1\":{\"356\":1}}],[\"共2台\",{\"1\":{\"356\":1}}],[\"共3台\",{\"1\":{\"356\":3}}],[\"共\",{\"1\":{\"356\":1}}],[\"共勉\",{\"1\":{\"264\":1}}],[\"共有\",{\"1\":{\"206\":1}}],[\"共享进程的资源\",{\"1\":{\"205\":1}}],[\"系列文章\",{\"1\":{\"700\":1}}],[\"系\",{\"1\":{\"205\":1}}],[\"系统环境\",{\"1\":{\"830\":1}}],[\"系统启动\",{\"1\":{\"830\":1}}],[\"系统类型\",{\"1\":{\"714\":1}}],[\"系统负载保护等多个维度保护服务的稳定性\",{\"1\":{\"612\":1}}],[\"系统存储表\",{\"1\":{\"533\":1}}],[\"系统可扩展性差\",{\"1\":{\"525\":1}}],[\"系统性能将受到一定影响\",{\"1\":{\"481\":1}}],[\"系统\",{\"1\":{\"366\":1}}],[\"系统预设的标签为\",{\"1\":{\"346\":1}}],[\"系统中就得使用两个\",{\"1\":{\"236\":1}}],[\"系统默认的三种优先级\",{\"1\":{\"226\":1}}],[\"系统在运行的时候会为每个进程分配不同的内存空间\",{\"1\":{\"205\":1}}],[\"系统程序\",{\"1\":{\"33\":1}}],[\"系统只能执行\",{\"1\":{\"33\":3}}],[\"根证书\",{\"0\":{\"728\":1}}],[\"根流程实例id\",{\"1\":{\"540\":1}}],[\"根本区别\",{\"1\":{\"205\":1}}],[\"根据规划设置主机名\",{\"1\":{\"715\":1}}],[\"根据其内置的过滤器发现名称格式有规律\",{\"1\":{\"665\":1}}],[\"根据其工作原理\",{\"1\":{\"187\":1}}],[\"根据官方的例子\",{\"1\":{\"646\":1}}],[\"根据token获取用户信息\",{\"1\":{\"603\":1}}],[\"根据请求的\",{\"1\":{\"603\":1}}],[\"根据给定字符串返回字符串对应的结构体方法\",{\"1\":{\"597\":1}}],[\"根据给定字符串返回字符串对应的结构体字段的信息\",{\"1\":{\"590\":1}}],[\"根据反射类型对象创建类型实例\",{\"1\":{\"592\":1}}],[\"根据反向代理服务器地址拼接激活地址\",{\"1\":{\"20\":1}}],[\"根据索引\",{\"1\":{\"590\":1,\"597\":1}}],[\"根据完成时间排序\",{\"1\":{\"584\":1}}],[\"根据创建时间排序\",{\"1\":{\"576\":1}}],[\"根据部署\",{\"0\":{\"566\":1}}],[\"根据部署版本倒序排序\",{\"1\":{\"565\":1}}],[\"根据任务上的流程实例id查询出对应的流程实例对象\",{\"1\":{\"513\":1}}],[\"根据流程实例\",{\"0\":{\"578\":1}}],[\"根据流程实例获取目前活动节点\",{\"0\":{\"573\":1}}],[\"根据流程实例id获取流程实例对象\",{\"1\":{\"514\":1}}],[\"根据流程定义\",{\"0\":{\"565\":1}}],[\"根据流程定义的key启动流程实例\",{\"1\":{\"513\":1,\"523\":1}}],[\"根据流程定义的id启动流程\",{\"1\":{\"503\":2}}],[\"根据流程的key和任务负责人\",{\"1\":{\"504\":1}}],[\"根据流的不同特性\",{\"1\":{\"240\":1}}],[\"根据配置\",{\"1\":{\"500\":1}}],[\"根据bpmn文件生成png文件\",{\"1\":{\"499\":1}}],[\"根据模式是用来完成什么工作来划分\",{\"1\":{\"469\":1}}],[\"根据自己的实际请求压力进行设置调整\",{\"1\":{\"451\":1}}],[\"根据值查找或删除元素\",{\"1\":{\"438\":1}}],[\"根据一定的算法来决定淘汰掉哪些数据\",{\"1\":{\"427\":1,\"463\":1}}],[\"根据价格来排序\",{\"1\":{\"388\":1}}],[\"根据价格排序\",{\"1\":{\"353\":1,\"354\":1}}],[\"根据你所采用的服务器\",{\"1\":{\"364\":1}}],[\"根据品牌分组\",{\"1\":{\"356\":1}}],[\"根据db\",{\"1\":{\"269\":1}}],[\"根据\",{\"0\":{\"581\":1},\"1\":{\"198\":1,\"244\":1,\"484\":1,\"580\":1,\"590\":1,\"617\":1}}],[\"根据元素的自然顺序\",{\"1\":{\"198\":1}}],[\"根据元素的自然顺序对指定\",{\"1\":{\"198\":1}}],[\"根据指定的\",{\"1\":{\"198\":1}}],[\"根据对象的字段数据比较来判断\",{\"1\":{\"187\":1}}],[\"根据不同的存储方式形成的体系结构\",{\"1\":{\"171\":1}}],[\"根据内容\",{\"1\":{\"167\":2}}],[\"根据上面总结的可知\",{\"1\":{\"154\":1}}],[\"根据字节码生成一个对象\",{\"1\":{\"127\":1}}],[\"根据相应的模板\",{\"1\":{\"115\":2}}],[\"响应完成再切换\",{\"1\":{\"204\":1}}],[\"响应相机操作\",{\"1\":{\"204\":1}}],[\"让集群管理员可以针对特定使用者或服务账号的角色\",{\"1\":{\"724\":1}}],[\"让git在搜索文件列表时\",{\"1\":{\"707\":1}}],[\"让你的项目中有这些依赖\",{\"1\":{\"644\":1}}],[\"让列表只保留指定区间内的元素\",{\"1\":{\"442\":1}}],[\"让一个线程执行一个子任务\",{\"1\":{\"204\":1}}],[\"让我叉腰自豪一会\",{\"1\":{\"4\":1}}],[\"发布路由已更新消息\",{\"1\":{\"671\":1}}],[\"发布路由已更新时间\",{\"1\":{\"671\":1}}],[\"发出请求\",{\"1\":{\"654\":1}}],[\"发出以下命令以重新加载本地包数据库\",{\"1\":{\"373\":1}}],[\"发生时间戳\",{\"1\":{\"550\":1}}],[\"发生错误后事务回滚\",{\"1\":{\"261\":1}}],[\"发起滚动升级\",{\"1\":{\"817\":1}}],[\"发起请求\",{\"1\":{\"352\":1}}],[\"发起检索请求\",{\"1\":{\"348\":1}}],[\"发送搜索参数\",{\"1\":{\"298\":1}}],[\"发明了\",{\"1\":{\"204\":1}}],[\"发现启动超级慢\",{\"1\":{\"830\":1}}],[\"发现不小心在\",{\"1\":{\"708\":1}}],[\"发现bootstrap\",{\"1\":{\"673\":1}}],[\"发现他们的共性特征\",{\"1\":{\"121\":1}}],[\"发现进行内存分配的是capmem\",{\"1\":{\"10\":1}}],[\"发现涉及扩容的方法是growslice\",{\"1\":{\"10\":1}}],[\"正常\",{\"1\":{\"831\":1}}],[\"正在活跃的节点id\",{\"1\":{\"540\":1}}],[\"正在渲染图片\",{\"1\":{\"204\":1}}],[\"正是通过分数来为集合中的成员进行从小到大的排序\",{\"1\":{\"444\":1}}],[\"正则\",{\"0\":{\"386\":1}}],[\"正则表达式驱动的查询\",{\"1\":{\"397\":1}}],[\"正则表达式类型\",{\"1\":{\"364\":1}}],[\"正则表达式\",{\"1\":{\"316\":1}}],[\"正如其名字一样\",{\"1\":{\"302\":1}}],[\"正确\",{\"1\":{\"107\":1}}],[\"很是麻烦\",{\"1\":{\"707\":1}}],[\"很容易记不得当时设置的密码\",{\"1\":{\"411\":1}}],[\"很影响效率\",{\"1\":{\"204\":1}}],[\"很浪费\",{\"1\":{\"202\":1}}],[\"支持传入两个参数\",{\"1\":{\"660\":1}}],[\"支持springmvc的注解\",{\"1\":{\"634\":1}}],[\"支持sa\",{\"1\":{\"351\":1,\"353\":1}}],[\"支持在任何应用\",{\"1\":{\"610\":1}}],[\"支持调用\",{\"1\":{\"610\":1}}],[\"支持分布式系统中的外部化配置\",{\"1\":{\"610\":1}}],[\"支持丰富的数据类型\",{\"1\":{\"430\":1}}],[\"支持网络\",{\"1\":{\"429\":1,\"430\":1}}],[\"支持水平的数据库集群\",{\"1\":{\"360\":1}}],[\"支持复制和故障恢复\",{\"1\":{\"360\":1}}],[\"支持二进制数据及大型对象\",{\"1\":{\"360\":1}}],[\"支持动态查询\",{\"1\":{\"360\":1}}],[\"支持双卡\",{\"1\":{\"351\":1}}],[\"支持两种基本方式检索\",{\"1\":{\"298\":1}}],[\"支持中文\",{\"1\":{\"238\":2}}],[\"支持\",{\"1\":{\"203\":1,\"270\":1,\"610\":1}}],[\"支付宝\",{\"1\":{\"160\":1}}],[\"支付方式\",{\"1\":{\"160\":1}}],[\"务在占用cpu资源\",{\"1\":{\"203\":1}}],[\"才会出现该问题\",{\"1\":{\"831\":1}}],[\"才可以修改字段否则会报错\",{\"1\":{\"586\":1}}],[\"才可能使用\",{\"1\":{\"140\":1}}],[\"才去判断它是否过期\",{\"1\":{\"460\":1}}],[\"才能发现其他服务\",{\"1\":{\"658\":1}}],[\"才能决定是否同意\",{\"1\":{\"512\":1}}],[\"才能删除表\",{\"1\":{\"496\":1}}],[\"才能生效\",{\"1\":{\"317\":1}}],[\"才能正确解码出信息\",{\"1\":{\"239\":1}}],[\"才能执行另一个操作\",{\"1\":{\"202\":1}}],[\"虽然两端的tcp实现了可靠传输\",{\"1\":{\"799\":1}}],[\"虽然仅变更不通知\",{\"1\":{\"671\":1}}],[\"虽然并发从宏观上看有多个任务在执行\",{\"1\":{\"203\":1}}],[\"虽然批处理系统的诞生提高了电脑的处理效率\",{\"1\":{\"202\":1}}],[\"虽然写了一个多小时\",{\"1\":{\"4\":1}}],[\"形成一个清单\",{\"1\":{\"202\":1}}],[\"显示名称\",{\"1\":{\"783\":1,\"791\":1}}],[\"显示反射类型对象的名称和种类\",{\"1\":{\"589\":2}}],[\"显示\",{\"1\":{\"269\":1}}],[\"显示类型转换\",{\"1\":{\"39\":1}}],[\"显然计算机大部分时间都在等待用户的指令\",{\"1\":{\"202\":1}}],[\"进阶笔记\",{\"0\":{\"507\":1}}],[\"进阶\",{\"1\":{\"427\":2}}],[\"进阶检索\",{\"0\":{\"298\":1}}],[\"进入项目目录\",{\"1\":{\"705\":1}}],[\"进入容器\",{\"1\":{\"689\":1}}],[\"进入plugins\",{\"1\":{\"323\":1,\"324\":1}}],[\"进入配置文件\",{\"1\":{\"284\":1}}],[\"进入kibana容器\",{\"1\":{\"284\":1}}],[\"进入就绪态\",{\"1\":{\"225\":1}}],[\"进入阻塞状态\",{\"1\":{\"214\":1}}],[\"进入\",{\"0\":{\"695\":1},\"1\":{\"213\":1,\"369\":1,\"422\":1}}],[\"进程有独立的内存空间\",{\"1\":{\"205\":1}}],[\"进程是操作系统资源分配的基本单位\",{\"1\":{\"205\":1}}],[\"进程是操作系统进\",{\"1\":{\"204\":1}}],[\"进程和线程的区别\",{\"0\":{\"205\":1}}],[\"进程之间互不干扰\",{\"1\":{\"204\":1}}],[\"进程让操作系统的并发性成为了可能\",{\"1\":{\"204\":1}}],[\"进程让操作体统的并发成为了可能\",{\"1\":{\"203\":1}}],[\"进程的出现提高了\",{\"1\":{\"202\":1}}],[\"进程的发明\",{\"0\":{\"202\":1}}],[\"进行部署\",{\"1\":{\"822\":1}}],[\"进行更精确的资源访问控制\",{\"1\":{\"724\":1}}],[\"进行平衡\",{\"1\":{\"642\":1}}],[\"进行管理\",{\"1\":{\"486\":1}}],[\"进行定义\",{\"1\":{\"486\":1}}],[\"进行无差别攻击\",{\"1\":{\"464\":1}}],[\"进行检索\",{\"1\":{\"306\":1}}],[\"进行比较\",{\"1\":{\"254\":1}}],[\"进行划分的\",{\"1\":{\"240\":1}}],[\"进行同步\",{\"1\":{\"178\":1}}],[\"进行额外的复制\",{\"1\":{\"65\":1}}],[\"产生的顺序对\",{\"1\":{\"198\":1}}],[\"产生不同的结果\",{\"1\":{\"109\":1}}],[\"反正你也要退休了\",{\"1\":{\"463\":1}}],[\"反序列化的工具\",{\"1\":{\"634\":1}}],[\"反序列化成\",{\"1\":{\"254\":1}}],[\"反序列化操作\",{\"1\":{\"254\":1}}],[\"反序列化\",{\"1\":{\"254\":2}}],[\"反转\",{\"1\":{\"198\":1}}],[\"反射实现\",{\"0\":{\"598\":1,\"599\":1}}],[\"反射调用函数\",{\"1\":{\"596\":1}}],[\"反射值对象\",{\"1\":{\"595\":1}}],[\"反射不能获取和修改\",{\"1\":{\"586\":1}}],[\"反射注意\",{\"0\":{\"586\":1}}],[\"反射获取静态方法\",{\"1\":{\"128\":1}}],[\"反射获取方法\",{\"1\":{\"128\":1}}],[\"反射前言\",{\"0\":{\"123\":1}}],[\"反射的\",{\"1\":{\"124\":1}}],[\"反射的实现方式有哪些\",{\"1\":{\"119\":1}}],[\"反射的作用\",{\"1\":{\"119\":1}}],[\"反射\",{\"0\":{\"124\":1},\"1\":{\"118\":1}}],[\"反射机制在程序运行时\",{\"1\":{\"120\":1}}],[\"反射机制\",{\"0\":{\"118\":1,\"585\":1}}],[\"许重复\",{\"1\":{\"195\":1}}],[\"置\",{\"1\":{\"194\":1}}],[\"键值存储系统\",{\"1\":{\"430\":1}}],[\"键值对\",{\"1\":{\"172\":1,\"191\":1}}],[\"键\",{\"1\":{\"191\":1,\"437\":1}}],[\"结束节点id\",{\"1\":{\"556\":1}}],[\"结束流程\",{\"0\":{\"493\":1}}],[\"结点了\",{\"1\":{\"493\":1}}],[\"结果排序\",{\"0\":{\"388\":1}}],[\"结果过滤\",{\"0\":{\"310\":1}}],[\"结构体\",{\"1\":{\"601\":1}}],[\"结构体标签\",{\"1\":{\"590\":1}}],[\"结构型\",{\"0\":{\"474\":1},\"1\":{\"471\":1,\"479\":1}}],[\"结构型模式\",{\"0\":{\"471\":1},\"1\":{\"469\":1}}],[\"结构型模式和行为型模式\",{\"1\":{\"469\":1}}],[\"结构的读写能力\",{\"1\":{\"438\":1}}],[\"结构存储的值\",{\"1\":{\"438\":1}}],[\"结构类型\",{\"1\":{\"438\":1}}],[\"结构\",{\"1\":{\"351\":1,\"442\":1}}],[\"结构以及基本数据\",{\"1\":{\"351\":1}}],[\"结构如下👇\",{\"1\":{\"191\":1}}],[\"结论\",{\"0\":{\"11\":1}}],[\"自2016年以来\",{\"1\":{\"643\":1}}],[\"自增id组成\",{\"1\":{\"535\":1}}],[\"自定义的配置项\",{\"1\":{\"668\":1}}],[\"自定义的用户解析器\",{\"1\":{\"606\":1}}],[\"自定义全局过滤器\",{\"0\":{\"666\":1}}],[\"自定义参数解析器需要实现\",{\"1\":{\"604\":1}}],[\"自定义参数解析器\",{\"0\":{\"603\":1}}],[\"自定义一个任务监听器类\",{\"1\":{\"518\":1}}],[\"自定义完安装目录后\",{\"1\":{\"367\":1}}],[\"自定义\",{\"1\":{\"367\":1}}],[\"自定义词库\",{\"0\":{\"322\":1}}],[\"自定义分词器\",{\"1\":{\"316\":1}}],[\"自带的插件管理\",{\"1\":{\"317\":1}}],[\"自带的比较规则不满足需求\",{\"1\":{\"190\":1}}],[\"自带了一堆的分词器\",{\"1\":{\"315\":1}}],[\"自动签发\",{\"1\":{\"782\":1}}],[\"自动为kubelet颁发证书的ca\",{\"1\":{\"771\":1}}],[\"自动为node颁发证书\",{\"1\":{\"723\":1}}],[\"自动选举\",{\"1\":{\"771\":1,\"776\":1}}],[\"自动生成的\",{\"1\":{\"535\":1}}],[\"自动转到下一个节点\",{\"1\":{\"506\":1}}],[\"自动确认执行器\",{\"1\":{\"484\":1}}],[\"自动执行器抽象类\",{\"1\":{\"484\":1}}],[\"自动触发bgsave生成rdb文件\",{\"1\":{\"450\":1}}],[\"自动触发\",{\"0\":{\"450\":1},\"1\":{\"448\":1}}],[\"自动分片以支持云级别的伸缩性\",{\"1\":{\"360\":1}}],[\"自动根据方法名或类的信息进行crud操作\",{\"1\":{\"335\":1,\"383\":1}}],[\"自动检测属性的类型\",{\"1\":{\"334\":1}}],[\"自动扩容源码分析\",{\"0\":{\"148\":1}}],[\"自动拆箱\",{\"1\":{\"40\":1}}],[\"自动装箱\",{\"1\":{\"40\":1}}],[\"自动装箱和自动拆箱\",{\"1\":{\"40\":1}}],[\"自动类型提升\",{\"1\":{\"39\":1}}],[\"自动类型转换\",{\"1\":{\"39\":1,\"107\":1}}],[\"需做如下配置\",{\"1\":{\"715\":1}}],[\"需求\",{\"1\":{\"190\":1,\"265\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"665\":1}}],[\"需要创建的资源对象如下\",{\"1\":{\"804\":1}}],[\"需要实现不同节点上的docker容器之间的互相访问\",{\"1\":{\"799\":1}}],[\"需要修改此处\",{\"1\":{\"806\":1}}],[\"需要修改如下几处配置\",{\"0\":{\"806\":1}}],[\"需要修改成你之前设置主机名\",{\"1\":{\"783\":1}}],[\"需要修改\",{\"1\":{\"783\":1}}],[\"需要的\",{\"1\":{\"765\":1}}],[\"需要准备的证书\",{\"1\":{\"726\":1}}],[\"需要解决网络问题\",{\"1\":{\"713\":1}}],[\"需要被剔除的route\",{\"1\":{\"671\":1}}],[\"需要更新route集合\",{\"1\":{\"671\":1}}],[\"需要新增的路由集合\",{\"1\":{\"671\":1}}],[\"需要开启该配置\",{\"1\":{\"658\":1}}],[\"需要把\",{\"1\":{\"658\":1}}],[\"需要配置\",{\"1\":{\"627\":1}}],[\"需要配置你的信息\",{\"1\":{\"330\":1}}],[\"需要添加依赖\",{\"1\":{\"625\":1}}],[\"需要将kube\",{\"1\":{\"800\":1}}],[\"需要将参数使用反射值对象的切片\",{\"1\":{\"596\":1}}],[\"需要将elasticsearch重启\",{\"1\":{\"325\":1}}],[\"需要遵循一些规则\",{\"1\":{\"595\":1}}],[\"需要传入能识别中文的字体\",{\"1\":{\"568\":1}}],[\"需要高亮的连线\",{\"1\":{\"568\":1}}],[\"需要高亮的线条\",{\"1\":{\"568\":1}}],[\"需要高亮的节点列表\",{\"1\":{\"568\":1}}],[\"需要高亮的节点\",{\"1\":{\"568\":1}}],[\"需要排除spring\",{\"1\":{\"561\":1}}],[\"需要通过api来手动操作\",{\"1\":{\"537\":1}}],[\"需要获取一个\",{\"1\":{\"504\":1}}],[\"需要在\",{\"1\":{\"708\":1}}],[\"需要在配置文件中配置如下信息\",{\"1\":{\"495\":1}}],[\"需要在每个具体handler里面执行下一个需要执行的handler\",{\"1\":{\"484\":1}}],[\"需要改动代码\",{\"1\":{\"484\":1}}],[\"需要经常将内存中的数据同步到硬盘来保证持久化\",{\"1\":{\"446\":1}}],[\"需要学习redis支持的核心功能\",{\"1\":{\"427\":1}}],[\"需要换另一种方式修改密码\",{\"1\":{\"408\":1,\"698\":1}}],[\"需要注意的是\",{\"1\":{\"369\":1,\"722\":1}}],[\"需要你有足够的耐心和仔细\",{\"1\":{\"368\":1}}],[\"需要导入相应的依赖\",{\"1\":{\"655\":1}}],[\"需要导入jest的工具包\",{\"1\":{\"327\":1}}],[\"需要导入类的包\",{\"1\":{\"122\":1}}],[\"需要\",{\"1\":{\"324\":1}}],[\"需要使用双引号包装起来\",{\"1\":{\"317\":1}}],[\"需要指定\",{\"1\":{\"289\":1}}],[\"需要设置能访问\",{\"1\":{\"283\":1}}],[\"需要做序列化的对象必须实现序列化接口\",{\"1\":{\"254\":1}}],[\"需要找到元素\",{\"1\":{\"168\":1}}],[\"需要覆盖原有元素指向的位置\",{\"1\":{\"168\":1}}],[\"需要调用方法的对象实例\",{\"1\":{\"128\":1}}],[\"需要捕获或者抛出\",{\"1\":{\"115\":1}}],[\"需要复制每一个\",{\"1\":{\"64\":1}}],[\"需要重写该方法\",{\"1\":{\"57\":1}}],[\"表\",{\"0\":{\"697\":1}}],[\"表单id\",{\"1\":{\"556\":1}}],[\"表名\",{\"1\":{\"533\":1}}],[\"表中存储\",{\"1\":{\"513\":1}}],[\"表结构\",{\"1\":{\"494\":1}}],[\"表来修改密码\",{\"1\":{\"408\":1}}],[\"表里面\",{\"1\":{\"408\":1}}],[\"表连接\",{\"1\":{\"362\":1}}],[\"表达式的值为任务的负责人\",{\"1\":{\"522\":1}}],[\"表达式分配\",{\"0\":{\"517\":1}}],[\"表达式\",{\"1\":{\"190\":1,\"517\":1,\"522\":1,\"610\":1}}],[\"表示选择名称以eth开头的网卡的ip地址\",{\"1\":{\"806\":1}}],[\"表示kubelet将在\",{\"1\":{\"806\":1}}],[\"表示kubelet将从\",{\"1\":{\"806\":1}}],[\"表示server可以用该ca对client提供的证书进行验证\",{\"1\":{\"729\":1}}],[\"表示client可以用该\",{\"1\":{\"729\":1}}],[\"表示该证书可用于签名其它证书\",{\"1\":{\"729\":1}}],[\"表示该用户可以远程登录\",{\"1\":{\"406\":1}}],[\"表示该用户只能本地登录\",{\"1\":{\"406\":1}}],[\"表示不限制ip\",{\"1\":{\"697\":1}}],[\"表示不启用\",{\"1\":{\"604\":1}}],[\"表示从微服务注册中心\",{\"1\":{\"658\":1}}],[\"表示启用\",{\"1\":{\"604\":1}}],[\"表示值是否可寻址\",{\"1\":{\"595\":1}}],[\"表示的是底层真实的类型\",{\"1\":{\"588\":1}}],[\"表示的是静态类型\",{\"1\":{\"588\":1}}],[\"表示列表的最后一个元素\",{\"1\":{\"442\":1}}],[\"表示以上所有权限\",{\"1\":{\"417\":1}}],[\"表示授权用户可以使用\",{\"1\":{\"417\":1}}],[\"表示授予用户可以锁定特定数据库的已有数据表的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以调用特定数据库的存储过程和存储函数的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以在特定数据库中创建新的视图的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以在特定数据库中创建临时表的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以在特定数据库中的所有数据表上定义和删除索引的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以删除特定数据库中所有表和视图的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以更新和删除数据库中已有的存储过程和存储函数的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以为特定的数据库创建存储过程和存储函数的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以查看特定数据库中已有视图的视图定义的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以创建指向特定的数据库中的表外键的权限\",{\"1\":{\"417\":1}}],[\"表示授予用户可以使用\",{\"1\":{\"417\":5}}],[\"表示是无权限\",{\"1\":{\"412\":1}}],[\"表示字符输入流的所有类的超类\",{\"1\":{\"246\":1}}],[\"表示转义\",{\"1\":{\"236\":1}}],[\"表示栈\",{\"1\":{\"181\":1}}],[\"表示单向链表和双向链表\",{\"1\":{\"175\":1}}],[\"表示链表结构\",{\"1\":{\"175\":1}}],[\"表示数组结构\",{\"1\":{\"175\":1}}],[\"表示正在运行的\",{\"1\":{\"124\":1}}],[\"表示忽略权限\",{\"1\":{\"123\":1}}],[\"表示获取多个\",{\"1\":{\"123\":1}}],[\"表示时间戳\",{\"1\":{\"116\":1}}],[\"表示包可见\",{\"1\":{\"91\":1}}],[\"表示\",{\"1\":{\"78\":2}}],[\"外部比较器\",{\"1\":{\"190\":1}}],[\"外部类名$数字\",{\"1\":{\"80\":1}}],[\"外部类名$数字内部类名称\",{\"1\":{\"80\":1}}],[\"外部类名$内部类名字\",{\"1\":{\"80\":1}}],[\"外部类\",{\"1\":{\"80\":2}}],[\"红黑树存储的时候是左边的存较小的元素\",{\"1\":{\"188\":1}}],[\"般的\",{\"1\":{\"187\":1}}],[\"子进程先将数据写入到临时的rdb文件中\",{\"1\":{\"449\":1}}],[\"子句\",{\"1\":{\"308\":4}}],[\"子接口\",{\"1\":{\"182\":1}}],[\"子类会过多等问题\",{\"1\":{\"475\":1}}],[\"子类对象指向父类引用\",{\"1\":{\"102\":1}}],[\"子类只能继承一个父类\",{\"1\":{\"92\":1}}],[\"子类继承抽象类必须实现抽象类中的抽象方法\",{\"1\":{\"92\":1}}],[\"子类实例化的对象不能使用\",{\"1\":{\"91\":1}}],[\"子类的代码中可以用\",{\"1\":{\"91\":1}}],[\"子类匿名内部类\",{\"1\":{\"84\":1}}],[\"子类\",{\"1\":{\"77\":3,\"107\":3}}],[\"子类要访问父类成员时一定使用super\",{\"1\":{\"70\":1}}],[\"子类覆盖clone一般都是实现深拷贝\",{\"1\":{\"65\":1}}],[\"具有相同集群名的节点才会组成一个集群\",{\"1\":{\"276\":1}}],[\"具有先进后出的特性\",{\"1\":{\"181\":1}}],[\"具体rbac是如何体现在kubernetes系统中的我们会在后面的部署中逐步的深入了解\",{\"1\":{\"724\":1}}],[\"具体操作步骤\",{\"0\":{\"710\":1}}],[\"具体的路由信息变更刷新\",{\"1\":{\"671\":1}}],[\"具体处理者\",{\"1\":{\"483\":1}}],[\"具体装饰者\",{\"1\":{\"477\":2}}],[\"具体装饰者角色\",{\"1\":{\"256\":1}}],[\"具体装饰\",{\"1\":{\"476\":1}}],[\"具体构件\",{\"1\":{\"476\":1}}],[\"具体构件角色\",{\"1\":{\"256\":2}}],[\"具体流程如下\",{\"1\":{\"449\":1}}],[\"具体实现是\",{\"1\":{\"133\":1}}],[\"具体实现方法\",{\"1\":{\"126\":1}}],[\"具体时间\",{\"1\":{\"112\":1}}],[\"具体交给实现类实现\",{\"1\":{\"93\":1}}],[\"具体例子\",{\"1\":{\"91\":1}}],[\"名称\",{\"1\":{\"569\":1,\"689\":1}}],[\"名称不同\",{\"1\":{\"180\":1}}],[\"名为\",{\"1\":{\"385\":1}}],[\"名词\",{\"1\":{\"273\":1}}],[\"名字\",{\"1\":{\"89\":1}}],[\"头部出队操作\",{\"1\":{\"180\":2}}],[\"头部入队操作\",{\"1\":{\"180\":2}}],[\"尾部出队操作\",{\"1\":{\"180\":2}}],[\"尾部入队操作\",{\"1\":{\"180\":2}}],[\"尾部进行添加操作\",{\"1\":{\"169\":1}}],[\"入门\",{\"1\":{\"427\":2}}],[\"入队操作\",{\"1\":{\"180\":2}}],[\"入栈\",{\"1\":{\"170\":1,\"181\":1}}],[\"效率低下\",{\"1\":{\"178\":1,\"202\":1}}],[\"老版的\",{\"1\":{\"175\":1}}],[\"要想不冲突\",{\"1\":{\"707\":1}}],[\"要实现的接口就是java\",{\"1\":{\"657\":1}}],[\"要求集群内各节点\",{\"1\":{\"796\":1}}],[\"要求值可寻址且是导出的字段\",{\"1\":{\"595\":1}}],[\"要求该容器允许记录元素的添加顺序\",{\"1\":{\"174\":1}}],[\"要决定\",{\"1\":{\"522\":1}}],[\"要查找point附近的场地\",{\"1\":{\"402\":1}}],[\"要查找box内的场地\",{\"1\":{\"401\":1}}],[\"要查找circle内的位置\",{\"1\":{\"400\":1}}],[\"要使用\",{\"1\":{\"655\":1}}],[\"要使用球面坐标查找point附近的场地\",{\"1\":{\"402\":1}}],[\"要使用球面坐标查找circle内的场地\",{\"1\":{\"400\":1}}],[\"要使用这种查询表达式\",{\"1\":{\"302\":1}}],[\"要安装特定版本\",{\"1\":{\"374\":1}}],[\"要安装最新的稳定版本\",{\"1\":{\"374\":1}}],[\"要返回的最大片段数\",{\"1\":{\"343\":1}}],[\"要手工建立\",{\"1\":{\"321\":1}}],[\"要有无参构造\",{\"1\":{\"89\":1}}],[\"底层使用了高性能的通信框架netty\",{\"1\":{\"653\":1}}],[\"底层基于红黑树算法\",{\"1\":{\"192\":1}}],[\"底层基于哈希表算法\",{\"1\":{\"192\":1,\"194\":1}}],[\"底层工作原理和\",{\"1\":{\"195\":1}}],[\"底层工作原理\",{\"0\":{\"186\":1}}],[\"底层采用红黑树算法实现\",{\"1\":{\"188\":1}}],[\"底层采用红黑树实现\",{\"1\":{\"183\":1}}],[\"底层采用哈希表实现\",{\"1\":{\"183\":1,\"185\":1}}],[\"底层采用链表算法\",{\"1\":{\"179\":1}}],[\"底层采用数组实现\",{\"1\":{\"175\":1}}],[\"底层采用不同的存储算法\",{\"1\":{\"164\":1}}],[\"底层数据结构\",{\"1\":{\"173\":1}}],[\"顶层接口\",{\"0\":{\"173\":1}}],[\"移动到合适位置\",{\"1\":{\"792\":1}}],[\"移动到配置文件路径\",{\"1\":{\"785\":1}}],[\"移动到bin目录\",{\"1\":{\"726\":1}}],[\"移动\",{\"1\":{\"751\":1,\"759\":1}}],[\"移动联通电信4g手机\",{\"1\":{\"351\":1}}],[\"移动重命名文件\",{\"1\":{\"236\":1}}],[\"移除列表中指定位置的元素\",{\"1\":{\"176\":1}}],[\"移除元素\",{\"1\":{\"172\":1}}],[\"移到\",{\"1\":{\"156\":1}}],[\"循环获取字段名称以及对应的值\",{\"1\":{\"599\":1}}],[\"循环赋值\",{\"1\":{\"598\":1}}],[\"循环读取每一行\",{\"1\":{\"253\":1}}],[\"循环读取\",{\"1\":{\"244\":1,\"248\":1,\"252\":1}}],[\"循环的目标\",{\"1\":{\"172\":1}}],[\"循环遍历获取属性\",{\"1\":{\"135\":1}}],[\"循环遍历输出\",{\"1\":{\"134\":1}}],[\"出错原因也是因为缺少\",{\"1\":{\"677\":1}}],[\"出现了503情况\",{\"1\":{\"658\":1,\"676\":1}}],[\"出现的端口不一致\",{\"1\":{\"641\":1}}],[\"出现则得分\",{\"1\":{\"308\":1}}],[\"出现进程后\",{\"1\":{\"204\":1}}],[\"出队操作\",{\"1\":{\"180\":2}}],[\"出栈\",{\"1\":{\"170\":1,\"181\":1}}],[\"出来的\",{\"1\":{\"155\":1}}],[\"使得对象不需要知道链的结构\",{\"1\":{\"481\":1}}],[\"使得其具备缓存能力\",{\"1\":{\"257\":1}}],[\"使得\",{\"1\":{\"225\":1}}],[\"使得线程等待某个条件满足\",{\"1\":{\"222\":1}}],[\"使之成为新的栈顶元素\",{\"1\":{\"170\":1}}],[\"使用ipip模式时\",{\"1\":{\"806\":1}}],[\"使用内存中的pod节点路由表\",{\"1\":{\"799\":1}}],[\"使用根证书\",{\"0\":{\"734\":1,\"737\":1,\"740\":1,\"743\":1}}],[\"使用场景等参数\",{\"1\":{\"729\":1}}],[\"使用证书的组件如下\",{\"1\":{\"726\":1}}],[\"使用官方工具\",{\"1\":{\"713\":1}}],[\"使用官网提供的数据进行入门学习\",{\"1\":{\"265\":1}}],[\"使用merge逻辑更新definition并发出变\",{\"1\":{\"671\":1}}],[\"使用match\",{\"1\":{\"299\":1}}],[\"使用的\",{\"1\":{\"806\":1}}],[\"使用的是\",{\"1\":{\"658\":1}}],[\"使用的版本是\",{\"1\":{\"365\":1}}],[\"使用指定的过滤器\",{\"1\":{\"654\":1}}],[\"使用自定义的注解来区分\",{\"0\":{\"605\":1}}],[\"使用反射调用函数时\",{\"1\":{\"596\":1}}],[\"使用该\",{\"1\":{\"527\":1}}],[\"使用global变量控制流程\",{\"0\":{\"523\":1}}],[\"使用麻烦\",{\"0\":{\"518\":1}}],[\"使用普通删除报错\",{\"1\":{\"510\":1}}],[\"使用repositoryservice进行部署操作\",{\"1\":{\"502\":1}}],[\"使用工作流建模工具设计的业务流程图需要使用此service将流程定义文件的内容部署到计算机中\",{\"1\":{\"500\":1}}],[\"使用cni网络插件\",{\"1\":{\"804\":1}}],[\"使用classpath下的activiti\",{\"1\":{\"495\":1}}],[\"使用c语言编写\",{\"1\":{\"430\":1}}],[\"使用activiti流程建模工具\",{\"1\":{\"488\":1}}],[\"使用aggs关键字对state字段聚合\",{\"1\":{\"313\":1}}],[\"使用专门的建模语言\",{\"1\":{\"486\":1}}],[\"使用装饰器模式设计实现\",{\"1\":{\"477\":1}}],[\"使用设计模式的最终目的是\",{\"1\":{\"467\":1}}],[\"使用次数最少的数据干掉\",{\"1\":{\"464\":1}}],[\"使用次数最少的数据\",{\"1\":{\"463\":1}}],[\"使用列表的技巧\",{\"1\":{\"442\":1}}],[\"使用show\",{\"1\":{\"412\":1}}],[\"使用spring\",{\"1\":{\"384\":1}}],[\"使用query和criteria类\",{\"1\":{\"384\":1}}],[\"使用它可以以简单的\",{\"1\":{\"301\":1}}],[\"使用以及使用官网提供的数据来操作学习\",{\"1\":{\"285\":1}}],[\"使用倒排索引存储数据\",{\"1\":{\"270\":1}}],[\"使用新值替换list\",{\"1\":{\"198\":1}}],[\"使用线程安全应该使用\",{\"1\":{\"177\":1}}],[\"使用不多\",{\"1\":{\"175\":2}}],[\"使用数组实现\",{\"1\":{\"175\":2}}],[\"使用案例\",{\"0\":{\"161\":1,\"607\":1}}],[\"使用方法\",{\"1\":{\"154\":1,\"190\":1}}],[\"使用匿名内部类第二种方法\",{\"1\":{\"84\":1}}],[\"使用特定的编译器所编译的程序只能在对应的平台运行\",{\"1\":{\"34\":1}}],[\"使用\",{\"0\":{\"24\":1,\"390\":1,\"487\":1,\"501\":1,\"648\":1},\"1\":{\"23\":1,\"24\":1,\"57\":3,\"66\":1,\"80\":1,\"95\":1,\"113\":1,\"117\":1,\"153\":1,\"154\":1,\"190\":1,\"212\":1,\"222\":1,\"224\":1,\"236\":2,\"257\":1,\"272\":1,\"289\":1,\"312\":1,\"317\":1,\"339\":1,\"349\":1,\"384\":1,\"395\":1,\"440\":1,\"441\":1,\"442\":2,\"443\":2,\"444\":1,\"456\":1,\"489\":1,\"517\":1,\"526\":1,\"563\":1,\"587\":1,\"593\":1,\"595\":5,\"610\":1,\"639\":1,\"648\":1,\"665\":1,\"707\":1,\"726\":6,\"830\":1}}],[\"使用时可以不用指定数组长度\",{\"1\":{\"8\":1}}],[\"又不会这样\",{\"1\":{\"830\":1}}],[\"又不想在branch\",{\"1\":{\"708\":1}}],[\"又不希望出现重复数据时\",{\"1\":{\"435\":1}}],[\"又因为merge策略\",{\"1\":{\"671\":1}}],[\"又能享受到\",{\"1\":{\"456\":1}}],[\"又或者在微博应用中\",{\"1\":{\"435\":1}}],[\"又名堆栈\",{\"1\":{\"170\":1}}],[\"又称为类变量\",{\"1\":{\"72\":1}}],[\"擅长操作头部和尾部\",{\"1\":{\"169\":1}}],[\"两种策略\",{\"1\":{\"462\":1}}],[\"两种\",{\"1\":{\"172\":1}}],[\"两端都可以进行添加删除数据\",{\"1\":{\"169\":1}}],[\"两个类型是\",{\"1\":{\"585\":1}}],[\"两个函数分别是\",{\"1\":{\"585\":1}}],[\"两个模板都实现了elasticsearchoperations接口\",{\"1\":{\"337\":1}}],[\"两个对象地址都不一致\",{\"1\":{\"155\":1}}],[\"两个对象\",{\"1\":{\"155\":1}}],[\"两个cat对象就是等价的\",{\"1\":{\"58\":1,\"60\":1}}],[\"单master服务器规划\",{\"1\":{\"714\":1}}],[\"单master架构图\",{\"1\":{\"714\":1}}],[\"单据生成自动执行器\",{\"1\":{\"484\":1}}],[\"单一职责原则\",{\"1\":{\"468\":2}}],[\"单个操作是原子性的\",{\"1\":{\"431\":1}}],[\"单个字段的设置优先级高于全局设置\",{\"1\":{\"342\":1}}],[\"单词的所有记录\",{\"1\":{\"305\":1}}],[\"单位s\",{\"1\":{\"440\":1}}],[\"单位为毫秒\",{\"1\":{\"221\":1}}],[\"单位是s\",{\"1\":{\"161\":1}}],[\"单向队列\",{\"1\":{\"169\":3,\"180\":1}}],[\"单向链表\",{\"1\":{\"168\":2}}],[\"性能强悍\",{\"1\":{\"615\":1}}],[\"性能极高\",{\"1\":{\"431\":1}}],[\"性能较低\",{\"1\":{\"251\":1}}],[\"性能分析\",{\"1\":{\"167\":1,\"168\":1}}],[\"性别\",{\"1\":{\"160\":1}}],[\"来快速构建环境\",{\"1\":{\"690\":1}}],[\"来进行断言\",{\"1\":{\"657\":1}}],[\"来进行安装\",{\"1\":{\"317\":1}}],[\"来自于\",{\"1\":{\"654\":1}}],[\"来模拟微服务之间的远程调用场景\",{\"1\":{\"636\":1}}],[\"来代替\",{\"1\":{\"635\":1}}],[\"来配置\",{\"1\":{\"631\":1}}],[\"来安装\",{\"1\":{\"377\":1}}],[\"来学习\",{\"1\":{\"358\":1}}],[\"来实现服务注册和发现\",{\"1\":{\"625\":1}}],[\"来实现搜索结果中一个或多个字段突出显示\",{\"1\":{\"339\":1}}],[\"来实现分词\",{\"1\":{\"315\":1}}],[\"来避免网络往返\",{\"1\":{\"312\":1}}],[\"来查询\",{\"1\":{\"303\":1}}],[\"来发送它们\",{\"1\":{\"298\":1}}],[\"来插入数据\",{\"1\":{\"296\":1}}],[\"来装饰它\",{\"1\":{\"257\":1}}],[\"来分割目录路径\",{\"1\":{\"236\":1}}],[\"来表示路径分隔符\",{\"1\":{\"236\":1}}],[\"来表示元素的存储位置\",{\"1\":{\"167\":1}}],[\"来唤醒挂起的线程\",{\"1\":{\"222\":2}}],[\"来调用\",{\"1\":{\"217\":1}}],[\"来操作\",{\"1\":{\"46\":1}}],[\"下的微服务网关\",{\"1\":{\"652\":1}}],[\"下一个执行器\",{\"1\":{\"484\":1}}],[\"下演示安装\",{\"1\":{\"370\":1}}],[\"下载源码包\",{\"1\":{\"825\":1}}],[\"下载部署脚本\",{\"0\":{\"821\":1}}],[\"下载一个server包就够了\",{\"1\":{\"758\":1}}],[\"下载发行版的二进制包\",{\"1\":{\"713\":1}}],[\"下载仓库到本地之后\",{\"1\":{\"705\":1}}],[\"下载地址\",{\"1\":{\"618\":1,\"681\":1,\"749\":1,\"758\":1,\"797\":1,\"811\":1}}],[\"下载后双击该文件\",{\"1\":{\"367\":1}}],[\"下载\",{\"0\":{\"366\":1,\"797\":1,\"818\":1},\"1\":{\"367\":1,\"679\":1,\"726\":1,\"805\":1,\"811\":1}}],[\"下载插件\",{\"1\":{\"317\":1}}],[\"下载测试数据\",{\"0\":{\"295\":1}}],[\"下\",{\"1\":{\"275\":1}}],[\"下标\",{\"1\":{\"167\":1}}],[\"下面随便改一点东西提交上去\",{\"1\":{\"706\":1}}],[\"下面是自己写的自定义过滤器代码\",{\"1\":{\"665\":1}}],[\"下面是几个示例\",{\"1\":{\"601\":1}}],[\"下面是例子所使用的映射结构\",{\"1\":{\"341\":1}}],[\"下面介绍三种清除策略\",{\"1\":{\"459\":1}}],[\"下面就了解的应用场景做个总结\",{\"1\":{\"432\":1}}],[\"下面例子中返回的高亮片段将会根据分数顺序输出\",{\"1\":{\"347\":1}}],[\"下面的参数可以设置在\",{\"1\":{\"342\":1}}],[\"下面的表格表示各个修饰符的范围\",{\"1\":{\"91\":1}}],[\"下面我们就认识几个常见的认证方式\",{\"1\":{\"723\":1}}],[\"下面我们创建新的分支管理另一个项目\",{\"1\":{\"705\":1}}],[\"下面我们来了解一下高亮\",{\"1\":{\"342\":1}}],[\"下面我们需要批量导入测试数据\",{\"1\":{\"294\":1}}],[\"下面贴出一部分代码\",{\"1\":{\"10\":1}}],[\"非对称加密\",{\"1\":{\"720\":1}}],[\"非集群模式\",{\"1\":{\"619\":2}}],[\"非字符分割\",{\"1\":{\"316\":1}}],[\"非线性数据结构\",{\"1\":{\"165\":1}}],[\"非静态内部类依赖于外部类的实例\",{\"1\":{\"75\":1}}],[\"线上环境不建议使用\",{\"1\":{\"449\":1}}],[\"线性数据结构\",{\"0\":{\"166\":1},\"1\":{\"165\":1}}],[\"线程互斥同步\",{\"0\":{\"227\":1}}],[\"线程b\",{\"1\":{\"226\":1}}],[\"线程a\",{\"1\":{\"226\":1}}],[\"线程强制执行\",{\"1\":{\"225\":1}}],[\"线程执行结束后\",{\"1\":{\"225\":1}}],[\"线程会释放锁\",{\"1\":{\"222\":1}}],[\"线程在等待时会被挂起\",{\"1\":{\"222\":1}}],[\"线程中抛出的其它异常也同样需要在本地进行处理\",{\"1\":{\"221\":1}}],[\"线程常用方式\",{\"0\":{\"220\":1}}],[\"线程使用\",{\"0\":{\"217\":1}}],[\"线程死亡的原因有三个\",{\"1\":{\"216\":1}}],[\"线程便转入就绪状态\",{\"1\":{\"215\":1}}],[\"线程的强制执行方法\",{\"1\":{\"225\":1}}],[\"线程的同步方法有哪些\",{\"1\":{\"210\":1}}],[\"线程的常用方法\",{\"1\":{\"210\":1}}],[\"线程的出现\",{\"0\":{\"204\":1}}],[\"线程有哪些实现方式\",{\"1\":{\"210\":1}}],[\"线程有几种状态\",{\"1\":{\"210\":1}}],[\"线程是进程的子集\",{\"1\":{\"205\":1}}],[\"线程组之间只能共享资源\",{\"1\":{\"205\":1}}],[\"线程所使用的资源来自其所属进程的资源\",{\"1\":{\"205\":1}}],[\"线程可以看出是轻量级的进程\",{\"1\":{\"205\":1}}],[\"线程间互\",{\"1\":{\"204\":1}}],[\"线程\",{\"1\":{\"204\":1,\"222\":17}}],[\"线程状态\",{\"0\":{\"211\":1},\"1\":{\"160\":1}}],[\"线程不安全实例\",{\"0\":{\"206\":1}}],[\"线程不安全是指什么\",{\"1\":{\"201\":1}}],[\"线程不安全\",{\"1\":{\"144\":1}}],[\"线程安全\",{\"0\":{\"141\":1,\"144\":1},\"1\":{\"144\":1}}],[\"线程请求的栈深度大于虚拟机所允许的深度时抛出\",{\"1\":{\"43\":1}}],[\"线程私有的内存区域\",{\"1\":{\"43\":1}}],[\"线程共享的内存区域\",{\"1\":{\"43\":2}}],[\"往往前端一个项目\",{\"1\":{\"703\":1}}],[\"往往根据业务的需要\",{\"1\":{\"165\":1}}],[\"往下看源码\",{\"1\":{\"10\":1}}],[\"图片名称\",{\"1\":{\"535\":1}}],[\"图片或者视频等信息放到redis中\",{\"1\":{\"440\":1}}],[\"图\",{\"1\":{\"165\":1}}],[\"树\",{\"1\":{\"165\":1}}],[\"q\",{\"1\":{\"689\":2,\"726\":1}}],[\"qrnoip\",{\"1\":{\"499\":1}}],[\"qq\",{\"1\":{\"457\":1}}],[\"quit\",{\"1\":{\"827\":1}}],[\"quick\",{\"1\":{\"616\":1,\"618\":1}}],[\"quxtpp\",{\"1\":{\"802\":1}}],[\"quay\",{\"1\":{\"800\":1}}],[\"qualifier\",{\"1\":{\"484\":2}}],[\"quotes后\",{\"1\":{\"424\":1}}],[\"quotes\",{\"1\":{\"424\":1}}],[\"query=url\",{\"1\":{\"660\":1}}],[\"query注解\",{\"1\":{\"395\":1}}],[\"querybuilder\",{\"1\":{\"352\":2}}],[\"querybuilders\",{\"1\":{\"348\":1,\"350\":1,\"352\":2,\"353\":1,\"354\":1}}],[\"query\",{\"0\":{\"301\":1},\"1\":{\"270\":1,\"300\":1,\"301\":1,\"302\":4,\"303\":6,\"304\":1,\"305\":2,\"306\":1,\"307\":2,\"308\":3,\"310\":1,\"314\":2,\"341\":2,\"352\":3,\"384\":2,\"385\":5,\"386\":2,\"387\":5,\"388\":5,\"389\":5,\"396\":1,\"397\":1,\"400\":2,\"401\":1,\"402\":3,\"403\":2,\"411\":2,\"660\":1}}],[\"queue\",{\"0\":{\"169\":1},\"1\":{\"165\":1,\"169\":1,\"442\":1}}],[\"qo\",{\"1\":{\"371\":2}}],[\"qkrpa8\",{\"1\":{\"319\":1}}],[\"q2wphu\",{\"1\":{\"308\":1}}],[\"q=\",{\"1\":{\"299\":1}}],[\"qekang\",{\"1\":{\"20\":1}}],[\"队列又分为\",{\"1\":{\"169\":1}}],[\"队列是一种特殊的线性表\",{\"1\":{\"169\":1}}],[\"队列\",{\"0\":{\"169\":1},\"1\":{\"165\":1,\"179\":1,\"429\":1,\"430\":1,\"442\":1}}],[\"链表上的每个节点都包含一个字符串\",{\"1\":{\"438\":1}}],[\"链表又分为\",{\"1\":{\"168\":1}}],[\"链表\",{\"0\":{\"168\":1},\"1\":{\"165\":1,\"168\":1,\"186\":2}}],[\"链接\",{\"0\":{\"13\":1}}],[\"拼接出完整redis的key\",{\"1\":{\"161\":1}}],[\"约定\",{\"1\":{\"161\":1}}],[\"死亡的作业数量\",{\"1\":{\"540\":1}}],[\"死亡状态是线程生命周期中的最后一个阶段\",{\"1\":{\"216\":1}}],[\"死亡状态\",{\"0\":{\"216\":1}}],[\"死亡\",{\"1\":{\"160\":1}}],[\"阻塞后续操作\",{\"1\":{\"453\":1}}],[\"阻塞问题做的优化\",{\"1\":{\"449\":1}}],[\"阻塞只发生在fork阶段\",{\"1\":{\"449\":1}}],[\"阻塞当前redis服务器\",{\"1\":{\"449\":1}}],[\"阻塞状态\",{\"0\":{\"215\":1}}],[\"阻塞\",{\"1\":{\"160\":1}}],[\"阻止外部直接调用\",{\"1\":{\"89\":1}}],[\"退货\",{\"1\":{\"160\":1}}],[\"已安装\",{\"1\":{\"822\":1}}],[\"已经有大神总结了非常好的入门文章\",{\"1\":{\"720\":1}}],[\"已经在常量池中了\",{\"1\":{\"155\":1}}],[\"已弃用\",{\"0\":{\"643\":1},\"1\":{\"643\":1}}],[\"已完成\",{\"1\":{\"576\":1}}],[\"已办任务的自定义标题\",{\"1\":{\"542\":1}}],[\"已激活\",{\"1\":{\"514\":3}}],[\"已挂起\",{\"1\":{\"514\":3}}],[\"已确认\",{\"1\":{\"160\":1}}],[\"已发货\",{\"1\":{\"160\":1}}],[\"已配货\",{\"1\":{\"160\":1}}],[\"已付款\",{\"1\":{\"160\":1}}],[\"信用卡\",{\"1\":{\"160\":1}}],[\"信息\",{\"1\":{\"20\":1,\"135\":1,\"499\":1}}],[\"银行卡\",{\"1\":{\"160\":1}}],[\"现在\",{\"1\":{\"807\":1}}],[\"现在已经可以不需要加了\",{\"1\":{\"628\":1}}],[\"现在开源出来大家用\",{\"1\":{\"615\":1}}],[\"现在购买领满8000减400元优惠神劵\",{\"1\":{\"351\":1}}],[\"现在是北京时间2020年01月18日晚上九点\",{\"1\":{\"2\":1}}],[\"现金\",{\"1\":{\"160\":1}}],[\"冬天\",{\"1\":{\"160\":1}}],[\"秋天\",{\"1\":{\"160\":1}}],[\"夏天\",{\"1\":{\"160\":1}}],[\"春天\",{\"1\":{\"160\":1}}],[\"季节\",{\"1\":{\"160\":1}}],[\"女\",{\"1\":{\"160\":1}}],[\"男\",{\"1\":{\"160\":1}}],[\"星期日\",{\"1\":{\"160\":1}}],[\"星期六\",{\"1\":{\"160\":1}}],[\"星期五\",{\"1\":{\"160\":1}}],[\"星期四\",{\"1\":{\"160\":1}}],[\"星期三\",{\"1\":{\"160\":1}}],[\"星期二\",{\"1\":{\"160\":1}}],[\"星期一\",{\"1\":{\"160\":1}}],[\"星期\",{\"1\":{\"160\":1}}],[\"天则有总经理审批\",{\"1\":{\"519\":1}}],[\"天\",{\"1\":{\"158\":1}}],[\"天生具备线程安全\",{\"1\":{\"141\":1}}],[\"个参数\",{\"1\":{\"662\":1}}],[\"个字符写入此输出流中\",{\"1\":{\"247\":1}}],[\"个字符数据写入到输出流中\",{\"1\":{\"247\":1}}],[\"个字节写入此输出流中\",{\"1\":{\"243\":1}}],[\"个栈中删除元素又称作\",{\"1\":{\"170\":1}}],[\"个月份\",{\"1\":{\"158\":1}}],[\"个季节\",{\"1\":{\"158\":1}}],[\"枚举是一个特殊的类\",{\"1\":{\"158\":1}}],[\"枚举类不能被单独的new创建对象\",{\"1\":{\"159\":1}}],[\"枚举类不能被继承\",{\"1\":{\"159\":1}}],[\"枚举类的应用场景\",{\"0\":{\"160\":1}}],[\"枚举类的构造器是私有的\",{\"1\":{\"159\":1}}],[\"枚举类的使用规则\",{\"0\":{\"159\":1}}],[\"枚举类的介绍\",{\"0\":{\"158\":1}}],[\"枚举类的相关知识\",{\"1\":{\"157\":1}}],[\"枚举类\",{\"0\":{\"157\":1}}],[\"操作时\",{\"1\":{\"707\":1}}],[\"操作结构体成员的值\",{\"0\":{\"595\":1}}],[\"操作结束后输出的数据错乱\",{\"1\":{\"206\":1}}],[\"操作流程定义为挂起状态\",{\"1\":{\"514\":1}}],[\"操作系统初始化配置\",{\"0\":{\"715\":1}}],[\"操作系统控制的写回\",{\"1\":{\"454\":1}}],[\"操作系统一般通过cpu时间片轮转实现并发\",{\"1\":{\"203\":1}}],[\"操作将任务取出进行执行\",{\"1\":{\"442\":1}}],[\"操作文件的字符输出流\",{\"1\":{\"248\":1}}],[\"操作文件的字符输入流\",{\"1\":{\"248\":1}}],[\"操作\",{\"0\":{\"288\":1,\"336\":1},\"1\":{\"236\":1,\"289\":1,\"291\":2,\"294\":1,\"338\":1,\"349\":1,\"358\":1,\"442\":1,\"595\":2}}],[\"操作的都是头和尾的元素\",{\"1\":{\"179\":1}}],[\"操作n次\",{\"1\":{\"167\":2}}],[\"操作一次\",{\"1\":{\"167\":2,\"168\":2}}],[\"操作和常量池都做了一定的修改\",{\"1\":{\"156\":1}}],[\"操作数据量比较大的流\",{\"1\":{\"251\":1}}],[\"操作数组元素都是使用\",{\"1\":{\"46\":1}}],[\"操作数组的方法\",{\"1\":{\"46\":1}}],[\"操作数栈\",{\"1\":{\"43\":1}}],[\"接受一个输入参数\",{\"1\":{\"656\":1}}],[\"接下来我们介绍\",{\"1\":{\"659\":1}}],[\"接下来我们把bpmn导出为png文件\",{\"1\":{\"499\":1}}],[\"接下来\",{\"1\":{\"638\":1}}],[\"接下来启动项目\",{\"1\":{\"607\":1}}],[\"接着\",{\"1\":{\"155\":2}}],[\"接着执行\",{\"1\":{\"155\":1}}],[\"接口耗时\",{\"1\":{\"665\":1}}],[\"接口+注解\",{\"1\":{\"638\":1}}],[\"接口+注解的方式\",{\"1\":{\"634\":1}}],[\"接口隔离原则\",{\"1\":{\"468\":2}}],[\"接口来展现\",{\"1\":{\"301\":1}}],[\"接口后\",{\"1\":{\"254\":1}}],[\"接口会自动关闭\",{\"1\":{\"244\":1,\"248\":1,\"252\":1,\"253\":1}}],[\"接口实现简单的\",{\"1\":{\"349\":1}}],[\"接口实现多线程\",{\"1\":{\"219\":1}}],[\"接口实现方式\",{\"0\":{\"95\":1}}],[\"接口的地址以及参数要和调用服务的\",{\"1\":{\"639\":1}}],[\"接口的开发\",{\"0\":{\"639\":1}}],[\"接口的类会自动帮你关闭资源\",{\"1\":{\"249\":1}}],[\"接口的类只能当做一个可以在线程中运行的任务\",{\"1\":{\"217\":1}}],[\"接口的方法\",{\"1\":{\"179\":1}}],[\"接口的\",{\"1\":{\"177\":1}}],[\"接口的实现类\",{\"1\":{\"185\":1,\"188\":1}}],[\"接口的实现类都遵循这一种规范\",{\"1\":{\"182\":1}}],[\"接口的实现类或抽象类的子类都只有实现了接口或抽象类中的方法后才能实例化\",{\"1\":{\"97\":1}}],[\"接口的实例\",{\"1\":{\"108\":1}}],[\"接口定义了一种规范\",{\"1\":{\"174\":1,\"182\":1}}],[\"接口定义的方法\",{\"1\":{\"62\":1}}],[\"接口处于同级的层次\",{\"1\":{\"173\":1}}],[\"接口跟\",{\"1\":{\"173\":1}}],[\"接口继承于\",{\"1\":{\"173\":1}}],[\"接口有一个方法\",{\"1\":{\"172\":1}}],[\"接口是所有集合的超类\",{\"1\":{\"172\":1}}],[\"接口是一种约定的规范\",{\"1\":{\"93\":1}}],[\"接口引用变量指向实现类对象\",{\"1\":{\"104\":1}}],[\"接口和类之间没有任何层次关系\",{\"1\":{\"99\":1}}],[\"接口适合用来定义扩展功能\",{\"1\":{\"99\":1}}],[\"接口中的方法就是调用服务的\",{\"1\":{\"639\":1}}],[\"接口中的方法必须都是抽象方法\",{\"1\":{\"94\":1}}],[\"接口中不能含有静态代码块\",{\"1\":{\"98\":1}}],[\"接口只有定义\",{\"1\":{\"98\":1}}],[\"接口类使用\",{\"1\":{\"95\":1}}],[\"接口类就是使用\",{\"1\":{\"93\":1}}],[\"接口可以包含方法\",{\"1\":{\"94\":1}}],[\"接口可以包含变量\",{\"1\":{\"94\":1}}],[\"接口特性\",{\"0\":{\"94\":1}}],[\"接口又调用了\",{\"1\":{\"62\":1}}],[\"接口\",{\"0\":{\"99\":1,\"172\":1,\"174\":1,\"182\":1,\"189\":1,\"190\":1,\"191\":1,\"219\":1},\"1\":{\"62\":1,\"84\":1,\"104\":2,\"173\":4,\"188\":1,\"189\":1,\"217\":1,\"218\":1,\"254\":1,\"268\":1,\"351\":2,\"352\":1,\"500\":1,\"604\":1,\"639\":1}}],[\"区间查询\",{\"0\":{\"309\":1}}],[\"区\",{\"1\":{\"156\":1}}],[\"区移到正常的\",{\"1\":{\"155\":1}}],[\"区是一个类静态的区域\",{\"1\":{\"155\":1}}],[\"区的\",{\"1\":{\"155\":1}}],[\"区域了\",{\"1\":{\"155\":1}}],[\"区域的对象地址和字符串常量池的对象地址进行比较肯定是不相同的\",{\"1\":{\"155\":1}}],[\"区域是完全分开的\",{\"1\":{\"155\":1}}],[\"区和正常的\",{\"1\":{\"155\":1}}],[\"区中的\",{\"1\":{\"155\":1}}],[\"区别\",{\"1\":{\"43\":1}}],[\"校验流程文件\",{\"1\":{\"496\":1}}],[\"校验\",{\"1\":{\"152\":1,\"451\":1}}],[\"校验一下\",{\"1\":{\"151\":1}}],[\"左右的性能\",{\"1\":{\"451\":1}}],[\"左边\",{\"1\":{\"442\":1}}],[\"左边表达式为\",{\"1\":{\"42\":1}}],[\"左边表达式是否为\",{\"1\":{\"42\":1}}],[\"左移\",{\"1\":{\"151\":1}}],[\"翻倍再+2\",{\"1\":{\"152\":1}}],[\"翻倍\",{\"1\":{\"151\":1}}],[\"乘于\",{\"1\":{\"151\":1}}],[\"则这个请求被拒绝\",{\"1\":{\"725\":1}}],[\"则必须使用这个插件\",{\"1\":{\"725\":1}}],[\"则该分支其实并没有创建\",{\"1\":{\"706\":1}}],[\"则路由匹配\",{\"1\":{\"654\":1}}],[\"则使用该参数解析器\",{\"1\":{\"604\":1}}],[\"则无法修改对象值\",{\"1\":{\"595\":1}}],[\"则无论您指定什么版本\",{\"1\":{\"374\":1}}],[\"则在启动时需要传入对应的参数\",{\"1\":{\"503\":1}}],[\"则在其\",{\"1\":{\"186\":1}}],[\"则自动创建\",{\"1\":{\"496\":1}}],[\"则由算法决定\",{\"1\":{\"462\":1}}],[\"则进行快照\",{\"1\":{\"451\":3}}],[\"则产生错误而非警告\",{\"1\":{\"424\":1}}],[\"则中断当前的操作\",{\"1\":{\"424\":1}}],[\"则不返回任何片段\",{\"1\":{\"343\":1}}],[\"则不添加\",{\"1\":{\"186\":1}}],[\"则可以设置serviceaccount\",{\"1\":{\"806\":2}}],[\"则可以用普通删除\",{\"1\":{\"510\":1}}],[\"则可以进行反序列化\",{\"1\":{\"254\":1}}],[\"则可以作为单例模式的实现方法\",{\"1\":{\"159\":1}}],[\"则\",{\"1\":{\"222\":2}}],[\"则去除该位置上\",{\"1\":{\"186\":1}}],[\"则需要设置相应的证书和密钥文件路径\",{\"1\":{\"806\":1}}],[\"则需要修改密码\",{\"1\":{\"697\":1}}],[\"则需要查看日志排查异常\",{\"1\":{\"693\":1}}],[\"则需要把元素整体后移\",{\"1\":{\"167\":1}}],[\"则需要把后面的元素整体后移\",{\"1\":{\"167\":1}}],[\"则需要根据新的字符串重新计算容量\",{\"1\":{\"152\":1}}],[\"则直接抛出异常\",{\"1\":{\"152\":1}}],[\"则返回\",{\"1\":{\"151\":1,\"242\":2,\"246\":2}}],[\"则抛出异常\",{\"1\":{\"151\":1}}],[\"则重新计算容量\",{\"1\":{\"151\":1}}],[\"则执行\",{\"1\":{\"150\":2}}],[\"则报错\",{\"1\":{\"105\":1}}],[\"即是前边复制下的主机名\",{\"1\":{\"831\":1}}],[\"即为当前环境对应的\",{\"1\":{\"631\":1}}],[\"即流程变量\",{\"1\":{\"522\":1}}],[\"即使顺序流中定义了条件\",{\"1\":{\"531\":1}}],[\"即使该流程有流程实例启动也可以删除\",{\"1\":{\"510\":1}}],[\"即使调用string\",{\"1\":{\"155\":1}}],[\"即增加其额外功能\",{\"1\":{\"474\":1}}],[\"即在第一次获取到数据的时候\",{\"1\":{\"458\":1}}],[\"即在m秒内有n次修改时\",{\"1\":{\"450\":1}}],[\"即原子性\",{\"1\":{\"431\":1}}],[\"即服务器内存上限\",{\"1\":{\"427\":1,\"463\":1}}],[\"即可操作指定的数据\",{\"1\":{\"709\":1}}],[\"即可匹配路由\",{\"1\":{\"660\":1}}],[\"即可\",{\"1\":{\"418\":1}}],[\"即可刷新离线时间\",{\"1\":{\"22\":1}}],[\"即品牌名称\",{\"1\":{\"355\":1,\"356\":1}}],[\"即便在实体上方设置\",{\"1\":{\"335\":1}}],[\"即将废用\",{\"1\":{\"332\":1}}],[\"即\",{\"1\":{\"254\":1,\"453\":1,\"517\":1,\"541\":1,\"555\":1,\"623\":2,\"631\":1}}],[\"即每次传递一个字节\",{\"1\":{\"240\":1}}],[\"即超出最大容量\",{\"1\":{\"150\":2}}],[\"新用户\",{\"0\":{\"700\":1}}],[\"新\",{\"1\":{\"670\":1}}],[\"新版本没有了32位系统的安装文件\",{\"1\":{\"366\":1}}],[\"新一代ipad\",{\"1\":{\"351\":1}}],[\"新建仓库之后默认分配了\",{\"1\":{\"704\":1}}],[\"新建一个mydic\",{\"1\":{\"323\":1}}],[\"新建一个对象\",{\"1\":{\"41\":1}}],[\"新建词库文件\",{\"0\":{\"323\":1}}],[\"新增接口\",{\"1\":{\"639\":1}}],[\"新增\",{\"1\":{\"289\":1}}],[\"新生状态\",{\"0\":{\"212\":1}}],[\"新的元素则需要指向原有元素指向的位置\",{\"1\":{\"168\":1}}],[\"新的字符串长度不能超出\",{\"1\":{\"152\":1}}],[\"新的容量小于等于0\",{\"1\":{\"151\":2}}],[\"新容量大小\",{\"1\":{\"151\":1}}],[\"新容量大小比数组最大长度大\",{\"1\":{\"151\":2}}],[\"新计算的\",{\"1\":{\"151\":1}}],[\"新字符串长度\",{\"1\":{\"150\":3,\"151\":7}}],[\"含头不含尾\",{\"1\":{\"147\":1}}],[\"改\",{\"1\":{\"145\":1}}],[\"改变元素时怕没有改变原来的数据\",{\"1\":{\"49\":1}}],[\"删除压缩包\",{\"1\":{\"825\":1}}],[\"删除所有暂存的操作\",{\"1\":{\"709\":1}}],[\"删除所有停止的容器\",{\"1\":{\"689\":1}}],[\"删除暂存操作\",{\"1\":{\"709\":1}}],[\"删除全部容器\",{\"1\":{\"689\":1}}],[\"删除容器\",{\"1\":{\"689\":1}}],[\"删除镜像\",{\"1\":{\"689\":1}}],[\"删除剔除的routes\",{\"1\":{\"671\":2}}],[\"删除并重新创建路由实现更新\",{\"1\":{\"671\":1}}],[\"删除失效的routes\",{\"1\":{\"671\":1}}],[\"删除部署的流程实例\",{\"1\":{\"572\":1}}],[\"删除流程实例\",{\"0\":{\"572\":1}}],[\"删除流程定义\",{\"0\":{\"510\":1},\"1\":{\"510\":1}}],[\"删除原因\",{\"1\":{\"551\":1,\"556\":1,\"557\":1,\"572\":1}}],[\"删除以及对应的资源查询下载等操作\",{\"1\":{\"508\":1}}],[\"删除检查数据中所有已经过期的key\",{\"1\":{\"462\":1}}],[\"删除里面的过期key\",{\"1\":{\"462\":1}}],[\"删除set集合中的元素\",{\"1\":{\"443\":1}}],[\"删除存储在给定键中的值\",{\"1\":{\"440\":1}}],[\"删除单个元素以及根据分值范围或成员来获取元素\",{\"1\":{\"438\":1}}],[\"删除单个元素\",{\"1\":{\"438\":1}}],[\"删除用户\",{\"0\":{\"419\":1}}],[\"删除您之前安装的所有\",{\"1\":{\"376\":1}}],[\"删除索引\",{\"1\":{\"338\":1}}],[\"删除一整个索引\",{\"1\":{\"292\":1}}],[\"删除一个字段\",{\"1\":{\"254\":1}}],[\"删除文档\",{\"1\":{\"292\":1}}],[\"删除文档或索引\",{\"0\":{\"292\":1}}],[\"删除文件\",{\"1\":{\"236\":1}}],[\"删除\",{\"0\":{\"415\":1},\"1\":{\"236\":1,\"376\":1,\"438\":1,\"443\":1}}],[\"删除添加改变集合的结构时\",{\"1\":{\"177\":1}}],[\"删除元素\",{\"1\":{\"172\":1}}],[\"删除操作一次\",{\"1\":{\"168\":1}}],[\"删除操作\",{\"1\":{\"167\":1,\"168\":1,\"176\":1}}],[\"删除指定区间的字符串\",{\"1\":{\"147\":1}}],[\"删\",{\"1\":{\"145\":1}}],[\"增强给对象指派职责的灵活性\",{\"1\":{\"481\":1}}],[\"增删改查数据中所有表的权利\",{\"0\":{\"414\":1}}],[\"增加\",{\"1\":{\"645\":1}}],[\"增加新的请求处理类很方便\",{\"1\":{\"481\":1}}],[\"增加带过滤器\",{\"1\":{\"310\":1}}],[\"增加相关文档的评分\",{\"1\":{\"308\":1}}],[\"增加一个字段\",{\"1\":{\"254\":1}}],[\"增\",{\"1\":{\"145\":1}}],[\"增减时间\",{\"1\":{\"117\":1}}],[\"增减操作\",{\"1\":{\"117\":1}}],[\"深度比较\",{\"0\":{\"600\":1,\"601\":1}}],[\"深空灰\",{\"1\":{\"351\":2,\"352\":1}}],[\"深入理解string\",{\"1\":{\"137\":1}}],[\"深拷贝的概念以及特性\",{\"1\":{\"64\":1}}],[\"深拷贝\",{\"0\":{\"64\":1}}],[\"生产环境为了保证apiserver的高可用一般会部署2+个节点\",{\"1\":{\"763\":1}}],[\"生产环境中为了保证数据中心的高可用和数据的一致性\",{\"1\":{\"748\":1}}],[\"生效配置文件\",{\"1\":{\"715\":1}}],[\"生成kube\",{\"0\":{\"792\":1}}],[\"生成bootstrap\",{\"0\":{\"785\":1}}],[\"生成随机token\",{\"1\":{\"746\":1}}],[\"生成token认证文件\",{\"0\":{\"746\":1},\"1\":{\"765\":1}}],[\"生成完成后会有以下文件\",{\"1\":{\"731\":1}}],[\"生成的\",{\"1\":{\"729\":1}}],[\"生成的表结构详情请查看\",{\"1\":{\"494\":1}}],[\"生成原始类型的对象\",{\"0\":{\"594\":1}}],[\"生成png格式流程图\",{\"0\":{\"499\":1}}],[\"生成activiti的相关的表结构\",{\"1\":{\"495\":1}}],[\"生成当时的快照发送到从节点\",{\"1\":{\"450\":1}}],[\"生成查询方法是jpa的一个特性\",{\"1\":{\"390\":1}}],[\"生成查询对象\",{\"1\":{\"352\":1}}],[\"生成一个引用指向常量池中的\",{\"1\":{\"155\":1}}],[\"生成新的字符数组\",{\"1\":{\"150\":1}}],[\"生成新的数组\",{\"1\":{\"150\":1}}],[\"生成\",{\"0\":{\"731\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1},\"1\":{\"135\":1,\"822\":1}}],[\"生活\",{\"1\":{\"3\":1}}],[\"泛型实例\",{\"1\":{\"135\":1}}],[\"泛型\",{\"1\":{\"135\":2}}],[\"转发功能代码也可以通过代码的方式来实现\",{\"1\":{\"657\":1}}],[\"转化\",{\"1\":{\"135\":1}}],[\"转\",{\"0\":{\"598\":1,\"599\":1},\"1\":{\"135\":1}}],[\"转载自\",{\"1\":{\"8\":1}}],[\"转载大佬的技术贴等\",{\"1\":{\"3\":1}}],[\"通知主进程rdb持久化完成\",{\"1\":{\"449\":1}}],[\"通知\",{\"1\":{\"431\":1}}],[\"通配符等querybuilder对象\",{\"1\":{\"350\":1}}],[\"通常这个文件也是动态配置\",{\"1\":{\"670\":1}}],[\"通常在nacos接入了spring\",{\"1\":{\"667\":1}}],[\"通常在查询使用\",{\"1\":{\"350\":1}}],[\"通常用于存储流程的bpmn文件和图片文件\",{\"1\":{\"538\":1}}],[\"通常为业务表的主键\",{\"1\":{\"513\":1}}],[\"通常情况下\",{\"1\":{\"475\":1}}],[\"通常情况下equals为true的时候hashcode也应该相等\",{\"1\":{\"187\":1}}],[\"通常传入\",{\"1\":{\"134\":1}}],[\"通过系统服务+docker方式部署\",{\"0\":{\"808\":1}}],[\"通过一个或者多个bgp\",{\"1\":{\"803\":1}}],[\"通过一个zip文件来部署操作\",{\"1\":{\"502\":1}}],[\"通过如上方式\",{\"1\":{\"799\":1}}],[\"通过如下的方法保证list的线程安全性\",{\"1\":{\"198\":1}}],[\"通过源flanneld封包\",{\"1\":{\"799\":1}}],[\"通过给\",{\"1\":{\"796\":1}}],[\"通过kubectl工具查看当前集群组件状态\",{\"1\":{\"779\":1}}],[\"通过本地非安全本地端口8080连接apiserver\",{\"1\":{\"771\":1,\"776\":1}}],[\"通过systemd管理etcd\",{\"0\":{\"753\":1}}],[\"通过yaml\",{\"1\":{\"670\":1}}],[\"通过全局过滤器可以实现对权限的统一校验\",{\"1\":{\"666\":1}}],[\"通过请求方式匹配\",{\"0\":{\"663\":1}}],[\"通过请求参数匹配\",{\"0\":{\"660\":1}}],[\"通过此属性可以实现每个接口通用的容错逻辑\",{\"1\":{\"649\":1}}],[\"通过以上步骤我们就拥有了一个最初步的项目\",{\"1\":{\"638\":1}}],[\"通过openfeign发送http请求非常的简单\",{\"1\":{\"634\":1}}],[\"通过阿里中间件来迅速搭建分布式应用系统\",{\"1\":{\"609\":1}}],[\"通过自定义注解来区分是用框架自带的解析器还是自定义的\",{\"1\":{\"605\":1}}],[\"通过反射调用对象中的方法\",{\"0\":{\"597\":1}}],[\"通过反射调用函数\",{\"0\":{\"596\":1}}],[\"通过反射获取字段\",{\"1\":{\"135\":1}}],[\"通过类型断言转换\",{\"1\":{\"594\":1}}],[\"通过类型信息创建实例\",{\"0\":{\"592\":1}}],[\"通过类的\",{\"1\":{\"122\":1}}],[\"通过字段名\",{\"1\":{\"591\":1}}],[\"通过字符串获取\",{\"1\":{\"122\":1}}],[\"通过这些方法可以完成对结构体任意值的访问\",{\"1\":{\"595\":1}}],[\"通过这些方法我们可以获取到反射类型的各种信息\",{\"1\":{\"587\":1}}],[\"通过这个覆盖网络\",{\"1\":{\"799\":1}}],[\"通过这个信息可以获取成员与结构体的关系\",{\"1\":{\"590\":1}}],[\"通过这个接口可以获取一个类的各种类型的描述符\",{\"1\":{\"133\":1}}],[\"通过managementservice\",{\"1\":{\"539\":1}}],[\"通过api设置的\",{\"1\":{\"534\":3}}],[\"通过activiti\",{\"1\":{\"491\":1}}],[\"通过xml定义业务流程\",{\"1\":{\"488\":1}}],[\"通过配置是否需要自动流转到下一个流程\",{\"1\":{\"484\":1}}],[\"通过配合使用这两种删除策略\",{\"1\":{\"462\":1}}],[\"通过改变链内的成员或者调动它们的次序\",{\"1\":{\"481\":1}}],[\"通过装饰角色为其添加一些职责\",{\"1\":{\"476\":1}}],[\"通过索引获取列表中的元素\",{\"1\":{\"442\":1}}],[\"通过地理附近查询\",{\"1\":{\"403\":1}}],[\"通过发出以下命令停止进程\",{\"1\":{\"376\":1}}],[\"通过高亮显示用户可以明显的发现查询匹配的位置\",{\"1\":{\"339\":1}}],[\"通过集群名在网络中发现同伴组成集群\",{\"1\":{\"276\":1}}],[\"通过服务调用传递到服务提供方\",{\"1\":{\"262\":1}}],[\"通过查看日志发现被调用服务并没有启动全局事务\",{\"1\":{\"262\":1}}],[\"通过某种方式把对象数据存储到磁盘文件中或者传递给给网络上传输\",{\"1\":{\"254\":1}}],[\"通过调用\",{\"1\":{\"212\":1}}],[\"通过比较字符串长度\",{\"1\":{\"190\":1}}],[\"通过class实例获取到beaninfo实例\",{\"1\":{\"133\":1}}],[\"通过对象的\",{\"1\":{\"122\":1}}],[\"通过对象序列化实现深拷贝\",{\"1\":{\"66\":1}}],[\"通过\",{\"0\":{\"661\":1,\"662\":1},\"1\":{\"116\":1,\"117\":1,\"122\":1,\"128\":1,\"155\":1,\"186\":1,\"190\":1,\"219\":2,\"254\":3,\"391\":1,\"431\":1,\"492\":1,\"621\":2,\"627\":1,\"643\":1,\"657\":2}}],[\"通过get\",{\"1\":{\"116\":1}}],[\"获\",{\"1\":{\"351\":2}}],[\"获得用于写入属性值\",{\"1\":{\"133\":1}}],[\"获得用于读取属性值\",{\"1\":{\"133\":1}}],[\"获得属性的class对象\",{\"1\":{\"133\":1}}],[\"获取运行在集群中的应用的概览信息\",{\"1\":{\"817\":1}}],[\"获取node\",{\"1\":{\"806\":1}}],[\"获取集群的信息\",{\"1\":{\"723\":1}}],[\"获取集合的成员数\",{\"1\":{\"443\":1}}],[\"获取当前存活的路由描述map\",{\"1\":{\"671\":1}}],[\"获取当前流程的流程图\",{\"0\":{\"568\":1}}],[\"获取新添加的definitions\",{\"1\":{\"671\":1}}],[\"获取现存所有路由map\",{\"1\":{\"671\":1}}],[\"获取第一个返回值\",{\"1\":{\"596\":1}}],[\"获取legcount字段的值\",{\"1\":{\"595\":1}}],[\"获取dog实例地址的反射值对象\",{\"1\":{\"595\":1}}],[\"获取64位的值\",{\"1\":{\"594\":1}}],[\"获取interface\",{\"1\":{\"594\":1}}],[\"获取变量a的反射值对象\",{\"1\":{\"594\":1}}],[\"获取每个成员的结构体字段类型\",{\"1\":{\"591\":1}}],[\"获取成员反射信息\",{\"0\":{\"591\":1}}],[\"获取与成员相关的方法如下\",{\"1\":{\"590\":1}}],[\"获取zero常量的反射类型对象\",{\"1\":{\"589\":1}}],[\"获取结构体实例的反射类型对象\",{\"1\":{\"589\":1,\"591\":1}}],[\"获取结果\",{\"1\":{\"353\":1}}],[\"获取类型名以及\",{\"0\":{\"589\":1}}],[\"获取历史批注信息\",{\"0\":{\"575\":1}}],[\"获取历史流程实例\",{\"0\":{\"574\":1}}],[\"获取历史审核信息\",{\"1\":{\"506\":1}}],[\"获取businesskey并关联对应的业务信息\",{\"1\":{\"513\":1}}],[\"获取bpmn的输入流\",{\"1\":{\"511\":1}}],[\"获取流程实例的历史任务\",{\"0\":{\"576\":1}}],[\"获取流程实例的相关信息\",{\"1\":{\"513\":1,\"523\":1}}],[\"获取流程实例\",{\"0\":{\"571\":1}}],[\"获取流程信息\",{\"1\":{\"569\":1}}],[\"获取流程中的所有节点信息\",{\"0\":{\"569\":1}}],[\"获取流程\",{\"0\":{\"567\":1}}],[\"获取流程定义对象\",{\"1\":{\"514\":1}}],[\"获取流程定义集合\",{\"1\":{\"509\":1,\"511\":1}}],[\"获取png的输入流\",{\"1\":{\"511\":1}}],[\"获取processengine对象\",{\"1\":{\"502\":1}}],[\"获取部署id\",{\"1\":{\"511\":1}}],[\"获取最近一次stash的修改内容\",{\"1\":{\"710\":1}}],[\"获取最新那个\",{\"1\":{\"511\":1}}],[\"获取最终价格\",{\"1\":{\"477\":1}}],[\"获取仓库服务\",{\"1\":{\"509\":1,\"510\":1,\"511\":1}}],[\"获取审核批注信息\",{\"1\":{\"506\":1}}],[\"获取historyservice\",{\"1\":{\"506\":1}}],[\"获取hash对象的所有值\",{\"1\":{\"441\":1}}],[\"获取hash对象的所有键\",{\"1\":{\"441\":1}}],[\"获取hash对象键的数量\",{\"1\":{\"441\":1}}],[\"获取任务集合\",{\"1\":{\"505\":1,\"513\":1,\"527\":1}}],[\"获取taskservice\",{\"1\":{\"505\":1,\"506\":1,\"527\":1,\"528\":1}}],[\"获取repositoryservice\",{\"1\":{\"514\":2}}],[\"获取repositoryservice进行部署操作\",{\"1\":{\"502\":1}}],[\"获取runtimeservice对象\",{\"1\":{\"503\":2,\"513\":1,\"523\":1}}],[\"获取到每个具体的实例对象\",{\"1\":{\"484\":1}}],[\"获取到属性名和属性类型等相关状态信息\",{\"1\":{\"132\":1}}],[\"获取列表在给定范围上的所有值\",{\"1\":{\"442\":1}}],[\"获取列表长度\",{\"1\":{\"442\":1}}],[\"获取散列中包含的所有键值对\",{\"1\":{\"441\":1}}],[\"获取存储在给定键中的值\",{\"1\":{\"440\":1}}],[\"获取子聚合结果\",{\"1\":{\"356\":1}}],[\"获取桶中的文档数量\",{\"1\":{\"355\":1,\"356\":1}}],[\"获取桶中的key\",{\"1\":{\"355\":1,\"356\":1}}],[\"获取桶\",{\"1\":{\"355\":1,\"356\":1}}],[\"获取该目录下的所有文件\",{\"1\":{\"236\":1}}],[\"获取该目录下的所有文件名\",{\"1\":{\"236\":1}}],[\"获取绝对路径的\",{\"1\":{\"236\":1}}],[\"获取绝对路径\",{\"1\":{\"236\":1}}],[\"获取上层路径的\",{\"1\":{\"236\":1}}],[\"获取上层路径名称\",{\"1\":{\"236\":1}}],[\"获取文件名\",{\"1\":{\"236\":1}}],[\"获取但不移除此列表的头\",{\"1\":{\"180\":3}}],[\"获取可读方法\",{\"1\":{\"134\":1}}],[\"获取属性\",{\"1\":{\"134\":1}}],[\"获取属性对应的读写方法操作属性的值等操作方式\",{\"1\":{\"132\":1}}],[\"获取对象的哈希值\",{\"1\":{\"133\":1}}],[\"获取javabean的所有的\",{\"1\":{\"133\":3}}],[\"获取javabean描述符\",{\"1\":{\"133\":1}}],[\"获取公共的字段\",{\"1\":{\"129\":1}}],[\"获取公共的方法\",{\"1\":{\"128\":1}}],[\"获取字段值\",{\"1\":{\"129\":1}}],[\"获取字段名称\",{\"1\":{\"129\":1,\"598\":1}}],[\"获取字段的\",{\"1\":{\"129\":1}}],[\"获取字段\",{\"0\":{\"129\":1},\"1\":{\"348\":1,\"598\":1}}],[\"获取字节码对象\",{\"1\":{\"127\":1,\"128\":1,\"129\":1}}],[\"获取字节码对象的三种方式\",{\"0\":{\"122\":1}}],[\"获取指定散列键的值\",{\"1\":{\"441\":1}}],[\"获取指定字段值\",{\"1\":{\"129\":1}}],[\"获取指定方法\",{\"1\":{\"128\":1}}],[\"获取指定的字段\",{\"1\":{\"129\":1}}],[\"获取指定的方法\",{\"1\":{\"128\":1}}],[\"获取指定的公共字段\",{\"1\":{\"129\":1}}],[\"获取指定的公共方法\",{\"1\":{\"128\":1}}],[\"获取指定的公共构造器\",{\"1\":{\"127\":3}}],[\"获取指定的构造器\",{\"1\":{\"127\":2}}],[\"获取方法如下👇\",{\"1\":{\"597\":1}}],[\"获取方法查看上面👆提得到的\",{\"1\":{\"569\":1}}],[\"获取方法的\",{\"1\":{\"128\":1}}],[\"获取方法\",{\"0\":{\"128\":1}}],[\"获取所有节点信息\",{\"1\":{\"569\":1}}],[\"获取所有流程部署信息\",{\"1\":{\"565\":1}}],[\"获取所有字段\",{\"1\":{\"129\":1}}],[\"获取所有字段包括私有的\",{\"1\":{\"129\":1}}],[\"获取所有方法\",{\"1\":{\"128\":1}}],[\"获取所有方法包括私有的\",{\"1\":{\"128\":1}}],[\"获取所有公共方法\",{\"1\":{\"128\":1}}],[\"获取所有公共的构造方法\",{\"1\":{\"127\":1}}],[\"获取所有构造器\",{\"1\":{\"127\":2}}],[\"获取所有构造器包括私有的\",{\"1\":{\"127\":1}}],[\"获取构造器的\",{\"1\":{\"127\":1}}],[\"获取构造器\",{\"0\":{\"127\":1}}],[\"获取\",{\"0\":{\"581\":1,\"618\":1},\"1\":{\"117\":1,\"119\":1,\"122\":1,\"134\":1,\"135\":4,\"438\":3,\"539\":1,\"598\":1}}],[\"获取时间戳\",{\"1\":{\"114\":1}}],[\"获取数组长度使用\",{\"1\":{\"46\":1}}],[\"普通函数\",{\"1\":{\"596\":1}}],[\"普通\",{\"0\":{\"495\":1}}],[\"普通语句块\",{\"1\":{\"77\":2}}],[\"普遍使用\",{\"1\":{\"129\":1}}],[\"李四在审批之前需要看到申请人申请的时间和申请的理由\",{\"1\":{\"512\":1}}],[\"李四\",{\"1\":{\"129\":1,\"527\":1}}],[\"参与者\",{\"1\":{\"541\":1,\"555\":1}}],[\"参与集群的索引和搜索功能\",{\"1\":{\"276\":1}}],[\"参考\",{\"1\":{\"800\":1}}],[\"参考格式\",{\"1\":{\"752\":1}}],[\"参考文章\",{\"0\":{\"436\":1,\"445\":1}}],[\"参考文档如下👇\",{\"1\":{\"616\":1}}],[\"参考文档如下\",{\"1\":{\"608\":1}}],[\"参考文档\",{\"0\":{\"457\":1},\"1\":{\"404\":1,\"608\":1,\"667\":1}}],[\"参考地址\",{\"1\":{\"327\":1}}],[\"参考资料\",{\"0\":{\"85\":1,\"110\":1,\"137\":1,\"266\":1,\"278\":1,\"286\":1,\"404\":1,\"465\":1,\"473\":1,\"479\":1},\"1\":{\"8\":1,\"468\":1}}],[\"参数指定集群\",{\"1\":{\"822\":1}}],[\"参数是要请求服务的服务名称\",{\"1\":{\"639\":1}}],[\"参数是毫秒\",{\"1\":{\"222\":1}}],[\"参数就是你要调用的服务名称\",{\"1\":{\"639\":1}}],[\"参数自动封装到\",{\"1\":{\"603\":1}}],[\"参数都从流程定义中获取\",{\"1\":{\"567\":1}}],[\"参数说明\",{\"1\":{\"567\":1,\"568\":1,\"576\":1,\"580\":1,\"584\":1,\"656\":1,\"657\":1,\"658\":1}}],[\"参数3\",{\"1\":{\"514\":2}}],[\"参数2\",{\"1\":{\"514\":2}}],[\"参数1\",{\"1\":{\"514\":2}}],[\"参数之外\",{\"1\":{\"303\":1}}],[\"参数\",{\"1\":{\"302\":1,\"348\":1,\"352\":1,\"353\":1,\"411\":1}}],[\"参数传入\",{\"1\":{\"128\":1}}],[\"参数列表的类型\",{\"1\":{\"127\":2,\"128\":2}}],[\"还能管理集群资源\",{\"1\":{\"817\":1}}],[\"还能自定义添加\",{\"1\":{\"539\":1}}],[\"还支持查看限流降级\",{\"1\":{\"610\":1}}],[\"还包含计算交集\",{\"1\":{\"438\":1}}],[\"还有通过kubernetes运行的pod\",{\"1\":{\"748\":1}}],[\"还有\",{\"1\":{\"478\":1}}],[\"还有一些形状类\",{\"1\":{\"398\":1}}],[\"还有很多操作头尾的方法\",{\"1\":{\"179\":1}}],[\"还会保存其他全部流程相关的细节数据\",{\"1\":{\"496\":1}}],[\"还会保存全部的流程任务及其属性\",{\"1\":{\"496\":1}}],[\"还会有\",{\"1\":{\"341\":1}}],[\"还会在常量池中生成\",{\"1\":{\"154\":1}}],[\"还原权限\",{\"1\":{\"126\":1}}],[\"还提供了用来对日期做相加减\",{\"1\":{\"116\":1}}],[\"还提供\",{\"1\":{\"40\":1}}],[\"打印总页数\",{\"1\":{\"353\":1}}],[\"打印总条数\",{\"1\":{\"353\":1}}],[\"打印结果\",{\"1\":{\"155\":1}}],[\"打印结果是\",{\"1\":{\"155\":1}}],[\"打包\",{\"1\":{\"126\":1}}],[\"打开终端输入\",{\"1\":{\"831\":1}}],[\"打开注释替换\",{\"1\":{\"806\":1}}],[\"打开链接你会发现里面有很多包\",{\"1\":{\"758\":1}}],[\"打开之后会看到如下图\",{\"1\":{\"366\":1}}],[\"打开\",{\"1\":{\"23\":1}}],[\"打开自动编译\",{\"0\":{\"23\":1}}],[\"应该出现在匹配的文档中\",{\"1\":{\"308\":1}}],[\"应该达到\",{\"1\":{\"308\":1}}],[\"应该先了解\",{\"1\":{\"118\":1}}],[\"应用到所有的路由上\",{\"1\":{\"664\":1}}],[\"应用到单个路由或者一个分组的路由上\",{\"1\":{\"664\":1}}],[\"应用接入阿里分布式应用解决方案\",{\"1\":{\"609\":1}}],[\"应用创建\",{\"1\":{\"420\":1}}],[\"应用提供高性能可扩展的数据存储解决方案\",{\"1\":{\"360\":1}}],[\"应用场景\",{\"1\":{\"271\":1}}],[\"应用程序中的类的实例\",{\"1\":{\"124\":1}}],[\"私有\",{\"1\":{\"128\":1}}],[\"私有方法\",{\"1\":{\"123\":1}}],[\"私有构造器\",{\"1\":{\"123\":1}}],[\"私有的属性以及方法\",{\"1\":{\"586\":1}}],[\"私有的\",{\"1\":{\"91\":1}}],[\"函数的返回值通过\",{\"1\":{\"596\":1}}],[\"函数可以返回\",{\"1\":{\"593\":1}}],[\"函数可以获取将任意值的类型对象\",{\"1\":{\"587\":1}}],[\"函数\",{\"1\":{\"122\":1,\"585\":1}}],[\"属性匹配\",{\"0\":{\"662\":1}}],[\"属性的参数\",{\"1\":{\"660\":1}}],[\"属性的api\",{\"1\":{\"131\":1}}],[\"属性值可以是正则表达式\",{\"1\":{\"660\":1}}],[\"属性字段\",{\"1\":{\"124\":1}}],[\"属性\",{\"1\":{\"122\":1,\"496\":1,\"627\":1}}],[\"属于\",{\"1\":{\"357\":1}}],[\"属于类\",{\"1\":{\"95\":1}}],[\"属于对象\",{\"1\":{\"95\":1}}],[\"全部消息\",{\"1\":{\"553\":1}}],[\"全量复制等场景\",{\"1\":{\"452\":1}}],[\"全高清ips防眩光护眼屏\",{\"1\":{\"351\":1}}],[\"全网通4g\",{\"1\":{\"351\":2,\"352\":1}}],[\"全局过滤器作用于所有路由\",{\"1\":{\"666\":1}}],[\"全局的\",{\"0\":{\"422\":1}}],[\"全局设置\",{\"1\":{\"342\":1}}],[\"全局事务\",{\"1\":{\"261\":1}}],[\"全局事务不回滚的问题\",{\"1\":{\"259\":1}}],[\"全局事务不生效问题\",{\"0\":{\"259\":1}}],[\"全文搜索配置\",{\"1\":{\"330\":1}}],[\"全文搜索及个性化推荐\",{\"1\":{\"271\":1}}],[\"全文检索字段用\",{\"1\":{\"311\":1}}],[\"全文检索\",{\"1\":{\"271\":1,\"305\":2}}],[\"全限定名\",{\"1\":{\"122\":2}}],[\"全栈知识体系\",{\"1\":{\"17\":2,\"110\":1,\"428\":1,\"479\":1}}],[\"称为链表\",{\"1\":{\"168\":1}}],[\"称为数组\",{\"1\":{\"167\":1}}],[\"称为\",{\"1\":{\"122\":1}}],[\"称之为最终的意思\",{\"1\":{\"78\":1}}],[\"称之为\",{\"1\":{\"50\":1}}],[\"称之为栈帧的入栈到出栈过程\",{\"1\":{\"43\":1}}],[\"虚拟机会将该线程放入\",{\"1\":{\"218\":1}}],[\"虚拟机自动构造的\",{\"1\":{\"122\":1}}],[\"虚拟机栈可以动态扩展\",{\"1\":{\"43\":1}}],[\"虚拟机栈\",{\"1\":{\"43\":1}}],[\"再运行项目就可以了\",{\"1\":{\"831\":1}}],[\"再转到用户态的flanneld程序\",{\"1\":{\"799\":1}}],[\"再修改一下配置就可以了\",{\"1\":{\"755\":1}}],[\"再次更新包列表\",{\"1\":{\"680\":1}}],[\"再次去除\",{\"1\":{\"411\":1}}],[\"再将请求交给一个过滤器链\",{\"1\":{\"654\":1}}],[\"再将新的容量\",{\"1\":{\"151\":1}}],[\"再重复上述检查操作\",{\"1\":{\"462\":1}}],[\"再者\",{\"1\":{\"427\":1}}],[\"再通过\",{\"1\":{\"186\":1}}],[\"再通过抽取\",{\"1\":{\"121\":1}}],[\"再看\",{\"1\":{\"155\":1}}],[\"再\",{\"1\":{\"151\":1}}],[\"再加\",{\"1\":{\"151\":1}}],[\"再点击renew\",{\"1\":{\"22\":1}}],[\"后来才发现是macos\",{\"1\":{\"830\":1}}],[\"后缀名为\",{\"1\":{\"744\":1}}],[\"后缀的字节码文件\",{\"1\":{\"121\":1}}],[\"后续在签名证书时使用某个\",{\"1\":{\"729\":1}}],[\"后续的所有操作都是使用root账户\",{\"1\":{\"714\":1}}],[\"后端一个项目\",{\"1\":{\"703\":1}}],[\"后台运行容器\",{\"1\":{\"689\":1}}],[\"后台界面\",{\"0\":{\"620\":1}}],[\"后置操作\",{\"1\":{\"665\":1}}],[\"后写日志\",{\"1\":{\"453\":1}}],[\"后边填写你的\",{\"1\":{\"369\":1}}],[\"后\",{\"1\":{\"358\":1}}],[\"后进先出\",{\"1\":{\"170\":1}}],[\"后发现新计算的容量不合法\",{\"1\":{\"152\":1}}],[\"后面所有的证书都放在该目录下\",{\"1\":{\"727\":1}}],[\"后面只用到了它的命令行工具\",{\"1\":{\"726\":1}}],[\"后面三个参数都表示是字体\",{\"1\":{\"568\":1}}],[\"后面可以无缝对接\",{\"1\":{\"289\":1}}],[\"后面也是去了解了一下\",{\"1\":{\"262\":1}}],[\"后面想到跨服务调用的事务传播是通过\",{\"1\":{\"262\":1}}],[\"后面添加\",{\"1\":{\"186\":1}}],[\"后面\",{\"1\":{\"95\":1,\"155\":1}}],[\"后面的是该对象的\",{\"1\":{\"52\":1}}],[\"抽出来写成一个\",{\"1\":{\"121\":1}}],[\"抽象处理者\",{\"1\":{\"483\":1}}],[\"抽象装饰\",{\"1\":{\"476\":1}}],[\"抽象装饰者\",{\"0\":{\"257\":1}}],[\"抽象装饰者角色\",{\"1\":{\"256\":1}}],[\"抽象接口\",{\"1\":{\"476\":1}}],[\"抽象构件\",{\"1\":{\"476\":1}}],[\"抽象构件角色\",{\"1\":{\"256\":1}}],[\"抽象的构建角色\",{\"1\":{\"256\":1}}],[\"抽象与接口的区别\",{\"0\":{\"96\":1}}],[\"抽象方法\",{\"1\":{\"95\":1}}],[\"抽象方法必须定义在抽象类中\",{\"1\":{\"92\":1}}],[\"抽象类本质就是从\",{\"1\":{\"99\":1}}],[\"抽象类可以提供成员方法的实现细节\",{\"1\":{\"98\":1}}],[\"抽象类继承方式\",{\"1\":{\"92\":1}}],[\"抽象类被创造出来就是为了继承\",{\"1\":{\"92\":1}}],[\"抽象类中的成员变量可以是各种类型的\",{\"1\":{\"98\":1}}],[\"抽象类中\",{\"1\":{\"92\":1}}],[\"抽象类不能创建实例\",{\"1\":{\"92\":1}}],[\"抽象类就是使用\",{\"1\":{\"92\":1}}],[\"小数类型的值放这\",{\"1\":{\"558\":1}}],[\"小米\",{\"1\":{\"351\":3,\"352\":1,\"355\":1,\"356\":1,\"641\":2}}],[\"小米9\",{\"1\":{\"351\":1}}],[\"小写处理\",{\"1\":{\"316\":3}}],[\"小于等于\",{\"1\":{\"309\":1,\"310\":1}}],[\"小于0\",{\"1\":{\"152\":1}}],[\"小于\",{\"1\":{\"151\":2,\"309\":1,\"387\":1}}],[\"小于doublecap双倍容量\",{\"1\":{\"11\":1}}],[\"小时制\",{\"1\":{\"117\":2}}],[\"you\",{\"0\":{\"677\":1},\"1\":{\"635\":1,\"699\":3}}],[\"your\",{\"1\":{\"302\":1,\"699\":1}}],[\"yywesd\",{\"1\":{\"526\":1}}],[\"yyyy年mm月dd日\",{\"1\":{\"115\":1}}],[\"yyyy\",{\"1\":{\"115\":4}}],[\"ybyn\",{\"1\":{\"457\":1}}],[\"ybkz08\",{\"1\":{\"456\":1}}],[\"yes|no\",{\"1\":{\"451\":1}}],[\"yes\",{\"1\":{\"451\":3,\"455\":2}}],[\"year\",{\"1\":{\"117\":2}}],[\"y\",{\"1\":{\"374\":2,\"399\":2,\"822\":1,\"825\":1}}],[\"yml下载到本地\",{\"1\":{\"800\":1}}],[\"yml中使用\",{\"1\":{\"800\":1}}],[\"yml一直不生效\",{\"1\":{\"673\":1}}],[\"yml\",{\"1\":{\"284\":2,\"625\":1,\"627\":1,\"668\":1,\"674\":1,\"783\":1,\"784\":1,\"790\":1,\"791\":1,\"800\":3}}],[\"yaml文件\",{\"1\":{\"715\":1}}],[\"yaml\",{\"0\":{\"282\":1,\"807\":1,\"818\":1},\"1\":{\"631\":3,\"632\":1,\"668\":1,\"670\":5,\"805\":3,\"807\":1,\"813\":1,\"814\":2,\"818\":3,\"822\":6}}],[\"yield\",{\"0\":{\"223\":1},\"1\":{\"223\":2}}],[\"快照不用很频繁地执行\",{\"1\":{\"456\":1}}],[\"快速操作的容器\",{\"1\":{\"689\":1}}],[\"快速开始\",{\"1\":{\"616\":1}}],[\"快速上手\",{\"1\":{\"265\":1}}],[\"快速创建对象\",{\"1\":{\"117\":1}}],[\"快捷键选择\",{\"1\":{\"23\":1}}],[\"象\",{\"1\":{\"116\":1}}],[\"重要的组件\",{\"0\":{\"611\":1}}],[\"重启服务\",{\"1\":{\"657\":1}}],[\"重启时再重新执行aof文件中命令达到恢复数据的目的\",{\"1\":{\"453\":1}}],[\"重启\",{\"0\":{\"827\":1},\"1\":{\"375\":2,\"689\":1,\"699\":1,\"817\":1,\"827\":1}}],[\"重启es\",{\"0\":{\"325\":1}}],[\"重试导入密钥\",{\"1\":{\"371\":1}}],[\"重命名\",{\"1\":{\"236\":1}}],[\"重新加载本地包数据库\",{\"0\":{\"373\":1}}],[\"重新运行\",{\"1\":{\"325\":1}}],[\"重新计算分配规则\",{\"1\":{\"291\":1}}],[\"重新计算规则为\",{\"1\":{\"152\":1}}],[\"重新到就绪队列中排队等待\",{\"1\":{\"215\":1}}],[\"重新设置日期时间功能\",{\"1\":{\"116\":1}}],[\"重写触发配置\",{\"1\":{\"455\":1}}],[\"重写后的\",{\"1\":{\"62\":1}}],[\"重写\",{\"0\":{\"65\":1},\"1\":{\"57\":1,\"58\":1,\"60\":1,\"218\":1}}],[\"段的值\",{\"1\":{\"116\":1}}],[\"等自动化方式来部署集群\",{\"1\":{\"713\":1}}],[\"等系统可以下载\",{\"1\":{\"690\":1}}],[\"等不同的请求方式来进行路由\",{\"1\":{\"663\":1}}],[\"等来进行断言\",{\"1\":{\"657\":1}}],[\"等技术开发的网关\",{\"1\":{\"653\":1}}],[\"等\",{\"1\":{\"478\":1,\"590\":1}}],[\"等到第二次做全量快照时\",{\"1\":{\"456\":1}}],[\"等待锁\",{\"1\":{\"222\":2}}],[\"等待拿锁\",{\"1\":{\"222\":2}}],[\"等待下一次\",{\"1\":{\"214\":1}}],[\"等待\",{\"1\":{\"213\":1}}],[\"等集合的工具类\",{\"1\":{\"198\":1}}],[\"等于\",{\"1\":{\"189\":1}}],[\"等等\",{\"1\":{\"160\":1,\"500\":1,\"817\":1}}],[\"等日历字段\",{\"1\":{\"116\":1}}],[\"等价的两个对象的\",{\"1\":{\"59\":1}}],[\"注册服务默认取\",{\"1\":{\"627\":1}}],[\"注册\",{\"1\":{\"612\":1}}],[\"注册中心相结合的路由配置方式\",{\"0\":{\"658\":1},\"1\":{\"667\":1}}],[\"注册中心\",{\"1\":{\"612\":1,\"613\":1,\"638\":1}}],[\"注册短信验证码key\",{\"1\":{\"161\":1}}],[\"注入模板\",{\"1\":{\"337\":1}}],[\"注解修饰的\",{\"1\":{\"645\":1}}],[\"注解标注该类是\",{\"1\":{\"639\":1}}],[\"注解式开发\",{\"1\":{\"634\":1}}],[\"注解基于json查询\",{\"1\":{\"384\":1}}],[\"注解\",{\"0\":{\"333\":1,\"334\":1},\"1\":{\"604\":1,\"610\":1,\"648\":1}}],[\"注\",{\"1\":{\"115\":1,\"152\":1,\"179\":1,\"726\":1,\"733\":1,\"758\":1,\"788\":1,\"800\":1,\"813\":1}}],[\"注意替换ip\",{\"1\":{\"792\":1}}],[\"注意替换token\",{\"1\":{\"785\":1}}],[\"注意替换token内容\",{\"1\":{\"746\":1}}],[\"注意修改\",{\"1\":{\"791\":1,\"809\":1}}],[\"注意如果没有初始化密码启动容器会失败\",{\"1\":{\"692\":1}}],[\"注意扫描路径\",{\"1\":{\"637\":1}}],[\"注意事项如下\",{\"1\":{\"496\":1}}],[\"注意该配置文件名称不能修改\",{\"1\":{\"495\":1}}],[\"注意\",{\"1\":{\"27\":1,\"125\":1,\"134\":1,\"173\":1,\"185\":1,\"188\":1,\"204\":1,\"239\":1,\"254\":1,\"283\":1,\"293\":1,\"317\":2,\"332\":1,\"335\":1,\"341\":1,\"366\":1,\"484\":1,\"520\":1,\"524\":1,\"527\":2,\"625\":2,\"627\":1,\"631\":1,\"639\":1,\"658\":1,\"698\":1,\"706\":1,\"753\":1}}],[\"解压\",{\"1\":{\"825\":1}}],[\"解压二进制包并移动到默认工作目录\",{\"1\":{\"797\":1}}],[\"解压二进制包\",{\"0\":{\"759\":1}}],[\"解压缩\",{\"1\":{\"751\":1,\"759\":1}}],[\"解压缩二进制包\",{\"0\":{\"682\":1}}],[\"解释\",{\"1\":{\"362\":1}}],[\"解码\",{\"1\":{\"239\":1}}],[\"解决方案\",{\"0\":{\"562\":1,\"675\":1,\"831\":1}}],[\"解决方法\",{\"1\":{\"239\":1}}],[\"解决多线程并发访问集合时的线程安全问题\",{\"1\":{\"198\":1}}],[\"解决变量同名引起的二义性\",{\"1\":{\"68\":1}}],[\"解析yaml文件获取路由定义\",{\"1\":{\"670\":1}}],[\"解析器解析规则\",{\"1\":{\"604\":1}}],[\"解析成当前登录用户对象\",{\"1\":{\"604\":2}}],[\"解析成\",{\"1\":{\"115\":1}}],[\"解析\",{\"1\":{\"115\":2,\"355\":1,\"356\":1}}],[\"测试\",{\"1\":{\"495\":1}}],[\"测试数据\",{\"1\":{\"295\":1}}],[\"测试此日期是否在指定日期之前\",{\"1\":{\"114\":1}}],[\"测试此日期是否在指定日期之后\",{\"1\":{\"114\":1}}],[\"测试类\",{\"1\":{\"103\":1,\"104\":1}}],[\"距离历元\",{\"1\":{\"112\":1}}],[\"概念梳理\",{\"0\":{\"720\":1}}],[\"概念\",{\"0\":{\"112\":1,\"138\":1},\"1\":{\"362\":2,\"427\":1}}],[\"时会发生宕机\",{\"1\":{\"595\":6}}],[\"时\",{\"1\":{\"592\":1,\"656\":1,\"657\":1,\"752\":1}}],[\"时所遇到的一些异常或者坑\",{\"1\":{\"559\":1}}],[\"时刻的修改\",{\"1\":{\"456\":1}}],[\"时也会触发bgsave操作\",{\"1\":{\"450\":1}}],[\"时分秒\",{\"1\":{\"117\":1}}],[\"时分秒等\",{\"1\":{\"117\":2}}],[\"时间同步\",{\"1\":{\"715\":1}}],[\"时间格式来存储当前日期或时间\",{\"1\":{\"364\":1}}],[\"时间格式化\",{\"1\":{\"334\":1}}],[\"时间片\",{\"1\":{\"222\":1}}],[\"时间\",{\"1\":{\"115\":1,\"311\":1}}],[\"时间戳\",{\"0\":{\"112\":1},\"1\":{\"364\":1}}],[\"时需要\",{\"1\":{\"89\":1}}],[\"同样也会增加集群扩展复杂度\",{\"1\":{\"745\":1}}],[\"同样\",{\"1\":{\"720\":1}}],[\"同样的多个集合组成数据库\",{\"1\":{\"361\":1}}],[\"同上\",{\"1\":{\"290\":1}}],[\"同步\",{\"1\":{\"645\":1}}],[\"同步策略\",{\"1\":{\"455\":1}}],[\"同步写回\",{\"1\":{\"454\":1}}],[\"同步静态方法\",{\"0\":{\"232\":1}}],[\"同步类\",{\"0\":{\"231\":1}}],[\"同步方法\",{\"0\":{\"230\":1}}],[\"同步代码块\",{\"0\":{\"229\":1}}],[\"同步机制由\",{\"1\":{\"208\":1}}],[\"同时展示了\",{\"1\":{\"817\":1}}],[\"同时监控etcd中每个pod的实际地址\",{\"1\":{\"799\":1}}],[\"同时开启了集群的tls安全认证\",{\"1\":{\"713\":1}}],[\"同时备份本地所做的修改\",{\"1\":{\"710\":1}}],[\"同时提供分布式的任务执行模型\",{\"1\":{\"610\":1}}],[\"同时该流程定义下的所有流程实例将全部挂起暂停执行\",{\"1\":{\"514\":1}}],[\"同时也减少了系统开发维护成本\",{\"1\":{\"486\":1}}],[\"同时也是\",{\"1\":{\"173\":2}}],[\"同时发送信号给主进程\",{\"1\":{\"449\":1}}],[\"同时数据可以一步落地到其他的数据源\",{\"1\":{\"440\":1}}],[\"同时写入redis\",{\"1\":{\"433\":1}}],[\"同时又不改变其结构\",{\"1\":{\"256\":1}}],[\"同时会杀死所有守护线程\",{\"1\":{\"224\":1}}],[\"同时进程也保存了程序的运行状态\",{\"1\":{\"202\":1}}],[\"同\",{\"1\":{\"178\":1}}],[\"同一个引用数据类型变量\",{\"1\":{\"109\":1}}],[\"同包其他类\",{\"1\":{\"91\":1}}],[\"同包子类\",{\"1\":{\"91\":1}}],[\"错误\",{\"1\":{\"107\":1}}],[\"向\",{\"1\":{\"489\":1,\"782\":1}}],[\"向集合添加一个或多个成员\",{\"1\":{\"443\":1}}],[\"向量\",{\"1\":{\"175\":1}}],[\"向一个栈中插入新元素又称作\",{\"1\":{\"170\":1}}],[\"向下转型\",{\"1\":{\"107\":1}}],[\"向上转型\",{\"1\":{\"107\":1}}],[\"执行部署\",{\"0\":{\"807\":1}}],[\"执行添加路由\",{\"1\":{\"671\":1}}],[\"执行feignclient的名称\",{\"1\":{\"649\":1}}],[\"执行耗时\",{\"1\":{\"542\":1}}],[\"执行实例id\",{\"1\":{\"542\":1,\"550\":1,\"558\":1}}],[\"执行task\",{\"0\":{\"524\":1}}],[\"执行流程时\",{\"1\":{\"500\":1}}],[\"执行检查\",{\"1\":{\"495\":1}}],[\"执行下一个自动执行器\",{\"1\":{\"484\":1}}],[\"执行\",{\"1\":{\"421\":1,\"450\":1,\"822\":1}}],[\"执行命令后你会发现mysql\",{\"1\":{\"419\":1}}],[\"执行搜索\",{\"1\":{\"353\":1}}],[\"执行如下请求之后会得到返回内容\",{\"1\":{\"341\":1}}],[\"执行结果如下👇\",{\"1\":{\"319\":1,\"320\":1,\"321\":1}}],[\"执行返回结果\",{\"1\":{\"291\":1}}],[\"执行相同的方法\",{\"1\":{\"109\":1}}],[\"执行子类的方法\",{\"1\":{\"105\":1}}],[\"执行父类的方法\",{\"1\":{\"105\":1}}],[\"找出已经设置过期时间的数据集\",{\"1\":{\"464\":4}}],[\"找不到\",{\"1\":{\"105\":1}}],[\"找到字段类型信息\",{\"1\":{\"591\":1}}],[\"找到了多少个匹配的文档\",{\"1\":{\"299\":1}}],[\"找到的最相关文档的分数\",{\"1\":{\"299\":1}}],[\"找到\",{\"1\":{\"105\":2,\"277\":1,\"423\":1}}],[\"观察下图👇\",{\"1\":{\"105\":1}}],[\"中内置的过滤器\",{\"1\":{\"665\":1}}],[\"中内部微服务调用默认是\",{\"1\":{\"645\":1}}],[\"中属性名称和一个正则表达式\",{\"1\":{\"662\":1}}],[\"中删除了\",{\"1\":{\"658\":1,\"676\":1}}],[\"中找到与请求相匹配的路由\",{\"1\":{\"654\":1}}],[\"中找到每个版本的介绍\",{\"1\":{\"617\":1}}],[\"中提到spring\",{\"1\":{\"643\":1}}],[\"中提出了一个混合使用\",{\"1\":{\"456\":1}}],[\"中修改了配置\",{\"1\":{\"633\":1}}],[\"中配置\",{\"1\":{\"627\":1,\"631\":1}}],[\"中取出参数的过程\",{\"1\":{\"604\":1}}],[\"中把参数提取出来直接给我们的呢\",{\"1\":{\"603\":1}}],[\"中值的类型为函数时\",{\"1\":{\"596\":1}}],[\"中获取原值\",{\"1\":{\"594\":1}}],[\"中25张表的含义\",{\"1\":{\"533\":1}}],[\"中常用的\",{\"1\":{\"500\":1}}],[\"中集合是通过哈希表实现的\",{\"1\":{\"443\":1}}],[\"中集成了\",{\"1\":{\"349\":1}}],[\"中集成\",{\"1\":{\"329\":1,\"379\":1}}],[\"中出现\",{\"1\":{\"424\":1}}],[\"中所有数据库的所有权限\",{\"1\":{\"416\":1}}],[\"中带有\",{\"1\":{\"386\":1}}],[\"中选择你想要的版本\",{\"1\":{\"366\":1}}],[\"中创建的表\",{\"1\":{\"363\":1}}],[\"中多个文档组成集合\",{\"1\":{\"361\":1}}],[\"中除了常规数据外\",{\"1\":{\"341\":1}}],[\"中只有\",{\"1\":{\"308\":1}}],[\"中包含\",{\"1\":{\"305\":2,\"306\":1,\"394\":1}}],[\"中包含的其所有元素\",{\"1\":{\"176\":1}}],[\"中组合非常多的查\",{\"1\":{\"303\":1}}],[\"中可以在\",{\"1\":{\"303\":1}}],[\"中加入负载均衡器的特性\",{\"1\":{\"645\":1}}],[\"中加入\",{\"1\":{\"284\":1}}],[\"中官方加入了中文的选项\",{\"1\":{\"284\":1}}],[\"中国人\",{\"1\":{\"320\":1,\"321\":1}}],[\"中国\",{\"1\":{\"277\":5,\"321\":1}}],[\"中国古代历史\",{\"1\":{\"277\":1}}],[\"中国古诗文化\",{\"1\":{\"277\":1}}],[\"中有一系列的鉴权机制\",{\"1\":{\"724\":1}}],[\"中有这样的数据\",{\"1\":{\"277\":1}}],[\"中有三个访问修饰符\",{\"1\":{\"91\":1}}],[\"中对复杂查询的实现\",{\"1\":{\"265\":1}}],[\"中对于地理位置的一些操作\",{\"1\":{\"358\":1}}],[\"中对于\",{\"1\":{\"265\":1}}],[\"中文分词器\",{\"1\":{\"265\":2,\"341\":1}}],[\"中就使用了装饰者模式\",{\"1\":{\"255\":1}}],[\"中从索引\",{\"1\":{\"247\":1}}],[\"中等待被调度\",{\"1\":{\"218\":1}}],[\"中实现线程的方式有\",{\"1\":{\"217\":1}}],[\"中元素的顺序\",{\"1\":{\"198\":1}}],[\"中引用的字符存储进常量池中\",{\"1\":{\"155\":1}}],[\"中引用\",{\"1\":{\"140\":1}}],[\"中\",{\"1\":{\"121\":2,\"155\":1,\"221\":1,\"242\":1,\"246\":1,\"247\":1,\"262\":1,\"273\":1,\"312\":1,\"364\":1,\"527\":1,\"606\":1,\"636\":1,\"655\":1,\"664\":2,\"820\":1}}],[\"中的一些踩坑记录\",{\"1\":{\"672\":1}}],[\"中的一种\",{\"1\":{\"172\":1}}],[\"中的任何信息\",{\"1\":{\"654\":1}}],[\"中的断言函数允许开发者去定义匹配\",{\"1\":{\"654\":1}}],[\"中的断言函数输入类型是\",{\"1\":{\"654\":1}}],[\"中的断言函数\",{\"1\":{\"654\":1}}],[\"中的对应的值\",{\"1\":{\"598\":1}}],[\"中的对象流来做序列化和反序列化操作\",{\"1\":{\"254\":1}}],[\"中的最著名的应用莫过于\",{\"1\":{\"478\":1}}],[\"中的列\",{\"1\":{\"424\":1}}],[\"中的基本数据单元\",{\"1\":{\"361\":1}}],[\"中的集成操作\",{\"1\":{\"358\":1}}],[\"中的某个\",{\"1\":{\"275\":1}}],[\"中的源码\",{\"1\":{\"262\":1}}],[\"中的所有键值对添加到当前map中\",{\"1\":{\"193\":1}}],[\"中的所有元素都插入到列表中的指定位置\",{\"1\":{\"176\":1}}],[\"中的\",{\"1\":{\"118\":1,\"155\":1,\"273\":2,\"338\":1,\"349\":1,\"350\":2,\"561\":1,\"654\":1}}],[\"中的还是\",{\"1\":{\"105\":1}}],[\"中是否有\",{\"1\":{\"105\":1}}],[\"狗刨式\",{\"1\":{\"104\":2}}],[\"狗吃屎\",{\"1\":{\"84\":1}}],[\"哇哇哇\",{\"1\":{\"103\":2,\"104\":1}}],[\"哇塞\",{\"1\":{\"3\":1}}],[\"妙妙妙\",{\"1\":{\"103\":2}}],[\"或低版本\",{\"1\":{\"822\":1}}],[\"或域名列表\",{\"1\":{\"733\":2}}],[\"或一个执行实例\",{\"1\":{\"521\":1}}],[\"或一个字符\",{\"1\":{\"240\":1}}],[\"或点踩\",{\"1\":{\"443\":1}}],[\"或等待的\",{\"1\":{\"215\":1}}],[\"或等待\",{\"1\":{\"214\":1}}],[\"或者去nginx官网下载源码包\",{\"1\":{\"825\":1}}],[\"或者使用向导创建新的应用\",{\"1\":{\"817\":1}}],[\"或者迪米特法则\",{\"1\":{\"468\":1}}],[\"或者用户给消息添加标签\",{\"1\":{\"443\":1}}],[\"或者尾部\",{\"1\":{\"442\":1}}],[\"或者说是一个string集合\",{\"1\":{\"441\":1}}],[\"或者show\",{\"1\":{\"412\":1}}],[\"或者\",{\"1\":{\"151\":2,\"152\":1,\"222\":2,\"291\":2,\"305\":2,\"307\":1,\"603\":1,\"648\":1,\"715\":1}}],[\"或者创建和初始化类的新实例的时候\",{\"1\":{\"126\":1}}],[\"或者append多个元素\",{\"1\":{\"11\":1}}],[\"或\",{\"1\":{\"102\":1,\"126\":1,\"417\":2}}],[\"必\",{\"1\":{\"308\":1}}],[\"必须使用ca签发的有效证书才可以\",{\"1\":{\"745\":1}}],[\"必须是唯一\",{\"1\":{\"692\":1}}],[\"必须是指针且指针指向的必须是\",{\"1\":{\"598\":1}}],[\"必须安装的包\",{\"1\":{\"680\":1}}],[\"必须手动关闭引擎\",{\"1\":{\"496\":1}}],[\"必须出现在匹配的文档中\",{\"1\":{\"308\":2}}],[\"必须不是指定的情况\",{\"1\":{\"308\":1}}],[\"必须达到must列举的所有条件\",{\"1\":{\"308\":1}}],[\"必须指定\",{\"1\":{\"289\":1}}],[\"必须自己写代码去调用它的\",{\"1\":{\"268\":1}}],[\"必须实现序列化接口serializable\",{\"1\":{\"520\":1}}],[\"必须实现\",{\"1\":{\"219\":1}}],[\"必须要重写\",{\"1\":{\"102\":1}}],[\"必须要有继承关系\",{\"1\":{\"102\":1}}],[\"必要条件\",{\"0\":{\"102\":1}}],[\"主程序\",{\"1\":{\"824\":1}}],[\"主分支\",{\"1\":{\"704\":1}}],[\"主分片重新分配\",{\"1\":{\"290\":1}}],[\"主线程写磁盘压力大\",{\"1\":{\"453\":1}}],[\"主进程是否停止写入\",{\"1\":{\"451\":1}}],[\"主进程更新相关的统计信息\",{\"1\":{\"449\":1}}],[\"主进程判断当前是否已经存在正在执行的子进程\",{\"1\":{\"449\":1}}],[\"主流的持久化机制有两种\",{\"1\":{\"447\":1}}],[\"主从复制时\",{\"1\":{\"450\":1}}],[\"主从\",{\"1\":{\"427\":1}}],[\"主键\",{\"1\":{\"362\":1}}],[\"主模式的数据复制及服务器之间的数据复制\",{\"1\":{\"360\":1}}],[\"主\",{\"1\":{\"360\":2}}],[\"主要提供以下的功能\",{\"1\":{\"763\":1}}],[\"主要包括calico\",{\"1\":{\"804\":1}}],[\"主要包括常见的5种数据类型\",{\"1\":{\"427\":1,\"437\":1}}],[\"主要包含了三个内容\",{\"1\":{\"723\":1}}],[\"主要通过下面三种\",{\"1\":{\"645\":1}}],[\"主要用于activiti系统的日常维护\",{\"1\":{\"500\":1}}],[\"主要用于设置操作命令向aof文件中同步的策略\",{\"1\":{\"455\":1}}],[\"主要缺点如下\",{\"1\":{\"481\":1}}],[\"主要分为两种方式\",{\"1\":{\"427\":1}}],[\"主要特性有\",{\"1\":{\"360\":1}}],[\"主要功能以及使用场景\",{\"0\":{\"271\":1}}],[\"主要存储一些加载类的信息\",{\"1\":{\"155\":1}}],[\"主要操作是\",{\"1\":{\"147\":1}}],[\"主要方法\",{\"1\":{\"133\":3}}],[\"主要是提供静态方法通过class实例获取到beaninfo\",{\"1\":{\"133\":1}}],[\"主要是指\",{\"1\":{\"101\":1}}],[\"主题作者\",{\"1\":{\"17\":2}}],[\"主题✨\",{\"1\":{\"16\":2}}],[\"设计合理\",{\"1\":{\"615\":1}}],[\"设计模式原则名称\",{\"1\":{\"468\":1}}],[\"设计模式的七大原则\",{\"0\":{\"468\":1}}],[\"设计模式中的一种模式\",{\"1\":{\"255\":1}}],[\"设计模式\",{\"0\":{\"466\":1},\"1\":{\"251\":1,\"466\":1,\"473\":2}}],[\"设计时多态\",{\"1\":{\"101\":1}}],[\"设备空闲下来\",{\"1\":{\"215\":1}}],[\"设置calico\",{\"1\":{\"806\":1}}],[\"设置\",{\"1\":{\"806\":1}}],[\"设置各node上kubelet服务的启动参数\",{\"1\":{\"804\":1}}],[\"设置master上kube\",{\"1\":{\"804\":1}}],[\"设置集群参数\",{\"1\":{\"792\":1}}],[\"设置上下文参数\",{\"1\":{\"792\":1}}],[\"设置上下文\",{\"1\":{\"785\":1}}],[\"设置结果就是一个配置文件\",{\"1\":{\"761\":1}}],[\"设置当前上下文\",{\"1\":{\"761\":1,\"785\":1}}],[\"设置客户端认证参数\",{\"1\":{\"761\":1,\"785\":1}}],[\"设置固定\",{\"1\":{\"715\":1}}],[\"设置方法\",{\"0\":{\"687\":1}}],[\"设置字符串值\",{\"1\":{\"595\":1}}],[\"设置字节数组\",{\"1\":{\"595\":1}}],[\"设置字段值\",{\"1\":{\"129\":1}}],[\"设置值\",{\"1\":{\"595\":4}}],[\"设置候选人\",{\"1\":{\"526\":1}}],[\"设置任务候选人\",{\"0\":{\"526\":1}}],[\"设置流程变量\",{\"0\":{\"524\":1}}],[\"设置png输入\",{\"1\":{\"511\":1}}],[\"设置bpmn输入\",{\"1\":{\"511\":1}}],[\"设置true\",{\"1\":{\"510\":1}}],[\"设置部门审核人\",{\"1\":{\"503\":1,\"513\":1}}],[\"设置对应的参数\",{\"1\":{\"503\":1,\"513\":1}}],[\"设置键的过期时间的同时\",{\"1\":{\"461\":1}}],[\"设置存储在给定键中的值\",{\"1\":{\"440\":1}}],[\"设置该值\",{\"1\":{\"424\":1}}],[\"设置分页参数\",{\"1\":{\"348\":1,\"353\":1}}],[\"设置高亮\",{\"1\":{\"348\":1}}],[\"设置中文\",{\"0\":{\"284\":1}}],[\"设置中填写注册信息\",{\"1\":{\"20\":1}}],[\"设置跨域配置\",{\"1\":{\"282\":1}}],[\"设置为initcontainers并在运行完成后退出\",{\"1\":{\"806\":1}}],[\"设置为false非级别删除方式\",{\"1\":{\"510\":1}}],[\"设置为\",{\"1\":{\"249\":1}}],[\"设置用于写入属性值\",{\"1\":{\"133\":1}}],[\"设置用于读取属性值\",{\"1\":{\"133\":1}}],[\"设置私有字段可访问\",{\"1\":{\"129\":1}}],[\"设置时间\",{\"1\":{\"117\":2}}],[\"设置堆的最大空间\",{\"1\":{\"43\":2}}],[\"设置堆的最小空间\",{\"1\":{\"43\":2}}],[\"设置界面\",{\"1\":{\"23\":1}}],[\"设置界面会出现\",{\"1\":{\"19\":1}}],[\"设置离线模式成功\",{\"1\":{\"22\":1}}],[\"设置jrebel插件进入离线工作模式\",{\"1\":{\"22\":1}}],[\"更换\",{\"0\":{\"686\":1}}],[\"更通知\",{\"1\":{\"671\":1}}],[\"更多版本对应关系参考\",{\"1\":{\"626\":1,\"630\":1}}],[\"更多的参数请参考官方文档\",{\"1\":{\"347\":1}}],[\"更新源\",{\"1\":{\"824\":1}}],[\"更新包列表\",{\"1\":{\"680\":1}}],[\"更新路由\",{\"1\":{\"671\":1}}],[\"更新路由信息\",{\"1\":{\"670\":1}}],[\"更新definitions\",{\"1\":{\"671\":1}}],[\"更新\",{\"1\":{\"671\":1}}],[\"更新时对正在运行的路由信息进行刷\",{\"1\":{\"670\":1}}],[\"更新时间\",{\"1\":{\"444\":1}}],[\"更新文档\",{\"0\":{\"291\":1}}],[\"更有快速换机\",{\"1\":{\"351\":2}}],[\"更合适定义公共的行为\",{\"1\":{\"99\":1}}],[\"更好的操作基本类型\",{\"1\":{\"40\":1}}],[\"多用于测试环境\",{\"1\":{\"725\":1}}],[\"多层成员访问时\",{\"1\":{\"590\":1}}],[\"多款产品支持手写笔\",{\"1\":{\"351\":1}}],[\"多条件查询对象\",{\"1\":{\"350\":1}}],[\"多了一个类似这样部分\",{\"1\":{\"341\":1}}],[\"多字段匹配\",{\"0\":{\"307\":1},\"1\":{\"340\":1,\"348\":1}}],[\"多字段排序\",{\"1\":{\"303\":1}}],[\"多个\",{\"1\":{\"659\":1,\"752\":1}}],[\"多个候选人之间用逗号分开\",{\"1\":{\"526\":1}}],[\"多个操作也支持事务\",{\"1\":{\"431\":1}}],[\"多个单词\",{\"1\":{\"305\":1}}],[\"多个进程形成并行\",{\"1\":{\"203\":1}}],[\"多个进程形成并发\",{\"1\":{\"203\":1}}],[\"多个类中提取相同行为\",{\"1\":{\"99\":1}}],[\"多任务操作系统\",{\"1\":{\"202\":1}}],[\"多线程基础\",{\"0\":{\"209\":1},\"1\":{\"208\":1}}],[\"多线程模拟卖票的过程\",{\"1\":{\"206\":1}}],[\"多线程的出现是要解决什么问题\",{\"1\":{\"201\":1}}],[\"多线程\",{\"0\":{\"200\":1}}],[\"多态就是\",{\"1\":{\"109\":1}}],[\"多态总结\",{\"0\":{\"109\":1}}],[\"多态中的类型转换\",{\"0\":{\"106\":1}}],[\"多态时方法调用问题\",{\"0\":{\"105\":1}}],[\"多态分为编译时和运行时多态\",{\"1\":{\"101\":1}}],[\"多态\",{\"0\":{\"100\":1},\"1\":{\"107\":1}}],[\"多次调用会引用同一对象\",{\"1\":{\"41\":1}}],[\"多次编译\",{\"0\":{\"34\":1}}],[\"何时使用抽象\",{\"0\":{\"99\":1}}],[\"有些情况下\",{\"1\":{\"723\":1}}],[\"有实现当更换路由配置文件时的刷新\",{\"1\":{\"670\":1}}],[\"有adduserlink\",{\"1\":{\"553\":1}}],[\"有assignee\",{\"1\":{\"541\":1,\"555\":1}}],[\"有兴趣的可以自己尝试一下\",{\"1\":{\"484\":1}}],[\"有兴趣可以去看一下\",{\"1\":{\"377\":1}}],[\"有碍于除错\",{\"1\":{\"481\":1}}],[\"有序集合经典使用场景\",{\"1\":{\"444\":1}}],[\"有序集合和集合一样也是\",{\"1\":{\"444\":1}}],[\"有序集合类型\",{\"0\":{\"444\":1},\"1\":{\"427\":1,\"437\":1}}],[\"有人发布微博\",{\"1\":{\"442\":1}}],[\"有限集合\",{\"1\":{\"442\":1}}],[\"有什么优势\",{\"0\":{\"431\":1}}],[\"有什么区别\",{\"1\":{\"210\":1}}],[\"有两种颗粒度的拆分\",{\"1\":{\"318\":1}}],[\"有可能出现\",{\"1\":{\"206\":1}}],[\"有的数据是设置了过期时间的\",{\"1\":{\"463\":1}}],[\"有的删除添加效率快等\",{\"1\":{\"164\":1}}],[\"有的查询效率慢\",{\"1\":{\"164\":1}}],[\"有参\",{\"1\":{\"123\":2,\"127\":1}}],[\"有参构造器\",{\"1\":{\"123\":1}}],[\"有参构造方法\",{\"1\":{\"89\":1}}],[\"有且只有一个\",{\"1\":{\"122\":1}}],[\"有且只有一个对应的\",{\"1\":{\"121\":1}}],[\"有默认实现的方法\",{\"1\":{\"95\":2}}],[\"扩展一个类的功能会使用继承方式来实现\",{\"1\":{\"475\":1}}],[\"扩展配置<\",{\"1\":{\"324\":1}}],[\"扩展\",{\"1\":{\"95\":1,\"610\":1}}],[\"扩容真相\",{\"1\":{\"11\":1}}],[\"且使用了\",{\"1\":{\"635\":1}}],[\"且不允许重复的成员\",{\"1\":{\"444\":1}}],[\"且根据价格排序\",{\"1\":{\"389\":1}}],[\"且只有一种匹配规则\",{\"1\":{\"308\":1}}],[\"且只能使用自己内存\",{\"1\":{\"202\":1}}],[\"且定义有抽象方法\",{\"1\":{\"256\":1}}],[\"且需要实现所继承接口的所有方法\",{\"1\":{\"94\":1}}],[\"且double后的容量不能容纳\",{\"1\":{\"11\":1}}],[\"否则可能会出现dns无法解析\",{\"1\":{\"800\":1}}],[\"否则可能要很长时间都一直在执行安装\",{\"1\":{\"367\":1}}],[\"否则容器重启之后数据会丢失\",{\"1\":{\"692\":1}}],[\"否则抛出\",{\"1\":{\"649\":1}}],[\"否则由人事直接审批\",{\"1\":{\"519\":1}}],[\"否则我们的登录页会被覆盖\",{\"1\":{\"497\":1}}],[\"否则将该请求转给它的后继者\",{\"1\":{\"483\":1}}],[\"否则以前序为准\",{\"1\":{\"303\":1}}],[\"否则会下载最新版本\",{\"1\":{\"691\":1}}],[\"否则会在运行时抛出\",{\"1\":{\"222\":1}}],[\"否则会报错\",{\"1\":{\"49\":1}}],[\"否则添加会报错\",{\"1\":{\"189\":1}}],[\"否则使用\",{\"1\":{\"152\":1}}],[\"否则使用翻倍后的容量\",{\"1\":{\"152\":1}}],[\"否则返回\",{\"1\":{\"151\":2}}],[\"否则\",{\"1\":{\"151\":2}}],[\"否则子类必须是抽象类\",{\"1\":{\"92\":1}}],[\"除activity级别会保存的数据外\",{\"1\":{\"496\":1}}],[\"除非这个字段你确定查询时不会用到\",{\"1\":{\"334\":1}}],[\"除非这个子类和\",{\"1\":{\"91\":1}}],[\"除了activiti7自带的系统属性\",{\"1\":{\"539\":1}}],[\"除了会保存audit级别的数据外\",{\"1\":{\"496\":1}}],[\"除了\",{\"1\":{\"303\":1}}],[\"除了cpu外\",{\"1\":{\"205\":1}}],[\"除了可以使用自然\",{\"1\":{\"195\":1}}],[\"除上类型size\",{\"1\":{\"11\":1}}],[\"其余操作由docker完成的\",{\"1\":{\"799\":1}}],[\"其含义就是指将工作任务\",{\"1\":{\"642\":1}}],[\"其主要优点如下\",{\"1\":{\"481\":1}}],[\"其引入ik分词器后\",{\"1\":{\"322\":1}}],[\"其他模块通过api\",{\"1\":{\"763\":1}}],[\"其他节点ip\",{\"1\":{\"744\":1,\"755\":3}}],[\"其他活动类型实例id在这里为空\",{\"1\":{\"551\":1}}],[\"其他数据不保存\",{\"1\":{\"496\":1}}],[\"其他非\",{\"1\":{\"311\":1}}],[\"其他线程阻塞原因解除\",{\"1\":{\"225\":1}}],[\"其他遍历方式\",{\"1\":{\"172\":1}}],[\"其它查询语句\",{\"1\":{\"308\":1}}],[\"其它线程会调用\",{\"1\":{\"222\":1}}],[\"其它类就不能直接去调用该类实例的\",{\"1\":{\"62\":1}}],[\"其底层工作原理一致\",{\"1\":{\"194\":1}}],[\"其底层创建的是calendar的子类对\",{\"1\":{\"116\":1}}],[\"其实网络安全本身就是为了解决在某些假设成立的条件下如何防范的问题\",{\"1\":{\"719\":1}}],[\"其实\",{\"1\":{\"408\":1}}],[\"其实就由多个\",{\"1\":{\"191\":1}}],[\"其实能看出一个\",{\"1\":{\"191\":1}}],[\"其原因是\",{\"1\":{\"122\":1}}],[\"其内部维护了一个\",{\"1\":{\"257\":1}}],[\"其内部是\",{\"1\":{\"185\":1}}],[\"其内部定义了一个\",{\"1\":{\"177\":1}}],[\"其内部提供了方法通过对\",{\"1\":{\"116\":1}}],[\"其内部封装了一个\",{\"1\":{\"116\":1}}],[\"其中商品服务部署多个\",{\"1\":{\"636\":1}}],[\"其中是表的容器\",{\"1\":{\"363\":1}}],[\"其中因为\",{\"1\":{\"338\":1}}],[\"其中就是\",{\"1\":{\"289\":1}}],[\"其中包含对数组的拷贝\",{\"1\":{\"197\":1}}],[\"其中的元素是以键值对\",{\"1\":{\"191\":1}}],[\"其中\",{\"1\":{\"91\":1,\"585\":1,\"632\":1,\"806\":1}}],[\"添加nginx用户\",{\"1\":{\"825\":1}}],[\"添加网卡发现规则\",{\"1\":{\"806\":1}}],[\"添加hosts\",{\"1\":{\"715\":1}}],[\"添加routes\",{\"1\":{\"671\":1}}],[\"添加definitions\",{\"1\":{\"671\":1}}],[\"添加对对应配置文件更新时的监听\",{\"1\":{\"670\":1}}],[\"添加了\",{\"1\":{\"644\":1}}],[\"添加注解\",{\"0\":{\"628\":1}}],[\"添加配置文件更新监听\",{\"1\":{\"670\":1}}],[\"添加配置\",{\"0\":{\"627\":1,\"631\":1}}],[\"添加流程变量\",{\"0\":{\"583\":1},\"1\":{\"582\":1}}],[\"添加候选人\",{\"0\":{\"579\":1}}],[\"添加批注\",{\"1\":{\"506\":1,\"582\":1}}],[\"添加activiti和springboot整合的依赖\",{\"1\":{\"496\":1}}],[\"添加依赖\",{\"0\":{\"626\":1,\"630\":1},\"1\":{\"496\":1}}],[\"添加核心配置文件\",{\"1\":{\"495\":1}}],[\"添加键值对\",{\"1\":{\"441\":1}}],[\"添加的配置\",{\"1\":{\"423\":1}}],[\"添加的这一行代码\",{\"1\":{\"27\":1}}],[\"添加一条配置\",{\"1\":{\"423\":1}}],[\"添加一个新的聚合\",{\"1\":{\"355\":1,\"356\":1}}],[\"添加一个文档\",{\"1\":{\"289\":1}}],[\"添加基本的分词查询\",{\"1\":{\"352\":1,\"353\":1,\"354\":1}}],[\"添加事务\",{\"1\":{\"262\":1}}],[\"添加上缓冲的功能\",{\"1\":{\"257\":1}}],[\"添加数据就会在原有内容的基础上追加\",{\"1\":{\"249\":1}}],[\"添加删除操作较快\",{\"1\":{\"168\":1}}],[\"添加位置在其他位置\",{\"1\":{\"168\":1}}],[\"添加位置在头部或尾部\",{\"1\":{\"168\":1}}],[\"添加和删除就比较慢\",{\"1\":{\"167\":1}}],[\"添加操作\",{\"1\":{\"167\":1,\"168\":1,\"176\":1}}],[\"添加\",{\"1\":{\"91\":1,\"135\":1,\"336\":1,\"495\":1,\"496\":2,\"680\":1,\"687\":1}}],[\"公共静态方法\",{\"1\":{\"123\":1}}],[\"公共构方法\",{\"1\":{\"123\":1}}],[\"公共的\",{\"1\":{\"91\":1,\"127\":1,\"128\":1}}],[\"公共访问器\",{\"1\":{\"89\":1}}],[\"友好\",{\"1\":{\"610\":1}}],[\"友好的\",{\"1\":{\"91\":1}}],[\"友情链接\",{\"0\":{\"15\":1,\"17\":1}}],[\"✘\",{\"1\":{\"91\":7}}],[\"✔\",{\"1\":{\"91\":13}}],[\"字数等打分\",{\"1\":{\"444\":1}}],[\"字节基流的操作一致\",{\"1\":{\"252\":1}}],[\"字节缓冲流的\",{\"1\":{\"252\":1}}],[\"字节缓冲流\",{\"0\":{\"252\":1}}],[\"字节输出流\",{\"0\":{\"241\":1,\"243\":1}}],[\"字节输入流\",{\"0\":{\"242\":1}}],[\"字节输入\",{\"0\":{\"241\":1}}],[\"字节流\",{\"1\":{\"240\":2}}],[\"字节码对象\",{\"0\":{\"121\":1}}],[\"字节码文件就是一个\",{\"1\":{\"121\":1}}],[\"字节码文件的模板来创建\",{\"1\":{\"121\":1}}],[\"字节码文件\",{\"1\":{\"35\":1}}],[\"字符输出流\",{\"0\":{\"247\":1}}],[\"字符输入流\",{\"0\":{\"246\":1}}],[\"字符输入\",{\"0\":{\"245\":1}}],[\"字符流\",{\"1\":{\"240\":2}}],[\"字符编码\",{\"0\":{\"237\":1}}],[\"字符缓冲流\",{\"0\":{\"253\":1}}],[\"字符缓冲区\",{\"1\":{\"145\":1}}],[\"字符缓存池\",{\"0\":{\"140\":1}}],[\"字符串成员与浮点数分数之间的有序映射\",{\"1\":{\"438\":1}}],[\"字符串的集合\",{\"1\":{\"438\":1}}],[\"字符串的常量池是放在堆的\",{\"1\":{\"155\":1}}],[\"字符串类型\",{\"0\":{\"440\":1},\"1\":{\"427\":1,\"437\":1}}],[\"字符串常量池已经从\",{\"1\":{\"155\":1}}],[\"字符串长度比最大数组长度大\",{\"1\":{\"152\":1}}],[\"字符串容器\",{\"1\":{\"145\":1}}],[\"字符串\",{\"1\":{\"115\":1,\"155\":1,\"364\":1,\"440\":2}}],[\"字段描述\",{\"1\":{\"752\":1,\"764\":1,\"771\":1,\"776\":1,\"783\":1}}],[\"字段说明\",{\"1\":{\"729\":1,\"730\":1,\"733\":1,\"742\":1}}],[\"字段在结构体中的相对偏移\",{\"1\":{\"590\":1}}],[\"字段的结构体标签\",{\"1\":{\"590\":1}}],[\"字段反射类型对象\",{\"1\":{\"590\":1}}],[\"字段路径\",{\"1\":{\"590\":1}}],[\"字段名\",{\"1\":{\"590\":1}}],[\"字段名称\",{\"1\":{\"129\":2}}],[\"字段类似于关系数据库中的列\",{\"1\":{\"363\":1}}],[\"字段返回了两段数据\",{\"1\":{\"343\":1}}],[\"字段设置\",{\"1\":{\"342\":1}}],[\"字段匹配用\",{\"1\":{\"311\":1}}],[\"字段中包含\",{\"1\":{\"303\":1}}],[\"字段\",{\"1\":{\"116\":1,\"363\":1,\"587\":1}}],[\"字段使用\",{\"1\":{\"89\":1}}],[\"无需配置\",{\"1\":{\"666\":1}}],[\"无\",{\"1\":{\"613\":4}}],[\"无法看到类似上面的图形了\",{\"1\":{\"499\":1}}],[\"无法做到秒级的持久化\",{\"1\":{\"452\":1}}],[\"无须关心请求的处理细节和请求的传递过程\",{\"1\":{\"480\":1}}],[\"无线充电\",{\"1\":{\"351\":1}}],[\"无外乎就是操作里面的属性\",{\"1\":{\"131\":1}}],[\"无参\",{\"1\":{\"123\":1,\"127\":2}}],[\"无参构造器\",{\"1\":{\"89\":1,\"123\":1}}],[\"无论是链表还是队列主要\",{\"1\":{\"179\":1}}],[\"无论是格式化还是解析都需要设置日期时间的格式\",{\"1\":{\"115\":1}}],[\"无论\",{\"1\":{\"42\":1}}],[\"给每一个node上的docker容器都分配互相不冲突的ip地址\",{\"1\":{\"799\":1}}],[\"给容器加上特定权限\",{\"1\":{\"692\":1}}],[\"给开发带来不便\",{\"1\":{\"614\":1}}],[\"给用户添加标签\",{\"1\":{\"443\":1}}],[\"给定索引\",{\"1\":{\"167\":2}}],[\"给定字节码对象获取\",{\"1\":{\"134\":1}}],[\"给外界使用\",{\"1\":{\"89\":1}}],[\"给新的对象\",{\"1\":{\"63\":1}}],[\"封装了反射对象的值\",{\"1\":{\"593\":1}}],[\"封装分页\",{\"1\":{\"348\":1}}],[\"封装查询\",{\"1\":{\"348\":1}}],[\"封装好处\",{\"0\":{\"88\":1}}],[\"封装\",{\"0\":{\"87\":1}}],[\"特殊之处在于set是可以自动排重的\",{\"1\":{\"435\":1}}],[\"特殊的局部内部类\",{\"1\":{\"80\":1}}],[\"特别是那些仅用于\",{\"1\":{\"310\":1}}],[\"特定的瞬间\",{\"1\":{\"112\":1}}],[\"特性\",{\"1\":{\"81\":1,\"82\":1,\"83\":1,\"723\":1}}],[\"匿名内部类必须有\",{\"1\":{\"84\":1}}],[\"匿名内部类\",{\"0\":{\"84\":1},\"1\":{\"80\":2}}],[\"局部过滤器是针对单个路由的过滤器\",{\"1\":{\"665\":1}}],[\"局部bl\",{\"1\":{\"83\":1}}],[\"局部内部类\",{\"1\":{\"80\":1,\"83\":1}}],[\"局部\",{\"1\":{\"80\":1}}],[\"局部变量\",{\"1\":{\"43\":1,\"78\":1}}],[\"初始化\",{\"1\":{\"692\":1}}],[\"初始化分页参数\",{\"1\":{\"353\":1}}],[\"初始化顺序为\",{\"1\":{\"77\":1}}],[\"初始化顺序\",{\"0\":{\"77\":1}}],[\"初始容量是\",{\"1\":{\"146\":1}}],[\"初入职场的热情\",{\"1\":{\"2\":1}}],[\"而非\",{\"1\":{\"588\":1}}],[\"而采用装饰器模式却很好实现\",{\"1\":{\"478\":1}}],[\"而又不能采用生成子类的方法进行扩充时\",{\"1\":{\"478\":1}}],[\"而使用装饰器模式后就会比直接继承显得更加灵活同时这样也就不再需要考虑子类的维护\",{\"1\":{\"476\":1}}],[\"而设置了过期时间的这部分数据\",{\"1\":{\"463\":1}}],[\"而内存是有限的\",{\"1\":{\"458\":1}}],[\"而且在flannel分配好地址段后\",{\"1\":{\"799\":1}}],[\"而且在进行代码调试时不太方便\",{\"1\":{\"481\":1}}],[\"而且这个网桥的一端连接\",{\"1\":{\"799\":1}}],[\"而且必须被编译到二进制文件中才能被执行\",{\"1\":{\"725\":1}}],[\"而且\",{\"1\":{\"456\":1}}],[\"而且也只是建议具有相同优先级的其它线程可以运行\",{\"1\":{\"223\":1}}],[\"而aof日志采用写后日志\",{\"1\":{\"453\":1}}],[\"而该列又是自增长的\",{\"1\":{\"424\":1}}],[\"而另一个是\",{\"1\":{\"227\":1}}],[\"而对线程而言\",{\"1\":{\"205\":1}}],[\"而线程是cpu调度和执行的基本单位\",{\"1\":{\"205\":1}}],[\"而线程是操作系统进行cpu调度的基本单位\",{\"1\":{\"204\":1}}],[\"而线程让进程的内部并发成为了可能\",{\"1\":{\"204\":1}}],[\"而不是使用\",{\"1\":{\"713\":1}}],[\"而不是只是简单地做浅度比较\",{\"1\":{\"601\":1}}],[\"而不是追根溯源的最底层类型\",{\"1\":{\"588\":1}}],[\"而不是通过继承达到复用的目的\",{\"1\":{\"468\":1}}],[\"而不属于\",{\"1\":{\"222\":1}}],[\"而不同的数据结构的操作方法\",{\"1\":{\"180\":1}}],[\"而不会重新创建对象\",{\"1\":{\"156\":1}}],[\"而是由工作节点tls\",{\"1\":{\"782\":1}}],[\"而是从网络技术现状和实际发生的问题中发现\",{\"1\":{\"719\":1}}],[\"而是一套用来提高代码可复用性\",{\"1\":{\"466\":1}}],[\"而是突出显示并返回整个字段内容\",{\"1\":{\"343\":1}}],[\"而是自己写\",{\"1\":{\"261\":1}}],[\"而是通过在每个元素中记录下一个元素的位置链接在一起\",{\"1\":{\"168\":1}}],[\"而是直接复制最新的长度作为cap长度\",{\"1\":{\"10\":1}}],[\"而\",{\"1\":{\"155\":1,\"172\":1,\"449\":1,\"588\":1,\"653\":1}}],[\"而我们\",{\"1\":{\"155\":1}}],[\"而之前咱们要获取javabean中的方法\",{\"1\":{\"131\":1}}],[\"而一个类却可以实现多个接口\",{\"1\":{\"98\":1}}],[\"而抽象类可以有静态代码块和静态方法\",{\"1\":{\"98\":1}}],[\"而抽象类可以有定义与实现\",{\"1\":{\"98\":1}}],[\"而接口中的成员变量只能是\",{\"1\":{\"98\":1}}],[\"而接口中只能存在\",{\"1\":{\"98\":1}}],[\"而静态内部类不需要\",{\"1\":{\"75\":1}}],[\"也不至于太复杂\",{\"1\":{\"722\":1}}],[\"也不允\",{\"1\":{\"195\":1}}],[\"也不允许重复\",{\"1\":{\"194\":1}}],[\"也不允许元素重复\",{\"1\":{\"182\":1}}],[\"也可能会被第三方篡改\",{\"1\":{\"719\":1}}],[\"也可以创建或者修改\",{\"1\":{\"817\":1}}],[\"也可以对容器应用排错\",{\"1\":{\"817\":1}}],[\"也可以把\",{\"1\":{\"785\":1}}],[\"也可以把多条分支汇聚到一起\",{\"1\":{\"531\":1}}],[\"也可以自己写配置\",{\"1\":{\"785\":1}}],[\"也可以同时启动多个controller\",{\"1\":{\"757\":1,\"770\":1}}],[\"也可以不执行该命令\",{\"1\":{\"729\":1}}],[\"也可以指定ip访问\",{\"1\":{\"697\":1}}],[\"也可以去官网查看镜像tag\",{\"1\":{\"691\":1}}],[\"也可以导入相应的依赖\",{\"1\":{\"658\":1}}],[\"也可以通过\",{\"1\":{\"657\":1}}],[\"也可以通过配置项\",{\"1\":{\"631\":1}}],[\"也可以再动态地撤销时\",{\"1\":{\"478\":1}}],[\"也可以避免重写开销\",{\"1\":{\"456\":1}}],[\"也可以当做list来用\",{\"1\":{\"442\":1}}],[\"也可以在\",{\"1\":{\"366\":1}}],[\"也可以设置在字段的下一级\",{\"1\":{\"342\":1}}],[\"也可以称为\",{\"1\":{\"145\":1}}],[\"也很容易出现安装错误\",{\"1\":{\"690\":1}}],[\"也将不存在\",{\"1\":{\"631\":1}}],[\"也实现运行时反射\",{\"1\":{\"585\":1}}],[\"也会被忽略\",{\"1\":{\"531\":1}}],[\"也会进行同步\",{\"1\":{\"231\":1}}],[\"也和字符串的拼接函数concat相类似\",{\"1\":{\"424\":1}}],[\"也在\",{\"1\":{\"349\":1}}],[\"也支持\",{\"1\":{\"270\":1}}],[\"也称之为包装流\",{\"1\":{\"251\":1}}],[\"也称之为latin\",{\"1\":{\"238\":1}}],[\"也称为\",{\"1\":{\"43\":1,\"154\":1}}],[\"也允许元素重复\",{\"1\":{\"174\":1}}],[\"也继承于\",{\"1\":{\"173\":1}}],[\"也是使用最多的一种数据库\",{\"1\":{\"690\":1}}],[\"也是接收\",{\"1\":{\"662\":1}}],[\"也是在堆中创建的对象\",{\"1\":{\"155\":1}}],[\"也是与这几个成员相关👇\",{\"1\":{\"124\":1}}],[\"也就是服务器客户端互相验证证书的正确性\",{\"1\":{\"723\":1}}],[\"也就是一个角色一边拥有多种权限\",{\"1\":{\"721\":1}}],[\"也就是超过25个\",{\"1\":{\"462\":1}}],[\"也就是实现\",{\"1\":{\"188\":1}}],[\"也就是该容器不记录元素的添加顺序\",{\"1\":{\"182\":1}}],[\"也就是容量翻倍\",{\"1\":{\"151\":1}}],[\"也就是说两个线程调用同一个类的不同对象上的这种同步语句\",{\"1\":{\"231\":1}}],[\"也就是说\",{\"1\":{\"94\":1,\"446\":1,\"456\":1,\"722\":1}}],[\"也就是说它不能是抽象方法\",{\"1\":{\"73\":1}}],[\"也叫日历类\",{\"1\":{\"116\":1}}],[\"也经常称为\",{\"1\":{\"91\":1}}],[\"修饰符\",{\"1\":{\"89\":2}}],[\"修饰符修饰\",{\"1\":{\"89\":1}}],[\"修饰\",{\"1\":{\"78\":2,\"89\":2,\"138\":1}}],[\"修饰的\",{\"1\":{\"91\":1}}],[\"修饰的内部类\",{\"1\":{\"80\":2}}],[\"修饰的方法也不能被重写\",{\"1\":{\"78\":1}}],[\"修饰的方法不能被子类重写\",{\"1\":{\"78\":1}}],[\"修饰的类不可以被继承\",{\"1\":{\"78\":1}}],[\"修饰的变量\",{\"1\":{\"78\":1}}],[\"修饰的变量属于\",{\"1\":{\"72\":1}}],[\"修饰类不可以被继承\",{\"1\":{\"78\":1}}],[\"修改后\",{\"1\":{\"831\":1}}],[\"修改后只会导致更多的错误\",{\"1\":{\"422\":1}}],[\"修改如下\",{\"1\":{\"818\":1}}],[\"修改service为nodeport类型\",{\"1\":{\"818\":1}}],[\"修改配置重启的时候用\",{\"1\":{\"810\":1}}],[\"修改kubernetes服务的启动参数\",{\"1\":{\"804\":1}}],[\"修改ip配置要与\",{\"1\":{\"800\":1}}],[\"修改ikanalyzer\",{\"1\":{\"324\":1}}],[\"修改此处为当前服务器ip\",{\"1\":{\"755\":4}}],[\"修改此处\",{\"1\":{\"755\":1}}],[\"修改为可执行权限\",{\"1\":{\"726\":1}}],[\"修改root账号密码\",{\"1\":{\"698\":1}}],[\"修改root账号host\",{\"1\":{\"698\":1}}],[\"修改的方法如下👇\",{\"1\":{\"595\":1}}],[\"修改成员的值\",{\"1\":{\"595\":1}}],[\"修改完\",{\"0\":{\"807\":1},\"1\":{\"411\":1}}],[\"修改完成打开\",{\"1\":{\"27\":1}}],[\"修改密码的几种方式\",{\"1\":{\"407\":1}}],[\"修改密码\",{\"0\":{\"407\":1},\"1\":{\"409\":1,\"410\":1}}],[\"修改文档\",{\"1\":{\"291\":1}}],[\"修改列表中指定索引位置的元素\",{\"1\":{\"176\":1}}],[\"修改操作\",{\"1\":{\"167\":1,\"168\":1,\"176\":1}}],[\"修改字段值\",{\"1\":{\"129\":1}}],[\"修改其中一个变量的值\",{\"1\":{\"63\":2}}],[\"修改数组元素\",{\"1\":{\"46\":1}}],[\"修改\",{\"0\":{\"409\":1,\"423\":1,\"698\":1},\"1\":{\"27\":1,\"117\":1,\"336\":1,\"729\":1,\"730\":1,\"805\":1,\"806\":1,\"831\":1}}],[\"修改代码后都需要更新启动服务\",{\"1\":{\"18\":1}}],[\"被访问到\",{\"1\":{\"464\":1}}],[\"被聚合的字段无需对分词统计\",{\"1\":{\"313\":1}}],[\"被允许的操作符如下\",{\"1\":{\"309\":1}}],[\"被作为默认匹配条件而去改变查询结果\",{\"1\":{\"308\":1}}],[\"被调用的服务并没有回滚事务\",{\"1\":{\"261\":1}}],[\"被通知可以继续执行\",{\"1\":{\"222\":2}}],[\"被系统选中后从原来停止的位置开始继续执行\",{\"1\":{\"215\":1}}],[\"被\",{\"1\":{\"72\":1,\"226\":1}}],[\"拷贝\",{\"1\":{\"755\":3}}],[\"拷贝到所有机器的\",{\"1\":{\"744\":1}}],[\"拷贝至指定目录\",{\"1\":{\"296\":1}}],[\"拷贝工厂\",{\"1\":{\"66\":1}}],[\"拷贝构造函数\",{\"1\":{\"66\":1}}],[\"代表\",{\"1\":{\"658\":1}}],[\"代表正在执行的任务表\",{\"1\":{\"503\":1}}],[\"代表正在执行的流程实例表\",{\"1\":{\"503\":1}}],[\"代表查询所有的所有\",{\"1\":{\"303\":1}}],[\"代表文件输入流\",{\"1\":{\"256\":1}}],[\"代表字符输出流的所有类的超类\",{\"1\":{\"247\":1}}],[\"代表字节输出流的所有类的父类\",{\"1\":{\"243\":1}}],[\"代表字节输入流的所有类的父类\",{\"1\":{\"242\":1}}],[\"代表该数组赋值初始化后就不能被修改\",{\"1\":{\"138\":1}}],[\"代表激活成功\",{\"1\":{\"27\":1}}],[\"代码案例如下\",{\"1\":{\"595\":1}}],[\"代码案例👇\",{\"1\":{\"117\":1}}],[\"代码演示如下👇\",{\"1\":{\"594\":1}}],[\"代码输出如下\",{\"1\":{\"589\":1}}],[\"代码实现\",{\"0\":{\"484\":1}}],[\"代码实现高亮查询\",{\"0\":{\"348\":1}}],[\"代码可扩展性\",{\"1\":{\"467\":1}}],[\"代码可读性\",{\"1\":{\"467\":1}}],[\"代码重用性\",{\"1\":{\"467\":1}}],[\"代码\",{\"1\":{\"364\":1}}],[\"代码类型\",{\"1\":{\"364\":1}}],[\"代码去操作我们的\",{\"1\":{\"338\":1}}],[\"代码块\",{\"1\":{\"249\":1}}],[\"代码唯一的改变就是\",{\"1\":{\"155\":1}}],[\"代码执行\",{\"1\":{\"155\":1}}],[\"代码最终生成了两个对象\",{\"1\":{\"155\":1}}],[\"代码如下👇\",{\"1\":{\"115\":1}}],[\"代替方案\",{\"1\":{\"66\":1}}],[\"书上讲到\",{\"1\":{\"66\":1}}],[\"比\",{\"1\":{\"151\":1}}],[\"比如haproxy\",{\"1\":{\"763\":1}}],[\"比如如果pod没有serviceaccount属性\",{\"1\":{\"725\":1}}],[\"比如客户端证书\",{\"1\":{\"723\":1}}],[\"比如一个非常重要的假设就是两个节点或者ip之间的通讯网络是不可信任的\",{\"1\":{\"719\":1}}],[\"比如一年的\",{\"1\":{\"158\":1}}],[\"比如这里是\",{\"1\":{\"668\":1}}],[\"比如请求头和参数等\",{\"1\":{\"654\":1}}],[\"比如用mysql去存储这些信息\",{\"1\":{\"624\":1}}],[\"比如审批意见\",{\"1\":{\"553\":1}}],[\"比如执行实例的parentid就是流程实例id\",{\"1\":{\"540\":1}}],[\"比如在请假流程流转时如果\",{\"1\":{\"519\":1}}],[\"比如流程实例启动时间\",{\"1\":{\"500\":1}}],[\"比如新浪微博的timeline\",{\"1\":{\"442\":1}}],[\"比如\",{\"1\":{\"427\":1,\"513\":1,\"522\":2}}],[\"比如standard\",{\"1\":{\"315\":1}}],[\"比如我们希望计算出account每个州的统计数量\",{\"1\":{\"313\":1}}],[\"比如private\",{\"1\":{\"94\":1}}],[\"比如类中有数组成员变量\",{\"1\":{\"63\":1}}],[\"比较简单\",{\"1\":{\"650\":1}}],[\"比较大的实例会造成长时间阻塞\",{\"1\":{\"449\":1}}],[\"比较大小\",{\"1\":{\"188\":1}}],[\"比较功能\",{\"1\":{\"189\":1}}],[\"比较规则\",{\"1\":{\"189\":2}}],[\"比较两个对象的内存地址是否一致或者是\",{\"1\":{\"56\":1}}],[\"比较符\",{\"1\":{\"56\":1}}],[\"浅拷贝实现\",{\"1\":{\"63\":1}}],[\"浅拷贝会直接将该变量保存的\",{\"1\":{\"63\":1}}],[\"浅拷贝会直接该成员变量的\",{\"1\":{\"63\":1}}],[\"浅拷贝的概念以及特性\",{\"1\":{\"63\":1}}],[\"浅拷贝\",{\"0\":{\"63\":1}}],[\"会路由到上游地址\",{\"1\":{\"656\":1,\"657\":1}}],[\"会执行所有过滤器的\",{\"1\":{\"654\":1}}],[\"会执行访问检查\",{\"1\":{\"126\":1}}],[\"会注册到注册中心\",{\"1\":{\"638\":1}}],[\"会动态更新数据\",{\"1\":{\"633\":1}}],[\"会从\",{\"1\":{\"631\":1}}],[\"会导致\",{\"1\":{\"625\":1}}],[\"会调用对应接口的容错罗杰\",{\"1\":{\"649\":1}}],[\"会调用decoder进行解码\",{\"1\":{\"649\":1}}],[\"会调用\",{\"1\":{\"561\":1}}],[\"会调用元素的\",{\"1\":{\"189\":1}}],[\"会造成内存浪费\",{\"1\":{\"460\":1}}],[\"会以协议格式将被执行的写命令追加到服务器的\",{\"1\":{\"454\":1}}],[\"会丢失数据\",{\"1\":{\"453\":1}}],[\"会将文本做最细粒度的拆分\",{\"1\":{\"318\":1}}],[\"会做最粗粒度的拆分\",{\"1\":{\"318\":1}}],[\"会进行全文检索\",{\"1\":{\"305\":1}}],[\"会在前序字段相等时后续字段内部排序\",{\"1\":{\"303\":1}}],[\"会在堆中生成string对象\",{\"1\":{\"155\":1}}],[\"会在堆区生成一个string\",{\"1\":{\"154\":1}}],[\"会报错异常\",{\"1\":{\"651\":1}}],[\"会报错\",{\"1\":{\"289\":1}}],[\"会报错提示\",{\"1\":{\"62\":1}}],[\"会自动创建\",{\"1\":{\"645\":1}}],[\"会自动对所有\",{\"1\":{\"645\":1}}],[\"会自动检查场景并且优化查询的执行\",{\"1\":{\"310\":1}}],[\"会自动生成\",{\"1\":{\"289\":1}}],[\"会自动分配\",{\"1\":{\"289\":1}}],[\"会被分为\",{\"1\":{\"277\":1}}],[\"会覆盖掉原有的内容\",{\"1\":{\"249\":1}}],[\"会默认使用自然排序\",{\"1\":{\"195\":1}}],[\"会对比源文档数据\",{\"1\":{\"291\":1}}],[\"会对节点进行调整\",{\"1\":{\"188\":1}}],[\"会对存储的元素进行排序\",{\"1\":{\"188\":1}}],[\"会出现异常\",{\"1\":{\"177\":1}}],[\"会直接保存对象的引用\",{\"1\":{\"156\":1}}],[\"会创建一个新的对象\",{\"1\":{\"155\":1}}],[\"会去常量池中创建\",{\"1\":{\"155\":1}}],[\"会发生什么结果呢👇\",{\"1\":{\"155\":1}}],[\"会先扫描然后通过类加载器将\",{\"1\":{\"121\":1}}],[\"会抛出异常👇\",{\"1\":{\"180\":2}}],[\"会抛出异常\",{\"1\":{\"115\":1}}],[\"会抛出\",{\"1\":{\"62\":1,\"172\":1}}],[\"会使用缓存中的对象\",{\"1\":{\"41\":1}}],[\"因监听文件更新仅可拿到全量的路由配置\",{\"1\":{\"671\":1}}],[\"因此可以用netstat\",{\"1\":{\"812\":1}}],[\"因此无法通过lb路由到指定微服务\",{\"1\":{\"658\":1,\"676\":1}}],[\"因此redis内部所有涉及到rdb操作都采用\",{\"1\":{\"449\":1}}],[\"因此需要提供一种方式保证\",{\"1\":{\"447\":1}}],[\"因此使用时我们一般使用\",{\"1\":{\"337\":1}}],[\"因此必须在本地进行处理\",{\"1\":{\"221\":1}}],[\"因此在\",{\"1\":{\"179\":1}}],[\"因此执行\",{\"1\":{\"155\":1}}],[\"因此最后还需要通过\",{\"1\":{\"217\":1}}],[\"因此最后\",{\"1\":{\"155\":1}}],[\"因此\",{\"1\":{\"138\":1,\"456\":1,\"496\":1,\"658\":1,\"676\":1}}],[\"因此多个\",{\"1\":{\"41\":1}}],[\"因为calico\",{\"1\":{\"804\":1}}],[\"因为centos7安全selinux禁止了一些安全权限\",{\"1\":{\"692\":1}}],[\"因为kubernetes社区的投入和偏好\",{\"1\":{\"724\":1}}],[\"因为我们启动容器是已经挂载了目录到该目录下\",{\"1\":{\"699\":1}}],[\"因为我们的springcloud\",{\"1\":{\"655\":1}}],[\"因为我是自己封装\",{\"1\":{\"262\":1}}],[\"因为服务提供方修改了用户地址\",{\"1\":{\"624\":1}}],[\"因为此时的修改都已经记录到快照中了\",{\"1\":{\"456\":1}}],[\"因为此时常量池中是没有\",{\"1\":{\"155\":1}}],[\"因为redis读写性能优异\",{\"1\":{\"433\":1}}],[\"因为它被解释为识别符\",{\"1\":{\"424\":1}}],[\"因为使用了\",{\"1\":{\"331\":1,\"381\":1}}],[\"因为要选择分词器\",{\"1\":{\"321\":1}}],[\"因为无需返回条件的具体数据\",{\"1\":{\"313\":1}}],[\"因为异常不能跨线程传播回\",{\"1\":{\"221\":1}}],[\"因为一个进程在一个时间段内只能做一个事情\",{\"1\":{\"204\":1}}],[\"因为map中的\",{\"1\":{\"194\":1,\"195\":1}}],[\"因为常量池中\",{\"1\":{\"155\":1}}],[\"因为字段大部分是私有的\",{\"1\":{\"129\":1}}],[\"因为\",{\"1\":{\"122\":1,\"141\":1,\"155\":1,\"190\":1,\"194\":1,\"204\":1,\"218\":1,\"349\":1,\"627\":1}}],[\"因为没有实现\",{\"1\":{\"59\":1}}],[\"只要通过任何一个都被认作是认证通过\",{\"1\":{\"723\":1}}],[\"只要请求中包含\",{\"1\":{\"660\":1}}],[\"只要你定义一个接口\",{\"1\":{\"335\":1,\"383\":1}}],[\"只获取用户任务\",{\"1\":{\"506\":1}}],[\"只记录操作命令的简单优势\",{\"1\":{\"456\":1}}],[\"只需在配置文件中配置即可\",{\"1\":{\"650\":1}}],[\"只需将查询语句传递给\",{\"1\":{\"302\":1}}],[\"只需要把关键字\",{\"1\":{\"418\":1}}],[\"只需要在接口上声明方法即可\",{\"1\":{\"391\":1}}],[\"只需要在配置文件\",{\"1\":{\"284\":1}}],[\"只需要操作一次\",{\"1\":{\"167\":2}}],[\"只定义了流的流向和流通道的数据单元\",{\"1\":{\"240\":1}}],[\"只不过需要登录阿里云控制台后获取自己专属的镜像源\",{\"1\":{\"686\":1}}],[\"只不过\",{\"1\":{\"178\":1}}],[\"只能使用kind\",{\"1\":{\"588\":1}}],[\"只能使用\",{\"1\":{\"349\":1}}],[\"只能操作简单的\",{\"1\":{\"338\":1}}],[\"只能包含128个符号\",{\"1\":{\"238\":1}}],[\"只能设置和获取文件本身的信息\",{\"1\":{\"236\":1}}],[\"只能用在同步方法或者同步控制块中使用\",{\"1\":{\"222\":1}}],[\"只能逐个得执行这些子任务\",{\"1\":{\"204\":1}}],[\"只能等待io操作完成才能执行其他操作\",{\"1\":{\"202\":1}}],[\"只能在队尾插入\",{\"1\":{\"169\":1}}],[\"只能初始化一次\",{\"1\":{\"78\":1}}],[\"只有在\",{\"1\":{\"831\":1}}],[\"只有api\",{\"1\":{\"763\":1}}],[\"只有当引起阻塞的原因消除时\",{\"1\":{\"215\":1}}],[\"只有\",{\"1\":{\"140\":1,\"308\":1}}],[\"只在集合中添加一个对象\",{\"1\":{\"59\":1}}],[\"只是先把日志写到aof文件的内存缓冲区\",{\"1\":{\"454\":2}}],[\"只是根据过滤标准来排除或包含文档\",{\"1\":{\"308\":1}}],[\"只是在\",{\"1\":{\"194\":1}}],[\"只是规范\",{\"1\":{\"62\":1}}],[\"只是改变元素引用的值\",{\"1\":{\"49\":1}}],[\"只是\",{\"1\":{\"48\":1}}],[\"只是储存的内存地址改变了\",{\"1\":{\"48\":1}}],[\"存放日志\",{\"1\":{\"824\":1}}],[\"存放静态文件\",{\"1\":{\"824\":1}}],[\"存放配置文件\",{\"1\":{\"824\":1}}],[\"存放数据的目录\",{\"1\":{\"752\":1}}],[\"存连线\",{\"1\":{\"568\":1}}],[\"存节点\",{\"1\":{\"568\":1}}],[\"存入键值对\",{\"1\":{\"440\":1}}],[\"存满\",{\"1\":{\"251\":1}}],[\"存储通过activiti发起的定时作业的信息\",{\"1\":{\"543\":1}}],[\"存储通用的流程资源\",{\"1\":{\"533\":1}}],[\"存储整个流程引擎数据\",{\"1\":{\"533\":1}}],[\"存储业务标识就是根据业务标识来关联查询业务系统的数据\",{\"1\":{\"513\":1}}],[\"存储数据常用的数据类型\",{\"1\":{\"364\":1}}],[\"存储数据非常方便\",{\"1\":{\"360\":1}}],[\"存储集群的数据\",{\"1\":{\"276\":1}}],[\"存储的数据都是序列化为\",{\"1\":{\"270\":1}}],[\"存储的对象\",{\"1\":{\"173\":1}}],[\"存储一个键值对到map中\",{\"1\":{\"193\":1}}],[\"存储元素时\",{\"1\":{\"188\":1}}],[\"存储\",{\"1\":{\"172\":1}}],[\"存储对象的集合\",{\"1\":{\"172\":1}}],[\"存储到\",{\"1\":{\"59\":1}}],[\"存在\",{\"1\":{\"84\":1}}],[\"存在继承的情况下\",{\"1\":{\"77\":1}}],[\"存在就使用缓存中的值\",{\"1\":{\"41\":1}}],[\"对主要参数说明如下\",{\"1\":{\"806\":1}}],[\"对主线程的影响\",{\"1\":{\"456\":1}}],[\"对容器应用来说是透明的\",{\"1\":{\"799\":1}}],[\"对server提供的证书进行验证\",{\"1\":{\"729\":1}}],[\"对apiserver的访问要经过的三个步骤\",{\"1\":{\"722\":1}}],[\"对称加密\",{\"1\":{\"720\":1}}],[\"对请求和响应做一些手脚\",{\"1\":{\"664\":1}}],[\"对可寻址的值返回其地址\",{\"1\":{\"595\":1}}],[\"对包装的值进行修改时\",{\"1\":{\"595\":1}}],[\"对修改关闭\",{\"1\":{\"468\":1}}],[\"对扩展开放\",{\"1\":{\"468\":1}}],[\"对原来的功能没有影响\",{\"1\":{\"467\":1}}],[\"对数据进行一次检查\",{\"1\":{\"462\":1}}],[\"对生成的rdb文件做压缩处理\",{\"1\":{\"451\":1}}],[\"对一个列表进行修剪\",{\"1\":{\"442\":1}}],[\"对链表的两端进行push和pop操作\",{\"1\":{\"438\":1}}],[\"对整数或浮点数进行自增或自减操作\",{\"1\":{\"438\":1}}],[\"对整个字符串或字符串的一部分进行操作\",{\"1\":{\"438\":1}}],[\"对非事务表不做限制\",{\"1\":{\"424\":1}}],[\"对应的安装文件安装\",{\"1\":{\"690\":1}}],[\"对应的连接符\",{\"1\":{\"631\":1}}],[\"对应画图时的document\",{\"1\":{\"542\":1}}],[\"对应user表中的字段\",{\"1\":{\"417\":1}}],[\"对应\",{\"1\":{\"350\":2}}],[\"对比数据库表中保存的版本\",{\"1\":{\"496\":1}}],[\"对比更新\",{\"1\":{\"291\":1}}],[\"对比元数据如果一样就不进行任何操作\",{\"1\":{\"291\":1}}],[\"对静态方法\",{\"1\":{\"223\":1}}],[\"对\",{\"1\":{\"198\":1,\"502\":1}}],[\"对日期进行\",{\"1\":{\"117\":1}}],[\"对类中的引用类型进行单独拷贝\",{\"1\":{\"65\":1}}],[\"对象序列化\",{\"0\":{\"254\":1}}],[\"对象保存的是\",{\"1\":{\"155\":1}}],[\"对象会直接存储在\",{\"1\":{\"154\":1}}],[\"对象已经被创建过\",{\"1\":{\"140\":1}}],[\"对象来设置或获取字段\",{\"1\":{\"126\":1}}],[\"对象的过程\",{\"1\":{\"254\":1}}],[\"对象的某个线程\",{\"1\":{\"222\":2}}],[\"对象的所有旧值\",{\"1\":{\"198\":1}}],[\"对象的\",{\"1\":{\"155\":2,\"194\":1,\"254\":1}}],[\"对象的信息\",{\"1\":{\"134\":1}}],[\"对象的基类\",{\"1\":{\"126\":1}}],[\"对象的方法\",{\"1\":{\"122\":1}}],[\"对象是在\",{\"1\":{\"155\":1}}],[\"对象是在加载类时由\",{\"1\":{\"122\":1}}],[\"对象是同一个\",{\"1\":{\"122\":1}}],[\"对象有几种方式\",{\"1\":{\"119\":1}}],[\"对象a\",{\"1\":{\"108\":1}}],[\"对象调用\",{\"1\":{\"105\":1}}],[\"对象进行深拷贝要对整个对象图进行拷贝\",{\"1\":{\"64\":1}}],[\"对象\",{\"1\":{\"59\":1,\"117\":2,\"121\":2,\"122\":4,\"134\":1,\"135\":1,\"154\":4,\"155\":3,\"236\":3,\"254\":1,\"257\":1,\"341\":1,\"350\":1,\"364\":2,\"504\":1,\"598\":1}}],[\"对于安装了多块网卡的node\",{\"1\":{\"806\":1}}],[\"对于没接触过的同学不太容易理解\",{\"1\":{\"720\":1}}],[\"对于具体的刷新逻辑\",{\"1\":{\"670\":1}}],[\"对于简单的情况\",{\"1\":{\"657\":1}}],[\"对于三方客户端\",{\"1\":{\"645\":1}}],[\"对于\",{\"1\":{\"645\":2}}],[\"对于内存\",{\"1\":{\"449\":1}}],[\"对于group\",{\"1\":{\"421\":1,\"424\":1}}],[\"对于开发者来说也是简单实用的\",{\"1\":{\"323\":1}}],[\"对于大并发查询偶尔更新\",{\"1\":{\"291\":1}}],[\"对于大并发更新\",{\"1\":{\"291\":1}}],[\"对于单核cpu来说\",{\"1\":{\"203\":1}}],[\"对于公共成员\",{\"1\":{\"126\":1}}],[\"对于任意一个对象\",{\"1\":{\"120\":1}}],[\"对于任意一个类\",{\"1\":{\"120\":1}}],[\"对于每个内部了\",{\"1\":{\"80\":1}}],[\"对于引用数据类型的成员变量\",{\"1\":{\"63\":1,\"64\":1}}],[\"对于引用数据类型\",{\"1\":{\"57\":1}}],[\"对于基本数据类型的成员变量\",{\"1\":{\"63\":1,\"64\":1}}],[\"对于基本数据类型\",{\"1\":{\"57\":1}}],[\"对于储存的是引用类型时\",{\"1\":{\"49\":1}}],[\"相比string更节省空间\",{\"1\":{\"441\":1}}],[\"相比较而言\",{\"1\":{\"441\":1}}],[\"相关设置\",{\"0\":{\"694\":1}}],[\"相关选项\",{\"1\":{\"449\":1}}],[\"相关的一些操作这里不详细赘述\",{\"1\":{\"636\":1}}],[\"相关的数据结构\",{\"1\":{\"427\":1}}],[\"相关的信息\",{\"1\":{\"277\":2}}],[\"相关字段解释\",{\"1\":{\"299\":1}}],[\"相关文章\",{\"0\":{\"265\":1,\"358\":1,\"427\":1}}],[\"相当\",{\"1\":{\"273\":1}}],[\"相当于\",{\"1\":{\"151\":1,\"273\":2}}],[\"相对于其它鉴权机制而言\",{\"1\":{\"724\":1}}],[\"相对于节点流更高级\",{\"1\":{\"251\":1}}],[\"相对地\",{\"1\":{\"170\":1}}],[\"相切换\",{\"1\":{\"204\":1}}],[\"相应的报错或者填坑\",{\"1\":{\"635\":1}}],[\"相应的字符串对象\",{\"1\":{\"154\":1}}],[\"相应方法已经废除\",{\"1\":{\"113\":1}}],[\"相同字段含义和运行时身份连接表一样\",{\"1\":{\"555\":1}}],[\"相同功能的代码\",{\"1\":{\"467\":1}}],[\"相同点\",{\"0\":{\"97\":1}}],[\"相同的两个对象不一定等价\",{\"1\":{\"59\":1}}],[\"相等\",{\"1\":{\"51\":1,\"55\":1}}],[\"值和正则表达式去匹配\",{\"1\":{\"661\":1}}],[\"值对\",{\"1\":{\"363\":1}}],[\"值得拥有\",{\"1\":{\"351\":1}}],[\"值又会改变\",{\"1\":{\"254\":1}}],[\"值决定了在哈希表中的存储位\",{\"1\":{\"194\":1}}],[\"值\",{\"1\":{\"57\":1,\"63\":1,\"78\":1,\"188\":1,\"254\":2}}],[\"值进行操作\",{\"1\":{\"40\":1}}],[\"招财猫\",{\"1\":{\"54\":1,\"60\":2,\"62\":1}}],[\"演示环境说明\",{\"0\":{\"636\":1}}],[\"演示案例\",{\"1\":{\"477\":1}}],[\"演示效果\",{\"0\":{\"326\":1}}],[\"演示类\",{\"0\":{\"399\":1},\"1\":{\"123\":1}}],[\"演示代码\",{\"0\":{\"60\":1}}],[\"演示\",{\"0\":{\"54\":1,\"58\":1}}],[\"默认dashboard只能集群内部访问\",{\"1\":{\"818\":1}}],[\"默认使用第1个网络接口的ip地址\",{\"1\":{\"806\":1}}],[\"默认使用lzf算法进行压缩\",{\"1\":{\"452\":1}}],[\"默认不加载\",{\"1\":{\"674\":1}}],[\"默认不生效\",{\"1\":{\"327\":1}}],[\"默认超时是\",{\"1\":{\"651\":1}}],[\"默认扫描当前包及其子包\",{\"1\":{\"637\":1}}],[\"默认集成了ribbon\",{\"1\":{\"634\":1}}],[\"默认集成了\",{\"1\":{\"610\":1}}],[\"默认comment\",{\"1\":{\"553\":1}}],[\"默认关闭\",{\"1\":{\"550\":1}}],[\"默认存储三条数据\",{\"1\":{\"533\":1}}],[\"默认校验resources下的processes文件夹里的流程文件\",{\"1\":{\"496\":1}}],[\"默认和spring\",{\"1\":{\"561\":1}}],[\"默认和\",{\"1\":{\"496\":1,\"497\":1}}],[\"默认值\",{\"1\":{\"495\":1,\"496\":1}}],[\"默认开启\",{\"1\":{\"451\":1}}],[\"默认设置下\",{\"1\":{\"424\":1}}],[\"默认配置了\",{\"1\":{\"421\":1}}],[\"默认是\",{\"1\":{\"796\":2}}],[\"默认是appendonly\",{\"1\":{\"455\":1}}],[\"默认是5\",{\"1\":{\"348\":1}}],[\"默认是自然排序\",{\"1\":{\"188\":1}}],[\"默认情况下aof功能是关闭的\",{\"1\":{\"455\":1}}],[\"默认情况下\",{\"1\":{\"455\":1,\"813\":1}}],[\"默认情况下执行shutdown命令时\",{\"1\":{\"450\":1}}],[\"默认情况下不存储原文\",{\"1\":{\"334\":1}}],[\"默认情况下分词\",{\"1\":{\"334\":1}}],[\"默认情况下是不区分大小写的\",{\"1\":{\"236\":1}}],[\"默认的负载均衡策略\",{\"1\":{\"648\":1}}],[\"默认的负载均衡策略是\",{\"1\":{\"641\":1}}],[\"默认的策略是轮询策略\",{\"1\":{\"646\":1}}],[\"默认的设置为\",{\"1\":{\"451\":1}}],[\"默认的地址就是\",{\"1\":{\"330\":1}}],[\"默认的分词器对中文支持太差\",{\"1\":{\"265\":1}}],[\"默认分词拆分\",{\"0\":{\"319\":1}}],[\"默认分词器\",{\"1\":{\"316\":1}}],[\"默认在启动时会以一个随机的uuid的前七个字符作为节点的名字\",{\"1\":{\"276\":1}}],[\"默认为bird\",{\"1\":{\"806\":1}}],[\"默认为50\",{\"1\":{\"542\":1}}],[\"默认为前\",{\"1\":{\"299\":1}}],[\"默认为\",{\"1\":{\"276\":1,\"343\":1,\"344\":1,\"631\":1,\"658\":1}}],[\"默认自然排序\",{\"1\":{\"183\":1}}],[\"默认\",{\"1\":{\"91\":2,\"126\":1,\"316\":1}}],[\"默认会调用\",{\"1\":{\"52\":1}}],[\"默认返回格式为\",{\"1\":{\"52\":1}}],[\"前提是需要在api\",{\"1\":{\"723\":1}}],[\"前提条件\",{\"1\":{\"152\":1}}],[\"前置操作\",{\"1\":{\"665\":1}}],[\"前面两个是认证和授权\",{\"1\":{\"722\":1}}],[\"前面\",{\"1\":{\"349\":1}}],[\"前面的是该类运行时的类\",{\"1\":{\"52\":1}}],[\"前言\",{\"0\":{\"26\":1,\"447\":1}}],[\"导出png之后\",{\"1\":{\"499\":1}}],[\"导出一个属性\",{\"1\":{\"133\":1}}],[\"导入时是否检查\",{\"1\":{\"451\":1}}],[\"导入包管理系统使用的公钥\",{\"0\":{\"371\":1}}],[\"导入\",{\"0\":{\"329\":1,\"379\":1},\"1\":{\"658\":1}}],[\"导入测试数据\",{\"0\":{\"294\":1}}],[\"导致写盘慢\",{\"1\":{\"453\":1}}],[\"导致其他线程进入阻塞状态\",{\"1\":{\"225\":1}}],[\"导致当前线程等待\",{\"1\":{\"51\":1}}],[\"导航\",{\"0\":{\"6\":1,\"28\":1}}],[\"唤醒在此对象监视器上等待的所有线程\",{\"1\":{\"51\":1}}],[\"唤醒在此对象监视器上等待的单个线程\",{\"1\":{\"51\":1}}],[\"返回一个布尔值结果\",{\"1\":{\"656\":1}}],[\"返回索引对应的方法\",{\"1\":{\"597\":1}}],[\"返回索引对应的结构体字段的信息\",{\"1\":{\"590\":1}}],[\"返回值能否被修改\",{\"1\":{\"595\":1}}],[\"返回字段的信息\",{\"1\":{\"590\":1}}],[\"返回结构体成员方法\",{\"1\":{\"597\":1}}],[\"返回结构体成员字段数量\",{\"1\":{\"590\":1}}],[\"返回结果最多可以包含几段不连续的文字\",{\"1\":{\"348\":1}}],[\"返回结果\",{\"1\":{\"289\":1,\"290\":1,\"312\":1}}],[\"返回价格\",{\"1\":{\"477\":1}}],[\"返回两个set集合的并集存入另一个set集合\",{\"1\":{\"443\":1}}],[\"返回两个set集合的并集\",{\"1\":{\"443\":1}}],[\"返回两个set集合的交集存入另一个set集合\",{\"1\":{\"443\":1}}],[\"返回两个set集合的交集\",{\"1\":{\"443\":1}}],[\"返回key1中特有元素存入另一个set集合\",{\"1\":{\"443\":1}}],[\"返回key1中特有元素\",{\"1\":{\"443\":1}}],[\"返回集合中的所有成员\",{\"1\":{\"443\":1}}],[\"返回泛型\",{\"1\":{\"348\":1}}],[\"返回泛型对象\",{\"1\":{\"135\":1}}],[\"返回的结果里面每个\",{\"1\":{\"341\":1}}],[\"返回的结果像这样\",{\"1\":{\"299\":1}}],[\"返回hits为空\",{\"1\":{\"313\":1}}],[\"返回部分字段\",{\"0\":{\"304\":1},\"1\":{\"304\":1}}],[\"返回已读取的字节数量\",{\"1\":{\"242\":1,\"246\":1}}],[\"返回指定集合中指定元素的出现次数\",{\"1\":{\"198\":1}}],[\"返回给定集合中的最大元素\",{\"1\":{\"198\":2}}],[\"返回map中所有键值对所组成的set集合\",{\"1\":{\"193\":1}}],[\"返回map中所有\",{\"1\":{\"193\":2}}],[\"返回map中指定key对应的value值\",{\"1\":{\"193\":1}}],[\"返回null\",{\"1\":{\"193\":1}}],[\"返回正数\",{\"1\":{\"189\":1}}],[\"返回负数\",{\"1\":{\"189\":1}}],[\"返回当前列表中元素个数\",{\"1\":{\"176\":1}}],[\"返回被替换的旧元素\",{\"1\":{\"176\":1}}],[\"返回容量大小\",{\"1\":{\"147\":1}}],[\"返回\",{\"1\":{\"117\":2,\"135\":1,\"151\":1,\"236\":1,\"440\":2,\"590\":1,\"596\":1,\"604\":2}}],[\"返回true\",{\"1\":{\"108\":1}}],[\"返回对象的哈希码值\",{\"1\":{\"53\":1}}],[\"返回运行时类\",{\"1\":{\"53\":1}}],[\"返回该对象的字符串表示\",{\"1\":{\"51\":1}}],[\"返回该对象的哈希码值\",{\"1\":{\"51\":1}}],[\"返回此列表的最后一个元素\",{\"1\":{\"180\":2}}],[\"返回此列表的第一个元素\",{\"1\":{\"180\":2}}],[\"返回此\",{\"1\":{\"51\":1}}],[\"指针类型\",{\"1\":{\"586\":1}}],[\"指在不改变现有对象结构的情况下\",{\"1\":{\"474\":1}}],[\"指在一个索引中\",{\"1\":{\"274\":1}}],[\"指令包起来\",{\"1\":{\"431\":1}}],[\"指纹一健开机登录\",{\"1\":{\"351\":1}}],[\"指纹解锁\",{\"1\":{\"351\":1}}],[\"指定admin证书和秘钥\",{\"1\":{\"761\":1}}],[\"指定apiserver的地址和证书位置\",{\"1\":{\"761\":1,\"785\":1}}],[\"指定该证书的\",{\"1\":{\"742\":1}}],[\"指定授权使用该证书的\",{\"1\":{\"733\":1}}],[\"指定了\",{\"1\":{\"723\":1}}],[\"指定stash\",{\"1\":{\"709\":1}}],[\"指定容器名称\",{\"1\":{\"692\":1}}],[\"指定路由配置文件\",{\"1\":{\"669\":1}}],[\"指定当前服务的名称\",{\"1\":{\"638\":1}}],[\"指定的\",{\"1\":{\"513\":1,\"736\":1}}],[\"指定的顺序\",{\"1\":{\"198\":1}}],[\"指定集合名称\",{\"1\":{\"382\":1}}],[\"指定分词器\",{\"1\":{\"334\":1}}],[\"指定索引名和\",{\"1\":{\"332\":1}}],[\"指定字段搜索时使用的分词器\",{\"1\":{\"334\":1}}],[\"指定字段\",{\"1\":{\"304\":1}}],[\"指定\",{\"1\":{\"289\":1}}],[\"指定用哪个唯一标识\",{\"1\":{\"289\":1}}],[\"指把\",{\"1\":{\"254\":1}}],[\"指程序中定义的对象引用所指向的具体类型在运行期间才确定\",{\"1\":{\"101\":1}}],[\"指的是\",{\"1\":{\"91\":1}}],[\"指示其他某个对象是否与此对象\",{\"1\":{\"51\":1}}],[\"指向新的元素位置\",{\"1\":{\"168\":1}}],[\"指向了\",{\"1\":{\"48\":1}}],[\"指向的是新的数组\",{\"1\":{\"48\":1}}],[\"常见方案spring\",{\"1\":{\"440\":1}}],[\"常见的内存淘汰机制分为四大类\",{\"1\":{\"463\":1}}],[\"常见的字符集\",{\"0\":{\"238\":1}}],[\"常见的数据结构\",{\"0\":{\"165\":1}}],[\"常常可以看到返回的结果集中和我们查询条件相符合的字段被特殊的颜色所标记\",{\"1\":{\"339\":1}}],[\"常用组件\",{\"1\":{\"725\":1}}],[\"常用命令\",{\"0\":{\"689\":1,\"702\":1},\"1\":{\"702\":1}}],[\"常用命令组\",{\"0\":{\"420\":1}}],[\"常用功能包括路由转发\",{\"1\":{\"653\":1}}],[\"常用\",{\"0\":{\"176\":1,\"180\":1,\"184\":1,\"193\":1,\"563\":1},\"1\":{\"198\":1}}],[\"常用实现类\",{\"0\":{\"175\":1,\"183\":1,\"192\":1}}],[\"常用方法\",{\"0\":{\"50\":1,\"114\":1,\"117\":1,\"147\":1,\"590\":1},\"1\":{\"129\":1,\"242\":1,\"243\":1,\"246\":1,\"247\":1,\"595\":1}}],[\"常量池中没有\",{\"1\":{\"155\":1}}],[\"常量池中可以存储堆中的地址引用\",{\"1\":{\"155\":1}}],[\"常量池中生成一个\",{\"1\":{\"155\":1}}],[\"常量池中的\",{\"1\":{\"154\":1}}],[\"常量池中\",{\"1\":{\"154\":1}}],[\"常量池\",{\"0\":{\"154\":1},\"1\":{\"154\":1,\"155\":1,\"156\":1}}],[\"常量\",{\"1\":{\"43\":1,\"121\":1}}],[\"浮点类型是\",{\"1\":{\"49\":1}}],[\"创建secret\",{\"1\":{\"804\":1}}],[\"创建configmap\",{\"1\":{\"804\":1}}],[\"创建calico服务\",{\"1\":{\"804\":1}}],[\"创建cat的实例\",{\"1\":{\"591\":1}}],[\"创建cat对象\",{\"1\":{\"103\":1}}],[\"创建kubelet配置文件\",{\"0\":{\"783\":1}}],[\"创建kube\",{\"0\":{\"764\":1,\"771\":1,\"776\":1,\"790\":1},\"1\":{\"771\":1,\"772\":1,\"776\":1,\"777\":1}}],[\"创建工作目录并拷贝二进制文件\",{\"0\":{\"781\":1}}],[\"创建工作目录并解压二进制包\",{\"0\":{\"751\":1}}],[\"创建工作目录\",{\"1\":{\"759\":1}}],[\"创建etcd配置文件\",{\"0\":{\"752\":1}}],[\"创建如下的ca\",{\"1\":{\"729\":1,\"730\":1}}],[\"创建tls证书和秘钥\",{\"0\":{\"717\":1}}],[\"创建高可用etcd集群\",{\"1\":{\"716\":1}}],[\"创建mysql\",{\"0\":{\"700\":1}}],[\"创建镜像\",{\"1\":{\"689\":1}}],[\"创建配置文件\",{\"0\":{\"684\":1}}],[\"创建时间排序\",{\"1\":{\"580\":1}}],[\"创建时间\",{\"1\":{\"537\":1,\"542\":1,\"548\":1,\"552\":1,\"553\":1,\"558\":1}}],[\"创建processengine对象\",{\"1\":{\"503\":2,\"505\":1,\"506\":1,\"509\":1,\"510\":1,\"511\":1,\"513\":1,\"514\":2,\"523\":1,\"527\":1,\"528\":1}}],[\"创建处理链\",{\"1\":{\"483\":1}}],[\"创建型模式\",{\"0\":{\"470\":1},\"1\":{\"469\":1}}],[\"创建用户以及赋权\",{\"1\":{\"700\":1}}],[\"创建用户并授予指定数据库全部权限\",{\"1\":{\"420\":1}}],[\"创建用户并赋权\",{\"0\":{\"405\":1}}],[\"创建用户的用户名称\",{\"1\":{\"406\":1}}],[\"创建用户\",{\"0\":{\"406\":1},\"1\":{\"700\":1}}],[\"创建一个定时器\",{\"1\":{\"461\":1}}],[\"创建一个列表文件\",{\"0\":{\"372\":1}}],[\"创建一个索引\",{\"1\":{\"292\":1}}],[\"创建索引\",{\"1\":{\"338\":1}}],[\"创建新分支\",{\"0\":{\"706\":1}}],[\"创建新目录\",{\"1\":{\"236\":2}}],[\"创建新文件\",{\"1\":{\"236\":1}}],[\"创建的时候会发现已经存在\",{\"1\":{\"155\":1}}],[\"创建的\",{\"1\":{\"154\":1,\"155\":1}}],[\"创建fish对象\",{\"1\":{\"104\":1}}],[\"创建dog对象\",{\"1\":{\"103\":1}}],[\"创建并返回此对象的一个副本\",{\"1\":{\"51\":1}}],[\"创建\",{\"0\":{\"335\":1,\"383\":1,\"415\":1,\"728\":1,\"729\":1,\"730\":1,\"732\":1,\"735\":1,\"738\":1,\"741\":1,\"761\":1,\"766\":1,\"772\":1,\"777\":1},\"1\":{\"48\":1,\"160\":1,\"364\":1,\"372\":1,\"599\":1,\"716\":1,\"760\":1,\"764\":1,\"765\":1,\"766\":1}}],[\"栈操作\",{\"1\":{\"180\":1}}],[\"栈的数据结构\",{\"1\":{\"179\":1}}],[\"栈结构\",{\"1\":{\"175\":1}}],[\"栈结构仅允许在表的一端进行插入和删除运算\",{\"1\":{\"170\":1}}],[\"栈底\",{\"1\":{\"170\":1}}],[\"栈顶\",{\"1\":{\"170\":1}}],[\"栈\",{\"0\":{\"170\":1},\"1\":{\"165\":1,\"170\":1,\"442\":1}}],[\"栈空间\",{\"1\":{\"48\":1}}],[\"栈帧\",{\"1\":{\"43\":1}}],[\"​\",{\"1\":{\"48\":1,\"799\":4,\"802\":2}}],[\"语句修改特定数据库中所有数据表的权限\",{\"1\":{\"417\":1}}],[\"语句在特定数据库中创建新表的权限\",{\"1\":{\"417\":1}}],[\"语句更新特定数据库中所有数据表的值的权限\",{\"1\":{\"417\":1}}],[\"语句删除特定数据库中所有表的数据行的权限\",{\"1\":{\"417\":1}}],[\"语句向特定数据库中所有表添加数据行的权限\",{\"1\":{\"417\":1}}],[\"语句访问特定数据库中所有表和视图的权限\",{\"1\":{\"417\":1}}],[\"语句表示\",{\"1\":{\"416\":1}}],[\"语句时遇到的错误\",{\"1\":{\"421\":1}}],[\"语句时\",{\"1\":{\"155\":1}}],[\"语法如下👇\",{\"1\":{\"249\":1}}],[\"语法\",{\"1\":{\"244\":1,\"248\":1,\"252\":1,\"253\":1}}],[\"语法糖\",{\"1\":{\"172\":1}}],[\"语法糖初始化\",{\"1\":{\"46\":1}}],[\"语法格式\",{\"1\":{\"108\":1}}],[\"语言中\",{\"1\":{\"585\":1}}],[\"语言一样\",{\"1\":{\"585\":1}}],[\"语言编写\",{\"1\":{\"360\":1}}],[\"语言访问控制检查的能力\",{\"1\":{\"126\":1}}],[\"语言\",{\"1\":{\"31\":1}}],[\"访问地址\",{\"1\":{\"818\":1}}],[\"访问\",{\"0\":{\"620\":1},\"1\":{\"665\":1}}],[\"访问接口\",{\"1\":{\"607\":1}}],[\"访问成员\",{\"1\":{\"126\":1}}],[\"访问范围是\",{\"1\":{\"91\":2}}],[\"访问修饰符\",{\"0\":{\"91\":1},\"1\":{\"91\":1}}],[\"访问内部类需要实例化对象来访问\",{\"1\":{\"80\":1}}],[\"访问内部类直接用外部类名访问\",{\"1\":{\"80\":1}}],[\"访问数组元素\",{\"1\":{\"46\":1}}],[\"访问元素\",{\"1\":{\"45\":1}}],[\"变量配置\",{\"0\":{\"633\":1}}],[\"变量key\",{\"1\":{\"544\":1}}],[\"变量类型\",{\"1\":{\"544\":1,\"558\":1}}],[\"变量id\",{\"1\":{\"544\":1}}],[\"变量的数量\",{\"1\":{\"540\":1}}],[\"变量实际的值\",{\"1\":{\"524\":1}}],[\"变量也销毁\",{\"1\":{\"72\":1}}],[\"变量\",{\"1\":{\"48\":1,\"94\":1}}],[\"变量名称\",{\"1\":{\"524\":1}}],[\"变量名\",{\"1\":{\"46\":1,\"47\":1,\"103\":2,\"104\":2,\"558\":1}}],[\"变为\",{\"1\":{\"10\":1}}],[\"静态密码文件\",{\"1\":{\"723\":1}}],[\"静态token\",{\"1\":{\"723\":1}}],[\"静态和实例内部类\",{\"1\":{\"80\":1}}],[\"静态导包\",{\"0\":{\"76\":1}}],[\"静态内部类不能访问外部类的非静态的变量和方法\",{\"1\":{\"75\":1}}],[\"静态内部类\",{\"0\":{\"75\":1,\"82\":1},\"1\":{\"80\":1,\"82\":1}}],[\"静态语句块在类初始化时运行一次\",{\"1\":{\"74\":1}}],[\"静态语句块\",{\"0\":{\"74\":1},\"1\":{\"77\":2}}],[\"静态方法在类加载的时候就存在了\",{\"1\":{\"73\":1}}],[\"静态方法\",{\"0\":{\"73\":1}}],[\"静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序\",{\"1\":{\"77\":1}}],[\"静态变量和静态语句块优先于实例变量和普通语句块\",{\"1\":{\"77\":1}}],[\"静态变量在内存中只存在一份\",{\"1\":{\"72\":1}}],[\"静态变量\",{\"0\":{\"72\":1},\"1\":{\"72\":2,\"73\":1,\"75\":1,\"77\":2}}],[\"静态变量等数据\",{\"1\":{\"121\":1}}],[\"静态变量等\",{\"1\":{\"43\":1}}],[\"静态初始化内存分析\",{\"1\":{\"48\":1}}],[\"静态初始化\",{\"0\":{\"46\":1}}],[\"越界异常错误\",{\"1\":{\"45\":1}}],[\"引导token\",{\"1\":{\"723\":1}}],[\"引擎属性表\",{\"0\":{\"539\":1}}],[\"引擎会包含很多数据\",{\"1\":{\"500\":1}}],[\"引入依赖解决问题\",{\"1\":{\"675\":1}}],[\"引入自定义词库\",{\"0\":{\"324\":1},\"1\":{\"324\":1}}],[\"引入了新的无类型\",{\"1\":{\"274\":1}}],[\"引用对象\",{\"1\":{\"155\":1}}],[\"引用的地址\",{\"1\":{\"78\":1}}],[\"引用的对象\",{\"1\":{\"64\":1}}],[\"引用数据类型\",{\"1\":{\"78\":1}}],[\"引用数组的\",{\"1\":{\"48\":1}}],[\"引用类型的成员变量所\",{\"1\":{\"64\":1}}],[\"引用类型\",{\"1\":{\"45\":1}}],[\"引起注意\",{\"0\":{\"9\":1}}],[\"用作身份验证\",{\"1\":{\"723\":1}}],[\"用作服务发现\",{\"1\":{\"649\":1}}],[\"用lpush加入时间轴\",{\"1\":{\"442\":1}}],[\"用long类型存储\",{\"1\":{\"112\":1}}],[\"用默认的存储引擎替代\",{\"1\":{\"424\":1}}],[\"用\",{\"1\":{\"364\":1,\"456\":1}}],[\"用来配合云服务提供商的控制\",{\"1\":{\"770\":1}}],[\"用来在流程中实现决策\",{\"1\":{\"530\":1}}],[\"用来包装原有的类\",{\"1\":{\"471\":1,\"476\":1}}],[\"用来做复合查询\",{\"1\":{\"308\":1}}],[\"用来做乐观锁\",{\"1\":{\"290\":1}}],[\"用来表示一组相同类型的变量\",{\"1\":{\"45\":1}}],[\"用户界面\",{\"1\":{\"817\":1}}],[\"用户在kubernetes集群中设置了pod的network\",{\"1\":{\"806\":1}}],[\"用户在购买时\",{\"1\":{\"477\":1}}],[\"用户可以很容易地从一个角色被指派到另一个角色\",{\"1\":{\"724\":1}}],[\"用户可以在这里配置远程扩展停止词字典\",{\"1\":{\"324\":1}}],[\"用户可以在这里配置远程扩展字典\",{\"1\":{\"324\":1}}],[\"用户可以在这里配置自己的扩展停止词字典\",{\"1\":{\"324\":1}}],[\"用户可以在这里配置自己的扩展字典\",{\"1\":{\"324\":1}}],[\"用户则依据它的责任和资格来被指派相应的角色\",{\"1\":{\"724\":1}}],[\"用户通过成为适当角色的成员而得到这些角色的权限\",{\"1\":{\"724\":1}}],[\"用户也可以创建自己的\",{\"1\":{\"723\":1}}],[\"用户的密码\",{\"1\":{\"692\":1}}],[\"用户认证与授权\",{\"1\":{\"611\":1}}],[\"用户登录成功后\",{\"1\":{\"607\":1}}],[\"用户登录key\",{\"1\":{\"161\":1}}],[\"用户参数注入注解\",{\"1\":{\"605\":1}}],[\"用户id\",{\"1\":{\"541\":1,\"550\":1,\"552\":1,\"553\":1,\"555\":1}}],[\"用户类型\",{\"1\":{\"541\":1,\"555\":1}}],[\"用户查询待办任务后\",{\"1\":{\"492\":1}}],[\"用户权限的权限\",{\"1\":{\"418\":1}}],[\"用户管理\",{\"1\":{\"416\":1}}],[\"用户\",{\"1\":{\"413\":1,\"420\":1}}],[\"用户授权命令\",{\"0\":{\"413\":1}}],[\"用户设定某商品的价格阈值\",{\"1\":{\"271\":1}}],[\"用户将一系列指令写下来\",{\"1\":{\"202\":1}}],[\"用户输入一个指令\",{\"1\":{\"202\":1}}],[\"用到某个类例如\",{\"1\":{\"121\":1}}],[\"用其他关键字\",{\"1\":{\"94\":1}}],[\"用private修饰会报编译错误\",{\"1\":{\"94\":1}}],[\"用于对接kubernetes集群中为pod设置的network\",{\"1\":{\"806\":1}}],[\"用于设置pod的网络资源\",{\"1\":{\"806\":1}}],[\"用于设置路由信息所载的配置文件\",{\"1\":{\"668\":1}}],[\"用于完成容器ip地址的分配\",{\"1\":{\"806\":1}}],[\"用于使用tls方式连接etcd\",{\"1\":{\"804\":1}}],[\"用于连接apiserver\",{\"1\":{\"783\":1}}],[\"用于验证\",{\"1\":{\"723\":1}}],[\"用于启动时创建nacos\",{\"1\":{\"669\":1}}],[\"用于生成fallback类实例\",{\"1\":{\"649\":1}}],[\"用于生成各种不同类型的查询对象\",{\"1\":{\"350\":1,\"352\":1}}],[\"用于activiti的乐观锁操作\",{\"1\":{\"558\":1}}],[\"用于存放流程产生的信息\",{\"1\":{\"553\":1}}],[\"用于存储键值对\",{\"1\":{\"438\":1}}],[\"用于存储正则表达式\",{\"1\":{\"364\":1}}],[\"用于存储二进制数据\",{\"1\":{\"364\":1}}],[\"用于存储浮点值\",{\"1\":{\"364\":1}}],[\"用于存储布尔值\",{\"1\":{\"364\":1}}],[\"用于存储数值\",{\"1\":{\"364\":1}}],[\"用于存储\",{\"1\":{\"43\":2,\"48\":1}}],[\"用于描述类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务\",{\"1\":{\"469\":1}}],[\"用于指定结果的排序顺序\",{\"1\":{\"388\":1}}],[\"用于在文档中存储\",{\"1\":{\"364\":1}}],[\"用于创建文档的\",{\"1\":{\"364\":1}}],[\"用于创建空值\",{\"1\":{\"364\":1}}],[\"用于内嵌文档\",{\"1\":{\"364\":1}}],[\"用于将数组或列表或多个值存储为一个键\",{\"1\":{\"364\":1}}],[\"用于大量数据存储\",{\"1\":{\"357\":1}}],[\"用于构建分页请求\",{\"1\":{\"350\":1}}],[\"用于修改\",{\"1\":{\"289\":1}}],[\"用于减少磁盘的操作\",{\"1\":{\"251\":1}}],[\"用于表示磁盘中某个文件或文件夹的路径\",{\"1\":{\"236\":1}}],[\"用于表示该数组能存储多大的数据\",{\"1\":{\"177\":1}}],[\"用于安全的遍历元素\",{\"1\":{\"172\":1}}],[\"用于快速构建一个\",{\"1\":{\"117\":1}}],[\"用于比较其他某个对象是否与此对象\",{\"1\":{\"55\":1}}],[\"数组转换为字符串\",{\"1\":{\"239\":1}}],[\"数组排序\",{\"1\":{\"197\":1}}],[\"数组格式化输出\",{\"1\":{\"197\":1}}],[\"数组结构\",{\"1\":{\"173\":1}}],[\"数组使用\",{\"1\":{\"167\":1}}],[\"数组\",{\"0\":{\"167\":1},\"1\":{\"165\":1,\"239\":1,\"601\":1}}],[\"数组最大长度\",{\"1\":{\"152\":2}}],[\"数组拷贝\",{\"1\":{\"150\":1,\"197\":1}}],[\"数组容量\",{\"1\":{\"150\":2}}],[\"数组一旦创建长度无法改变\",{\"1\":{\"49\":1}}],[\"数组所有元素初始化为默认值\",{\"1\":{\"49\":1}}],[\"数组必须初始化才能使用\",{\"1\":{\"49\":1}}],[\"数组特点\",{\"0\":{\"49\":1}}],[\"数组本身的长度怕没有改变\",{\"1\":{\"48\":1}}],[\"数组初始化内存图分析\",{\"0\":{\"48\":1}}],[\"数组长度无法改变\",{\"1\":{\"48\":1}}],[\"数组长度\",{\"1\":{\"47\":1}}],[\"数组是\",{\"1\":{\"45\":1}}],[\"数组的定义\",{\"0\":{\"45\":1}}],[\"数组类型\",{\"0\":{\"44\":1}}],[\"数据校验以及集群状态变更等\",{\"1\":{\"763\":1}}],[\"数据表结构\",{\"0\":{\"533\":1}}],[\"数据集从设置过期时间数据变为全体数据\",{\"1\":{\"464\":3}}],[\"数据就会全部丢失\",{\"1\":{\"447\":1}}],[\"数据字段\",{\"1\":{\"362\":1}}],[\"数据记录行\",{\"1\":{\"362\":1}}],[\"数据准备\",{\"0\":{\"351\":1}}],[\"数据的格式如下\",{\"1\":{\"295\":1}}],[\"数据的\",{\"1\":{\"295\":1}}],[\"数据是否存在\",{\"1\":{\"290\":1}}],[\"数据可视化\",{\"1\":{\"271\":1}}],[\"数据传输单元e\",{\"1\":{\"240\":1}}],[\"数据源\",{\"1\":{\"240\":1}}],[\"数据在网络上传输是以二进制的格式\",{\"1\":{\"239\":1}}],[\"数据结构简介\",{\"0\":{\"438\":1}}],[\"数据结构\",{\"1\":{\"171\":1}}],[\"数据结构对于\",{\"1\":{\"168\":1}}],[\"数据结构就是数据在计算机中存储的方式\",{\"1\":{\"164\":1}}],[\"数据结构概述\",{\"0\":{\"164\":1}}],[\"数据二\",{\"1\":{\"46\":1}}],[\"数据1\",{\"1\":{\"46\":1}}],[\"数据类型操作\",{\"1\":{\"431\":1}}],[\"数据类型\",{\"0\":{\"38\":1},\"1\":{\"46\":2,\"47\":2,\"364\":1}}],[\"数据库环境\",{\"1\":{\"690\":1}}],[\"数据库是市面上最受欢迎的数据库\",{\"1\":{\"690\":1}}],[\"数据库创建\",{\"1\":{\"495\":1}}],[\"数据库连接池\",{\"1\":{\"495\":1}}],[\"数据库对象\",{\"1\":{\"413\":1}}],[\"数据库和日志文件\",{\"1\":{\"376\":1}}],[\"数据库表\",{\"1\":{\"362\":1}}],[\"数据库的类别\",{\"1\":{\"357\":1}}],[\"数据库\",{\"0\":{\"5\":1},\"1\":{\"360\":1,\"361\":1,\"362\":1,\"363\":1,\"700\":1}}],[\"服务正常了\",{\"1\":{\"807\":1}}],[\"服务报错503\",{\"0\":{\"676\":1}}],[\"服务时将会打印接口耗时日志\",{\"1\":{\"665\":1}}],[\"服务注册到\",{\"1\":{\"658\":1}}],[\"服务注册与发现标准\",{\"1\":{\"610\":1}}],[\"服务注册与发现\",{\"1\":{\"610\":1}}],[\"服务名以及心跳等数据\",{\"1\":{\"624\":1}}],[\"服务消费者\",{\"1\":{\"623\":1}}],[\"服务提供者\",{\"1\":{\"623\":1}}],[\"服务提供者与服务消费者\",{\"0\":{\"623\":1}}],[\"服务容错sentinel\",{\"1\":{\"611\":1}}],[\"服务发现是\",{\"1\":{\"820\":1}}],[\"服务发现是什么\",{\"0\":{\"622\":1}}],[\"服务发现等配置失效\",{\"1\":{\"625\":1}}],[\"服务发现机制就是通过一个中间件去记录服务提供者的ip地址\",{\"1\":{\"624\":1}}],[\"服务发现原理\",{\"0\":{\"624\":1}}],[\"服务发现\",{\"1\":{\"611\":1,\"612\":1,\"626\":1,\"658\":1}}],[\"服务限流降级\",{\"1\":{\"610\":1}}],[\"服务器\",{\"1\":{\"820\":1}}],[\"服务器在执行完一个写命令之后\",{\"1\":{\"454\":1}}],[\"服务器地址\",{\"1\":{\"20\":1}}],[\"服务后\",{\"1\":{\"411\":1}}],[\"服务\",{\"0\":{\"610\":1,\"810\":1},\"1\":{\"369\":1,\"610\":1}}],[\"服务的服务\",{\"1\":{\"736\":1}}],[\"服务的调用方\",{\"1\":{\"623\":1}}],[\"服务的被调用方\",{\"1\":{\"623\":1}}],[\"服务的\",{\"1\":{\"43\":1}}],[\"控制代码\",{\"1\":{\"725\":1}}],[\"控制台添加一个新的配置\",{\"1\":{\"632\":1}}],[\"控制台添加配置文件\",{\"0\":{\"632\":1}}],[\"控制每个线程栈的大小\",{\"1\":{\"43\":1}}],[\"控制参数\",{\"1\":{\"43\":3}}],[\"堆内存中的对象数据\",{\"1\":{\"254\":1}}],[\"堆区\",{\"1\":{\"155\":1}}],[\"堆区的\",{\"1\":{\"154\":1}}],[\"堆空间\",{\"1\":{\"48\":1}}],[\"堆由\",{\"1\":{\"43\":1}}],[\"堆\",{\"1\":{\"43\":1,\"155\":1,\"165\":1}}],[\"xvf\",{\"1\":{\"825\":1}}],[\"xargs\",{\"1\":{\"788\":1}}],[\"xapwcc\",{\"1\":{\"498\":1}}],[\"x509\",{\"1\":{\"784\":1}}],[\"x86\",{\"1\":{\"681\":1}}],[\"xojon2\",{\"1\":{\"620\":1}}],[\"x实现拓展组件功能\",{\"1\":{\"613\":1}}],[\"x和1\",{\"1\":{\"613\":1}}],[\"xs\",{\"1\":{\"733\":1,\"736\":1}}],[\"xsd\",{\"1\":{\"495\":1}}],[\"xsi\",{\"1\":{\"495\":1}}],[\"xsi=\",{\"1\":{\"495\":1}}],[\"xss\",{\"1\":{\"43\":1}}],[\"xkwayw\",{\"1\":{\"366\":1}}],[\"xp\",{\"1\":{\"366\":1}}],[\"xpost\",{\"1\":{\"296\":1}}],[\"xr\",{\"1\":{\"351\":1}}],[\"x\",{\"1\":{\"278\":1,\"282\":2,\"286\":1,\"327\":18,\"351\":2,\"353\":2,\"399\":2,\"457\":1,\"495\":2,\"595\":7,\"746\":1}}],[\"xid\",{\"1\":{\"262\":10}}],[\"xmx\",{\"1\":{\"43\":1}}],[\"xms\",{\"1\":{\"43\":1}}],[\"xml更名为leave\",{\"1\":{\"499\":1}}],[\"xml文件\",{\"1\":{\"499\":1}}],[\"xml文件的内容\",{\"1\":{\"324\":1}}],[\"xml中的配置来创建\",{\"1\":{\"495\":1}}],[\"xmlschema\",{\"1\":{\"495\":1}}],[\"xmlns\",{\"1\":{\"495\":1}}],[\"xmlns=\",{\"1\":{\"495\":1}}],[\"xml\",{\"0\":{\"567\":1},\"1\":{\"24\":1,\"324\":1,\"495\":2,\"499\":2,\"650\":2,\"657\":1}}],[\"xxl\",{\"1\":{\"613\":1}}],[\"xxxfile\",{\"1\":{\"764\":1}}],[\"xxx<仓库名称>\",{\"1\":{\"704\":1}}],[\"xxxgatewayfilterfactory\",{\"1\":{\"665\":1}}],[\"xxxkey\",{\"1\":{\"569\":1}}],[\"xxxx\",{\"1\":{\"317\":1,\"788\":1}}],[\"xxx\",{\"1\":{\"76\":1,\"331\":2,\"369\":1,\"380\":1,\"381\":2,\"704\":1,\"715\":1,\"764\":3}}],[\"xx\",{\"1\":{\"43\":2,\"331\":1,\"381\":1,\"561\":1}}],[\"类别\",{\"1\":{\"535\":1}}],[\"类之间的依赖关系应该建立在最小的接口上\",{\"1\":{\"468\":1}}],[\"类似价格区间查询我们可以使用\",{\"1\":{\"393\":1}}],[\"类似于ribbon\",{\"1\":{\"644\":1}}],[\"类似于语言层\",{\"1\":{\"595\":2}}],[\"类似于关系型数据库中的行\",{\"1\":{\"361\":1}}],[\"类似于beaninfo的静态工厂类\",{\"1\":{\"133\":1}}],[\"类似\",{\"1\":{\"288\":1}}],[\"类下面有它的一些子类\",{\"1\":{\"257\":1}}],[\"类版本不对应\",{\"1\":{\"254\":1}}],[\"类也实现了\",{\"1\":{\"218\":1}}],[\"类实现多线程\",{\"1\":{\"218\":1}}],[\"类类型\",{\"1\":{\"135\":1}}],[\"类表示javabean类通过存储器\",{\"1\":{\"133\":1}}],[\"类中的装饰器模式\",{\"1\":{\"478\":1}}],[\"类中除了\",{\"1\":{\"179\":1}}],[\"类中有个方法\",{\"1\":{\"128\":1}}],[\"类中提供了通过无参构造器快速构建对象的方法\",{\"1\":{\"125\":1}}],[\"类常用方法\",{\"1\":{\"127\":1}}],[\"类是代表字符串\",{\"1\":{\"138\":1}}],[\"类是\",{\"1\":{\"126\":1}}],[\"类来格式化和解析字符串\",{\"1\":{\"113\":1}}],[\"类来实现日期和时间的转换操作等\",{\"1\":{\"113\":1}}],[\"类b\",{\"1\":{\"108\":1}}],[\"类型参数\",{\"1\":{\"604\":1}}],[\"类型参数进行解析\",{\"1\":{\"604\":1}}],[\"类型返回\",{\"1\":{\"594\":6}}],[\"类型还可以生成原始类型对象\",{\"1\":{\"593\":1}}],[\"类型是一个结构体\",{\"1\":{\"593\":1}}],[\"类型是一个接口类型\",{\"1\":{\"587\":1}}],[\"类型和\",{\"1\":{\"585\":1}}],[\"类型有event\",{\"1\":{\"553\":1}}],[\"类型元素的集合\",{\"1\":{\"444\":1}}],[\"类型下保存\",{\"1\":{\"289\":1}}],[\"类型\",{\"0\":{\"274\":1},\"1\":{\"332\":2,\"589\":1,\"593\":1,\"631\":1,\"658\":1}}],[\"类型转换\",{\"0\":{\"107\":1}}],[\"类型的值\",{\"1\":{\"594\":1}}],[\"类型的节点\",{\"1\":{\"569\":1}}],[\"类型的bean中的\",{\"1\":{\"561\":1}}],[\"类型的分数\",{\"1\":{\"444\":1}}],[\"类型的无序集合\",{\"1\":{\"443\":1}}],[\"类型的时间转\",{\"1\":{\"115\":1}}],[\"类型的\",{\"1\":{\"98\":1}}],[\"类型的数组存储数据\",{\"1\":{\"138\":1}}],[\"类型的数组\",{\"1\":{\"46\":2,\"47\":1,\"177\":1}}],[\"类型的基本数据类型\",{\"1\":{\"40\":1}}],[\"类名使用\",{\"1\":{\"89\":1}}],[\"类名用\",{\"1\":{\"89\":1}}],[\"类的子类\",{\"1\":{\"181\":1}}],[\"类的对象是确定的有限个数\",{\"1\":{\"159\":1}}],[\"类的方法\",{\"1\":{\"124\":1}}],[\"类的父类\",{\"1\":{\"124\":1}}],[\"类的成员包括以下三类\",{\"1\":{\"124\":1}}],[\"类的成员变量用\",{\"1\":{\"89\":1}}],[\"类的所有实例对象都共享该变量\",{\"1\":{\"72\":1}}],[\"类没有实现\",{\"1\":{\"62\":1}}],[\"类\",{\"0\":{\"113\":1,\"115\":1,\"116\":1,\"218\":1,\"236\":1},\"1\":{\"50\":1,\"72\":1,\"113\":1,\"115\":1,\"116\":1,\"118\":1,\"121\":2,\"124\":5,\"129\":1,\"134\":1,\"179\":1,\"217\":1,\"331\":1,\"332\":1,\"381\":1,\"382\":1,\"384\":1,\"490\":1,\"665\":1,\"666\":1}}],[\"类信息\",{\"1\":{\"43\":1,\"121\":1}}],[\"介绍以及概念\",{\"1\":{\"358\":1}}],[\"介绍\",{\"0\":{\"131\":1,\"360\":1,\"486\":1,\"609\":1},\"1\":{\"43\":5,\"358\":2,\"533\":1}}],[\"内置几种\",{\"1\":{\"659\":1}}],[\"内置了很多\",{\"1\":{\"659\":1}}],[\"内置分词器\",{\"0\":{\"316\":1}}],[\"内容保存在二进制资源表中\",{\"1\":{\"552\":1}}],[\"内容id\",{\"1\":{\"552\":1}}],[\"内容如下\",{\"1\":{\"498\":1,\"736\":1,\"739\":1,\"742\":1,\"753\":1,\"764\":1,\"766\":1,\"771\":1,\"772\":1,\"776\":1,\"777\":1}}],[\"内省实战\",{\"0\":{\"134\":1}}],[\"内省相关类以及api\",{\"0\":{\"133\":1}}],[\"内省的作用\",{\"0\":{\"132\":1}}],[\"内省\",{\"0\":{\"130\":1},\"1\":{\"131\":1,\"135\":1}}],[\"内部若干方法\",{\"1\":{\"593\":1}}],[\"内部指定了若干方法\",{\"1\":{\"587\":1}}],[\"内部每个方法使用\",{\"1\":{\"178\":1}}],[\"内部有容量的概念\",{\"1\":{\"177\":1}}],[\"内部使用快速排序\",{\"1\":{\"197\":1}}],[\"内部使用的就是\",{\"1\":{\"194\":1}}],[\"内部使用哈希表实现\",{\"1\":{\"186\":1}}],[\"内部使用\",{\"1\":{\"138\":1,\"144\":1}}],[\"内部类可以看作和字段\",{\"1\":{\"80\":1}}],[\"内部类概念\",{\"0\":{\"80\":1}}],[\"内部类\",{\"0\":{\"79\":1},\"1\":{\"80\":2}}],[\"内部没有引用\",{\"1\":{\"70\":1}}],[\"内部封装了一个字符数组\",{\"1\":{\"145\":1}}],[\"内部封装了一个\",{\"1\":{\"40\":1}}],[\"内存快照以一定的频率执行\",{\"1\":{\"456\":1}}],[\"内存高速缓存数据库\",{\"1\":{\"430\":1}}],[\"内存淘汰机制\",{\"0\":{\"458\":1,\"463\":1},\"1\":{\"427\":1,\"458\":1}}],[\"内存分配方面\",{\"1\":{\"205\":1}}],[\"内存图如下👇\",{\"1\":{\"140\":1}}],[\"内存图\",{\"0\":{\"69\":1}}],[\"内存地址\",{\"1\":{\"48\":1,\"63\":1}}],[\"内存结构大概分为\",{\"1\":{\"43\":1}}],[\"真正的内容\",{\"1\":{\"290\":1}}],[\"真\",{\"1\":{\"42\":2,\"364\":1}}],[\"运行如下命令\",{\"1\":{\"825\":1}}],[\"运行如下命令启动\",{\"1\":{\"369\":1}}],[\"运行在每个node上\",{\"1\":{\"803\":1}}],[\"运行启动类之后\",{\"1\":{\"641\":1}}],[\"运行起来时\",{\"1\":{\"620\":1}}],[\"运行项目\",{\"1\":{\"497\":1}}],[\"运行以下程序段即可完成\",{\"1\":{\"495\":1}}],[\"运行期动态执行\",{\"1\":{\"451\":2}}],[\"运行成功之后\",{\"1\":{\"369\":1}}],[\"运行状态\",{\"0\":{\"214\":1},\"1\":{\"213\":1}}],[\"运行存储\",{\"1\":{\"185\":1}}],[\"运行\",{\"0\":{\"369\":1,\"375\":1},\"1\":{\"160\":1,\"283\":1,\"369\":1}}],[\"运行方法\",{\"1\":{\"128\":1}}],[\"运行时死信作业表\",{\"0\":{\"549\":1}}],[\"运行时事件订阅表\",{\"0\":{\"548\":1}}],[\"运行时事件表\",{\"1\":{\"533\":1}}],[\"运行时积分表\",{\"0\":{\"547\":1}}],[\"运行时作业表\",{\"0\":{\"546\":1}}],[\"运行时挂起的定时作业表\",{\"0\":{\"545\":1}}],[\"运行时流程变量表\",{\"0\":{\"544\":1}}],[\"运行时流程执行实例表\",{\"1\":{\"533\":1}}],[\"运行时定时作业表\",{\"0\":{\"543\":1}}],[\"运行时定时器表\",{\"1\":{\"533\":1}}],[\"运行时任务表\",{\"0\":{\"542\":1}}],[\"运行时任务信息表\",{\"1\":{\"533\":1}}],[\"运行时身份连接表\",{\"0\":{\"541\":1}}],[\"运行时执行实例表\",{\"0\":{\"540\":1}}],[\"运行时变量表\",{\"1\":{\"533\":1}}],[\"运行时综合表\",{\"1\":{\"533\":1}}],[\"运行时用户信息表\",{\"1\":{\"533\":1}}],[\"运行时\",{\"1\":{\"122\":1}}],[\"运行时再看子类\",{\"1\":{\"105\":1}}],[\"运行时多态\",{\"1\":{\"101\":1}}],[\"运行环境\",{\"1\":{\"37\":1,\"111\":1,\"136\":1}}],[\"运算符和$\",{\"1\":{\"387\":1}}],[\"运算符\",{\"0\":{\"42\":1}}],[\"实战场景\",{\"1\":{\"440\":1,\"441\":1,\"442\":1,\"443\":1,\"444\":1}}],[\"实际的\",{\"1\":{\"783\":1}}],[\"实际的搜索结果数组\",{\"1\":{\"299\":1}}],[\"实际开发中一般不用local变量\",{\"1\":{\"521\":1}}],[\"实际环境中用的很多\",{\"1\":{\"456\":1}}],[\"实际场景\",{\"0\":{\"261\":1}}],[\"实例的类型为指针\",{\"1\":{\"592\":1}}],[\"实例化两个对象一样\",{\"1\":{\"490\":1}}],[\"实例\",{\"1\":{\"121\":1,\"161\":2}}],[\"实例对象\",{\"1\":{\"117\":1}}],[\"实例对象销毁\",{\"1\":{\"72\":1}}],[\"实例内部类\",{\"0\":{\"81\":1},\"1\":{\"80\":1,\"81\":1}}],[\"实例变量\",{\"1\":{\"72\":2,\"73\":1,\"75\":1,\"77\":2}}],[\"实例使用自动装箱来创建并且值相同\",{\"1\":{\"41\":1}}],[\"实现弹性伸缩\",{\"1\":{\"817\":1}}],[\"实现动态路由\",{\"1\":{\"667\":1}}],[\"实现动态路由刷新\",{\"0\":{\"667\":1},\"1\":{\"670\":1}}],[\"实现自定义过滤器统计请求耗时\",{\"1\":{\"665\":1}}],[\"实现自定义制转发规则\",{\"1\":{\"657\":1}}],[\"实现配置自动更新\",{\"1\":{\"633\":1}}],[\"实现配置的动态变更\",{\"1\":{\"621\":1,\"629\":1}}],[\"实现服务的注册与发现\",{\"1\":{\"621\":1}}],[\"实现反射能力的是\",{\"1\":{\"585\":1}}],[\"实现文件的单个部署\",{\"1\":{\"502\":1}}],[\"实现抽象处理者的处理方法\",{\"1\":{\"483\":1}}],[\"实现抽象装饰的相关方法\",{\"1\":{\"476\":1}}],[\"实现抽象构件\",{\"1\":{\"476\":1}}],[\"实现对文本型文件进行高效的写入\",{\"1\":{\"253\":1}}],[\"实现对文本型文件进行高效\",{\"1\":{\"253\":1}}],[\"实现了业务系统的业务流程由\",{\"1\":{\"486\":1}}],[\"实现了\",{\"1\":{\"244\":1,\"248\":1,\"249\":1,\"252\":1,\"253\":1}}],[\"实现了链表\",{\"1\":{\"179\":1}}],[\"实现的web服务器\",{\"1\":{\"655\":1}}],[\"实现的\",{\"1\":{\"227\":2}}],[\"实现的集合接口\",{\"1\":{\"173\":1}}],[\"实现线程安全\",{\"0\":{\"207\":1}}],[\"实现线程安全有哪些方法\",{\"1\":{\"201\":1}}],[\"实现此接口允许对象成为\",{\"1\":{\"172\":1}}],[\"实现双向遍历\",{\"1\":{\"168\":1}}],[\"实现关系\",{\"0\":{\"104\":1}}],[\"实现类只是用一次\",{\"1\":{\"190\":1}}],[\"实现类命名方式\",{\"1\":{\"173\":1}}],[\"实现类\",{\"1\":{\"103\":1,\"104\":1,\"244\":2}}],[\"实现类使用\",{\"1\":{\"95\":1}}],[\"实现类内部类\",{\"1\":{\"84\":1}}],[\"实现\",{\"0\":{\"135\":1,\"219\":1},\"1\":{\"56\":1,\"84\":1,\"102\":1,\"144\":1,\"217\":2,\"254\":1,\"265\":1,\"352\":1,\"643\":1}}],[\"实现原理\",{\"1\":{\"35\":1}}],[\"kernel实现了一个高效的vrouter来负责数据转发\",{\"1\":{\"802\":1}}],[\"keyfile=\",{\"1\":{\"764\":1}}],[\"key查询流程\",{\"0\":{\"565\":1}}],[\"key4\",{\"1\":{\"444\":5}}],[\"key2\",{\"1\":{\"443\":11}}],[\"key1\",{\"1\":{\"441\":3,\"443\":11}}],[\"keys\",{\"1\":{\"364\":1}}],[\"keyset\",{\"1\":{\"193\":1,\"671\":3}}],[\"key=\",{\"1\":{\"324\":5,\"734\":1,\"737\":1,\"740\":1,\"743\":1,\"756\":1,\"761\":1,\"764\":1,\"792\":1}}],[\"keyword\",{\"1\":{\"313\":1,\"314\":1,\"316\":1,\"335\":2,\"341\":1,\"351\":4}}],[\"keyword对整个字段统计\",{\"1\":{\"313\":1}}],[\"key值\",{\"1\":{\"191\":1}}],[\"key有效时间\",{\"1\":{\"161\":1}}],[\"key的前缀\",{\"1\":{\"161\":1}}],[\"key\",{\"0\":{\"459\":1},\"1\":{\"135\":7,\"161\":1,\"172\":1,\"173\":2,\"191\":3,\"193\":6,\"194\":2,\"195\":2,\"262\":2,\"362\":2,\"371\":2,\"431\":1,\"440\":9,\"441\":9,\"442\":8,\"443\":8,\"444\":8,\"534\":1,\"535\":2,\"537\":1,\"539\":1,\"540\":1,\"542\":2,\"556\":1,\"557\":2,\"580\":1,\"584\":1,\"598\":2,\"665\":1,\"680\":1,\"726\":10,\"729\":1,\"730\":1,\"731\":2,\"733\":1,\"734\":3,\"736\":1,\"737\":3,\"739\":1,\"740\":3,\"742\":1,\"743\":3,\"744\":1,\"753\":4,\"756\":1,\"761\":1,\"764\":6,\"771\":5,\"792\":1,\"806\":5,\"809\":2,\"813\":1}}],[\"k8s中证书只需要创建一次\",{\"1\":{\"726\":1}}],[\"k8s\",{\"1\":{\"715\":2,\"730\":1,\"733\":1,\"736\":1,\"742\":1,\"764\":1,\"784\":1,\"791\":1,\"800\":1,\"814\":4,\"818\":2,\"820\":2}}],[\"kubeproxy\",{\"1\":{\"791\":1}}],[\"kubeproxyconfiguration\",{\"1\":{\"791\":1}}],[\"kubeconfig文件\",{\"0\":{\"785\":1,\"792\":1}}],[\"kubeconfig=kube\",{\"1\":{\"792\":4}}],[\"kubeconfig=bootstrap\",{\"1\":{\"785\":4}}],[\"kubeconfig=\",{\"1\":{\"783\":2}}],[\"kubeconfig\",{\"0\":{\"761\":1},\"1\":{\"783\":4,\"785\":5,\"791\":2,\"792\":5}}],[\"kubectl证书放在这\",{\"1\":{\"739\":1}}],[\"kubectl\",{\"0\":{\"761\":1},\"1\":{\"726\":1,\"759\":1,\"761\":4,\"768\":1,\"779\":1,\"785\":7,\"788\":4,\"792\":4,\"800\":3,\"807\":3,\"814\":1,\"818\":2,\"822\":4}}],[\"kubernetes需要存储很多东西\",{\"1\":{\"748\":1}}],[\"kubernetes引入了tls\",{\"1\":{\"745\":1}}],[\"kubernetes的网络模型假定了所有pod都在一个可以直接连通的扁平网络空间中\",{\"1\":{\"799\":1}}],[\"kubernetes的admissioncontrol\",{\"0\":{\"725\":1}}],[\"kubernetes的授权\",{\"0\":{\"724\":1}}],[\"kubernetes的认证\",{\"0\":{\"723\":1}}],[\"kubernetes的认证授权\",{\"0\":{\"722\":1}}],[\"kubernetes的认证也是从这个问题出发来实现的\",{\"1\":{\"719\":1}}],[\"kubernetes提供了一种特殊的认证方式\",{\"1\":{\"723\":1}}],[\"kubernetes提供了多种认证方式\",{\"1\":{\"723\":1}}],[\"kubernetes集群的所有操作基本上都是通过kube\",{\"1\":{\"722\":1}}],[\"kubernetes并不需要自己想办法\",{\"1\":{\"720\":1}}],[\"kubernetes\",{\"1\":{\"718\":1,\"723\":1,\"724\":1,\"726\":1,\"727\":1,\"729\":2,\"730\":1,\"733\":2,\"734\":3,\"736\":9,\"737\":3,\"739\":2,\"740\":3,\"742\":2,\"743\":3,\"744\":4,\"746\":1,\"751\":2,\"752\":1,\"753\":8,\"755\":5,\"756\":4,\"757\":1,\"758\":2,\"759\":4,\"761\":6,\"764\":13,\"765\":1,\"766\":4,\"771\":6,\"772\":4,\"776\":2,\"777\":4,\"780\":1,\"781\":8,\"783\":6,\"784\":2,\"785\":3,\"786\":2,\"787\":1,\"788\":1,\"790\":3,\"791\":2,\"792\":5,\"793\":2,\"794\":1,\"796\":1,\"802\":1,\"805\":1,\"806\":3,\"809\":5,\"813\":3,\"814\":4,\"817\":4,\"818\":6,\"821\":1}}],[\"kube\",{\"0\":{\"741\":1,\"742\":1,\"766\":1,\"769\":1,\"772\":1,\"774\":1,\"777\":1,\"810\":1},\"1\":{\"714\":5,\"726\":7,\"730\":2,\"736\":1,\"742\":8,\"743\":6,\"744\":1,\"745\":1,\"757\":3,\"759\":3,\"761\":1,\"763\":1,\"764\":2,\"766\":5,\"767\":3,\"770\":1,\"771\":3,\"772\":4,\"773\":3,\"775\":1,\"776\":3,\"777\":4,\"778\":3,\"780\":1,\"781\":2,\"788\":1,\"790\":3,\"791\":2,\"792\":6,\"793\":3,\"794\":4,\"800\":6,\"804\":1,\"806\":4,\"807\":1,\"809\":1,\"810\":3,\"814\":3,\"820\":1,\"822\":2}}],[\"kubeletconfiguration\",{\"1\":{\"784\":1}}],[\"kubelet证书生成目录\",{\"1\":{\"783\":1}}],[\"kubelet的证书由apiserver动态签署\",{\"1\":{\"745\":1}}],[\"kubelet会以一个低权限用户自动向apiserver申请证书\",{\"1\":{\"745\":1}}],[\"kubelet\",{\"1\":{\"714\":2,\"726\":1,\"746\":2,\"764\":3,\"768\":1,\"780\":1,\"781\":2,\"783\":4,\"784\":2,\"785\":1,\"786\":4,\"787\":4,\"788\":2,\"796\":2,\"814\":4,\"822\":1}}],[\"kubeadm\",{\"1\":{\"713\":2}}],[\"knowledge\",{\"1\":{\"468\":1}}],[\"k2\",{\"1\":{\"440\":2}}],[\"k1\",{\"1\":{\"440\":2}}],[\"kay\",{\"1\":{\"327\":1}}],[\"killmode=process\",{\"1\":{\"683\":1}}],[\"kill\",{\"1\":{\"683\":1}}],[\"kind\",{\"0\":{\"588\":1,\"589\":1},\"1\":{\"588\":2,\"589\":2,\"592\":1,\"598\":2,\"599\":2,\"784\":1,\"791\":1,\"806\":2,\"813\":3,\"814\":4,\"818\":1}}],[\"kibana\",{\"0\":{\"283\":1,\"284\":1,\"297\":1},\"1\":{\"265\":1,\"279\":2,\"283\":6,\"284\":4,\"297\":1}}],[\"kit\",{\"1\":{\"37\":1}}],[\"k++\",{\"1\":{\"41\":1}}],[\"k\",{\"1\":{\"41\":3,\"598\":2}}],[\"方便后面演示\",{\"1\":{\"636\":1}}],[\"方便开发者通过\",{\"1\":{\"609\":1}}],[\"方便未来回顾复制粘贴\",{\"1\":{\"3\":1}}],[\"方式来解决\",{\"1\":{\"452\":1}}],[\"方式\",{\"1\":{\"447\":2}}],[\"方向有东南西北等\",{\"1\":{\"158\":1}}],[\"方法列表参考\",{\"1\":{\"595\":1}}],[\"方法名\",{\"1\":{\"594\":1,\"595\":1}}],[\"方法名称\",{\"1\":{\"128\":2}}],[\"方法等\",{\"1\":{\"587\":1}}],[\"方法传递的参数必须是\",{\"1\":{\"586\":1}}],[\"方法大全\",{\"0\":{\"384\":1}}],[\"方法被废弃了\",{\"1\":{\"338\":1,\"349\":1}}],[\"方法操作反序列化\",{\"1\":{\"254\":1}}],[\"方法操作序列化\",{\"1\":{\"254\":1}}],[\"方法基本和\",{\"1\":{\"252\":1}}],[\"方法写入数据的时候\",{\"1\":{\"249\":1}}],[\"方法不执行任何操作\",{\"1\":{\"242\":1}}],[\"方法作用\",{\"1\":{\"242\":1,\"243\":1,\"246\":1,\"247\":1}}],[\"方法将一个线程设置为守护线程\",{\"1\":{\"224\":1}}],[\"方法会使用内建的过滤器重写路径\",{\"1\":{\"657\":1}}],[\"方法会休眠当前正在执行的线程\",{\"1\":{\"221\":1}}],[\"方法会被隐式地指定为\",{\"1\":{\"94\":1}}],[\"方法启动一个线程时\",{\"1\":{\"218\":1}}],[\"方法进入\",{\"1\":{\"212\":1}}],[\"方法来启动线程\",{\"1\":{\"219\":1}}],[\"方法来比较元素的大小关系\",{\"1\":{\"189\":1}}],[\"方法来拷贝一个对象即复杂又有风险\",{\"1\":{\"66\":1}}],[\"方法很重要\",{\"1\":{\"187\":1}}],[\"方法依次比较\",{\"1\":{\"186\":1}}],[\"方法位置变到\",{\"1\":{\"155\":1}}],[\"方法片段等内容\",{\"1\":{\"155\":1}}],[\"方法都往下移一句\",{\"1\":{\"155\":1}}],[\"方法源码可知\",{\"1\":{\"257\":1}}],[\"方法源码👇\",{\"1\":{\"151\":1}}],[\"方法源码如下👇\",{\"1\":{\"148\":1}}],[\"方法重新计算容量大小\",{\"1\":{\"151\":1}}],[\"方法计算新的扩容长度\",{\"1\":{\"150\":1}}],[\"方法第二参数表示\",{\"1\":{\"134\":1}}],[\"方法快速通过无参构造器构建一个对象\",{\"1\":{\"128\":1}}],[\"方法参数\",{\"1\":{\"128\":1}}],[\"方法中有个\",{\"1\":{\"353\":1}}],[\"方法中代码\",{\"1\":{\"214\":1}}],[\"方法中\",{\"1\":{\"150\":1,\"596\":1}}],[\"方法中带着\",{\"1\":{\"123\":1}}],[\"方法中不能有\",{\"1\":{\"73\":1}}],[\"方法获取对象\",{\"1\":{\"116\":1}}],[\"方法的返回值就对应了接口中参数的值\",{\"1\":{\"604\":1}}],[\"方法的重载\",{\"1\":{\"101\":1}}],[\"方法的实现比较简单\",{\"1\":{\"41\":1}}],[\"方法可在抽象类中实现\",{\"1\":{\"98\":1}}],[\"方法且只能是public\",{\"1\":{\"94\":1}}],[\"方法是专门查询地图附近集合的集成mongo的方法\",{\"1\":{\"403\":1}}],[\"方法是否在父类存在\",{\"1\":{\"105\":1}}],[\"方法是用\",{\"1\":{\"91\":1}}],[\"方法是浅拷贝\",{\"1\":{\"63\":1}}],[\"方法在子类中可用\",{\"1\":{\"91\":1}}],[\"方法加上访问修饰符\",{\"1\":{\"91\":1}}],[\"方法内部类\",{\"0\":{\"83\":1},\"1\":{\"80\":1}}],[\"方法一样是外部类的成员\",{\"1\":{\"80\":1}}],[\"方法返回\",{\"1\":{\"59\":1}}],[\"方法时\",{\"1\":{\"57\":1,\"59\":1,\"155\":1,\"156\":1}}],[\"方法输出\",{\"1\":{\"52\":1}}],[\"方法摘要\",{\"0\":{\"51\":1}}],[\"方法调用执行至结束的过程\",{\"1\":{\"43\":1}}],[\"方法栈区\",{\"1\":{\"43\":1}}],[\"方法区\",{\"1\":{\"43\":1,\"121\":2}}],[\"方法\",{\"1\":{\"41\":1,\"57\":2,\"59\":4,\"62\":5,\"78\":2,\"98\":1,\"103\":1,\"104\":1,\"105\":1,\"117\":5,\"124\":1,\"126\":1,\"147\":1,\"148\":2,\"150\":1,\"181\":1,\"198\":1,\"214\":1,\"218\":2,\"219\":1,\"242\":1,\"243\":1,\"246\":1,\"247\":1,\"403\":1,\"561\":1,\"562\":1,\"590\":1,\"597\":1,\"654\":2}}],[\"每台一核cpu和2g内存\",{\"1\":{\"714\":1}}],[\"每调用route一次可建立一条路由规则\",{\"1\":{\"657\":1}}],[\"每隔一秒把缓冲区中的内容写入磁盘\",{\"1\":{\"454\":1}}],[\"每秒写回\",{\"1\":{\"454\":1}}],[\"每页大小\",{\"1\":{\"353\":1}}],[\"每页显示\",{\"1\":{\"353\":1,\"389\":1}}],[\"每次都需要写相同的代码\",{\"1\":{\"603\":1}}],[\"每次都会新建一个对象\",{\"1\":{\"41\":1}}],[\"每次调用bgsave都需要fork子进程\",{\"1\":{\"452\":1}}],[\"每次更新就会+1\",{\"1\":{\"290\":1}}],[\"每条线程并行执行不同的任务\",{\"1\":{\"205\":1}}],[\"每一个键值对我们使用entry表示\",{\"1\":{\"191\":1}}],[\"每一个存储到好像表中的对象\",{\"1\":{\"187\":1}}],[\"每一个类只会生成一个\",{\"1\":{\"122\":1}}],[\"每一种容器类底层拥有不同的底层算法\",{\"1\":{\"171\":1}}],[\"每创建一个实例化对象就会产生一个实例变量\",{\"1\":{\"72\":1}}],[\"每个vrouter都通过bgp1协议把在本节点上运行的容器的路由信息向整个calico网络广播\",{\"1\":{\"802\":1}}],[\"每个准入控制代码都按照一定顺序执行\",{\"1\":{\"725\":1}}],[\"每个虚拟机\",{\"0\":{\"715\":1}}],[\"每个连线都会走\",{\"1\":{\"524\":1}}],[\"每个流程实例的执行路径\",{\"1\":{\"500\":1}}],[\"每个写命令执行完\",{\"1\":{\"454\":3}}],[\"每个用户关注的人存在一个集合中\",{\"1\":{\"435\":1}}],[\"每个数据库在文件系统上都有其自己的文件集\",{\"1\":{\"363\":1}}],[\"每个数据库都有独立的权限控制\",{\"1\":{\"361\":1}}],[\"每个文档的字段配置\",{\"1\":{\"332\":1}}],[\"每个分片本身也是一个功能完善且独立的\",{\"1\":{\"276\":1}}],[\"每个线程都有自己独立的栈空间\",{\"1\":{\"205\":1}}],[\"每个进程之间互不干扰\",{\"1\":{\"202\":1}}],[\"每个进程对应一定的内存空间\",{\"1\":{\"202\":1}}],[\"每个元素需要先计算\",{\"1\":{\"186\":1}}],[\"每个元素在内存中的位置不是有序的\",{\"1\":{\"168\":1}}],[\"每个字段要有\",{\"1\":{\"89\":1}}],[\"每个方法执行结束时\",{\"1\":{\"43\":1}}],[\"每个系统都有一个编译器\",{\"1\":{\"34\":1}}],[\"拆箱\",{\"1\":{\"40\":1}}],[\"之类的工具访问\",{\"1\":{\"641\":1}}],[\"之所以需要配置\",{\"1\":{\"631\":1}}],[\"之间的数据\",{\"1\":{\"387\":1}}],[\"之间的转换\",{\"1\":{\"40\":1}}],[\"之后删除栈对应的stash\",{\"1\":{\"710\":1}}],[\"之后需要设置\",{\"1\":{\"655\":1}}],[\"之后再启用权限验证\",{\"1\":{\"411\":1}}],[\"之后稍微等待一会就安装好了\",{\"1\":{\"367\":1}}],[\"之后被标记为\",{\"1\":{\"125\":1}}],[\"之前需要先了解一下\",{\"1\":{\"500\":1}}],[\"之前\",{\"1\":{\"267\":1,\"272\":1}}],[\"之前使用slice时一直以为当cap小于1024时每次都是翻倍\",{\"1\":{\"9\":1}}],[\"与openstack\",{\"1\":{\"802\":1}}],[\"与apiserver保持一致\",{\"1\":{\"771\":1}}],[\"与hi\",{\"1\":{\"551\":1}}],[\"与第3个差不多\",{\"1\":{\"464\":1}}],[\"与第4个差不多\",{\"1\":{\"464\":1}}],[\"与第1个差不多\",{\"1\":{\"464\":1}}],[\"与地理空间相关的criteria方法结合使用\",{\"1\":{\"398\":1}}],[\"与本地字节码中的\",{\"1\":{\"254\":1}}],[\"与符号\",{\"1\":{\"42\":1}}],[\"与\",{\"0\":{\"57\":1},\"1\":{\"40\":1,\"41\":1,\"742\":1}}],[\"并保存成\",{\"1\":{\"822\":1}}],[\"并安装相应的网络配置文件到\",{\"1\":{\"806\":1}}],[\"并安装好了docker\",{\"1\":{\"714\":1}}],[\"并调用它来完成容器网络的设置\",{\"1\":{\"806\":1}}],[\"并重启服务\",{\"1\":{\"804\":1}}],[\"并自动设置到达其他节点的路由转发规则\",{\"1\":{\"802\":1}}],[\"并确保集群处于预期的工作状态\",{\"1\":{\"770\":1}}],[\"并确保pod的serviceaccount始终存在\",{\"1\":{\"725\":1}}],[\"并提示用户相应的error信息\",{\"1\":{\"725\":1}}],[\"并提供相应的\",{\"1\":{\"145\":1}}],[\"并提供方法对\",{\"1\":{\"40\":1}}],[\"并构建definition对象\",{\"1\":{\"670\":1}}],[\"并向链头的具体处理者对象提交请求\",{\"1\":{\"483\":1}}],[\"并给具体构件对象添加附加的责任\",{\"1\":{\"476\":1}}],[\"并给出相关性得分\",{\"1\":{\"305\":1,\"306\":1}}],[\"并包含具体构件的实例\",{\"1\":{\"476\":1}}],[\"并同时保持结构的灵活和高效\",{\"1\":{\"469\":1}}],[\"并返回被弹出的值\",{\"1\":{\"442\":2}}],[\"并返回被删除key对应的value\",{\"1\":{\"193\":1}}],[\"并方便存储整个对象\",{\"1\":{\"441\":1}}],[\"并集\",{\"1\":{\"438\":1,\"443\":1}}],[\"并抛出一个异常\",{\"1\":{\"424\":1}}],[\"并执行lsb\",{\"1\":{\"372\":1}}],[\"并附上周边游玩小tips\",{\"1\":{\"341\":1,\"343\":1}}],[\"并在内存中建立了一个pod节点路由表\",{\"1\":{\"799\":1}}],[\"并在保持类方法签名完整性的前提下\",{\"1\":{\"471\":1,\"476\":1}}],[\"并在名称元素之间使用下划线作为分隔符\",{\"1\":{\"382\":1}}],[\"并在这一个文件中写入词汇\",{\"1\":{\"323\":1}}],[\"并在序列化操作时\",{\"1\":{\"254\":1}}],[\"并将有助于得分\",{\"1\":{\"308\":1}}],[\"并新增版本号\",{\"1\":{\"289\":1}}],[\"并绑定到\",{\"1\":{\"262\":1}}],[\"并存储在缓冲区数组\",{\"1\":{\"242\":1,\"246\":1}}],[\"并没有捕获到异常也就没有回滚事务\",{\"1\":{\"262\":1}}],[\"并没有缓存功能\",{\"1\":{\"257\":1}}],[\"并没有定义源数据源和目的地\",{\"1\":{\"240\":1}}],[\"并没有改变\",{\"1\":{\"48\":1}}],[\"并暂时停止自己运行\",{\"1\":{\"214\":1}}],[\"并行网关不会解析条件\",{\"1\":{\"531\":1}}],[\"并行网关的功能是基于进入和外出的顺序流的\",{\"1\":{\"531\":1}}],[\"并行网关\",{\"0\":{\"531\":1},\"1\":{\"531\":1}}],[\"并行需要多个\",{\"1\":{\"203\":1}}],[\"并行\",{\"1\":{\"203\":1}}],[\"并发控制字段\",{\"1\":{\"290\":1}}],[\"并发包中的互斥锁\",{\"1\":{\"208\":1}}],[\"并发\",{\"1\":{\"203\":1,\"208\":1}}],[\"并发是能够让操作系统从宏观上看起来同一时间段执行多个任务\",{\"1\":{\"203\":1}}],[\"并发和并行的概念\",{\"0\":{\"203\":1}}],[\"并接着执行\",{\"1\":{\"202\":1}}],[\"并\",{\"1\":{\"189\":1}}],[\"并不会先去对这些命令进行语法检查\",{\"1\":{\"453\":1}}],[\"并不会改变\",{\"1\":{\"308\":1}}],[\"并不会改变另一个变量的值\",{\"1\":{\"63\":1}}],[\"并不是所有的查询都需要产生分数\",{\"1\":{\"310\":1}}],[\"并不是\",{\"1\":{\"62\":1}}],[\"并且配置引用的任何所需的\",{\"1\":{\"796\":1}}],[\"并且该分支有前一个分支下的所有文件\",{\"1\":{\"706\":1}}],[\"并且参数值是\",{\"1\":{\"660\":1}}],[\"并且参数上有\",{\"1\":{\"604\":1}}],[\"并且进行服务的路由\",{\"1\":{\"658\":1}}],[\"并且做了向前兼容\",{\"1\":{\"644\":1}}],[\"并且ribbon\",{\"1\":{\"644\":1}}],[\"并且随着扩展功能的增多\",{\"1\":{\"475\":1}}],[\"并且set提供了判断某个成员是否在一个set集合内的重要接口\",{\"1\":{\"435\":1}}],[\"并且密码为\",{\"1\":{\"406\":1}}],[\"并且计算它的平均售价\",{\"1\":{\"356\":1}}],[\"并且这些年龄段中\",{\"1\":{\"314\":1}}],[\"并且通过聚合结果排序\",{\"1\":{\"314\":1}}],[\"并且请求这些年龄段的这些人的平均薪资\",{\"1\":{\"314\":1}}],[\"并且在一次使用中得到各自的\",{\"1\":{\"312\":1}}],[\"并且同时返\",{\"1\":{\"312\":1}}],[\"并且address\",{\"1\":{\"310\":1}}],[\"并且\",{\"1\":{\"308\":1,\"310\":1}}],[\"并且每条记录有相关性得分\",{\"1\":{\"305\":1}}],[\"并且它的所有方法\",{\"1\":{\"257\":1}}],[\"并且提供某一特定功能的子类有\",{\"1\":{\"256\":1}}],[\"并且内部没有实行可以修改该数组的方法\",{\"1\":{\"138\":1}}],[\"并且要在继承关键字\",{\"1\":{\"95\":1}}],[\"并且接口中所有的方法不能有具体的实现\",{\"1\":{\"94\":1}}],[\"并且只能是public\",{\"1\":{\"94\":1}}],[\"并且只能访问所属类的静态字段和静态方法\",{\"1\":{\"73\":1}}],[\"并且需要提供一对\",{\"1\":{\"89\":1}}],[\"并且还需要类型转换\",{\"1\":{\"66\":1}}],[\"并且索引下标不能超过\",{\"1\":{\"49\":1}}],[\"并且右上角多了两个按钮\",{\"1\":{\"24\":1}}],[\"强制类型转换为int类型\",{\"1\":{\"594\":1}}],[\"强制类型转换\",{\"1\":{\"39\":1,\"107\":1}}],[\"范围大的数据类型\",{\"1\":{\"39\":2}}],[\"范围小的数据类型\",{\"1\":{\"39\":2}}],[\"隐式类型转换\",{\"1\":{\"39\":1}}],[\"基于第三方工具的安装\",{\"1\":{\"713\":1}}],[\"基于官方工具kubeadm的安装方式\",{\"1\":{\"713\":1}}],[\"基于二进制的安装方式\",{\"1\":{\"713\":1}}],[\"基于代码的路由配置方式\",{\"0\":{\"657\":1}}],[\"基于内存\",{\"1\":{\"429\":1,\"430\":1}}],[\"基于\",{\"1\":{\"268\":1,\"610\":2,\"667\":1}}],[\"基于数组\",{\"1\":{\"167\":1}}],[\"基础数据结构详解\",{\"0\":{\"439\":1}}],[\"基础上\",{\"1\":{\"287\":1}}],[\"基础\",{\"0\":{\"287\":1,\"656\":1}}],[\"基础的\",{\"1\":{\"285\":1}}],[\"基础教程\",{\"0\":{\"285\":1}}],[\"基础概念\",{\"0\":{\"267\":1},\"1\":{\"265\":1}}],[\"基础知识做一个总结\",{\"1\":{\"29\":1}}],[\"基本分词查询\",{\"0\":{\"352\":1}}],[\"基本语法格式\",{\"0\":{\"302\":1}}],[\"基本数据类型\",{\"1\":{\"78\":1}}],[\"基本数据类型没用\",{\"1\":{\"57\":1}}],[\"基本数据类型转换\",{\"0\":{\"39\":1}}],[\"基本类型对应的缓冲池如下\",{\"1\":{\"41\":1}}],[\"它必须有效并且可由读取calicoctl\",{\"1\":{\"813\":1}}],[\"它还需要以hostnetwork模式运行\",{\"1\":{\"806\":1}}],[\"它监听kube\",{\"1\":{\"775\":1}}],[\"它通过apiserver监控整个集群的状态\",{\"1\":{\"770\":1}}],[\"它会观察所有的请求\",{\"1\":{\"725\":1}}],[\"它会自动添加一个default\",{\"1\":{\"725\":1}}],[\"它会辅助serviceaccount做一些事情\",{\"1\":{\"725\":1}}],[\"它会抛出异常\",{\"1\":{\"66\":1}}],[\"它将serviceaccounts实现了自动化\",{\"1\":{\"725\":1}}],[\"它将请求的发送者和接收者解耦\",{\"1\":{\"481\":1}}],[\"它也能在一定程度上提高安全性\",{\"1\":{\"722\":1}}],[\"它提供http\",{\"1\":{\"722\":1}}],[\"它提供了将反射的对象标记为在使用时取消默认\",{\"1\":{\"126\":1}}],[\"它由一个\",{\"1\":{\"654\":1}}],[\"它旨在为微服务架构提供一种简单有效的统一的\",{\"1\":{\"653\":1}}],[\"它基于\",{\"1\":{\"643\":1}}],[\"它经常被用于缓存的业务场景\",{\"1\":{\"458\":1}}],[\"它特别适合存储对象\",{\"1\":{\"441\":1}}],[\"它们与函数是一一对应的关系\",{\"1\":{\"585\":1}}],[\"它们都通过\",{\"1\":{\"723\":1}}],[\"它们都是抽象装饰类\",{\"1\":{\"478\":1}}],[\"它们都属于\",{\"1\":{\"222\":1}}],[\"它们以nearquery作为参数\",{\"1\":{\"403\":1}}],[\"它一般用于采用特殊符号类型的语言\",{\"1\":{\"364\":1}}],[\"它的证书不是手动生成\",{\"1\":{\"782\":1}}],[\"它的特点是高性能\",{\"1\":{\"360\":1}}],[\"它的内部是基于数组实现的\",{\"1\":{\"177\":1}}],[\"它简单地返回集群中所有索引下的所有文档\",{\"1\":{\"299\":1}}],[\"它后面跟着的是另外一个操作\",{\"1\":{\"293\":1}}],[\"它能在这些ip地址之间建立一个覆盖网络\",{\"1\":{\"799\":1}}],[\"它能协助kubernetes\",{\"1\":{\"799\":1}}],[\"它能让你以前所未有的速度和规模\",{\"1\":{\"268\":1}}],[\"它能为一个原本没有缓冲功能的\",{\"1\":{\"257\":1}}],[\"它可以快速的存储\",{\"1\":{\"264\":1,\"265\":1}}],[\"它就是一个\",{\"1\":{\"256\":1}}],[\"它只作用于同一个对象\",{\"1\":{\"229\":1}}],[\"它只允许在头部进行删除操作\",{\"1\":{\"169\":1}}],[\"它主要用于定义集合的约定\",{\"1\":{\"173\":1}}],[\"它应该是内省体系中最常见的类\",{\"1\":{\"133\":1}}],[\"它是cloudflare开发的一个开源的pki工具\",{\"1\":{\"726\":1}}],[\"它是\",{\"1\":{\"172\":1}}],[\"它是把新元素放到栈顶元素的上面\",{\"1\":{\"170\":1}}],[\"它是一个实时的分布式搜索分析引擎\",{\"1\":{\"268\":1}}],[\"它是一个封装反射类的构造方法的类\",{\"1\":{\"124\":1}}],[\"它是一个封装反射类的属性的类\",{\"1\":{\"124\":1}}],[\"它是一种运算受限的线性表\",{\"1\":{\"170\":1}}],[\"它是用来封装反射类方法的一个类\",{\"1\":{\"124\":1}}],[\"它是运行所有java程序的虚拟计算机\",{\"1\":{\"37\":1}}],[\"它不关心处理细节和请求的传递过程\",{\"1\":{\"483\":1}}],[\"它不依赖于任何实例\",{\"1\":{\"73\":1}}],[\"它不是语法规定\",{\"1\":{\"466\":1}}],[\"它不是线程安全的容器\",{\"1\":{\"185\":1}}],[\"它不是\",{\"1\":{\"62\":1}}],[\"它使得java代码修改后不用重启系统\",{\"1\":{\"18\":1}}],[\"总体流程是我们使用\",{\"1\":{\"822\":1}}],[\"总之就是\",{\"1\":{\"654\":1}}],[\"总耗时\",{\"1\":{\"556\":1,\"557\":1}}],[\"总价格\",{\"1\":{\"477\":1}}],[\"总有一款适合你\",{\"1\":{\"351\":1}}],[\"总会将数据重新保存并增加\",{\"1\":{\"291\":1}}],[\"总结出来的\",{\"1\":{\"719\":1}}],[\"总结\",{\"0\":{\"152\":1,\"156\":1},\"1\":{\"103\":1,\"104\":1,\"123\":1,\"167\":1,\"168\":1,\"169\":1,\"588\":1}}],[\"总结java\",{\"0\":{\"36\":1}}],[\"总的来说就是\",{\"1\":{\"64\":1}}],[\"总是一起重写\",{\"1\":{\"59\":1}}],[\"总是没有意志力去坚持下去\",{\"1\":{\"2\":1}}],[\"由install\",{\"1\":{\"804\":1}}],[\"由主节点的controller\",{\"1\":{\"782\":1}}],[\"由此切换\",{\"1\":{\"648\":1}}],[\"由流程key\",{\"1\":{\"535\":1}}],[\"由操作系统决定何时将缓冲区内容写回磁盘\",{\"1\":{\"454\":1}}],[\"由\",{\"1\":{\"360\":1}}],[\"由于网络插件还没有部署\",{\"1\":{\"788\":1}}],[\"由于单节点和多节点在apiserver这一层说来没什么区别\",{\"1\":{\"763\":1}}],[\"由于kubectl相当于系统管理员\",{\"1\":{\"739\":1}}],[\"由于国内的网络环境问题\",{\"1\":{\"713\":1}}],[\"由于项目结构问题\",{\"1\":{\"261\":1}}],[\"由于\",{\"1\":{\"145\":1,\"188\":1,\"289\":1,\"337\":1,\"635\":1,\"658\":1,\"676\":1}}],[\"由于引用的实例不同\",{\"1\":{\"109\":1}}],[\"由于浅拷贝并不能保证clone出的对象和原对象完全独立\",{\"1\":{\"65\":1}}],[\"由于jrebel是实时监控class文件的变化来实现热部署的\",{\"1\":{\"23\":1}}],[\"由对象的垃圾回收器调用此方法\",{\"1\":{\"51\":1}}],[\"由虚拟机执行\",{\"1\":{\"35\":1}}],[\"识别运行\",{\"1\":{\"35\":1}}],[\"该参数指定etcd服务的地址\",{\"1\":{\"806\":1}}],[\"该段理解引用\",{\"1\":{\"718\":1}}],[\"该命令的作用是\",{\"1\":{\"707\":1}}],[\"该命令会创建一个新的分支\",{\"1\":{\"706\":1}}],[\"该分支不继承任何提交\",{\"1\":{\"706\":1}}],[\"该项目是基于\",{\"1\":{\"653\":1}}],[\"该接口耗时比较长\",{\"1\":{\"651\":1}}],[\"该\",{\"1\":{\"561\":1}}],[\"该文件可以是yaml或json格式\",{\"1\":{\"813\":1}}],[\"该文件只能被\",{\"1\":{\"35\":1}}],[\"该文章记录一下使用\",{\"1\":{\"559\":1}}],[\"该流程定义下将不允许启动新的流程实例\",{\"1\":{\"514\":1}}],[\"该操作定义下面的所有的流程实例将全部暂停\",{\"1\":{\"514\":1}}],[\"该表是一个临时表\",{\"1\":{\"503\":1}}],[\"该行在这张表中就被删除掉了\",{\"1\":{\"503\":1}}],[\"该类主要实现yaml解析\",{\"1\":{\"670\":1}}],[\"该类被隐藏或者该类是终极类或者采用继承方式会产生大量的子类\",{\"1\":{\"478\":1}}],[\"该类包含了文件的创建\",{\"1\":{\"236\":1}}],[\"该算法认为\",{\"1\":{\"463\":1}}],[\"该值影响自增长列的插入\",{\"1\":{\"424\":1}}],[\"该用户的登录密码\",{\"1\":{\"406\":1}}],[\"该数据类型基本上等同于字符串类型\",{\"1\":{\"364\":1}}],[\"该数组被\",{\"1\":{\"138\":1}}],[\"该系列主要对\",{\"1\":{\"264\":1}}],[\"该抽象方法由具体的子类去实现\",{\"1\":{\"256\":1}}],[\"该字段不会被序列化\",{\"1\":{\"254\":1}}],[\"该线程对象就处于新生状态\",{\"1\":{\"212\":1}}],[\"该过程跟\",{\"1\":{\"155\":1}}],[\"该对象的内容是\",{\"1\":{\"155\":1}}],[\"该方法表示是否启用这个参数解析器\",{\"1\":{\"604\":1}}],[\"该方法只是对线程调度器的一个建议\",{\"1\":{\"223\":1}}],[\"该方法能创建一个轻量级的迭代器\",{\"1\":{\"172\":1}}],[\"该方法主要判断新字符串是否超出\",{\"1\":{\"151\":1}}],[\"该方法不常用\",{\"1\":{\"129\":1}}],[\"该方法自从\",{\"1\":{\"125\":1}}],[\"该方法\",{\"1\":{\"105\":1}}],[\"该修饰符控制只能本类中使用\",{\"1\":{\"91\":1}}],[\"该死的生活吖\",{\"1\":{\"3\":1}}],[\"所在的\",{\"1\":{\"723\":1}}],[\"所在的内存地址\",{\"1\":{\"48\":1,\"155\":1}}],[\"所属活跃节点id\",{\"1\":{\"548\":1}}],[\"所属任务id\",{\"1\":{\"544\":1,\"552\":1,\"558\":1}}],[\"所属执行实例id\",{\"1\":{\"544\":1,\"548\":1,\"551\":1,\"557\":1}}],[\"所属流程实例id\",{\"1\":{\"544\":1,\"548\":1,\"551\":1,\"552\":1,\"557\":1,\"558\":1}}],[\"所属流程定义id\",{\"1\":{\"540\":1,\"548\":1,\"551\":1}}],[\"所属流程部署id\",{\"1\":{\"538\":1}}],[\"所属流程引擎版本\",{\"1\":{\"535\":1}}],[\"所需要的一些\",{\"1\":{\"495\":1}}],[\"所谓缓存\",{\"1\":{\"458\":1}}],[\"所组成的set集合\",{\"1\":{\"193\":2}}],[\"所有组件都已经启动成功\",{\"1\":{\"779\":1}}],[\"所有证书相关的东西都放在这\",{\"1\":{\"727\":1}}],[\"所有浮点数\",{\"1\":{\"594\":1}}],[\"所有无符号整型均可以此方式返回\",{\"1\":{\"594\":1}}],[\"所有有符号整型均可以此方式返回\",{\"1\":{\"594\":1}}],[\"所有者\",{\"1\":{\"541\":1,\"555\":1}}],[\"所有分支都会判断条件是否为true\",{\"1\":{\"530\":1}}],[\"所有事件发生都触发\",{\"1\":{\"518\":1}}],[\"所有引用基类的地方必须能透明地使用其子类的对象\",{\"1\":{\"468\":1}}],[\"所有字母均为小写\",{\"1\":{\"382\":1}}],[\"所有聚合都由这个类来构建\",{\"1\":{\"355\":1}}],[\"所有对象都默认实现了\",{\"1\":{\"124\":1}}],[\"所有三种方式获取的\",{\"1\":{\"122\":1}}],[\"所有地方都可以访问\",{\"1\":{\"91\":1}}],[\"所有类都是继承于\",{\"1\":{\"50\":1}}],[\"所有的对象实例以及数组都要在堆中分配空间\",{\"1\":{\"43\":1}}],[\"所实现的跨平台方式就是\",{\"1\":{\"35\":1}}],[\"所以先确保\",{\"1\":{\"822\":1}}],[\"所以也会引入一些网络的时延损耗\",{\"1\":{\"799\":1}}],[\"所以也可以说\",{\"1\":{\"191\":1}}],[\"所以认证方式跟之前的组件不同\",{\"1\":{\"782\":1}}],[\"所以我就部署一个节点就足够\",{\"1\":{\"763\":1}}],[\"所以我们只需要在那个文件夹里新建一个\",{\"1\":{\"699\":1}}],[\"所以我们在使用\",{\"1\":{\"561\":1}}],[\"所以我们需要把当前内容全部删除\",{\"1\":{\"706\":1}}],[\"所以我们需要在项目中排除掉\",{\"1\":{\"497\":1}}],[\"所以我们需要进行一些配置才能使用\",{\"1\":{\"19\":1}}],[\"所以我们要实现\",{\"1\":{\"349\":1}}],[\"所以我们操作\",{\"1\":{\"287\":1}}],[\"所以我们平时优先使用\",{\"1\":{\"145\":1}}],[\"所以我们也可以认为一个\",{\"1\":{\"121\":1}}],[\"所以我们重写\",{\"1\":{\"59\":1}}],[\"所以我们想要在哪个系统上运行\",{\"1\":{\"35\":1}}],[\"所以保证了apiserver的高可用即是保证了三个模块的高可用\",{\"1\":{\"757\":1,\"770\":1}}],[\"所以强烈建议在node上使用这种方式\",{\"1\":{\"745\":1}}],[\"所以可以使用非安全端口与apiserver通讯\",{\"1\":{\"735\":1}}],[\"所以可以使用非安全端口与api\",{\"1\":{\"735\":1}}],[\"所以说\",{\"1\":{\"722\":1}}],[\"所以说理论上只要把事务\",{\"1\":{\"262\":1}}],[\"所以本系列文档将从\",{\"1\":{\"713\":1}}],[\"所以使用\",{\"1\":{\"703\":1}}],[\"所以使用state\",{\"1\":{\"313\":1}}],[\"所以开发者经常需要安装\",{\"1\":{\"690\":1}}],[\"所以spring\",{\"1\":{\"644\":1}}],[\"所以导入\",{\"1\":{\"635\":1,\"677\":1}}],[\"所以如果你使用的是\",{\"1\":{\"635\":1}}],[\"所以如果您的redis服务需要追求极致的性能\",{\"1\":{\"451\":1}}],[\"所以报错了\",{\"1\":{\"561\":1}}],[\"所以对于这种候选人的任务\",{\"1\":{\"528\":1}}],[\"所以该表也是一个临时表\",{\"1\":{\"503\":1}}],[\"所以该类主要包含这两个功能的方法\",{\"1\":{\"115\":1}}],[\"所以需要用到\",{\"1\":{\"655\":1}}],[\"所以需要排除\",{\"1\":{\"496\":2}}],[\"所以需要开启注解扫描\",{\"1\":{\"331\":1,\"381\":1}}],[\"所以责任链将请求的发送者和请求的处理者解耦了\",{\"1\":{\"480\":1}}],[\"所以缓存系统需要在需要的时候删除一些不必要的缓存数据以节约内存空间\",{\"1\":{\"458\":1}}],[\"所以添加\",{\"1\":{\"443\":1}}],[\"所以记录一下解决的过程\",{\"1\":{\"422\":1}}],[\"所以要解决该问题必须要该配置关掉\",{\"1\":{\"422\":1}}],[\"所以的账号信息都存储在\",{\"1\":{\"408\":1}}],[\"所以以后定义一个索引不能再使用默认的\",{\"1\":{\"321\":1}}],[\"所以设置size=0\",{\"1\":{\"313\":1}}],[\"所以只需要引入\",{\"1\":{\"658\":1,\"676\":1}}],[\"所以只需要把\",{\"1\":{\"262\":1}}],[\"所以只能单向遍历\",{\"1\":{\"168\":1}}],[\"所以人们为了解决实时性\",{\"1\":{\"204\":1}}],[\"所以两两者原理一致\",{\"1\":{\"194\":1}}],[\"所以两个对象的成员变量引用的都是同一个实例\",{\"1\":{\"63\":1}}],[\"所以不能保证添加的先后顺序\",{\"1\":{\"194\":1,\"195\":1}}],[\"所以它允许存储所有类型元素\",{\"1\":{\"177\":1}}],[\"所以尽量使用迭代器的方式进行遍历\",{\"1\":{\"172\":1}}],[\"所以会在\",{\"1\":{\"155\":1}}],[\"所以拿一个\",{\"1\":{\"155\":1}}],[\"所以效率比stringbuilder低\",{\"1\":{\"145\":1}}],[\"所以线程安全\",{\"1\":{\"144\":1}}],[\"所以静态方法必须有实现\",{\"1\":{\"73\":1}}],[\"所以在添加注册时会填充未标记的order\",{\"1\":{\"671\":1}}],[\"所以在\",{\"1\":{\"236\":1}}],[\"所以在很多时候会导致这样那样的问题\",{\"1\":{\"65\":1}}],[\"所以在idea环境下需要打开自动编译功能才能实现随时修改\",{\"1\":{\"23\":1}}],[\"所以是两份新的不同数据\",{\"1\":{\"63\":1}}],[\"所以集合添加了两个对象\",{\"1\":{\"59\":1}}],[\"所以\",{\"1\":{\"57\":1,\"141\":1,\"155\":4,\"453\":1}}],[\"所以安装了\",{\"1\":{\"37\":1}}],[\"所以每个平台编译一次就实现多次编译\",{\"1\":{\"34\":1}}],[\"所以一个程序想要在多个平台执行\",{\"1\":{\"33\":1}}],[\"所以就用上了热部署插件\",{\"1\":{\"18\":1}}],[\"所以向上取整得到的是\",{\"1\":{\"10\":1}}],[\"所以字节大小为\",{\"1\":{\"10\":2}}],[\"所以int也就是int\",{\"1\":{\"10\":1}}],[\"所以b\",{\"1\":{\"10\":1}}],[\"所以少年定下的写作目标有\",{\"1\":{\"3\":1}}],[\"程序通过类型对象可以访问任意值的类型信息\",{\"1\":{\"587\":1}}],[\"程序也就终止\",{\"1\":{\"224\":1}}],[\"程序之间切换开销比较大\",{\"1\":{\"205\":1}}],[\"程序计数器\",{\"1\":{\"43\":1}}],[\"程序的所有工具\",{\"1\":{\"37\":1}}],[\"程序\",{\"1\":{\"33\":1,\"35\":1}}],[\"宣布以74亿美元收购sun公司\",{\"1\":{\"32\":1}}],[\"美国数据软件巨头甲骨文公司\",{\"1\":{\"32\":1}}],[\"原理就是\",{\"1\":{\"710\":1}}],[\"原\",{\"1\":{\"612\":1}}],[\"原子性\",{\"1\":{\"431\":1}}],[\"原始查询\",{\"0\":{\"395\":1}}],[\"原厂服务\",{\"1\":{\"351\":2}}],[\"原有的\",{\"1\":{\"190\":1}}],[\"原有容量长度\",{\"1\":{\"151\":1}}],[\"原有长度\",{\"1\":{\"150\":1}}],[\"原属于sun公司\",{\"1\":{\"32\":1}}],[\"原创技术贴高产如母猪\",{\"1\":{\"3\":1}}],[\"原创高产如母猪\",{\"1\":{\"3\":1}}],[\"把它给复制下来\",{\"1\":{\"831\":1}}],[\"把它暂存在内存中\",{\"1\":{\"458\":1}}],[\"把当前工作区恢复到上次提交的内容\",{\"1\":{\"710\":1}}],[\"把流量作为切入点\",{\"1\":{\"612\":1}}],[\"把leave\",{\"1\":{\"499\":1}}],[\"把你干掉吧\",{\"1\":{\"463\":1}}],[\"把key1中的某元素移入key2中\",{\"1\":{\"443\":1}}],[\"把常用信息\",{\"1\":{\"440\":1}}],[\"把一个响应中的所有\",{\"1\":{\"312\":1}}],[\"把一个类定义在另一个类内部\",{\"1\":{\"80\":1}}],[\"把数据存放到一个或者多个索引\",{\"1\":{\"273\":1}}],[\"把数组\",{\"1\":{\"247\":2}}],[\"把数组buff中从索引\",{\"1\":{\"243\":1}}],[\"把数组buff中所有字节数据写入到输出流中\",{\"1\":{\"243\":1}}],[\"把磁盘文件中的对象的数据或者把网络节点上的对象数据恢复成\",{\"1\":{\"254\":1}}],[\"把字符串转换为byte数组\",{\"1\":{\"239\":1}}],[\"把\",{\"1\":{\"193\":1,\"239\":1,\"644\":1}}],[\"把列表对象转换为object数组\",{\"1\":{\"176\":1}}],[\"把另一端称为\",{\"1\":{\"170\":1}}],[\"把具有相同类型的数据有序地组织在一起\",{\"1\":{\"167\":1}}],[\"把父类类型对象赋给子类类型变量\",{\"1\":{\"107\":1}}],[\"把子类对象赋给父类变量\",{\"1\":{\"107\":1}}],[\"把外面的类称为\",{\"1\":{\"80\":1}}],[\"把里面的类称之为\",{\"1\":{\"80\":1}}],[\"把这个过程叫做编程\",{\"1\":{\"31\":1}}],[\"把博客当作笔记\",{\"1\":{\"3\":1}}],[\"为配置内容的数据格式\",{\"1\":{\"631\":1}}],[\"为空时\",{\"1\":{\"631\":1}}],[\"为其他微服务提供接口的微服务\",{\"1\":{\"623\":1}}],[\"为微服务应用构建消息驱动能力\",{\"1\":{\"610\":1}}],[\"为pending\",{\"1\":{\"542\":1}}],[\"为每个任务结点指定负责人\",{\"1\":{\"498\":1}}],[\"为序列化中的属性选择命名策略\",{\"1\":{\"382\":1}}],[\"为\",{\"0\":{\"372\":1},\"1\":{\"343\":1,\"372\":1,\"631\":1,\"656\":1,\"697\":1,\"742\":1}}],[\"为什么要认证\",{\"0\":{\"719\":1}}],[\"为什么要使用设计模式\",{\"0\":{\"467\":1}}],[\"为什么使用\",{\"0\":{\"269\":1}}],[\"为什么会将\",{\"1\":{\"10\":1}}],[\"为了简化流程\",{\"1\":{\"745\":1}}],[\"为了使用这个方案\",{\"1\":{\"723\":1}}],[\"为了解决上面说的问题\",{\"1\":{\"720\":1}}],[\"为了减轻整体逻辑负担\",{\"1\":{\"671\":1}}],[\"为了保证\",{\"1\":{\"670\":1}}],[\"为了防止由于新增字段无法反序列化\",{\"1\":{\"520\":1}}],[\"为了防止数据丢失以及服务重启时能够恢复数据\",{\"1\":{\"427\":1}}],[\"为了避免请求发送者与多个请求处理者耦合在一起\",{\"1\":{\"480\":1}}],[\"为了避免代码版本升级而造成反序列化因版本不兼容而失败的问题\",{\"1\":{\"254\":1}}],[\"为了让您这样做\",{\"1\":{\"403\":1}}],[\"为了让计算机实现现实人为比较复杂的工作\",{\"1\":{\"31\":1}}],[\"为了不计算分数\",{\"1\":{\"310\":1}}],[\"为了方便后期扩容可以多写几个预留的ip\",{\"1\":{\"733\":1}}],[\"为了方便测试\",{\"1\":{\"297\":1}}],[\"为了方便我们学习\",{\"1\":{\"294\":1}}],[\"是安装集群时就确定好的\",{\"1\":{\"822\":1}}],[\"是基于网页的\",{\"1\":{\"817\":1}}],[\"是kubernetes的大脑\",{\"1\":{\"770\":1}}],[\"是为了接收组件如\",{\"1\":{\"752\":1}}],[\"是每个服务都会遇到的问题\",{\"1\":{\"720\":1}}],[\"是防止有人入侵你的集群\",{\"1\":{\"719\":1}}],[\"是通过\",{\"1\":{\"659\":1}}],[\"是单个的uri资源路径\",{\"1\":{\"656\":1}}],[\"是springcloud在feign的基础上进行封装得到的\",{\"1\":{\"634\":1}}],[\"是spring框架访问mongodb的神器\",{\"1\":{\"384\":1}}],[\"是因为它能实现以下两点\",{\"1\":{\"799\":1}}],[\"是因为它是构成\",{\"1\":{\"631\":1}}],[\"是因为自身实现了多种数据结构\",{\"1\":{\"180\":1}}],[\"是阿里巴巴开源的一个更易于构建云原生应用的动态服务发现\",{\"1\":{\"616\":1}}],[\"是变量的类型\",{\"1\":{\"588\":1}}],[\"是如何绑定到流程中的呢\",{\"1\":{\"512\":1}}],[\"是activiti的引擎管理接口\",{\"1\":{\"500\":1}}],[\"是activiti的历史管理类\",{\"1\":{\"500\":1}}],[\"是activiti的任务管理接口\",{\"1\":{\"500\":1}}],[\"是activiti的流程运行管理接口\",{\"1\":{\"500\":1}}],[\"是activiti的资源管理接口\",{\"1\":{\"500\":1}}],[\"是解决特定问题的一系列套路\",{\"1\":{\"466\":1}}],[\"是前辈们对代码开发经验的总结\",{\"1\":{\"466\":1}}],[\"是怎么样把他们消灭掉的呢\",{\"1\":{\"459\":1}}],[\"是无法启动成功的\",{\"1\":{\"369\":1}}],[\"是无限等待的意思\",{\"1\":{\"222\":1}}],[\"是面向文档的nosql数据库\",{\"1\":{\"357\":1}}],[\"是分布式文档存储\",{\"1\":{\"270\":1}}],[\"是什么\",{\"1\":{\"265\":1,\"358\":1}}],[\"是什么以及\",{\"1\":{\"31\":1}}],[\"是目前开源的全文搜索引擎中的首选\",{\"1\":{\"264\":1,\"265\":1}}],[\"是unicode的实现方式之一\",{\"1\":{\"238\":1}}],[\"是存储在\",{\"1\":{\"191\":1}}],[\"是平衡二叉树\",{\"1\":{\"188\":1}}],[\"是实现了\",{\"1\":{\"177\":1}}],[\"是顶层接口\",{\"1\":{\"173\":1}}],[\"是不安全的\",{\"1\":{\"172\":1}}],[\"是不可变的\",{\"1\":{\"140\":1}}],[\"是一款非常强大的\",{\"1\":{\"268\":1}}],[\"是一种强大\",{\"1\":{\"357\":1}}],[\"是一种非常灵活又富有表现力的\",{\"1\":{\"301\":1}}],[\"是一种针对unicode的可变长度字符编码\",{\"1\":{\"238\":1}}],[\"是一种受限制的线性表\",{\"1\":{\"169\":1}}],[\"是一个完备的ca服务系统\",{\"1\":{\"726\":1}}],[\"是一个基于\",{\"1\":{\"643\":1}}],[\"是一个工作流引擎\",{\"1\":{\"486\":1}}],[\"是一个可扩展\",{\"1\":{\"360\":1}}],[\"是一个操作\",{\"1\":{\"198\":1}}],[\"是一个支持\",{\"1\":{\"173\":1}}],[\"是一个接口\",{\"1\":{\"133\":1}}],[\"是一致的\",{\"1\":{\"155\":1}}],[\"是线程安全的容器\",{\"1\":{\"178\":1}}],[\"是线程安全\",{\"1\":{\"145\":1}}],[\"是所有\",{\"1\":{\"124\":1}}],[\"是所有类的超类\",{\"1\":{\"91\":1}}],[\"是用来设置过滤器\",{\"1\":{\"657\":1}}],[\"是用来判断两个对象是否等价\",{\"1\":{\"59\":1}}],[\"是用于构建分页请求\",{\"1\":{\"353\":1}}],[\"是用于存储\",{\"1\":{\"121\":1}}],[\"是调用\",{\"1\":{\"105\":1}}],[\"是否正常\",{\"1\":{\"807\":1}}],[\"是否启用ipv6\",{\"1\":{\"806\":1}}],[\"是否启用ipip模式\",{\"1\":{\"806\":1}}],[\"是否为匿名字段\",{\"1\":{\"590\":2}}],[\"是否能够计数\",{\"1\":{\"540\":1}}],[\"是否是并行分支\",{\"1\":{\"540\":1}}],[\"是否激活\",{\"1\":{\"540\":1}}],[\"是否激活流程实例\",{\"1\":{\"514\":1}}],[\"是否挂起\",{\"1\":{\"535\":1}}],[\"是否从key启动\",{\"1\":{\"535\":1}}],[\"是否暂停流程实例\",{\"1\":{\"514\":1}}],[\"是否使用uuid作为主键生成策略\",{\"1\":{\"496\":1}}],[\"是否自动执行\",{\"1\":{\"484\":1}}],[\"是否压缩\",{\"1\":{\"451\":1}}],[\"是否已成功启动\",{\"1\":{\"375\":1}}],[\"是否存储\",{\"1\":{\"332\":1}}],[\"是否分词\",{\"1\":{\"332\":1}}],[\"是否可读\",{\"1\":{\"236\":1}}],[\"是否连成一条线\",{\"1\":{\"165\":1}}],[\"是否相等\",{\"1\":{\"57\":1}}],[\"是否一致\",{\"1\":{\"56\":1}}],[\"是\",{\"1\":{\"53\":2,\"62\":1,\"121\":1,\"181\":1,\"182\":1,\"185\":1,\"188\":1,\"194\":1,\"195\":1,\"233\":1,\"268\":1,\"274\":1,\"277\":1,\"289\":1,\"295\":1,\"308\":1,\"320\":1,\"321\":1,\"361\":1,\"443\":1,\"517\":1,\"653\":1}}],[\"是在\",{\"1\":{\"50\":1,\"287\":1}}],[\"是java的虚拟机\",{\"1\":{\"35\":1}}],[\"是成为一方大佬\",{\"1\":{\"3\":1}}],[\"本章节记录一下\",{\"1\":{\"652\":1}}],[\"本系列使用的\",{\"1\":{\"279\":1}}],[\"本质上就是把\",{\"1\":{\"262\":1}}],[\"本包可见以及继承的子类可见\",{\"1\":{\"91\":1}}],[\"本包中可见\",{\"1\":{\"91\":1}}],[\"本类\",{\"1\":{\"91\":1}}],[\"本文档操作以上两种方式安装\",{\"1\":{\"679\":1}}],[\"本文记录一些在使用\",{\"1\":{\"672\":1}}],[\"本文记录一下\",{\"1\":{\"421\":1}}],[\"本文记录学习\",{\"1\":{\"111\":1}}],[\"本文学习\",{\"1\":{\"285\":1}}],[\"本文了解\",{\"1\":{\"255\":1}}],[\"本文旨意掌握\",{\"1\":{\"235\":1}}],[\"本文用于理解java多线程的基础以及实现方式\",{\"1\":{\"209\":1}}],[\"本文用于理解学习多线程的理论基础以及代码实现\",{\"1\":{\"200\":1}}],[\"本文用于整合\",{\"1\":{\"163\":1}}],[\"本文主要列出\",{\"1\":{\"425\":1}}],[\"本文主要分析\",{\"1\":{\"136\":1}}],[\"本文主要记录学习\",{\"1\":{\"118\":1}}],[\"本文介绍使用spring\",{\"1\":{\"384\":1}}],[\"本文介绍\",{\"1\":{\"86\":1,\"157\":1,\"279\":1,\"365\":1}}],[\"本文对\",{\"1\":{\"29\":1}}],[\"本身就是冲突的\",{\"1\":{\"655\":1}}],[\"本身是一个抽象类\",{\"1\":{\"116\":1}}],[\"本身不实现功能\",{\"1\":{\"93\":1}}],[\"本身\",{\"1\":{\"48\":1}}],[\"本地方法\",{\"1\":{\"43\":1}}],[\"本地方法栈是为虚拟机使用\",{\"1\":{\"43\":1}}],[\"本地方法栈\",{\"1\":{\"43\":1}}],[\"本教程更新时间\",{\"1\":{\"25\":1}}],[\"粘贴到idea激活界面中\",{\"1\":{\"27\":1}}],[\"件\",{\"1\":{\"27\":1}}],[\"和流程定义的name一样\",{\"1\":{\"538\":1}}],[\"和文件同步\",{\"1\":{\"454\":1}}],[\"和散列一样\",{\"1\":{\"438\":1}}],[\"和一个\",{\"1\":{\"368\":1}}],[\"和同步类的作用域一致\",{\"1\":{\"232\":1}}],[\"和同步代码的作用域一样\",{\"1\":{\"230\":1}}],[\"和浅拷贝一样\",{\"1\":{\"64\":1}}],[\"和虚拟机栈作用相似\",{\"1\":{\"43\":1}}],[\"和\",{\"0\":{\"187\":1,\"587\":1,\"588\":1,\"593\":1},\"1\":{\"27\":1,\"42\":1,\"73\":1,\"126\":1,\"143\":1,\"147\":2,\"148\":1,\"165\":1,\"168\":1,\"169\":1,\"172\":1,\"187\":1,\"195\":1,\"198\":1,\"210\":1,\"240\":4,\"279\":1,\"289\":1,\"291\":1,\"311\":1,\"312\":1,\"348\":1,\"384\":1,\"386\":1,\"431\":1,\"447\":1,\"448\":1,\"449\":1,\"451\":2,\"456\":1,\"496\":1,\"585\":2,\"610\":1,\"621\":3,\"629\":1,\"631\":1,\"634\":3,\"643\":1,\"653\":1,\"654\":1,\"655\":1,\"662\":1,\"664\":1,\"723\":2,\"757\":1}}],[\"和当代恶臭年轻人一样\",{\"1\":{\"2\":1}}],[\"包即可\",{\"1\":{\"658\":1,\"676\":1,\"677\":1}}],[\"包等\",{\"1\":{\"495\":1}}],[\"包的最新版本\",{\"1\":{\"374\":1}}],[\"包装流\",{\"1\":{\"255\":1}}],[\"包装类就是把基本数据类型封装到一个类中\",{\"1\":{\"40\":1}}],[\"包装类\",{\"0\":{\"40\":1},\"1\":{\"477\":2}}],[\"包括\",{\"1\":{\"796\":1}}],[\"包括认证授权\",{\"1\":{\"763\":1}}],[\"包括ribbon\",{\"1\":{\"644\":1}}],[\"包括一些流程参数等\",{\"1\":{\"496\":1}}],[\"包括持久化\",{\"1\":{\"427\":1}}],[\"包括文档内嵌对象及数组\",{\"1\":{\"360\":1}}],[\"包括复合语句\",{\"1\":{\"308\":1}}],[\"包括抽象方法\",{\"1\":{\"124\":1}}],[\"包括私有的也可以获取到\",{\"1\":{\"123\":1}}],[\"包里的一个类\",{\"1\":{\"121\":1}}],[\"包可见\",{\"1\":{\"91\":1}}],[\"包访问权限\",{\"1\":{\"81\":1}}],[\"包中的\",{\"1\":{\"255\":1}}],[\"包中的锁\",{\"1\":{\"233\":1}}],[\"包中类的命名规则\",{\"1\":{\"244\":1}}],[\"包中\",{\"1\":{\"50\":1,\"113\":1}}],[\"包含calico所需的配置参数\",{\"1\":{\"804\":1}}],[\"包含了master和worker\",{\"1\":{\"758\":1}}],[\"包含私有\",{\"1\":{\"597\":1}}],[\"包含私有字段\",{\"1\":{\"590\":1}}],[\"包含网关可以看做是排他网关和并行网关的结合体\",{\"1\":{\"532\":1}}],[\"包含网关\",{\"0\":{\"532\":1}}],[\"包含抽象处理方法和一个后继连接\",{\"1\":{\"483\":1}}],[\"包含方法有添加\",{\"1\":{\"438\":2}}],[\"包含键值对的无序散列表\",{\"1\":{\"438\":1}}],[\"包含基础的方法有看是否存在添加\",{\"1\":{\"438\":1}}],[\"包含字符串的无序集合\",{\"1\":{\"438\":1}}],[\"包含多少个字符\",{\"1\":{\"344\":1}}],[\"包含关系\",{\"1\":{\"205\":1}}],[\"包含\",{\"1\":{\"37\":2,\"307\":1,\"308\":1,\"310\":1}}],[\"包含开发\",{\"1\":{\"37\":1}}],[\"包放入到\",{\"1\":{\"27\":1}}],[\"包\",{\"0\":{\"374\":1},\"1\":{\"27\":1,\"136\":1,\"376\":1,\"658\":1,\"676\":1}}],[\"包链接\",{\"1\":{\"26\":1}}],[\"先经过认证\",{\"1\":{\"725\":1}}],[\"先部署一套单master架构\",{\"1\":{\"714\":1}}],[\"先删除表再创建表\",{\"1\":{\"495\":1}}],[\"先写内存\",{\"1\":{\"453\":1}}],[\"先去读redis\",{\"1\":{\"433\":1}}],[\"先定义一个\",{\"1\":{\"332\":1,\"382\":1}}],[\"先了解一下\",{\"1\":{\"272\":1}}],[\"先获取\",{\"1\":{\"222\":1}}],[\"先进先出\",{\"1\":{\"169\":1}}],[\"先将仓库\",{\"1\":{\"704\":1}}],[\"先将你的\",{\"1\":{\"369\":1}}],[\"先将原有容量大小\",{\"1\":{\"151\":1}}],[\"先将\",{\"1\":{\"151\":1}}],[\"先在\",{\"1\":{\"48\":1}}],[\"先判断值是否在缓存中\",{\"1\":{\"41\":1}}],[\"先下载破解所需的\",{\"1\":{\"27\":1}}],[\"先生成\",{\"1\":{\"20\":1}}],[\"提交当前修改到其他分支\",{\"0\":{\"708\":1}}],[\"提交分支\",{\"1\":{\"706\":1}}],[\"提交代码到本地仓库\",{\"1\":{\"705\":1}}],[\"提前送你一程\",{\"1\":{\"463\":1}}],[\"提高网络效率\",{\"1\":{\"802\":1}}],[\"提高数据读写效率\",{\"1\":{\"427\":1,\"430\":1}}],[\"提高程序的性能\",{\"1\":{\"257\":1}}],[\"提高组件的复用性\",{\"1\":{\"88\":1}}],[\"提供其他模块之间的数据交互和通信的枢纽\",{\"1\":{\"763\":1}}],[\"提供集群管理的rest\",{\"1\":{\"763\":1}}],[\"提供秒级\",{\"1\":{\"610\":1}}],[\"提供对结构体访问的方法\",{\"1\":{\"595\":1}}],[\"提供历史变量的查询\",{\"1\":{\"554\":1}}],[\"提供的每个结构体的字段索引\",{\"1\":{\"590\":1}}],[\"提供的\",{\"1\":{\"491\":1}}],[\"提供的api向activiti中部署\",{\"1\":{\"489\":1}}],[\"提供字符串\",{\"1\":{\"429\":1,\"430\":1}}],[\"提供出来\",{\"1\":{\"262\":1}}],[\"提供特有的方法\",{\"1\":{\"253\":2}}],[\"提供了如下功能\",{\"1\":{\"610\":1}}],[\"提供了对activiti流程引擎的管理和维护功能\",{\"1\":{\"500\":1}}],[\"提供了管理和控制流程发布包和流程定义的操作\",{\"1\":{\"500\":1}}],[\"提供了额外的功能\",{\"1\":{\"471\":1,\"476\":1}}],[\"提供了大量的静态方法\",{\"1\":{\"350\":1}}],[\"提供了30多种常见语言的分词器\",{\"1\":{\"316\":1}}],[\"提供了两种锁机制来控制多个线程对共享资源的互斥访问\",{\"1\":{\"227\":1}}],[\"提供了\",{\"1\":{\"190\":1,\"268\":1,\"287\":1,\"360\":1}}],[\"提供关于类的方法的信息\",{\"1\":{\"124\":1}}],[\"提供有关类的构造方法的信息\",{\"1\":{\"124\":1}}],[\"提供有关类的属性信息\",{\"1\":{\"124\":1}}],[\"提供扩展功能使用接口\",{\"1\":{\"99\":1}}],[\"提供\",{\"1\":{\"89\":1}}],[\"提供便利的方法\",{\"1\":{\"40\":1}}],[\"提取码\",{\"1\":{\"26\":1}}],[\"提示\",{\"1\":{\"0\":1,\"8\":1,\"18\":1,\"23\":1,\"29\":1,\"34\":1,\"35\":1,\"40\":1,\"45\":1,\"50\":1,\"63\":1,\"68\":1,\"77\":1,\"78\":1,\"80\":1,\"84\":1,\"86\":1,\"91\":1,\"93\":1,\"99\":1,\"103\":1,\"104\":1,\"109\":1,\"111\":1,\"118\":1,\"120\":1,\"123\":1,\"134\":1,\"136\":1,\"145\":1,\"152\":1,\"154\":1,\"155\":1,\"163\":1,\"172\":1,\"173\":1,\"180\":1,\"200\":1,\"204\":1,\"209\":1,\"235\":1,\"239\":1,\"240\":1,\"249\":1,\"255\":1,\"259\":1,\"264\":1,\"294\":1,\"312\":1,\"321\":1,\"322\":1,\"328\":1,\"338\":1,\"347\":1,\"348\":1,\"353\":1,\"408\":1,\"421\":1,\"466\":1,\"470\":1,\"472\":1,\"474\":1,\"480\":1,\"494\":1,\"507\":1,\"512\":1,\"519\":1,\"559\":1,\"563\":1,\"586\":1,\"608\":1,\"621\":1,\"631\":1,\"636\":1,\"652\":1,\"667\":1,\"672\":1,\"679\":1,\"690\":1,\"698\":1,\"700\":1,\"702\":1,\"703\":1,\"706\":1,\"707\":1,\"708\":1,\"726\":1,\"733\":1,\"752\":1,\"753\":1,\"755\":1,\"757\":1,\"758\":1,\"760\":1,\"788\":1,\"800\":1,\"813\":1,\"822\":1,\"823\":1}}],[\"网桥\",{\"1\":{\"799\":1}}],[\"网段\",{\"1\":{\"806\":2}}],[\"网段互联互通\",{\"1\":{\"796\":1}}],[\"网段的第一个ip\",{\"1\":{\"736\":1}}],[\"网络\",{\"1\":{\"716\":1}}],[\"网卡信息配置在\",{\"1\":{\"715\":1}}],[\"网易镜像\",{\"1\":{\"686\":1}}],[\"网格任务支持海量子任务均匀分配到所有\",{\"1\":{\"610\":1}}],[\"网关作为流量的入口\",{\"1\":{\"653\":1}}],[\"网关\",{\"1\":{\"612\":1,\"613\":1,\"653\":1}}],[\"网关相关\",{\"0\":{\"529\":1}}],[\"网关等操作\",{\"1\":{\"507\":1}}],[\"网上一大堆文档\",{\"1\":{\"377\":1}}],[\"网上一大堆教程\",{\"1\":{\"26\":1}}],[\"网站链接\",{\"1\":{\"15\":1}}],[\"网站描述\",{\"1\":{\"15\":1}}],[\"网站名字\",{\"1\":{\"15\":1}}],[\"网站图标\",{\"1\":{\"15\":1}}],[\"年月日\",{\"1\":{\"117\":3}}],[\"年月日时分秒\",{\"1\":{\"116\":1}}],[\"年龄\",{\"1\":{\"89\":1}}],[\"年\",{\"1\":{\"25\":1}}],[\"免费激活至\",{\"1\":{\"25\":1}}],[\"就取代了\",{\"1\":{\"820\":1}}],[\"就像我们上学时候给心仪的女孩传纸条\",{\"1\":{\"719\":1}}],[\"就像是\",{\"1\":{\"275\":1}}],[\"就导致这个文件要被反复修改\",{\"1\":{\"707\":1}}],[\"就需要建立很多仓库\",{\"1\":{\"703\":1}}],[\"就路由到指定的地址\",{\"1\":{\"654\":1}}],[\"就算你的项目中继续用\",{\"1\":{\"644\":1}}],[\"就算配置完成了\",{\"1\":{\"607\":1}}],[\"就算完成了\",{\"1\":{\"338\":1}}],[\"就创建\",{\"1\":{\"495\":1}}],[\"就好比定义一个\",{\"1\":{\"490\":1}}],[\"就直接从内存中取\",{\"1\":{\"458\":1}}],[\"就可能会出错\",{\"1\":{\"453\":1}}],[\"就可以看到返回当前登录用户数据了\",{\"1\":{\"607\":1}}],[\"就可以将\",{\"1\":{\"609\":1}}],[\"就可以将请假单的id作为业务标识存储到activiti中\",{\"1\":{\"513\":1}}],[\"就可以将这个选项设置为\",{\"1\":{\"451\":1}}],[\"就可以办理某个任务\",{\"1\":{\"492\":1}}],[\"就可以查询当前流程执行到哪里了\",{\"1\":{\"491\":1}}],[\"就可以清空\",{\"1\":{\"456\":1}}],[\"就可以不输入密码登录\",{\"1\":{\"411\":1}}],[\"就可以不用了解\",{\"1\":{\"274\":1}}],[\"就可以发现拦截器也是直接获取请求中的\",{\"1\":{\"262\":1}}],[\"就可以声明成匿名内部类\",{\"1\":{\"84\":1}}],[\"就可以直接使用缓冲池中的对象\",{\"1\":{\"41\":1}}],[\"就很容易实现求两个人的共同好友功能\",{\"1\":{\"435\":1}}],[\"就很容易定位到关于\",{\"1\":{\"277\":1}}],[\"就说明mongodb服务已经成功启动了\",{\"1\":{\"369\":1}}],[\"就返回原本数据\",{\"1\":{\"343\":1}}],[\"就能具备各种基本的crud功能\",{\"1\":{\"335\":1,\"383\":1}}],[\"就能够获取到其他描述符\",{\"1\":{\"133\":1}}],[\"就在于你不用写任何dao处理\",{\"1\":{\"335\":1,\"383\":1}}],[\"就发送消息通知用户\",{\"1\":{\"271\":1}}],[\"就开始我们的环境搭建以及学习\",{\"1\":{\"265\":1}}],[\"就指的是\",{\"1\":{\"238\":1}}],[\"就指向\",{\"1\":{\"155\":1}}],[\"就不会出现用户地址发生变化导致服务找不到\",{\"1\":{\"624\":1}}],[\"就不会出现文件过大的情况了\",{\"1\":{\"456\":1}}],[\"就不会进行同步\",{\"1\":{\"229\":1}}],[\"就不用安装\",{\"1\":{\"37\":1}}],[\"就满足了对实时性的要求\",{\"1\":{\"204\":1}}],[\"就出现了卡顿现象\",{\"1\":{\"204\":1}}],[\"就叫做集合框架体系\",{\"1\":{\"171\":1}}],[\"就绪队列\",{\"1\":{\"218\":1}}],[\"就绪状态\",{\"0\":{\"213\":1},\"1\":{\"212\":1}}],[\"就绪\",{\"1\":{\"160\":1}}],[\"就要每个人提交前\",{\"1\":{\"707\":1}}],[\"就要执行\",{\"1\":{\"151\":1}}],[\"就要在哪个系统上安装相应的\",{\"1\":{\"35\":1}}],[\"就是它的数据中心\",{\"1\":{\"748\":1}}],[\"就是什么人具有什么样的权限\",{\"1\":{\"721\":1}}],[\"就是从\",{\"1\":{\"604\":1}}],[\"就是该算法要解决的对象\",{\"1\":{\"463\":1}}],[\"就是aof文件的名字\",{\"1\":{\"455\":1}}],[\"就是说\",{\"1\":{\"442\":1}}],[\"就是利用set存储用户之间的点赞关联的\",{\"1\":{\"435\":1}}],[\"就是导致\",{\"1\":{\"422\":1}}],[\"就是一组文档\",{\"1\":{\"361\":1}}],[\"就是一个流程变量名称\",{\"1\":{\"522\":1}}],[\"就是一个具体的装饰者角色\",{\"1\":{\"257\":1}}],[\"就是一个抽象装饰者\",{\"1\":{\"257\":1}}],[\"就是\",{\"1\":{\"155\":1,\"172\":1,\"588\":1}}],[\"就是用于解析和格式化时间的类\",{\"1\":{\"115\":1}}],[\"就是递归拷贝\",{\"1\":{\"64\":1}}],[\"就只能在子类代码中使用\",{\"1\":{\"91\":1}}],[\"就会知道该框架获取参数太方便了\",{\"1\":{\"603\":1}}],[\"就会在\",{\"1\":{\"513\":1}}],[\"就会变化\",{\"1\":{\"290\":1}}],[\"就会修改这个数据\",{\"1\":{\"289\":1}}],[\"就会被系统给换下来回到就绪状态\",{\"1\":{\"214\":1}}],[\"就会抛出异常\",{\"1\":{\"62\":1}}],[\"就会清除该栈帧\",{\"1\":{\"43\":1}}],[\"就会创建一个当前方法的\",{\"1\":{\"43\":1}}],[\"就会自动更新代码了\",{\"1\":{\"24\":1}}],[\"就有了如下两个跨平台方式\",{\"1\":{\"33\":1}}],[\"就这样浑浑噩噩度过了一年半\",{\"1\":{\"2\":1}}],[\"项目多了\",{\"1\":{\"703\":1}}],[\"项目开发中级联删除操作一般只开放给超级管理员使用\",{\"1\":{\"510\":1}}],[\"项目集成\",{\"0\":{\"495\":1}}],[\"项目的\",{\"1\":{\"24\":1}}],[\"项目\",{\"1\":{\"24\":1}}],[\"项目时\",{\"1\":{\"18\":1,\"830\":1}}],[\"将容器应用部署到\",{\"1\":{\"817\":1}}],[\"将容器的\",{\"1\":{\"692\":1}}],[\"将输出结果填写在这\",{\"1\":{\"806\":3}}],[\"将docker0发给它的数据包包装起来\",{\"1\":{\"799\":1}}],[\"将生成的证书和秘钥文件\",{\"1\":{\"744\":1}}],[\"将user\",{\"1\":{\"742\":1}}],[\"将桥接的ipv4流量传递到iptables的链\",{\"1\":{\"715\":1}}],[\"将主机的目录挂载到容器的目录\",{\"1\":{\"692\":1}}],[\"将官方docker存储库的gpg密钥添加到您的系统\",{\"1\":{\"680\":1}}],[\"将响应从微服务发送给客户端等\",{\"1\":{\"664\":1}}],[\"将其发送到\",{\"1\":{\"654\":1}}],[\"将这两个服务注册到\",{\"1\":{\"636\":1}}],[\"将自定义参数解析器添加到spring容器中\",{\"0\":{\"606\":1}}],[\"将请求映射方法列表中\",{\"1\":{\"604\":1}}],[\"将函数包装为反射值对象\",{\"1\":{\"596\":1}}],[\"将值设置为传入的反射值对象的值\",{\"1\":{\"595\":1}}],[\"将值以字符串类型返回\",{\"1\":{\"594\":1}}],[\"将值以字节数组\",{\"1\":{\"594\":1}}],[\"将值以双精度\",{\"1\":{\"594\":1}}],[\"将值以\",{\"1\":{\"594\":4}}],[\"将来查询activiti的流程实例信息就可以获取请假单的id从而关联查询业务系统数据库得到请假单信息\",{\"1\":{\"513\":1}}],[\"将bpmn文件和png文件两个打包为一个zip文件\",{\"1\":{\"502\":1}}],[\"将抛出异常\",{\"1\":{\"496\":1}}],[\"将一段时间内\",{\"1\":{\"464\":1}}],[\"将一个带有给定分值的成员添加到哦有序集合里面\",{\"1\":{\"444\":1}}],[\"将一个对象存储在hash类型里要比存储在string类型里占用更少的内存空间\",{\"1\":{\"441\":1}}],[\"将一个值与\",{\"1\":{\"364\":1}}],[\"将即将过期的数据干掉\",{\"1\":{\"464\":1}}],[\"将最近最少使用\",{\"1\":{\"464\":1}}],[\"将该选项改为yes以便打开redis的aof功能\",{\"1\":{\"455\":1}}],[\"将给定值推入到列表左端\",{\"1\":{\"442\":1}}],[\"将给定值推入到列表右端\",{\"1\":{\"442\":1}}],[\"将任务存放在list中\",{\"1\":{\"442\":1}}],[\"将键存储的值减去整数\",{\"1\":{\"440\":1}}],[\"将键存储的值减1\",{\"1\":{\"440\":1}}],[\"将键存储的值加上整数\",{\"1\":{\"440\":1}}],[\"将键存储的值加1\",{\"1\":{\"440\":1}}],[\"将数据包原封不动地传递到目标容器内\",{\"1\":{\"799\":1}}],[\"将数据拉入redis\",{\"1\":{\"433\":1}}],[\"将数组转化为\",{\"1\":{\"197\":1}}],[\"将需要匹配的值当成一个\",{\"1\":{\"306\":1}}],[\"将str字符串数据写入到输出流中\",{\"1\":{\"247\":1}}],[\"将src中的内容复制到dest中\",{\"1\":{\"198\":1}}],[\"将让出\",{\"1\":{\"214\":1}}],[\"将元素推入此列表所表示的栈\",{\"1\":{\"180\":1}}],[\"将元素添加到列表末尾\",{\"1\":{\"176\":1}}],[\"将指定的一个字符数据\",{\"1\":{\"247\":1}}],[\"将指定的一个字节数据b写入到输出流中\",{\"1\":{\"243\":1}}],[\"将指定\",{\"1\":{\"176\":1,\"198\":1}}],[\"将\",{\"1\":{\"155\":1,\"296\":1,\"424\":1,\"499\":1,\"522\":1}}],[\"将日历设置成想要的时间\",{\"1\":{\"117\":1}}],[\"将空间的地址赋值给\",{\"1\":{\"48\":1}}],[\"将会对请求和响应进行修改\",{\"1\":{\"654\":1}}],[\"将会不起作用\",{\"1\":{\"625\":1}}],[\"将会抛出\",{\"1\":{\"43\":2}}],[\"将会转换为表达式中类型最高的类型\",{\"1\":{\"39\":1}}],[\"将包装类直接赋值给基本数据类型的过程\",{\"1\":{\"40\":1}}],[\"将包装类转成基本数据类型的过程\",{\"1\":{\"40\":1}}],[\"将基本数据类型直接赋值给包装类的过程\",{\"1\":{\"40\":1}}],[\"将基本数据类型转成包装类的过程\",{\"1\":{\"40\":1}}],[\"将下载后的\",{\"1\":{\"27\":1}}],[\"将我们的项目使用jrebel进行管理项目\",{\"1\":{\"24\":1}}],[\"将学习所理解的记录下来\",{\"1\":{\"3\":1}}],[\"勾选中我们的\",{\"1\":{\"24\":1}}],[\"勾选\",{\"1\":{\"23\":1}}],[\"然后运行kubernetes\",{\"1\":{\"799\":1}}],[\"然后根据调度策略为这些pod分配节点\",{\"1\":{\"775\":1}}],[\"然后使用以下命令使配置即时生效\",{\"1\":{\"715\":1}}],[\"然后判断它是不是以\",{\"1\":{\"657\":1}}],[\"然后服务消费者会去这个中间平台去查询相关信息\",{\"1\":{\"624\":1}}],[\"然后重写\",{\"1\":{\"562\":1}}],[\"然后重启下数据库即可\",{\"1\":{\"411\":1}}],[\"然后重启\",{\"1\":{\"411\":1}}],[\"然后是找不到的\",{\"1\":{\"561\":1}}],[\"然后\",{\"1\":{\"539\":1}}],[\"然后此类必须实现org\",{\"1\":{\"518\":1}}],[\"然后把bpmn和png文件同时部署到web环境中\",{\"1\":{\"499\":1}}],[\"然后在节点分别修改etcd\",{\"1\":{\"755\":1}}],[\"然后在\",{\"1\":{\"654\":1}}],[\"然后在创建新表\",{\"1\":{\"496\":1}}],[\"然后在log文件夹下新建一个\",{\"1\":{\"368\":1}}],[\"然后工作线程再用\",{\"1\":{\"442\":1}}],[\"然后更改\",{\"1\":{\"411\":1}}],[\"然后再去访问对应的地址\",{\"1\":{\"624\":1}}],[\"然后再次运行上面的启动命令\",{\"1\":{\"375\":1}}],[\"然后再进行capmem向上取整\",{\"1\":{\"11\":1}}],[\"然后继承repository提供的一些子接口\",{\"1\":{\"335\":1,\"383\":1}}],[\"然后进行检索\",{\"1\":{\"277\":1}}],[\"然后关联信息的编号\",{\"1\":{\"277\":1}}],[\"然后会开始遍历数据库\",{\"1\":{\"277\":1}}],[\"然后交给计算机去读取并依次执行指令\",{\"1\":{\"202\":1}}],[\"然后将集合元素按照升序排列\",{\"1\":{\"189\":1}}],[\"然后执行准入操作\",{\"1\":{\"725\":1}}],[\"然后执行修改密码的sql语句\",{\"1\":{\"411\":1}}],[\"然后执行\",{\"1\":{\"150\":1,\"296\":1}}],[\"然后勾选☑️\",{\"1\":{\"23\":1}}],[\"可手动设置\",{\"1\":{\"806\":1}}],[\"可选\",{\"1\":{\"680\":1}}],[\"可自定义feign的encode\",{\"1\":{\"649\":1}}],[\"可为空\",{\"1\":{\"572\":1}}],[\"可配置的历史级别有none\",{\"1\":{\"496\":1}}],[\"可将请求沿着这条链传递\",{\"1\":{\"480\":1}}],[\"可读性\",{\"1\":{\"466\":1}}],[\"可维护性\",{\"1\":{\"466\":1}}],[\"可持久化\",{\"1\":{\"429\":1,\"430\":1}}],[\"可用json存储\",{\"1\":{\"537\":1}}],[\"可用级联删除方法将流程及相关记录全部删除\",{\"1\":{\"510\":1}}],[\"可用于缓存\",{\"1\":{\"429\":1,\"430\":1}}],[\"可用的权限列表\",{\"0\":{\"417\":1}}],[\"可通过maxmemory配置\",{\"1\":{\"427\":1,\"463\":1}}],[\"可分为\",{\"1\":{\"364\":1}}],[\"可动态添加额外的服务器\",{\"1\":{\"360\":1}}],[\"可轻易查询文档中内嵌的对象及数组\",{\"1\":{\"360\":1}}],[\"可扩展性较差\",{\"1\":{\"484\":1}}],[\"可扩展的数据存储方式\",{\"1\":{\"357\":1}}],[\"可扩容数组\",{\"1\":{\"177\":1}}],[\"可能导致对部分definition更新后会影响默认的\",{\"1\":{\"671\":1}}],[\"可能不容易观察运行时的特征\",{\"1\":{\"481\":1}}],[\"可能过时\",{\"1\":{\"286\":1}}],[\"可能会下载失败\",{\"1\":{\"800\":1}}],[\"可能会被第三方窃取\",{\"1\":{\"719\":1}}],[\"可能会造成循环调用\",{\"1\":{\"481\":1}}],[\"可能会遇到各种各样的问题\",{\"1\":{\"368\":1}}],[\"可能会抛出\",{\"1\":{\"221\":1}}],[\"可能会记录一些观影后感\",{\"1\":{\"3\":1}}],[\"可变\",{\"1\":{\"143\":1}}],[\"可变性\",{\"0\":{\"143\":1}}],[\"可以本地下载上传至虚拟机\",{\"1\":{\"800\":1}}],[\"可以定义多个\",{\"1\":{\"729\":1}}],[\"可以定义抽象方法和普通方法\",{\"1\":{\"92\":1}}],[\"可以签署\",{\"1\":{\"726\":1}}],[\"可以这么设置\",{\"1\":{\"722\":1}}],[\"可以参考知乎大神的生动讲解\",{\"1\":{\"720\":1}}],[\"可以简易的通过全量删除并全量添加即可实现路由\",{\"1\":{\"671\":1}}],[\"可以接收两个参数\",{\"1\":{\"661\":1}}],[\"可以透过它的\",{\"1\":{\"657\":1}}],[\"可以逐一建立路由\",{\"1\":{\"657\":1}}],[\"可以手动指定\",{\"1\":{\"649\":1}}],[\"可以让我们轻松地将面向服务的\",{\"1\":{\"643\":1}}],[\"可以让该元素实现\",{\"1\":{\"189\":1}}],[\"可以动态地创建这个类型的实例\",{\"1\":{\"592\":1}}],[\"可以获取节点的\",{\"1\":{\"569\":1}}],[\"可以将document的值设置成uel表达式\",{\"1\":{\"542\":1}}],[\"可以将业务系统中复杂的业务流程抽取出来\",{\"1\":{\"486\":1}}],[\"可以执行挂起操作\",{\"1\":{\"514\":1}}],[\"可以执行激活操作\",{\"1\":{\"514\":1}}],[\"可以从候选人中选择参与者来完成任务\",{\"1\":{\"525\":1}}],[\"可以从数据库中把资源文件下载到本地\",{\"1\":{\"511\":1}}],[\"可以从这个接口中获取任务的信息\",{\"1\":{\"500\":1}}],[\"可以从这个接口中获取很多关于流程执行相关的信息\",{\"1\":{\"500\":1}}],[\"可以避免继承导致的子类过多\",{\"1\":{\"475\":1}}],[\"可以查看\",{\"1\":{\"663\":1}}],[\"可以查看👉\",{\"1\":{\"468\":1}}],[\"可以查询历史信息\",{\"1\":{\"500\":1}}],[\"可以查询出当前的key还剩余多长时间过期\",{\"1\":{\"440\":1}}],[\"可以很好地在合理使用cpu和避免浪费内存之间取得平衡\",{\"1\":{\"462\":1}}],[\"可以通过是\",{\"1\":{\"663\":1}}],[\"可以通过配置项\",{\"1\":{\"631\":1}}],[\"可以通过配置redis\",{\"1\":{\"455\":1}}],[\"可以通过反射调用方法\",{\"1\":{\"597\":1}}],[\"可以通过\",{\"1\":{\"596\":1}}],[\"可以通过类型断言转换为指定类型\",{\"1\":{\"594\":1}}],[\"可以通过下面几种方法从反射值对象\",{\"1\":{\"594\":1}}],[\"可以通过这些方法来获取和修改对象的值\",{\"1\":{\"593\":1}}],[\"可以通过其子类扩展具体构件的功能\",{\"1\":{\"476\":1}}],[\"可以通过参数\",{\"1\":{\"451\":1}}],[\"可以通过执行\",{\"1\":{\"451\":2}}],[\"可以放到set中实现\",{\"1\":{\"443\":1}}],[\"可以利用list的\",{\"1\":{\"442\":1}}],[\"可以包含任何数据\",{\"1\":{\"440\":1}}],[\"可以是字符串\",{\"1\":{\"438\":1}}],[\"可以用到各种场景中\",{\"1\":{\"723\":1}}],[\"可以用逗号分隔\",{\"1\":{\"414\":1}}],[\"可以用来存储多个数据\",{\"1\":{\"171\":1}}],[\"可以自己去下载一个图形界面管理工具\",{\"1\":{\"367\":1}}],[\"可以设置\",{\"1\":{\"353\":1}}],[\"可以发现\",{\"1\":{\"353\":1}}],[\"可以表达非常复杂的逻辑\",{\"1\":{\"308\":1}}],[\"可以使用正则表达式选择正确的网卡\",{\"1\":{\"806\":1}}],[\"可以使用match\",{\"1\":{\"305\":1}}],[\"可以使用\",{\"1\":{\"304\":1}}],[\"可以新增可以修改\",{\"1\":{\"289\":1}}],[\"可以被放置在集群的任意节点上\",{\"1\":{\"276\":1}}],[\"可以索引不同类型的文档\",{\"1\":{\"274\":1}}],[\"可以支持任意的微服务框架\",{\"1\":{\"262\":1}}],[\"可以切换给其它线程来执行\",{\"1\":{\"223\":1}}],[\"可以说\",{\"1\":{\"202\":1}}],[\"可以对日志进行配置\",{\"1\":{\"495\":1}}],[\"可以对中文进行分词\",{\"1\":{\"322\":1}}],[\"可以对集合中元素排序\",{\"1\":{\"183\":1}}],[\"可以对类或者类的字段\",{\"1\":{\"91\":1}}],[\"可以保证相同内容的字符串变量引用同一的内存对象\",{\"1\":{\"153\":1}}],[\"可以看看内容\",{\"1\":{\"761\":1}}],[\"可以看看他的静态方法\",{\"1\":{\"355\":1}}],[\"可以看到我们在构造器中定义的关系强耦合\",{\"1\":{\"484\":1}}],[\"可以看到我们预设了\",{\"1\":{\"342\":1}}],[\"可以看到\",{\"1\":{\"422\":1}}],[\"可以看到使用\",{\"1\":{\"353\":1}}],[\"可以看到激活至2100\",{\"1\":{\"27\":1}}],[\"可以看\",{\"1\":{\"251\":1}}],[\"可以看出核心的代码为\",{\"1\":{\"150\":1}}],[\"可以当成是一个包装类\",{\"1\":{\"145\":1}}],[\"可以在运行时通过控制台实时修改限流降级规则\",{\"1\":{\"610\":1}}],[\"可以在连线上设置uel表达式\",{\"1\":{\"522\":1}}],[\"可以在\",{\"1\":{\"522\":1,\"822\":1}}],[\"可以在多个线程中使用\",{\"1\":{\"141\":1}}],[\"可以在构造器中调用本类其他的构造器\",{\"1\":{\"68\":1}}],[\"可以调用执行方法\",{\"1\":{\"128\":1}}],[\"可以调用对象的成员变量\",{\"1\":{\"68\":1}}],[\"可以根据\",{\"1\":{\"617\":1}}],[\"可以根据实际情况自己设置\",{\"1\":{\"334\":1}}],[\"可以根据该类创建具体的个体对象\",{\"1\":{\"121\":1}}],[\"可以根据需要添加具体\",{\"1\":{\"81\":1}}],[\"可以去数组中提取对于字\",{\"1\":{\"116\":1}}],[\"可以直接进行负载均衡\",{\"1\":{\"634\":1}}],[\"可以直接导入\",{\"1\":{\"296\":1}}],[\"可以直接访问方法内部的变量\",{\"1\":{\"83\":1}}],[\"可以直接访问类内部的静态私有成员\",{\"1\":{\"82\":1}}],[\"可以直接访问外部类的私有变量\",{\"1\":{\"81\":1}}],[\"可以直接通过类名访问它\",{\"1\":{\"72\":1}}],[\"可以修饰类\",{\"1\":{\"78\":1}}],[\"可以打开破解软件\",{\"1\":{\"22\":1}}],[\"如上图所示\",{\"1\":{\"799\":1}}],[\"如上输出说明master节点组件运行正常\",{\"1\":{\"779\":1}}],[\"如flannel\",{\"1\":{\"799\":1}}],[\"如网格任务\",{\"1\":{\"610\":1}}],[\"如偏移\",{\"1\":{\"590\":1}}],[\"如string\",{\"1\":{\"544\":1}}],[\"如部门经理的审核人是李四\",{\"1\":{\"498\":1}}],[\"如何用通俗易懂的话来解释非对称加密\",{\"1\":{\"720\":1}}],[\"如何实现\",{\"0\":{\"454\":1}}],[\"如何理解并发和并行的区别\",{\"1\":{\"201\":1}}],[\"如用户信息\",{\"1\":{\"441\":1}}],[\"如用户数据\",{\"1\":{\"274\":1}}],[\"如数字\",{\"1\":{\"440\":1}}],[\"如以下示例所示\",{\"1\":{\"403\":1}}],[\"如照片和视频\",{\"1\":{\"360\":1}}],[\"如重启\",{\"1\":{\"290\":1}}],[\"如需详细了解七大原则\",{\"1\":{\"468\":1}}],[\"如需了解\",{\"1\":{\"341\":1,\"478\":1}}],[\"如需了解装饰器模式详解请看👉\",{\"1\":{\"255\":1}}],[\"如需要查看\",{\"1\":{\"338\":1}}],[\"如需要进一步了解\",{\"1\":{\"251\":1}}],[\"如需要进一步了解线程互斥同步可以看\",{\"1\":{\"208\":1}}],[\"如通过\",{\"1\":{\"216\":1}}],[\"如睡眠时间已到\",{\"1\":{\"215\":1}}],[\"如执行了\",{\"1\":{\"214\":1}}],[\"如有不正确的地方请指出\",{\"1\":{\"163\":1}}],[\"如有总结有错误请提出问题\",{\"1\":{\"29\":1}}],[\"如下配置\",{\"1\":{\"715\":1}}],[\"如下\",{\"1\":{\"495\":1,\"503\":1,\"604\":1,\"725\":1,\"729\":1,\"730\":1}}],[\"如下例所示\",{\"1\":{\"374\":1}}],[\"如下👇\",{\"1\":{\"254\":1}}],[\"如下所示\",{\"1\":{\"48\":1,\"324\":1}}],[\"如下图所示\",{\"1\":{\"324\":1,\"456\":1}}],[\"如下图所示👇\",{\"1\":{\"323\":1,\"513\":1}}],[\"如下图👇\",{\"1\":{\"186\":1}}],[\"如下图\",{\"1\":{\"27\":2}}],[\"如果集群中没有\",{\"1\":{\"822\":1}}],[\"如果启用rbac权限控制\",{\"1\":{\"806\":2}}],[\"如果配置了tls\",{\"1\":{\"806\":1}}],[\"如果node有多个网卡的话\",{\"1\":{\"800\":1}}],[\"如果number\",{\"1\":{\"343\":1}}],[\"如果请求尝试创建一个不存在的namespace\",{\"1\":{\"725\":1}}],[\"如果请求的目标地址\",{\"1\":{\"656\":1}}],[\"如果客户端使用http连接到kube\",{\"1\":{\"722\":1}}],[\"如果提示无法修改\",{\"1\":{\"698\":1}}],[\"如果这里plugin非mysql\",{\"1\":{\"697\":1}}],[\"如果这个操作报错提示\",{\"1\":{\"371\":1}}],[\"如果发现容器未能正常启动成功\",{\"1\":{\"693\":1}}],[\"如果匹配上就会执行路由\",{\"1\":{\"661\":1}}],[\"如果有部署多个\",{\"1\":{\"733\":1}}],[\"如果有一个准入控制拒绝了此次请求\",{\"1\":{\"725\":1}}],[\"如果有\",{\"1\":{\"655\":1}}],[\"如果有重复的元素\",{\"1\":{\"186\":1}}],[\"如果断言为真\",{\"1\":{\"654\":1}}],[\"如果项目中使用ribbon\",{\"1\":{\"649\":1}}],[\"如果项目中加入了\",{\"1\":{\"645\":1}}],[\"如果参数类型是\",{\"1\":{\"604\":1}}],[\"如果反射值对象中具有方法时\",{\"1\":{\"597\":1}}],[\"如果反射值对象\",{\"1\":{\"596\":1}}],[\"如果想获得\",{\"1\":{\"588\":1}}],[\"如果想要查询关于\",{\"1\":{\"277\":1}}],[\"如果想要在原有的内容上追加需要使用构造器\",{\"1\":{\"249\":1}}],[\"如果为true则执行该分支\",{\"1\":{\"530\":1}}],[\"如果候选任务没有进行领取就直接完成的话\",{\"1\":{\"528\":1,\"582\":1}}],[\"如果临时任务负责人变更则需要修改流程定义\",{\"1\":{\"525\":1}}],[\"如果连接不设置条件\",{\"1\":{\"524\":1}}],[\"如果如果uel表达式都不符合条件\",{\"1\":{\"524\":1}}],[\"如果uel表达式中流程变量名不存在则报错\",{\"1\":{\"524\":1}}],[\"如果uel表达式是true\",{\"1\":{\"522\":1}}],[\"如果将pojo存储到流程变量中\",{\"1\":{\"520\":1}}],[\"如果其他用户想要查看这些资源文件\",{\"1\":{\"511\":1}}],[\"如果流程中有中文\",{\"1\":{\"568\":1}}],[\"如果流程\",{\"1\":{\"510\":1}}],[\"如果当前任务被完成以后\",{\"1\":{\"503\":1}}],[\"如果当期正在执行的流程实例结束以后\",{\"1\":{\"503\":1}}],[\"如果表不存在\",{\"1\":{\"495\":1,\"496\":1}}],[\"如果需要查询其他匹配方式\",{\"1\":{\"663\":1}}],[\"如果需要使用\",{\"1\":{\"658\":1}}],[\"如果需要就执行更新\",{\"1\":{\"495\":1}}],[\"如果需要的存储引擎被禁用或未编译\",{\"1\":{\"424\":1}}],[\"如果现在我们需要改变顺序或者是新增其他handler\",{\"1\":{\"484\":1}}],[\"如果可以处理请求则处理\",{\"1\":{\"483\":1}}],[\"如果过期的key占比大于总数的25\",{\"1\":{\"462\":1}}],[\"如果过期\",{\"1\":{\"460\":1}}],[\"如果缓存中的数据永久存在\",{\"1\":{\"458\":1}}],[\"如果命令执行完成\",{\"1\":{\"453\":1}}],[\"如果先记日志再执行命令的话\",{\"1\":{\"453\":1}}],[\"如果redis加载损坏的rdb文件时拒绝启动\",{\"1\":{\"451\":1}}],[\"如果持久化出错\",{\"1\":{\"451\":1}}],[\"如果60秒内有10000条key信息发生变化\",{\"1\":{\"451\":1}}],[\"如果300秒内有10条key信息发生变化\",{\"1\":{\"451\":1}}],[\"如果900秒内有1条key信息发生变化\",{\"1\":{\"451\":1}}],[\"如果存在\",{\"1\":{\"449\":1}}],[\"如果存在堆中的对象\",{\"1\":{\"156\":1}}],[\"如果宕机突然发生\",{\"1\":{\"447\":1}}],[\"如果给定元素成员存在于有序集合中\",{\"1\":{\"444\":1}}],[\"如果给定键存在于散列中\",{\"1\":{\"441\":1}}],[\"如果key不存在\",{\"1\":{\"440\":1}}],[\"如果key已经存在\",{\"1\":{\"440\":1}}],[\"如果数据被零除\",{\"1\":{\"424\":1}}],[\"如果用官方提供的安装方法会很慢\",{\"1\":{\"679\":1}}],[\"如果用过\",{\"1\":{\"603\":1}}],[\"如果用户\",{\"1\":{\"424\":1}}],[\"如果用关系型数据库模型对比\",{\"1\":{\"273\":1}}],[\"如果您不想看认证授权的解释\",{\"1\":{\"717\":1}}],[\"如果您不确定主机运行的是哪个\",{\"1\":{\"372\":1}}],[\"如果您在启动时收到类似于以下内容的错误\",{\"1\":{\"375\":1}}],[\"如果您只安装mongodb\",{\"1\":{\"374\":1}}],[\"如果你需要部署多个\",{\"1\":{\"755\":1}}],[\"如果你快过期了\",{\"1\":{\"463\":1}}],[\"如果你没有提前创建db文件夹\",{\"1\":{\"369\":1}}],[\"如果你的端口地址不一致或者你设置了账号密码验证\",{\"1\":{\"330\":1}}],[\"如果你的\",{\"1\":{\"274\":1,\"625\":1}}],[\"如果创建的新文档中没有\",{\"1\":{\"363\":1}}],[\"如果说文档就是行那么集合就类似关系型数据库中的表\",{\"1\":{\"361\":1}}],[\"如果要卸载\",{\"1\":{\"822\":1}}],[\"如果要多个字段高亮\",{\"1\":{\"348\":1}}],[\"如果要在字段中搜索特定字词\",{\"1\":{\"305\":1}}],[\"如果设置成\",{\"1\":{\"343\":1}}],[\"如果片段数设置为\",{\"1\":{\"343\":1}}],[\"如果本地插件的路径中存在空格\",{\"1\":{\"317\":1}}],[\"如果达到会\",{\"1\":{\"308\":1}}],[\"如果只想要返回部分的字段\",{\"1\":{\"304\":1}}],[\"如果相同不会有什么操作\",{\"1\":{\"291\":1}}],[\"如果不想继续忽略该文件可以使用如下命令\",{\"1\":{\"707\":1}}],[\"如果不知道自定义可以查看\",{\"1\":{\"665\":1}}],[\"如果不匹配就抛出异常\",{\"1\":{\"495\":1}}],[\"如果不存在正在执行的子进程\",{\"1\":{\"449\":1}}],[\"如果不存在该key\",{\"1\":{\"193\":1}}],[\"如果不会请看上一篇文章\",{\"1\":{\"348\":1}}],[\"如果不指定\",{\"1\":{\"289\":1}}],[\"如果事务id为空\",{\"1\":{\"262\":1}}],[\"如果版本号相同\",{\"1\":{\"254\":1}}],[\"如果值不相同\",{\"1\":{\"254\":1}}],[\"如果字段使用\",{\"1\":{\"254\":1}}],[\"如果该字段为true\",{\"1\":{\"649\":1}}],[\"如果该对象不可寻址或者成员是私有的\",{\"1\":{\"595\":1}}],[\"如果该流程定义下存在已经运行的流程\",{\"1\":{\"510\":1}}],[\"如果该流程定义下没有正在运行的流程\",{\"1\":{\"510\":1}}],[\"如果该流程定义已有流程实例启动则删除时出错\",{\"1\":{\"510\":1}}],[\"如果该流程定义文件中使用\",{\"1\":{\"503\":1}}],[\"如果该文件对象已经有了其他的内容\",{\"1\":{\"249\":1}}],[\"如果该位置存在元素\",{\"1\":{\"186\":1}}],[\"如果已到达流的末尾\",{\"1\":{\"242\":1,\"246\":1}}],[\"如果到达流的末尾\",{\"1\":{\"242\":1,\"246\":1}}],[\"如果使用\",{\"1\":{\"651\":1}}],[\"如果使用的是相对路径没有上层路径\",{\"1\":{\"236\":1}}],[\"如果使用反射非常麻烦\",{\"1\":{\"131\":1}}],[\"如果调用两个对象上的同步代码块\",{\"1\":{\"229\":1}}],[\"如果没有在该分支下提交东西\",{\"1\":{\"706\":1}}],[\"如果没有匹配上则不执行\",{\"1\":{\"661\":1}}],[\"如果没有表或者版本不匹配\",{\"1\":{\"496\":1}}],[\"如果没有开启\",{\"1\":{\"450\":1}}],[\"如果没有数据\",{\"1\":{\"433\":1}}],[\"如果没有释放锁\",{\"1\":{\"222\":1}}],[\"如果没有notify\",{\"1\":{\"222\":1}}],[\"如果树不平衡\",{\"1\":{\"188\":1}}],[\"如果在kubernetes中使用limitrange对象\",{\"1\":{\"725\":1}}],[\"如果在数据库中出现25张act\",{\"1\":{\"497\":1}}],[\"如果在\",{\"1\":{\"424\":1}}],[\"如果在select中的列\",{\"1\":{\"421\":1}}],[\"如果在给定的时间片内没有执行结束\",{\"1\":{\"214\":1}}],[\"如果在for\",{\"1\":{\"172\":1}}],[\"如果在堆中没有足够的空间完成实例分配\",{\"1\":{\"43\":1}}],[\"如果删除的元素是头部或尾部\",{\"1\":{\"168\":1}}],[\"如果添加到其他位置\",{\"1\":{\"167\":1}}],[\"如果枚举类中只有一个对象\",{\"1\":{\"159\":1}}],[\"如果我们需要查看我们忽略过哪些文件\",{\"1\":{\"707\":1}}],[\"如果我们想要使用随机策略\",{\"1\":{\"646\":1}}],[\"如果我们想查看流程图的话\",{\"1\":{\"499\":1}}],[\"如果我们把bpmn文件部署到web环境\",{\"1\":{\"499\":1}}],[\"如果我们存储进\",{\"1\":{\"189\":1}}],[\"如果我们只重写了\",{\"1\":{\"59\":1}}],[\"如果我将\",{\"1\":{\"155\":1}}],[\"如果常量池不存在该对象的话\",{\"1\":{\"154\":1}}],[\"如果还是小于新字符串长度\",{\"1\":{\"152\":1}}],[\"如果比新字符串长度小\",{\"1\":{\"151\":1}}],[\"如果一个值不能插入到一个事务表中\",{\"1\":{\"424\":1}}],[\"如果一个进程有多个子任务时\",{\"1\":{\"204\":1}}],[\"如果一个\",{\"1\":{\"140\":1}}],[\"如果是流程变量是二进制数据时\",{\"1\":{\"544\":1}}],[\"如果是激活\",{\"1\":{\"514\":1}}],[\"如果是挂起\",{\"1\":{\"514\":1}}],[\"如果是针对某个字段\",{\"1\":{\"303\":1}}],[\"如果是倒排索引处理的话\",{\"1\":{\"277\":1}}],[\"如果是中间元素\",{\"1\":{\"168\":1}}],[\"如果是删除其他位置元素\",{\"1\":{\"167\":1}}],[\"如果是删除尾部元素\",{\"1\":{\"167\":1}}],[\"如果是添加到数组尾部\",{\"1\":{\"167\":1}}],[\"如果是\",{\"1\":{\"108\":1}}],[\"如果子类构造方法没有显式调用父类构造方法时\",{\"1\":{\"70\":1}}],[\"如果\",{\"1\":{\"42\":1,\"150\":2,\"151\":6,\"308\":2,\"310\":1}}],[\"如果离线模式到期\",{\"1\":{\"22\":1}}],[\"如\",{\"1\":{\"37\":1,\"115\":5,\"303\":1,\"424\":1,\"430\":1,\"658\":1,\"709\":1,\"736\":1,\"817\":1}}],[\"如图\",{\"1\":{\"27\":1}}],[\"如此循环\",{\"1\":{\"2\":1}}],[\"一种是apt\",{\"1\":{\"823\":1}}],[\"一种是将\",{\"1\":{\"820\":1}}],[\"一种就是\",{\"1\":{\"820\":1}}],[\"一边拥有多个人\",{\"1\":{\"721\":1}}],[\"一条命令实现停用并删除容器\",{\"1\":{\"689\":1}}],[\"一组断言和一组过滤器定义\",{\"1\":{\"654\":1}}],[\"一直存在内存里\",{\"1\":{\"460\":1}}],[\"一段\",{\"1\":{\"344\":1}}],[\"一顿折腾才发现不是这个原因\",{\"1\":{\"262\":1}}],[\"一开始以为是因为配置了全局异常拦截器导致\",{\"1\":{\"262\":1}}],[\"一行一行写入文件\",{\"1\":{\"253\":1}}],[\"一次简洁和简化的\",{\"1\":{\"312\":1}}],[\"一次读取一行\",{\"1\":{\"253\":1}}],[\"一次编译\",{\"0\":{\"35\":1},\"1\":{\"35\":1}}],[\"一\",{\"0\":{\"470\":1,\"486\":1,\"564\":1,\"718\":1,\"762\":1,\"781\":1,\"816\":1,\"824\":1},\"1\":{\"187\":1,\"665\":1}}],[\"一样是\",{\"1\":{\"723\":1}}],[\"一样\",{\"1\":{\"178\":1,\"189\":1,\"195\":1,\"311\":1,\"662\":1,\"800\":1}}],[\"一共生成两个对象\",{\"1\":{\"154\":1}}],[\"一句话概括\",{\"1\":{\"109\":1}}],[\"一个都不能少\",{\"1\":{\"733\":1}}],[\"一个证书\",{\"1\":{\"731\":1}}],[\"一个秘钥\",{\"1\":{\"731\":1}}],[\"一个项目往往会有多个项目配合\",{\"1\":{\"703\":1}}],[\"一个仓库管理多个项目\",{\"0\":{\"703\":1}}],[\"一个\",{\"1\":{\"662\":1}}],[\"一个标准的\",{\"1\":{\"654\":1}}],[\"一个目标\",{\"1\":{\"654\":1}}],[\"一个轻量级restful的http服务客户端\",{\"1\":{\"612\":1}}],[\"一个易于使用的高性能微服务分布式事务解决方案\",{\"1\":{\"612\":1}}],[\"一个任务\",{\"1\":{\"521\":1}}],[\"一个软件实体应当尽可能少的与其他实体发生相互作用\",{\"1\":{\"468\":1}}],[\"一个命令执行完才会执行下一个\",{\"1\":{\"440\":1}}],[\"一个key对应一个value\",{\"1\":{\"440\":1}}],[\"一个链表\",{\"1\":{\"438\":1}}],[\"一个使用分页的简单例子\",{\"1\":{\"389\":1}}],[\"一个文档具有零个或多个字段\",{\"1\":{\"363\":1}}],[\"一个查询语句的典型结构\",{\"1\":{\"303\":1}}],[\"一个分片可以有多个备份\",{\"1\":{\"276\":1}}],[\"一个节点也可是集群\",{\"1\":{\"276\":1}}],[\"一个集群由一个唯一的名字标识\",{\"1\":{\"276\":1}}],[\"一个索引中只存放一类数据\",{\"1\":{\"274\":1}}],[\"一个是正则表达式\",{\"1\":{\"661\":1}}],[\"一个是正常运行的线程完成了它的全部工作\",{\"1\":{\"216\":1}}],[\"一个是\",{\"1\":{\"661\":1}}],[\"一个是属性名一个为属性值\",{\"1\":{\"660\":1}}],[\"一个是通过使用\",{\"1\":{\"298\":1}}],[\"一个是常量池中的\",{\"1\":{\"155\":1}}],[\"一个进程可以有很多线程\",{\"1\":{\"205\":1}}],[\"一个进程包含多个线程\",{\"1\":{\"204\":1}}],[\"一个redis\",{\"1\":{\"161\":1}}],[\"一个星期的\",{\"1\":{\"158\":1}}],[\"一个年的\",{\"1\":{\"158\":1}}],[\"一个类只负责一个功能领域中的相应职责\",{\"1\":{\"468\":1}}],[\"一个类只能继承一个抽象类\",{\"1\":{\"98\":1}}],[\"一个类可以实现多个接口类\",{\"1\":{\"95\":1}}],[\"一个类可以同时继承多个接口\",{\"1\":{\"94\":1}}],[\"一个类重写了clone\",{\"1\":{\"62\":1}}],[\"一个类不显式去重写\",{\"1\":{\"62\":1}}],[\"一个具有强大功能的\",{\"1\":{\"16\":2}}],[\"一致\",{\"1\":{\"59\":1,\"195\":1,\"639\":1}}],[\"一定要保证编码和解码的字符集相同\",{\"1\":{\"239\":1}}],[\"一定要设置\",{\"1\":{\"22\":1}}],[\"一定相等\",{\"1\":{\"59\":1}}],[\"一般运行在同一个机器上\",{\"1\":{\"757\":1,\"770\":1}}],[\"一般会部署最少三个节点\",{\"1\":{\"748\":1}}],[\"一般是\",{\"1\":{\"736\":1}}],[\"一般与apiserver在同一台机器上\",{\"1\":{\"735\":1}}],[\"一般与api\",{\"1\":{\"735\":1}}],[\"一般情况下\",{\"1\":{\"726\":1}}],[\"一般通过角色作为纽带把他们组合在一起\",{\"1\":{\"721\":1}}],[\"一般的\",{\"1\":{\"670\":1}}],[\"一般不需要我们额外配置什么\",{\"1\":{\"645\":1}}],[\"一般为\",{\"1\":{\"556\":1}}],[\"一般时间很短\",{\"1\":{\"449\":1}}],[\"一般有两种方式保存数据\",{\"1\":{\"433\":1}}],[\"一般默认分词就好\",{\"1\":{\"334\":1}}],[\"一般\",{\"1\":{\"289\":1}}],[\"一般按照如下情况来考虑\",{\"1\":{\"240\":1}}],[\"一般表示一组常量\",{\"1\":{\"158\":1}}],[\"一般而言\",{\"1\":{\"81\":1}}],[\"一般该方式不能满足我们的比较需求\",{\"1\":{\"57\":1}}],[\"一般在只运行程序不需要开发程序的服务器中安装\",{\"1\":{\"37\":1}}],[\"双精度浮点值\",{\"1\":{\"364\":1}}],[\"双喇叭立体环绕音\",{\"1\":{\"351\":1}}],[\"双光学防抖\",{\"1\":{\"351\":1}}],[\"双卡双待\",{\"1\":{\"351\":2,\"352\":1}}],[\"双向队列\",{\"1\":{\"169\":3,\"180\":1}}],[\"双向链表\",{\"1\":{\"168\":2}}],[\"双击\",{\"1\":{\"22\":1}}],[\"双倍扩容\",{\"1\":{\"11\":1}}],[\"开头\",{\"1\":{\"657\":1}}],[\"开头的表说明集成是没问题的\",{\"1\":{\"497\":1}}],[\"开闭原则\",{\"1\":{\"468\":2}}],[\"开源分词器\",{\"1\":{\"317\":1}}],[\"开箱即用\",{\"1\":{\"268\":1}}],[\"开启监听\",{\"1\":{\"671\":1}}],[\"开启服务发现\",{\"1\":{\"658\":1}}],[\"开启服务发现功能\",{\"1\":{\"658\":1}}],[\"开启注解\",{\"0\":{\"331\":1,\"381\":1}}],[\"开启多线程\",{\"1\":{\"218\":1}}],[\"开启离线模式\",{\"0\":{\"22\":1}}],[\"开销\",{\"1\":{\"205\":1}}],[\"开发小\",{\"1\":{\"665\":1}}],[\"开发一个流程流转控制器功能\",{\"1\":{\"484\":1}}],[\"开发环境配置如下👇\",{\"1\":{\"328\":1,\"378\":1}}],[\"开发环境\",{\"0\":{\"260\":1}}],[\"开发中使用较多的实现类\",{\"1\":{\"183\":1}}],[\"开发中使用最多的类\",{\"1\":{\"175\":1}}],[\"开发时\",{\"1\":{\"81\":1}}],[\"开始gzip压缩\",{\"0\":{\"650\":1}}],[\"开始节点id\",{\"1\":{\"556\":1}}],[\"开始用户id\",{\"1\":{\"556\":1}}],[\"开始于哪个用户\",{\"1\":{\"540\":1}}],[\"开始删除了password字段\",{\"1\":{\"408\":1,\"698\":1}}],[\"开始搭建\",{\"1\":{\"265\":1}}],[\"开始的\",{\"1\":{\"243\":1,\"247\":1}}],[\"开始等待并放弃锁\",{\"1\":{\"222\":2}}],[\"开始\",{\"1\":{\"46\":1,\"113\":1}}],[\"开始学习java语言之前\",{\"1\":{\"31\":1}}],[\"开始破解\",{\"0\":{\"27\":1}}],[\"开博结束语\",{\"0\":{\"4\":1}}],[\"开博前言\",{\"0\":{\"2\":1}}],[\"第三个是\",{\"1\":{\"722\":1}}],[\"第三方替代方案\",{\"1\":{\"613\":3}}],[\"第三种方法已经有了\",{\"1\":{\"122\":1}}],[\"第八代酷睿i7处理器\",{\"1\":{\"351\":1,\"352\":1}}],[\"第八代英特尔酷睿i7\",{\"1\":{\"351\":1,\"352\":1}}],[\"第二种方法有限制条件\",{\"1\":{\"122\":1}}],[\"第二个选项填写你的邮箱地址\",{\"1\":{\"20\":1}}],[\"第一步编写\",{\"1\":{\"665\":1}}],[\"第一步☝️就是导入相应的\",{\"1\":{\"329\":1,\"379\":1}}],[\"第一个是\",{\"1\":{\"227\":1}}],[\"第一个元素\",{\"1\":{\"180\":3}}],[\"第一个索引都是\",{\"1\":{\"46\":1}}],[\"第一种方法是通过类的\",{\"1\":{\"122\":1}}],[\"第一篇博客到这里差不多就结束了\",{\"1\":{\"4\":1}}],[\"上的文件\",{\"1\":{\"800\":1}}],[\"上述文件hosts字段中ip为所有etcd节点的集群内部通信ip\",{\"1\":{\"733\":1}}],[\"上传代码到\",{\"1\":{\"705\":1}}],[\"上\",{\"1\":{\"627\":1}}],[\"上执行\",{\"1\":{\"610\":1}}],[\"上级流程实例id\",{\"1\":{\"556\":1}}],[\"上面这段配置的意思是\",{\"1\":{\"656\":1}}],[\"上面的\",{\"1\":{\"416\":1}}],[\"上面的命令创建了一个用户名为\",{\"1\":{\"406\":1}}],[\"上面拼接的\",{\"1\":{\"20\":1}}],[\"上海\",{\"1\":{\"341\":1,\"348\":1}}],[\"上找到对应的版本\",{\"1\":{\"317\":1}}],[\"上千亿行的代码搜索\",{\"1\":{\"271\":1}}],[\"上封装了一层\",{\"1\":{\"194\":1}}],[\"上一个元素和下一个元素的位置\",{\"1\":{\"168\":1}}],[\"上班前的忐忑\",{\"1\":{\"2\":1}}],[\"当该组件启动多个时\",{\"1\":{\"771\":1,\"776\":1}}],[\"当node节点很多时\",{\"1\":{\"745\":1}}],[\"当远程调用的接口失败或者超时的时候\",{\"1\":{\"649\":1}}],[\"当发生404错误时\",{\"1\":{\"649\":1}}],[\"当服务消费方去访问中间件时就能及时获取最新的用户地址\",{\"1\":{\"624\":1}}],[\"当用户地址发生了变化也没有影响\",{\"1\":{\"624\":1}}],[\"当用户点击相机时\",{\"1\":{\"204\":1}}],[\"当supportsparameter方法返回true时候才执行\",{\"1\":{\"604\":1}}],[\"当然引导token是一种机制\",{\"1\":{\"723\":1}}],[\"当然这种假设不是随便想出来的\",{\"1\":{\"719\":1}}],[\"当然我们也可以把这些重复代码封装到单独的方法中\",{\"1\":{\"603\":1}}],[\"当然实际场景下还会使用这两种的混合模式\",{\"1\":{\"427\":1,\"446\":1}}],[\"当值的类型不是\",{\"1\":{\"595\":6}}],[\"当值不可寻址时发生宕机\",{\"1\":{\"595\":1}}],[\"当值不是结构体或索引超界时发生宕机\",{\"1\":{\"590\":1}}],[\"当值类型不是指针或接口时发生宕\",{\"1\":{\"595\":1}}],[\"当已知\",{\"1\":{\"592\":1}}],[\"当流程执行到这个网关的时候\",{\"1\":{\"530\":1}}],[\"当任务办理完成没有下一个任务\",{\"1\":{\"493\":1}}],[\"当有请求发生时\",{\"1\":{\"480\":1}}],[\"当对象的功能要求可以动态地添加\",{\"1\":{\"478\":1}}],[\"当增加新的功能后\",{\"1\":{\"467\":1}}],[\"当到达过期时间点\",{\"1\":{\"461\":1}}],[\"当访问地址\",{\"1\":{\"656\":1,\"657\":1}}],[\"当访问key时\",{\"1\":{\"460\":1}}],[\"当访问私有的属性\",{\"1\":{\"126\":1}}],[\"当aof持久化功能打开了\",{\"1\":{\"454\":1}}],[\"当下次运行时rdb文件会保存到新目录\",{\"1\":{\"451\":2}}],[\"当查询\",{\"1\":{\"440\":1}}],[\"当时这个接口的响应时间控制在10毫秒内\",{\"1\":{\"435\":1}}],[\"当你需要存储一个列表数据\",{\"1\":{\"435\":1}}],[\"当你有定义有参构造器时\",{\"1\":{\"89\":1}}],[\"当您需要突出显示标题或地址等短文本时\",{\"1\":{\"343\":1}}],[\"当搜索字符串类型的时候\",{\"1\":{\"305\":1}}],[\"当监控到商品的金额低于这个阈值的时候\",{\"1\":{\"271\":1}}],[\"当类实现\",{\"1\":{\"254\":1}}],[\"当程序操作的源数据是文件时\",{\"1\":{\"244\":1}}],[\"当程序暂停时\",{\"1\":{\"202\":1}}],[\"当\",{\"1\":{\"225\":1,\"440\":1,\"631\":1}}],[\"当所有非守护线程结束时\",{\"1\":{\"224\":1}}],[\"当其他线程的运行使得这个条件满足时\",{\"1\":{\"222\":1}}],[\"当调用\",{\"1\":{\"218\":1}}],[\"当手机在获取网络图片时\",{\"1\":{\"204\":1}}],[\"当一个线程被调度时会执行该线程的\",{\"1\":{\"218\":1}}],[\"当一个操作需要大量的io操作\",{\"1\":{\"202\":1}}],[\"当一个类只使用一次\",{\"1\":{\"84\":1}}],[\"当原有的排序规则不满足我们的需求时\",{\"1\":{\"190\":1}}],[\"当我们有非常多的node节点时\",{\"1\":{\"723\":1}}],[\"当我们需要比较两个结构体中的数据是否相同时\",{\"1\":{\"601\":1}}],[\"当我们复杂一个对象时\",{\"1\":{\"601\":1}}],[\"当我们的\",{\"1\":{\"620\":1}}],[\"当我们的项目中不需要spring\",{\"1\":{\"561\":1}}],[\"当我们的程序在运行时\",{\"1\":{\"121\":1}}],[\"当我们使用\",{\"1\":{\"188\":1}}],[\"当我们输出打印类的实例对象时\",{\"1\":{\"52\":1}}],[\"当需要通过对现有的一组基本功能进行排列组合而产生非常多的功能时\",{\"1\":{\"478\":1}}],[\"当需要给一个现有类添加附加职责\",{\"1\":{\"478\":1}}],[\"当需要定义一组常量时\",{\"1\":{\"159\":1}}],[\"当需要为一些类提供公共的方法时\",{\"1\":{\"99\":1}}],[\"当需要注重代码的扩展性或者可维护性\",{\"1\":{\"99\":1}}],[\"当显示定义了\",{\"1\":{\"89\":1}}],[\"当前存活的路由map\",{\"1\":{\"671\":1}}],[\"当前存活的路由描述map\",{\"1\":{\"671\":1}}],[\"当前存活且与当前definition不同则为更新\",{\"1\":{\"671\":1}}],[\"当前存活路由map\",{\"1\":{\"671\":2}}],[\"当前版本\",{\"1\":{\"535\":1,\"537\":1}}],[\"当前活动的id\",{\"1\":{\"503\":2}}],[\"当前用户需要办理什么任务了\",{\"1\":{\"491\":1}}],[\"当前页\",{\"1\":{\"353\":1}}],[\"当前元素大\",{\"1\":{\"189\":1}}],[\"当前元素小\",{\"1\":{\"189\":1}}],[\"当前父类\",{\"1\":{\"70\":1}}],[\"当前对象本身\",{\"1\":{\"68\":1}}],[\"当前线程所执行的行号指示器\",{\"1\":{\"43\":1}}],[\"当cat中\",{\"1\":{\"58\":1,\"60\":1}}],[\"当垃圾回收器确定不存在对该对象的更多引用时\",{\"1\":{\"51\":1}}],[\"当扩展时无法申请到足够的内存时会抛出\",{\"1\":{\"43\":1}}],[\"当方法执行时\",{\"1\":{\"43\":1}}],[\"当方法区无法满足内存分配需求时\",{\"1\":{\"43\":1}}],[\"当勾选上之后\",{\"1\":{\"24\":1}}],[\"当项目很大时\",{\"1\":{\"18\":1}}],[\"当个乐子人\",{\"1\":{\"0\":1}}],[\"最新教程\",{\"0\":{\"634\":1}}],[\"最新版本也已经没有了\",{\"1\":{\"366\":1}}],[\"最少知识原则\",{\"1\":{\"468\":1}}],[\"最不经常使用的意思\",{\"1\":{\"463\":1}}],[\"最近最少使用的意思\",{\"1\":{\"463\":1}}],[\"最近在写\",{\"1\":{\"18\":1}}],[\"最准确的文档还是官网\",{\"1\":{\"347\":1}}],[\"最简单的聚合方法大致等于\",{\"1\":{\"312\":1}}],[\"最好不过\",{\"1\":{\"308\":1,\"310\":1}}],[\"最好不要去使用\",{\"1\":{\"66\":1}}],[\"最终docker0收到的就是原始的数据\",{\"1\":{\"799\":1}}],[\"最终发现大部分方法估计写的人自己也没有测试过\",{\"1\":{\"422\":1}}],[\"最终查询出\",{\"1\":{\"305\":2}}],[\"最终的结果类型\",{\"1\":{\"39\":1}}],[\"最初的计算机只能执行一些特定的指令\",{\"1\":{\"202\":1}}],[\"最大值\",{\"1\":{\"151\":1,\"152\":1}}],[\"最大值还要大\",{\"1\":{\"151\":1}}],[\"最大数组长度\",{\"1\":{\"151\":4}}],[\"最后启动etcd并设置开机启动\",{\"1\":{\"755\":1}}],[\"最后查看生成的证书目录\",{\"1\":{\"744\":1}}],[\"最后对目标对象进行操作\",{\"1\":{\"725\":1}}],[\"最后导入我们的\",{\"1\":{\"655\":1}}],[\"最后达到随机负载均衡的效果\",{\"1\":{\"648\":1}}],[\"最后\",{\"1\":{\"606\":1}}],[\"最后更改时间\",{\"1\":{\"558\":1}}],[\"最后再\",{\"1\":{\"151\":1}}],[\"最后才是构造器初始化\",{\"1\":{\"77\":1}}],[\"最后感谢go\",{\"1\":{\"11\":1}}],[\"最下面添加下面这一行代码\",{\"1\":{\"27\":1}}],[\"热更新\",{\"0\":{\"18\":1}}],[\"j6shb\",{\"1\":{\"822\":1}}],[\"jq\",{\"1\":{\"822\":3}}],[\"just\",{\"1\":{\"671\":4}}],[\"juejin\",{\"1\":{\"465\":1}}],[\"jnltaf\",{\"1\":{\"632\":1}}],[\"j4kd0z\",{\"1\":{\"531\":1}}],[\"jdyxvc\",{\"1\":{\"520\":1}}],[\"jdbc\",{\"1\":{\"495\":2}}],[\"jdk版本\",{\"1\":{\"830\":1}}],[\"jdk8\",{\"1\":{\"155\":1,\"190\":1,\"830\":1,\"831\":1}}],[\"jdk7\",{\"1\":{\"155\":2,\"156\":1}}],[\"jdk6中的常量池是放在\",{\"1\":{\"155\":1}}],[\"jdk6\",{\"1\":{\"155\":3}}],[\"jdk11\",{\"1\":{\"831\":1}}],[\"jdk12\",{\"1\":{\"830\":1}}],[\"jdk1\",{\"1\":{\"125\":1}}],[\"jdk\",{\"0\":{\"37\":1},\"1\":{\"37\":3,\"111\":1,\"113\":1,\"136\":1,\"155\":4,\"163\":1,\"227\":1,\"244\":1,\"248\":1,\"249\":1,\"252\":1,\"253\":1}}],[\"jianshu\",{\"1\":{\"436\":1,\"457\":1}}],[\"j3dk6f\",{\"1\":{\"426\":1}}],[\"jpa自动生成的查询方法\",{\"1\":{\"384\":1}}],[\"jpg图片或者序列化的对象\",{\"1\":{\"440\":1}}],[\"jpg\",{\"1\":{\"16\":1}}],[\"jestclient\",{\"1\":{\"327\":1}}],[\"jest\",{\"1\":{\"327\":1}}],[\"jetbrainsidescrack\",{\"1\":{\"27\":1}}],[\"journalctl\",{\"1\":{\"754\":1,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1,\"810\":1}}],[\"job\",{\"0\":{\"543\":1,\"545\":1,\"546\":1,\"549\":1},\"1\":{\"533\":4,\"540\":4,\"613\":1,\"817\":1}}],[\"josn\",{\"1\":{\"295\":1,\"730\":1}}],[\"joining\",{\"1\":{\"575\":1}}],[\"joins\",{\"1\":{\"362\":1}}],[\"jointhread\",{\"1\":{\"225\":2}}],[\"join\",{\"0\":{\"225\":1},\"1\":{\"161\":1,\"214\":1,\"225\":2}}],[\"json文件\",{\"1\":{\"729\":1,\"730\":1}}],[\"json查询字符串\",{\"1\":{\"395\":1}}],[\"jsonnaming\",{\"1\":{\"382\":1}}],[\"json\",{\"1\":{\"270\":2,\"275\":1,\"296\":5,\"301\":1,\"364\":1,\"495\":1,\"536\":1,\"591\":1,\"650\":1,\"684\":1,\"687\":1,\"729\":4,\"730\":3,\"731\":3,\"733\":1,\"734\":3,\"736\":1,\"737\":3,\"739\":1,\"740\":3,\"742\":1,\"743\":3,\"744\":2,\"800\":1}}],[\"jkd\",{\"1\":{\"148\":1}}],[\"jls7\",{\"1\":{\"41\":1}}],[\"j++\",{\"1\":{\"41\":1}}],[\"j\",{\"1\":{\"41\":1,\"198\":1,\"233\":1}}],[\"jre了\",{\"1\":{\"37\":1}}],[\"jre\",{\"1\":{\"37\":3}}],[\"jreble\",{\"1\":{\"18\":1}}],[\"jrebel是一款jvm插件\",{\"1\":{\"18\":1}}],[\"jrebel\",{\"0\":{\"18\":1,\"24\":1},\"1\":{\"19\":1,\"20\":2,\"24\":1}}],[\"jvm会把对象数据数据中的\",{\"1\":{\"254\":1}}],[\"jvm内存模型时\",{\"1\":{\"121\":1}}],[\"jvm内存模型\",{\"0\":{\"43\":1},\"1\":{\"121\":1}}],[\"jvm不夸平台\",{\"1\":{\"37\":1}}],[\"jvm\",{\"1\":{\"35\":2,\"37\":1,\"43\":2,\"89\":1,\"121\":1,\"208\":1,\"227\":1}}],[\"jar包\",{\"1\":{\"26\":1}}],[\"jar\",{\"1\":{\"26\":1,\"27\":3,\"495\":1,\"658\":1,\"676\":1}}],[\"java8\",{\"1\":{\"654\":1,\"830\":1}}],[\"java<\",{\"1\":{\"495\":1}}],[\"javascript\",{\"1\":{\"364\":1}}],[\"java微服务\",{\"0\":{\"263\":1}}],[\"java多线程\",{\"0\":{\"234\":1}}],[\"java的关键字\",{\"1\":{\"208\":1}}],[\"java集合框架\",{\"0\":{\"199\":1}}],[\"java中所有的字符字面量都是此类的实现\",{\"1\":{\"138\":1}}],[\"javabean\",{\"0\":{\"135\":1,\"332\":1,\"382\":1},\"1\":{\"131\":1,\"135\":3,\"332\":1,\"382\":1,\"603\":1}}],[\"javabean是一个非常常用的组件\",{\"1\":{\"131\":1}}],[\"javabean的三个规范\",{\"0\":{\"89\":1}}],[\"java支持在接口中定义有实现的方法\",{\"1\":{\"95\":1}}],[\"java全栈知识体系\",{\"1\":{\"85\":1,\"359\":1,\"473\":1}}],[\"java编译器都会生产\",{\"1\":{\"80\":1}}],[\"java常用的类库以及jvm\",{\"1\":{\"37\":1}}],[\"javac等\",{\"1\":{\"37\":1}}],[\"java开发工具\",{\"1\":{\"37\":1}}],[\"java文件经过编译后生成和平台无关的\",{\"1\":{\"36\":1}}],[\"java程序\",{\"1\":{\"35\":1}}],[\"java程序进行了编译操作\",{\"1\":{\"35\":1}}],[\"java虚拟机是不跨平台\",{\"1\":{\"36\":1}}],[\"java虚拟机\",{\"1\":{\"35\":1,\"37\":1}}],[\"java诞生于1995年\",{\"1\":{\"32\":1}}],[\"java语言对\",{\"1\":{\"35\":1}}],[\"java语言\",{\"0\":{\"32\":1}}],[\"java简介\",{\"0\":{\"30\":1}}],[\"java基础知识\",{\"1\":{\"85\":1}}],[\"java基础\",{\"0\":{\"29\":1,\"86\":1,\"118\":1,\"157\":1,\"162\":1},\"1\":{\"121\":1}}],[\"javaagent\",{\"1\":{\"27\":1}}],[\"java\",{\"0\":{\"111\":1,\"163\":1,\"200\":1,\"209\":1,\"235\":1,\"255\":1,\"258\":1,\"348\":1},\"1\":{\"17\":2,\"29\":1,\"31\":1,\"35\":3,\"37\":6,\"41\":1,\"50\":1,\"62\":2,\"66\":1,\"86\":1,\"91\":1,\"98\":1,\"110\":1,\"111\":1,\"113\":1,\"115\":2,\"118\":2,\"119\":1,\"120\":2,\"121\":3,\"122\":2,\"124\":3,\"126\":1,\"134\":3,\"135\":1,\"155\":3,\"156\":1,\"157\":1,\"158\":1,\"172\":1,\"188\":1,\"189\":1,\"208\":2,\"217\":1,\"227\":1,\"233\":1,\"240\":2,\"251\":1,\"254\":4,\"255\":2,\"265\":1,\"324\":1,\"338\":1,\"428\":1,\"478\":3,\"479\":1,\"490\":1,\"517\":1,\"585\":1,\"636\":1}}],[\"zlib1g\",{\"1\":{\"825\":1}}],[\"zxvf\",{\"1\":{\"682\":1,\"751\":1,\"759\":1,\"797\":1}}],[\"zowv68\",{\"1\":{\"620\":1}}],[\"zuul\",{\"1\":{\"613\":1,\"644\":1,\"653\":1}}],[\"zrank\",{\"1\":{\"444\":2}}],[\"zrange\",{\"1\":{\"444\":5}}],[\"zrevrank\",{\"1\":{\"444\":2}}],[\"zrevrange\",{\"1\":{\"444\":2}}],[\"zrem\",{\"1\":{\"444\":2}}],[\"zcount\",{\"1\":{\"444\":2}}],[\"zincrby\",{\"1\":{\"444\":3}}],[\"zipinputstream\",{\"1\":{\"502\":4}}],[\"zip\",{\"1\":{\"317\":2,\"502\":1}}],[\"zadd\",{\"1\":{\"444\":3}}],[\"zs\",{\"1\":{\"441\":5}}],[\"zset有序集合\",{\"1\":{\"438\":1}}],[\"zset\",{\"0\":{\"444\":1},\"1\":{\"427\":1,\"430\":1,\"437\":1,\"444\":3}}],[\"zero\",{\"1\":{\"422\":3,\"423\":6,\"424\":4,\"589\":1}}],[\"zeng\",{\"1\":{\"190\":1}}],[\"zenghr\",{\"1\":{\"15\":3,\"122\":1,\"134\":4,\"289\":1,\"290\":1,\"406\":2,\"409\":1,\"410\":1,\"656\":2,\"657\":3,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"689\":3}}],[\"zhihu\",{\"1\":{\"436\":1}}],[\"zhuanlan\",{\"1\":{\"436\":1}}],[\"zh\",{\"1\":{\"16\":2,\"284\":1,\"616\":2,\"618\":1}}],[\"hsrhxe\",{\"1\":{\"696\":1}}],[\"hset\",{\"1\":{\"441\":3}}],[\"h27xku\",{\"1\":{\"666\":1}}],[\"hlpcgj\",{\"1\":{\"632\":1}}],[\"hlen\",{\"1\":{\"441\":3}}],[\"hpj6v9\",{\"1\":{\"628\":1}}],[\"hpvkqc\",{\"1\":{\"24\":1}}],[\"hystrix等等\",{\"1\":{\"644\":1}}],[\"hystrix\",{\"1\":{\"613\":1}}],[\"hvals\",{\"1\":{\"441\":3}}],[\"hkeys\",{\"1\":{\"441\":3}}],[\"hdel\",{\"1\":{\"441\":3}}],[\"hgetall\",{\"1\":{\"441\":4}}],[\"hget\",{\"1\":{\"441\":3}}],[\"hub\",{\"1\":{\"686\":1}}],[\"hup\",{\"1\":{\"683\":1}}],[\"huawei\",{\"1\":{\"351\":1,\"353\":1}}],[\"huaweishare一碰传\",{\"1\":{\"351\":1,\"353\":1}}],[\"hugecapacity\",{\"1\":{\"151\":4}}],[\"historicprocessinstance\",{\"1\":{\"574\":1}}],[\"historicactivityinstance\",{\"1\":{\"506\":1}}],[\"historyservice\",{\"1\":{\"500\":2,\"506\":3,\"574\":1,\"576\":1,\"584\":1}}],[\"history\",{\"1\":{\"496\":4}}],[\"hi\",{\"0\":{\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1},\"1\":{\"503\":3,\"533\":8,\"540\":1}}],[\"hincrby\",{\"1\":{\"441\":3}}],[\"hit\",{\"1\":{\"341\":1}}],[\"hits\",{\"1\":{\"299\":7,\"312\":2,\"341\":3,\"352\":2}}],[\"highlightedflows\",{\"1\":{\"568\":3}}],[\"highlightedactivities\",{\"1\":{\"568\":3}}],[\"highlightfields=\",{\"1\":{\"352\":2}}],[\"highlightbuilder\",{\"1\":{\"348\":9}}],[\"highlight\",{\"1\":{\"339\":1,\"341\":3,\"342\":2,\"345\":1,\"346\":1,\"347\":1}}],[\"high\",{\"1\":{\"41\":7}}],[\"html\",{\"1\":{\"266\":1,\"278\":1,\"286\":1,\"436\":1,\"445\":2,\"457\":3,\"465\":1,\"616\":2,\"618\":1,\"653\":1,\"656\":2,\"657\":2,\"765\":1,\"799\":1}}],[\"http\",{\"1\":{\"261\":1,\"262\":1,\"282\":5,\"324\":1,\"330\":2,\"495\":4,\"620\":1,\"641\":2,\"643\":1,\"645\":3,\"654\":1,\"656\":1,\"657\":1,\"659\":1,\"686\":1,\"806\":1,\"825\":9}}],[\"https证书\",{\"1\":{\"764\":1}}],[\"https安全端口\",{\"1\":{\"764\":1}}],[\"httpservletresponse\",{\"1\":{\"262\":1}}],[\"httpservletrequest\",{\"1\":{\"262\":1,\"604\":2}}],[\"https\",{\"1\":{\"10\":1,\"15\":2,\"16\":6,\"17\":4,\"20\":1,\"266\":1,\"278\":1,\"286\":1,\"317\":2,\"327\":1,\"366\":1,\"370\":1,\"371\":2,\"372\":1,\"436\":3,\"445\":2,\"457\":7,\"465\":2,\"486\":1,\"616\":2,\"618\":2,\"653\":1,\"656\":2,\"657\":3,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"680\":4,\"681\":1,\"684\":1,\"686\":3,\"687\":1,\"704\":1,\"726\":3,\"749\":1,\"752\":4,\"755\":4,\"756\":2,\"758\":1,\"797\":1,\"799\":1,\"800\":1,\"805\":1,\"811\":1,\"813\":2,\"818\":2,\"821\":1,\"825\":1}}],[\"hangzhou\",{\"1\":{\"783\":1}}],[\"handlermapping\",{\"1\":{\"659\":1}}],[\"handlermethodargumentresolver\",{\"0\":{\"604\":1},\"1\":{\"603\":1,\"604\":2}}],[\"handleradapter\",{\"1\":{\"606\":1}}],[\"handler\",{\"1\":{\"262\":1,\"483\":2,\"484\":9,\"543\":2,\"545\":2,\"546\":2,\"549\":2,\"654\":3}}],[\"handlerinterceptor\",{\"1\":{\"262\":1}}],[\"ha\",{\"1\":{\"771\":1,\"776\":1}}],[\"have\",{\"1\":{\"699\":2}}],[\"haoprogrammer\",{\"1\":{\"445\":1}}],[\"hasparameterannotation\",{\"1\":{\"604\":1}}],[\"has1\",{\"1\":{\"441\":10}}],[\"hasnext\",{\"1\":{\"172\":1}}],[\"has\",{\"1\":{\"62\":1,\"535\":2}}],[\"hashkey\",{\"1\":{\"441\":2}}],[\"hash类型是string类型的field和value的映射表\",{\"1\":{\"441\":1}}],[\"hash散列\",{\"1\":{\"438\":1}}],[\"hashes\",{\"1\":{\"431\":1}}],[\"hashmap<string\",{\"1\":{\"503\":1,\"513\":1,\"523\":1}}],[\"hashmap<e\",{\"1\":{\"185\":1}}],[\"hashmap<>\",{\"1\":{\"135\":2,\"185\":1}}],[\"hashmap\",{\"0\":{\"194\":1},\"1\":{\"185\":1,\"192\":1,\"194\":3}}],[\"hashset<>\",{\"1\":{\"60\":1}}],[\"hashset<cat>\",{\"1\":{\"60\":1}}],[\"hashset\",{\"0\":{\"185\":1},\"1\":{\"59\":1,\"173\":1,\"183\":1,\"185\":2,\"194\":2}}],[\"hash\",{\"0\":{\"441\":1},\"1\":{\"58\":1,\"165\":1,\"427\":1,\"430\":1,\"437\":1}}],[\"hashcode\",{\"0\":{\"59\":1,\"187\":1},\"1\":{\"51\":1,\"53\":2,\"57\":1,\"58\":1,\"59\":4,\"133\":1,\"187\":1,\"194\":1}}],[\"home\",{\"1\":{\"451\":1}}],[\"homebrew\",{\"1\":{\"377\":2}}],[\"holmes\",{\"1\":{\"295\":1,\"299\":1}}],[\"hosted\",{\"1\":{\"805\":1}}],[\"hostnameoverride\",{\"1\":{\"791\":2}}],[\"hostnamectl\",{\"1\":{\"715\":1}}],[\"hostname\",{\"1\":{\"714\":1,\"715\":1,\"783\":3,\"831\":1}}],[\"host>\",{\"1\":{\"687\":2}}],[\"hosts文件\",{\"1\":{\"831\":1}}],[\"hosts=http\",{\"1\":{\"283\":1}}],[\"hosts\",{\"1\":{\"282\":1,\"715\":1,\"733\":2,\"736\":1,\"739\":1,\"742\":1}}],[\"host\",{\"1\":{\"282\":1,\"380\":1,\"406\":2,\"411\":2,\"697\":3,\"698\":2}}],[\"hour\",{\"1\":{\"117\":3}}],[\"hope\",{\"1\":{\"16\":4,\"17\":6,\"699\":1}}],[\"hh时mm分ss秒\",{\"1\":{\"115\":1}}],[\"hh\",{\"1\":{\"115\":4}}],[\"hexists\",{\"1\":{\"441\":3}}],[\"hereby\",{\"1\":{\"699\":1}}],[\"here\",{\"1\":{\"302\":1}}],[\"hero\",{\"1\":{\"16\":1}}],[\"head\",{\"1\":{\"746\":1}}],[\"header=x\",{\"1\":{\"662\":1}}],[\"header\",{\"0\":{\"662\":1},\"1\":{\"662\":2,\"664\":1}}],[\"headers\",{\"1\":{\"262\":1,\"282\":1}}],[\"healthenabled=true\",{\"1\":{\"809\":1}}],[\"healthy\",{\"1\":{\"756\":1,\"779\":3}}],[\"health\",{\"1\":{\"288\":1,\"756\":1,\"779\":1}}],[\"heap\",{\"1\":{\"43\":1,\"48\":1,\"155\":4,\"156\":1,\"165\":1}}],[\"hello\",{\"1\":{\"128\":1,\"440\":4,\"607\":2}}],[\"h\",{\"1\":{\"41\":3,\"296\":1}}],[\"驱动的静态网站生成器\",{\"1\":{\"16\":2}}],[\"vpc等多种方式\",{\"1\":{\"799\":1}}],[\"vxlanmode\",{\"1\":{\"813\":1}}],[\"vxlan\",{\"1\":{\"799\":1,\"800\":1}}],[\"vswitch\",{\"1\":{\"799\":1}}],[\"vscb1q\",{\"1\":{\"19\":1}}],[\"v0\",{\"1\":{\"797\":1,\"800\":1}}],[\"v=2\",{\"1\":{\"764\":1,\"771\":1,\"776\":1,\"783\":1,\"790\":1}}],[\"v3\",{\"1\":{\"749\":1,\"751\":2,\"805\":1,\"806\":1,\"809\":1,\"813\":2}}],[\"vlegcount\",{\"1\":{\"595\":3}}],[\"v\",{\"1\":{\"591\":2,\"598\":2,\"692\":7,\"707\":1,\"764\":1,\"809\":6,\"824\":1}}],[\"v2\",{\"1\":{\"440\":1,\"601\":4,\"818\":1}}],[\"v1alpha1\",{\"1\":{\"791\":1}}],[\"v1beta1\",{\"1\":{\"784\":1}}],[\"v1183\",{\"1\":{\"758\":1}}],[\"v1\",{\"1\":{\"440\":1,\"601\":4,\"689\":1,\"788\":1,\"806\":2,\"807\":2,\"814\":2,\"818\":1}}],[\"v7\",{\"1\":{\"317\":1}}],[\"vim\",{\"1\":{\"729\":1,\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1,\"753\":1,\"755\":1,\"764\":1,\"766\":1,\"771\":1,\"772\":1,\"776\":1,\"777\":1,\"809\":1,\"813\":1,\"818\":1}}],[\"view\",{\"1\":{\"417\":4}}],[\"vi\",{\"1\":{\"284\":1}}],[\"virtual\",{\"1\":{\"37\":1}}],[\"volatile\",{\"1\":{\"257\":1,\"464\":4}}],[\"void\",{\"1\":{\"51\":4,\"54\":1,\"60\":1,\"62\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":2,\"78\":1,\"81\":1,\"82\":1,\"83\":2,\"84\":5,\"89\":2,\"95\":3,\"103\":4,\"104\":5,\"115\":1,\"123\":3,\"133\":2,\"134\":3,\"150\":1,\"155\":2,\"176\":1,\"180\":1,\"184\":1,\"190\":1,\"198\":1,\"206\":2,\"218\":2,\"219\":2,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"226\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":2,\"242\":1,\"243\":5,\"244\":1,\"246\":1,\"247\":6,\"248\":1,\"252\":1,\"253\":1,\"254\":2,\"256\":1,\"257\":3,\"336\":1,\"338\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"477\":1,\"484\":1,\"495\":1,\"497\":1,\"502\":2,\"503\":2,\"504\":1,\"505\":1,\"506\":1,\"509\":1,\"510\":1,\"511\":1,\"513\":1,\"514\":2,\"518\":1,\"523\":1,\"527\":1,\"528\":1,\"569\":1,\"572\":1,\"579\":1,\"582\":1,\"583\":1,\"606\":1,\"607\":1,\"637\":1,\"648\":1,\"665\":1,\"670\":4,\"671\":10}}],[\"venues\",{\"1\":{\"400\":2,\"401\":1,\"402\":3}}],[\"venue\",{\"0\":{\"399\":1},\"1\":{\"399\":4,\"400\":2,\"401\":1,\"402\":3,\"403\":1}}],[\"vector\",{\"0\":{\"178\":1},\"1\":{\"175\":1,\"178\":3,\"181\":1}}],[\"verbs\",{\"1\":{\"814\":1}}],[\"version>2021\",{\"1\":{\"636\":1}}],[\"version>2020\",{\"1\":{\"636\":1,\"655\":1}}],[\"version>\",{\"1\":{\"495\":16,\"496\":2,\"636\":5,\"655\":3}}],[\"version>1\",{\"1\":{\"495\":2,\"636\":1}}],[\"versiontype\",{\"1\":{\"333\":3}}],[\"version=\",{\"1\":{\"324\":1,\"495\":1}}],[\"version\",{\"1\":{\"163\":1,\"289\":1,\"290\":2,\"291\":3,\"366\":1,\"377\":1,\"495\":3,\"534\":1,\"535\":2,\"537\":1,\"636\":2,\"655\":1,\"680\":2,\"699\":2,\"715\":1,\"726\":1,\"788\":1,\"807\":1}}],[\"verifgy\",{\"1\":{\"161\":2}}],[\"vm\",{\"1\":{\"41\":1}}],[\"vmoptions\",{\"1\":{\"27\":2}}],[\"vubdwo\",{\"1\":{\"22\":1}}],[\"vuejs\",{\"1\":{\"16\":4}}],[\"vue\",{\"1\":{\"16\":2}}],[\"vuepress\",{\"1\":{\"16\":8,\"17\":2}}],[\"vage\",{\"1\":{\"595\":2}}],[\"val\",{\"1\":{\"135\":6,\"599\":3}}],[\"value=\",{\"1\":{\"495\":5}}],[\"value1\",{\"1\":{\"441\":1}}],[\"value存储系统\",{\"1\":{\"430\":1}}],[\"value等多种数据结构的存储系统\",{\"1\":{\"429\":1,\"430\":1}}],[\"value值可以重复\",{\"1\":{\"191\":1}}],[\"valueofdog\",{\"1\":{\"595\":5}}],[\"valueofa\",{\"1\":{\"594\":3}}],[\"valueof\",{\"0\":{\"593\":1},\"1\":{\"41\":7,\"585\":1,\"586\":1,\"593\":1,\"594\":1,\"595\":1,\"596\":3,\"597\":3,\"598\":2,\"599\":1}}],[\"value\",{\"0\":{\"593\":1},\"1\":{\"40\":1,\"41\":3,\"135\":1,\"138\":2,\"149\":1,\"150\":5,\"151\":2,\"152\":2,\"161\":2,\"172\":1,\"173\":1,\"191\":2,\"193\":4,\"299\":2,\"303\":4,\"334\":2,\"424\":1,\"440\":3,\"442\":2,\"443\":3,\"537\":2,\"539\":2,\"585\":1,\"593\":3,\"594\":1,\"595\":6,\"596\":5,\"597\":2,\"598\":8,\"599\":8,\"633\":3,\"648\":1,\"669\":3,\"699\":2,\"805\":1,\"806\":4}}],[\"values\",{\"1\":{\"10\":1,\"41\":4,\"161\":2,\"193\":1,\"335\":1,\"351\":1}}],[\"varchar\",{\"1\":{\"534\":6,\"535\":10,\"536\":3,\"537\":9,\"538\":3,\"539\":2,\"540\":11,\"541\":7,\"542\":14,\"543\":12,\"544\":9,\"545\":11,\"546\":12,\"547\":5,\"548\":9,\"549\":11,\"550\":7,\"551\":12,\"552\":9,\"553\":7,\"554\":11,\"555\":6,\"556\":11,\"557\":14,\"558\":9}}],[\"varinst\",{\"0\":{\"558\":1},\"1\":{\"533\":1}}],[\"variablevalue\",{\"1\":{\"524\":2,\"583\":2}}],[\"variablename\",{\"1\":{\"524\":2,\"583\":2}}],[\"variables\",{\"1\":{\"503\":3,\"513\":3,\"523\":3,\"699\":2}}],[\"variable\",{\"0\":{\"544\":1},\"1\":{\"10\":1,\"533\":1,\"699\":2}}],[\"var\",{\"1\":{\"9\":1,\"376\":2,\"443\":3,\"540\":1,\"554\":1,\"558\":1,\"592\":1,\"594\":3,\"692\":2,\"752\":1,\"753\":1,\"755\":1,\"809\":6,\"824\":1}}],[\"nginx常用命令\",{\"0\":{\"826\":1}}],[\"nginxlog\",{\"1\":{\"825\":2}}],[\"nginx\",{\"0\":{\"829\":1},\"1\":{\"824\":8,\"825\":24,\"827\":8,\"828\":2}}],[\"ntpdate\",{\"1\":{\"715\":2}}],[\"ntsc高色域全高清屏\",{\"1\":{\"351\":1,\"352\":1}}],[\"nf\",{\"1\":{\"715\":2}}],[\"nfe\",{\"1\":{\"41\":1}}],[\"nr\",{\"1\":{\"550\":1}}],[\"nil\",{\"1\":{\"440\":1,\"595\":1,\"597\":1,\"598\":2}}],[\"nsa网络\",{\"1\":{\"351\":1,\"353\":1}}],[\"nngtox\",{\"1\":{\"269\":1}}],[\"n\",{\"1\":{\"168\":2,\"257\":2,\"293\":5,\"450\":1,\"495\":2,\"591\":1,\"807\":1,\"818\":1,\"822\":1}}],[\"now\",{\"1\":{\"643\":1}}],[\"noeviction\",{\"1\":{\"463\":1}}],[\"notready\",{\"1\":{\"788\":2}}],[\"notation\",{\"1\":{\"535\":1}}],[\"not\",{\"1\":{\"308\":3,\"311\":1,\"375\":1,\"699\":2}}],[\"notifyall\",{\"1\":{\"51\":1,\"222\":2}}],[\"notify\",{\"1\":{\"51\":1,\"222\":3,\"518\":1}}],[\"no\",{\"0\":{\"677\":1},\"1\":{\"289\":1,\"290\":2,\"291\":1,\"422\":3,\"423\":6,\"424\":5,\"451\":1,\"454\":1,\"455\":4,\"464\":1,\"635\":1,\"707\":1,\"806\":1,\"812\":1}}],[\"nodeip\",{\"1\":{\"818\":1}}],[\"nodeport\",{\"1\":{\"818\":2}}],[\"nodeport类型默认分配端口范围\",{\"1\":{\"764\":1}}],[\"node服务\",{\"1\":{\"806\":1}}],[\"node服务的主要参数如下\",{\"1\":{\"806\":1}}],[\"node容器\",{\"1\":{\"804\":1}}],[\"node和calico\",{\"1\":{\"804\":1}}],[\"node需要以特权模式运行在各node上\",{\"1\":{\"804\":1}}],[\"nodefs\",{\"1\":{\"784\":2}}],[\"node创建工作目录\",{\"1\":{\"781\":1}}],[\"noderestriction\",{\"1\":{\"764\":1}}],[\"node二进制文件\",{\"1\":{\"758\":1}}],[\"node节点kubelet和kube\",{\"1\":{\"745\":1}}],[\"nodeselector\",{\"1\":{\"813\":1}}],[\"nodes\",{\"1\":{\"282\":1,\"814\":5}}],[\"node\",{\"1\":{\"276\":1,\"281\":1,\"282\":1,\"547\":1,\"742\":2,\"764\":3,\"768\":1,\"770\":1,\"771\":1,\"785\":1,\"788\":2,\"806\":3,\"807\":3,\"809\":4,\"812\":3}}],[\"nosql\",{\"1\":{\"266\":1,\"278\":1,\"286\":1,\"357\":1,\"360\":1,\"436\":1,\"445\":1,\"457\":1}}],[\"norm\",{\"1\":{\"226\":2}}],[\"none\",{\"1\":{\"496\":1,\"806\":1}}],[\"nonpayment\",{\"1\":{\"160\":1}}],[\"non\",{\"1\":{\"72\":1,\"73\":1}}],[\"natoutgoing\",{\"1\":{\"813\":1}}],[\"natp|grep\",{\"1\":{\"812\":1}}],[\"nativewebrequest\",{\"1\":{\"604\":3}}],[\"nativesearchquery\",{\"1\":{\"348\":1,\"352\":2}}],[\"nativesearchquerybuilder\",{\"1\":{\"348\":2,\"350\":1,\"352\":4,\"353\":2,\"354\":2,\"355\":2,\"356\":2}}],[\"native\",{\"1\":{\"43\":1,\"51\":1,\"697\":4}}],[\"nacosexception\",{\"1\":{\"670\":1}}],[\"nacosconfigmanager\",{\"1\":{\"670\":3}}],[\"nacosconfig\",{\"1\":{\"631\":2,\"632\":1}}],[\"nacos\",{\"0\":{\"616\":1,\"617\":1,\"618\":1,\"620\":1,\"632\":1,\"633\":1,\"668\":1,\"676\":1},\"1\":{\"611\":1,\"612\":2,\"613\":2,\"616\":6,\"617\":1,\"618\":2,\"620\":3,\"621\":8,\"625\":2,\"626\":2,\"627\":5,\"629\":2,\"630\":2,\"631\":6,\"632\":1,\"633\":2,\"636\":7,\"638\":2,\"652\":1,\"658\":11,\"667\":2,\"673\":2,\"676\":1}}],[\"names\",{\"1\":{\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"namespaceexists\",{\"1\":{\"725\":1}}],[\"namespace\",{\"1\":{\"723\":3,\"800\":2,\"806\":2,\"814\":1,\"818\":1}}],[\"nameservers\",{\"1\":{\"715\":1}}],[\"name属性会作为微服务的名称\",{\"1\":{\"649\":1}}],[\"name=calico\",{\"1\":{\"809\":1}}],[\"name=class\",{\"1\":{\"134\":1}}],[\"name=\",{\"1\":{\"399\":1,\"495\":6,\"752\":1,\"755\":1}}],[\"name相等\",{\"1\":{\"58\":1,\"60\":1}}],[\"name\",{\"1\":{\"15\":1,\"16\":3,\"17\":2,\"54\":4,\"58\":7,\"59\":1,\"60\":6,\"81\":2,\"89\":7,\"123\":7,\"128\":2,\"129\":7,\"134\":1,\"254\":1,\"277\":3,\"281\":1,\"283\":1,\"289\":2,\"290\":1,\"291\":3,\"293\":2,\"303\":3,\"334\":2,\"399\":9,\"440\":3,\"441\":6,\"444\":2,\"502\":2,\"534\":1,\"535\":3,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"542\":1,\"544\":1,\"548\":1,\"551\":1,\"552\":1,\"554\":1,\"556\":1,\"557\":1,\"558\":1,\"589\":2,\"590\":2,\"591\":4,\"597\":2,\"598\":1,\"599\":2,\"627\":3,\"631\":3,\"633\":4,\"638\":1,\"639\":2,\"647\":4,\"649\":1,\"656\":1,\"658\":1,\"660\":1,\"661\":3,\"662\":1,\"663\":1,\"665\":2,\"689\":1,\"692\":2,\"699\":2,\"730\":2,\"752\":1,\"779\":1,\"788\":2,\"800\":1,\"805\":1,\"806\":8,\"807\":1,\"813\":1,\"814\":4,\"818\":1,\"822\":1}}],[\"nummethod\",{\"1\":{\"597\":1}}],[\"numfield\",{\"1\":{\"590\":1,\"591\":1,\"598\":1,\"599\":1}}],[\"numoffragments\",{\"1\":{\"348\":1}}],[\"number\",{\"0\":{\"343\":1},\"1\":{\"295\":1,\"299\":2,\"300\":1,\"341\":1,\"343\":1}}],[\"numberformatexception\",{\"1\":{\"41\":1}}],[\"num\",{\"1\":{\"72\":6,\"73\":4,\"75\":2,\"78\":1}}],[\"nullcatalogmeanscurrent=true\",{\"1\":{\"495\":1}}],[\"null\",{\"1\":{\"41\":1,\"58\":1,\"60\":1,\"103\":1,\"128\":2,\"135\":1,\"149\":1,\"185\":1,\"188\":1,\"236\":1,\"253\":1,\"262\":1,\"364\":1,\"484\":1,\"514\":2,\"565\":1,\"569\":1,\"575\":1,\"670\":1}}],[\"n5fxqz\",{\"1\":{\"23\":1}}],[\"never\",{\"1\":{\"813\":2}}],[\"nearquery\",{\"1\":{\"403\":2}}],[\"nearsphere\",{\"1\":{\"402\":1}}],[\"near\",{\"1\":{\"402\":2,\"403\":1}}],[\"neumann\",{\"1\":{\"327\":1}}],[\"netstat\",{\"1\":{\"812\":1}}],[\"net=host\",{\"1\":{\"809\":1}}],[\"netplan\",{\"1\":{\"715\":2}}],[\"netflix\",{\"1\":{\"643\":2,\"644\":1}}],[\"net\",{\"1\":{\"457\":2,\"715\":3,\"796\":1,\"800\":1,\"806\":1}}],[\"neteria\",{\"1\":{\"308\":2}}],[\"networking\",{\"1\":{\"809\":1}}],[\"networkplugin=cni\",{\"1\":{\"804\":1}}],[\"network\",{\"1\":{\"281\":1,\"282\":1,\"715\":1,\"783\":2,\"796\":1,\"799\":1,\"800\":1,\"802\":1,\"806\":1}}],[\"next\",{\"1\":{\"172\":1,\"367\":1}}],[\"new是新集群\",{\"1\":{\"752\":1}}],[\"newfilename\",{\"1\":{\"451\":2}}],[\"newdir\",{\"1\":{\"451\":2}}],[\"newyork\",{\"1\":{\"399\":1}}],[\"newline\",{\"1\":{\"253\":2}}],[\"newlength\",{\"1\":{\"197\":1}}],[\"newlenmem\",{\"1\":{\"10\":2}}],[\"newcachedthreadpool\",{\"1\":{\"233\":1}}],[\"newcapacity\",{\"0\":{\"151\":1},\"1\":{\"150\":3,\"151\":11,\"152\":3}}],[\"newcap\",{\"1\":{\"10\":25}}],[\"newval\",{\"1\":{\"198\":1}}],[\"newinstance\",{\"0\":{\"125\":1},\"1\":{\"125\":1,\"127\":1,\"128\":2,\"135\":1}}],[\"new\",{\"1\":{\"41\":8,\"46\":2,\"47\":2,\"48\":4,\"54\":1,\"60\":3,\"62\":2,\"72\":1,\"74\":2,\"75\":3,\"84\":2,\"103\":3,\"104\":3,\"107\":2,\"108\":1,\"115\":2,\"122\":1,\"129\":1,\"135\":2,\"140\":1,\"151\":1,\"154\":2,\"155\":10,\"161\":1,\"172\":1,\"177\":1,\"185\":1,\"190\":1,\"206\":4,\"212\":1,\"218\":1,\"219\":2,\"222\":3,\"224\":2,\"225\":1,\"226\":2,\"233\":2,\"244\":5,\"248\":5,\"249\":2,\"252\":7,\"253\":6,\"254\":5,\"257\":2,\"269\":1,\"336\":1,\"348\":3,\"352\":1,\"353\":2,\"354\":1,\"355\":1,\"356\":1,\"385\":1,\"387\":1,\"388\":2,\"389\":3,\"399\":1,\"400\":4,\"401\":4,\"402\":6,\"403\":2,\"408\":1,\"477\":3,\"502\":1,\"503\":1,\"511\":2,\"513\":1,\"523\":1,\"562\":1,\"568\":1,\"592\":1,\"599\":1,\"606\":1,\"647\":1,\"665\":1,\"670\":6,\"671\":1,\"706\":1,\"752\":1,\"755\":1}}],[\"needupdatedefs\",{\"1\":{\"671\":5}}],[\"needcreatedefs\",{\"1\":{\"671\":5}}],[\"need\",{\"1\":{\"10\":1}}],[\"在宿主机上设置相应的iptables规则\",{\"1\":{\"806\":1}}],[\"在node上安装cni二进制文件到\",{\"1\":{\"806\":1}}],[\"在每个node上都安装calico\",{\"1\":{\"804\":1}}],[\"在每个node上都运行calico\",{\"1\":{\"804\":1}}],[\"在kubernetes中部署calico的主要步骤如下\",{\"1\":{\"804\":1}}],[\"在kubernetes1\",{\"1\":{\"724\":1}}],[\"在网络通信时需要转到flannel0网络接口\",{\"1\":{\"799\":1}}],[\"在主节点执行\",{\"1\":{\"788\":1}}],[\"在所有worker\",{\"1\":{\"781\":1}}],[\"在上层做一个lb做负载均衡\",{\"1\":{\"763\":1}}],[\"在上面的例子中\",{\"1\":{\"105\":1}}],[\"在对集群进行请求时\",{\"1\":{\"725\":1}}],[\"在对kubernetes\",{\"1\":{\"725\":1}}],[\"在一个组织中\",{\"1\":{\"724\":1}}],[\"在一段时间内多个进程轮流使用\",{\"1\":{\"203\":1}}],[\"在rbac中\",{\"1\":{\"724\":1}}],[\"在resource目录下新建bpmn目录用于存放所有的流程文件\",{\"1\":{\"498\":1}}],[\"在resource\",{\"1\":{\"495\":1}}],[\"在都正确的情况下协调通信加密方案\",{\"1\":{\"723\":1}}],[\"在公司项目开发中\",{\"1\":{\"707\":1}}],[\"在执行\",{\"1\":{\"705\":1}}],[\"在执行具体的操作时\",{\"1\":{\"164\":1}}],[\"在配置文件中写入配置\",{\"1\":{\"699\":1}}],[\"在配置文件中添加registry\",{\"1\":{\"687\":1}}],[\"在容器中查看mysql配置文件\",{\"1\":{\"699\":1}}],[\"在国内\",{\"1\":{\"679\":1}}],[\"在线安装\",{\"0\":{\"680\":1},\"1\":{\"679\":1}}],[\"在线生成工具\",{\"1\":{\"20\":1}}],[\"在指定的路由中添加路由规则\",{\"1\":{\"665\":1}}],[\"在指定位置插入字符串\",{\"1\":{\"147\":1}}],[\"在集群内部组件间通信使用http\",{\"1\":{\"722\":1}}],[\"在集群中选择请求的微服务\",{\"1\":{\"664\":1}}],[\"在集合遍历中\",{\"1\":{\"177\":1}}],[\"在我的项目中\",{\"1\":{\"658\":1}}],[\"在我们\",{\"1\":{\"24\":1}}],[\"在openfeign的依赖中可以发现\",{\"1\":{\"649\":1}}],[\"在浏览器或者\",{\"1\":{\"641\":1}}],[\"在启动类\",{\"1\":{\"648\":1}}],[\"在启动类上添加\",{\"1\":{\"637\":1}}],[\"在启动流程的时候将业务key加入进去\",{\"1\":{\"513\":1}}],[\"在中间件中会被更新\",{\"1\":{\"624\":1}}],[\"在项目开发中\",{\"1\":{\"603\":1}}],[\"在项目工程中添加\",{\"1\":{\"495\":1}}],[\"在反射包中有两个非常重要的\",{\"1\":{\"585\":1}}],[\"在代码中强耦合了springscurity\",{\"1\":{\"561\":1}}],[\"在连线处添加判断条件\",{\"1\":{\"523\":1}}],[\"在连线上使用uel表达式\",{\"1\":{\"522\":1}}],[\"在属性上使用uel表达式\",{\"1\":{\"522\":1}}],[\"在流程图中任务节点的配置中设置\",{\"1\":{\"526\":1}}],[\"在流程定义时将参与者固定设置在\",{\"1\":{\"525\":1}}],[\"在流程定义中在任务结点的\",{\"1\":{\"525\":1}}],[\"在流程流转时使用\",{\"1\":{\"519\":1}}],[\"在流程执行过程中\",{\"1\":{\"496\":1}}],[\"在bpmn文件中配置监听器\",{\"1\":{\"518\":1}}],[\"在bpmn目录下新建leave\",{\"1\":{\"498\":1}}],[\"在进行业务流程建模的时候指定固定的任务负责人\",{\"1\":{\"516\":1}}],[\"在任务执行之前任务添加批注信息\",{\"1\":{\"505\":1}}],[\"在activiti启动时删除原来的旧表\",{\"1\":{\"496\":1}}],[\"在activiti启动时创建表\",{\"1\":{\"496\":1}}],[\"在关闭时删除表\",{\"1\":{\"496\":1}}],[\"在责任链模式中\",{\"1\":{\"480\":1}}],[\"在两次快照之间\",{\"1\":{\"456\":1}}],[\"在向\",{\"1\":{\"453\":1}}],[\"在以下4种情况时会自动触发\",{\"1\":{\"450\":1}}],[\"在以下示例中\",{\"1\":{\"385\":1,\"386\":1,\"388\":1}}],[\"在insert或update过程中\",{\"1\":{\"424\":1}}],[\"在严格模式下\",{\"1\":{\"424\":1}}],[\"在该pod中包括如下两个容器\",{\"1\":{\"806\":1}}],[\"在该模式下\",{\"1\":{\"424\":1}}],[\"在该方法编写比较规则\",{\"1\":{\"189\":1}}],[\"在使用\",{\"1\":{\"500\":1,\"673\":1,\"830\":1}}],[\"在使用日志恢复数据时\",{\"1\":{\"453\":1}}],[\"在使用数据库的同时\",{\"1\":{\"407\":1}}],[\"在使用这些基本类型对应的包装类型时\",{\"1\":{\"41\":1}}],[\"在springcloud\",{\"1\":{\"665\":1}}],[\"在spring\",{\"1\":{\"390\":1}}],[\"在系统重新启动后启动\",{\"1\":{\"375\":1}}],[\"在品牌聚合桶内进行嵌套聚合\",{\"1\":{\"356\":1}}],[\"在这里我们就不介绍\",{\"1\":{\"348\":1}}],[\"在这些类中有一个类和其他类不同\",{\"1\":{\"257\":1}}],[\"在linux系统中可以采用kill进程的方式关闭后重启\",{\"1\":{\"325\":1}}],[\"在添加词库后\",{\"1\":{\"325\":1}}],[\"在<entry\",{\"1\":{\"324\":1}}],[\"在功能上等价于使用\",{\"1\":{\"302\":1}}],[\"在单个\",{\"1\":{\"293\":1}}],[\"在哪个类型\",{\"1\":{\"290\":1}}],[\"在哪个索引\",{\"1\":{\"290\":1}}],[\"在先前的文档中我们有说到\",{\"1\":{\"287\":1}}],[\"在倒排索引中搜索并发\",{\"1\":{\"277\":1}}],[\"在创建一个索引时可以指定分成多少个分片来存储\",{\"1\":{\"276\":1}}],[\"在事务发起方贴上注解\",{\"1\":{\"261\":1}}],[\"在工作中遇到需要调用其他服务接口\",{\"1\":{\"261\":1}}],[\"在开发中\",{\"1\":{\"703\":1}}],[\"在开发中我们可以故意在类中提供一个固定的\",{\"1\":{\"254\":1}}],[\"在开发中建议使用\",{\"1\":{\"238\":1}}],[\"在编译的时候就会根据字段生成一个缺省的\",{\"1\":{\"254\":1}}],[\"在文件对象中写入内容的时候\",{\"1\":{\"249\":1}}],[\"在简体中文的操作系统中ansi\",{\"1\":{\"238\":1}}],[\"在阻塞状态的线程不能进入就绪队列\",{\"1\":{\"215\":1}}],[\"在运行状态的线程执行自己的\",{\"1\":{\"214\":1}}],[\"在同一时刻多个进程使用各自的\",{\"1\":{\"203\":1}}],[\"在同一个包\",{\"1\":{\"91\":1}}],[\"在下一次切换会根据暂停时保存的状态来恢复\",{\"1\":{\"202\":1}}],[\"在下方评论按如下格式提供信息\",{\"1\":{\"15\":1}}],[\"在哈希表中元素的\",{\"1\":{\"187\":1}}],[\"在列表的指定位置插入指定元素\",{\"1\":{\"176\":1}}],[\"在日常的开发中\",{\"1\":{\"165\":1}}],[\"在前提下\",{\"1\":{\"152\":1}}],[\"在原有容量大小的基础上\",{\"1\":{\"152\":1}}],[\"在原有的字符串后面追加数据\",{\"1\":{\"147\":1}}],[\"在分别使用\",{\"1\":{\"126\":1}}],[\"在学习\",{\"1\":{\"121\":1,\"267\":1}}],[\"在了解反射之前\",{\"1\":{\"118\":1}}],[\"在类名后接\",{\"1\":{\"92\":1}}],[\"在表达式中\",{\"1\":{\"39\":1}}],[\"在注册窗口第一个选项填写\",{\"1\":{\"20\":1}}],[\"在插件安装后\",{\"1\":{\"19\":1}}],[\"在\",{\"1\":{\"19\":1,\"20\":1,\"48\":1,\"121\":1,\"125\":1,\"155\":2,\"217\":1,\"249\":1,\"255\":1,\"265\":1,\"289\":1,\"312\":1,\"317\":1,\"341\":1,\"358\":1,\"364\":1,\"366\":1,\"411\":1,\"421\":1,\"527\":1,\"585\":1,\"627\":1,\"631\":1,\"632\":1,\"633\":1,\"655\":1,\"658\":2,\"664\":2,\"676\":1,\"831\":1}}],[\"在很长的一段时间内\",{\"1\":{\"2\":1}}],[\"站点logo\",{\"1\":{\"15\":1}}],[\"站点描述\",{\"1\":{\"15\":1}}],[\"站点地址\",{\"1\":{\"15\":1}}],[\"站点名称\",{\"1\":{\"15\":1}}],[\"算出新的容量所需的内存情况capmem\",{\"1\":{\"11\":1}}],[\"都需要持久化\",{\"1\":{\"748\":1}}],[\"都需要根据slice类型\",{\"1\":{\"11\":1}}],[\"都刻意不提交该文件\",{\"1\":{\"707\":1}}],[\"都帮我们管理了\",{\"1\":{\"491\":1}}],[\"都将安装每个\",{\"1\":{\"374\":1}}],[\"都可以\",{\"1\":{\"289\":1,\"412\":1}}],[\"都采用它\",{\"1\":{\"264\":1}}],[\"都得覆盖hashcode和equals方法用来判断是否是同一个对象\",{\"1\":{\"187\":1}}],[\"都是作为服务调用存在的\",{\"1\":{\"634\":1}}],[\"都是通过dir参数设置的\",{\"1\":{\"455\":1}}],[\"都是字符串\",{\"1\":{\"437\":1}}],[\"都是调用这个成员对象的同名方法\",{\"1\":{\"257\":1}}],[\"都是基于数组实现的\",{\"1\":{\"178\":1}}],[\"都是进展缓慢\",{\"1\":{\"2\":1}}],[\"都会调用\",{\"1\":{\"148\":1}}],[\"都能够调用它的任意一个方法和属性\",{\"1\":{\"120\":1}}],[\"都能够知道这个类的所有属性和方法\",{\"1\":{\"120\":1}}],[\"都不能被实例化\",{\"1\":{\"97\":1}}],[\"得出\",{\"1\":{\"152\":1}}],[\"得出新的容量大小\",{\"1\":{\"151\":1}}],[\"得到了巨大的提升\",{\"1\":{\"204\":1}}],[\"得到beaninfo之后\",{\"1\":{\"133\":1}}],[\"得到真正的最终容量\",{\"1\":{\"11\":1}}],[\"得到新的所需内存\",{\"1\":{\"11\":1}}],[\"得到新容量后\",{\"1\":{\"11\":1}}],[\"得过且过的生活\",{\"1\":{\"2\":1}}],[\"直到最后一个\",{\"1\":{\"484\":1}}],[\"直到有对象处理它为止\",{\"1\":{\"480\":1}}],[\"直到rdb过程完成为止\",{\"1\":{\"449\":1}}],[\"直到全部复制\",{\"1\":{\"64\":1}}],[\"直到遇到下面的场景引起我的注意\",{\"1\":{\"9\":1}}],[\"直接路由和calico\",{\"1\":{\"799\":1}}],[\"直接创建下面👇的文件\",{\"1\":{\"729\":1}}],[\"直接干掉\",{\"1\":{\"460\":1}}],[\"直接添加\",{\"1\":{\"440\":1}}],[\"直接点击download下载即可\",{\"1\":{\"366\":1}}],[\"直接从网络地址安装\",{\"1\":{\"317\":1}}],[\"直接将输入当作输出\",{\"1\":{\"316\":1}}],[\"直接将新字符串长度设置成新的容量\",{\"1\":{\"152\":1}}],[\"直接绑定\",{\"1\":{\"262\":1}}],[\"直接继承了\",{\"1\":{\"256\":1}}],[\"直接继承于\",{\"1\":{\"113\":1}}],[\"直接使用宿主机网络\",{\"1\":{\"806\":1}}],[\"直接使用二进制源码包安装\",{\"1\":{\"726\":1}}],[\"直接使用双引号声明出来\",{\"1\":{\"154\":1}}],[\"直接使用字符串长度作为新的容量\",{\"1\":{\"152\":1}}],[\"直接使用预估的容量\",{\"1\":{\"11\":1}}],[\"直接返回\",{\"1\":{\"151\":1}}],[\"直接返回上面计算的新的容量大小\",{\"1\":{\"151\":1}}],[\"直接转换为\",{\"1\":{\"39\":2}}],[\"超时配置\",{\"0\":{\"651\":1},\"1\":{\"651\":1}}],[\"超级权限\",{\"1\":{\"417\":1}}],[\"超大1t固态\",{\"1\":{\"351\":1}}],[\"超出则抛出异常\",{\"1\":{\"151\":1}}],[\"超出长度也可以继续添加元素\",{\"1\":{\"8\":1}}],[\"超类\",{\"1\":{\"50\":1}}],[\"超过1024的\",{\"1\":{\"11\":1}}],[\"这一步中已经创建过了\",{\"1\":{\"760\":1}}],[\"这一端被称为\",{\"1\":{\"170\":1}}],[\"这时就可以用到引导token的认证方式\",{\"1\":{\"723\":1}}],[\"这时候我们就可以使用\",{\"1\":{\"707\":1}}],[\"这时候我们在使用\",{\"1\":{\"249\":1}}],[\"这时候就需要使用\",{\"1\":{\"706\":1}}],[\"这两个概念属于密码学的东西\",{\"1\":{\"720\":1}}],[\"这为我们提供一种可以在运行时操作任意类型对象的能力\",{\"1\":{\"585\":1}}],[\"这类模式介绍如何将对象和类组装成较大的结构\",{\"1\":{\"469\":1}}],[\"这类模式提供创建对象的机制\",{\"1\":{\"469\":1}}],[\"这也是系统默认的淘汰策略\",{\"1\":{\"464\":1}}],[\"这也是我们平时最常用的反射获取\",{\"1\":{\"122\":1}}],[\"这和oracle数据库是一样的\",{\"1\":{\"424\":1}}],[\"这项要为false\",{\"1\":{\"348\":1}}],[\"这篇攻略将会给大家介绍老<b>上海<\",{\"1\":{\"343\":1}}],[\"这篇攻略将会给大家介绍老上海小吃\",{\"1\":{\"341\":1}}],[\"这会很方便\",{\"1\":{\"343\":1}}],[\"这就极大地简化了权限的管理\",{\"1\":{\"724\":1}}],[\"这就用到今天说的一个参数解析器接口\",{\"1\":{\"603\":1}}],[\"这就避免了频繁\",{\"1\":{\"456\":1}}],[\"这就是\",{\"1\":{\"641\":1}}],[\"这就是服务注册和服务发现\",{\"1\":{\"624\":1}}],[\"这就是结果高亮显示\",{\"1\":{\"339\":1}}],[\"这就是实现了\",{\"1\":{\"35\":1}}],[\"这就意味着集合中不能出现重复的数据\",{\"1\":{\"443\":1}}],[\"这就意味\",{\"1\":{\"308\":1}}],[\"这减少了开销并且可以大大提高索引速度\",{\"1\":{\"293\":1}}],[\"这是网关的基本构建块\",{\"1\":{\"654\":1}}],[\"这是具体的解析过程\",{\"1\":{\"604\":1}}],[\"这是最高效的\",{\"1\":{\"496\":1}}],[\"这是像rdms中那样的集合容器\",{\"1\":{\"363\":1}}],[\"这是指向查询结果集的指针\",{\"1\":{\"363\":1}}],[\"这是mongodb文档的分组\",{\"1\":{\"363\":1}}],[\"这是每个mongodb文档中必填的字段\",{\"1\":{\"363\":1}}],[\"这是非常强大且有效的\",{\"1\":{\"312\":1}}],[\"这是\",{\"1\":{\"289\":1}}],[\"这是因为\",{\"1\":{\"62\":1,\"222\":1,\"698\":1}}],[\"这些条件定义在namespace中limitrange对象中\",{\"1\":{\"725\":1}}],[\"这些功能不在工作流驱动的应用程序中使用\",{\"1\":{\"500\":1}}],[\"这些\",{\"1\":{\"491\":1,\"659\":1}}],[\"这些都是头疼的问题\",{\"1\":{\"341\":1,\"343\":1}}],[\"这些精确值可能是数字\",{\"1\":{\"311\":1}}],[\"这些子类都有自己特定的功能\",{\"1\":{\"256\":1}}],[\"这些字段都被存储到一个数组中\",{\"1\":{\"116\":1}}],[\"这只是标志接口\",{\"1\":{\"254\":1}}],[\"这里准备了三台ubuntu虚拟机\",{\"1\":{\"714\":1}}],[\"这里记录一下操作流程\",{\"1\":{\"703\":1}}],[\"这里记录流程流转过的所有节点\",{\"1\":{\"551\":1}}],[\"这里暂时没\",{\"1\":{\"670\":1}}],[\"这里主要记录实现步骤\",{\"1\":{\"667\":1}}],[\"这里我们一起了解一下业内方案和相关的概念\",{\"1\":{\"720\":1}}],[\"这里我们就只列出一些常用的匹配方式\",{\"1\":{\"663\":1}}],[\"这里我们使用导入文件的方式\",{\"1\":{\"296\":1}}],[\"这里需要使用到反射\",{\"1\":{\"601\":1}}],[\"这里会报错\",{\"1\":{\"595\":1}}],[\"这里的\",{\"1\":{\"588\":1}}],[\"这里指定任务负责人\",{\"1\":{\"518\":1}}],[\"这里就不再详细说明\",{\"1\":{\"667\":1}}],[\"这里就不多演示\",{\"1\":{\"484\":1}}],[\"这里就贴一下官网地址\",{\"1\":{\"377\":1}}],[\"这里\",{\"1\":{\"377\":1}}],[\"这里安装\",{\"1\":{\"367\":1}}],[\"这里不安装也是没有问题的\",{\"1\":{\"367\":1}}],[\"这里不分段显示\",{\"1\":{\"348\":1}}],[\"这里不介绍\",{\"1\":{\"26\":1}}],[\"这里使用了\",{\"1\":{\"341\":1}}],[\"这里获取\",{\"1\":{\"262\":1}}],[\"这里存在一个设计模式\",{\"1\":{\"251\":1}}],[\"这么多数据结构\",{\"1\":{\"165\":1}}],[\"这种客户端证书颁发需要大量工作\",{\"1\":{\"745\":1}}],[\"这种过滤器可用来为响应添加标准的http\",{\"1\":{\"664\":1}}],[\"这种过滤器在路由到微服务以后执行\",{\"1\":{\"664\":1}}],[\"这种过滤器在请求被路由之前调用\",{\"1\":{\"664\":1}}],[\"这种设计模式创建了一个装饰类\",{\"1\":{\"471\":1,\"476\":1}}],[\"这种方式可分为创建型模式\",{\"1\":{\"469\":1}}],[\"这种方式最不友好\",{\"1\":{\"461\":1}}],[\"这种方式对cpu很友好\",{\"1\":{\"460\":1}}],[\"这种机制就是\",{\"1\":{\"447\":1}}],[\"这种\",{\"1\":{\"120\":1}}],[\"这个\",{\"1\":{\"822\":1}}],[\"这个配置是用来完成bootstrap\",{\"1\":{\"785\":1}}],[\"这个准入代码在api\",{\"1\":{\"725\":1}}],[\"这个属性值和正则表达式匹配则执行\",{\"1\":{\"662\":1}}],[\"这个对象可以是内建数据类型\",{\"1\":{\"601\":1}}],[\"这个结构描述结构体的成员信息\",{\"1\":{\"590\":1}}],[\"这个key是在定义bpmn的时候设置的\",{\"1\":{\"513\":1,\"523\":1}}],[\"这个流程实例就完成了\",{\"1\":{\"493\":1}}],[\"这个与频次和时间相关\",{\"1\":{\"463\":1}}],[\"这个参数项是aof功能最重要的设置项之一\",{\"1\":{\"455\":1}}],[\"这个参数项很好理解了\",{\"1\":{\"455\":1}}],[\"这个参数是指定\",{\"1\":{\"353\":1}}],[\"这个功能大概会多损失10\",{\"1\":{\"451\":1}}],[\"这个在奶茶活动中有运用\",{\"1\":{\"435\":1}}],[\"这个也是list所不能提供的\",{\"1\":{\"435\":1}}],[\"这个时候一般常用的方法是跳过权限验证\",{\"1\":{\"411\":1}}],[\"这个实现也不是线程安全的\",{\"1\":{\"179\":1}}],[\"这个语句生成了几个对象\",{\"1\":{\"154\":1}}],[\"这个方法既能享受到\",{\"1\":{\"456\":1}}],[\"这个方法最终会调用object中的clone方法完成浅拷贝\",{\"1\":{\"65\":1}}],[\"这个方法是被保护的\",{\"1\":{\"62\":1}}],[\"这个文件可以借助kubectl命令生成\",{\"1\":{\"785\":1}}],[\"这个文件\",{\"1\":{\"35\":1}}],[\"这样既增加了安全性\",{\"1\":{\"722\":1}}],[\"这样就把人和权限建立了一个关系\",{\"1\":{\"721\":1}}],[\"这样就会走以下扩容流程\",{\"1\":{\"11\":1}}],[\"这样该文件即使有修改\",{\"1\":{\"707\":1}}],[\"这样配置\",{\"1\":{\"660\":1}}],[\"这样的好处是可以保证数据不丢失\",{\"1\":{\"464\":1}}],[\"这样可以极大地提高应用程序的性能\",{\"1\":{\"458\":1}}],[\"这样下次需要这个数据的时候\",{\"1\":{\"458\":1}}],[\"这样一来\",{\"1\":{\"456\":1}}],[\"这样一个进程就包含了多个线程\",{\"1\":{\"204\":1}}],[\"这样有同一标签或者类似标签的可以给推荐关注的事或者关注的人\",{\"1\":{\"443\":1}}],[\"这样批处理系统就出现了\",{\"1\":{\"202\":1}}],[\"这样我们每次修改代码只需要稍微等待一会\",{\"1\":{\"24\":1}}],[\"这结果让我一头雾水\",{\"1\":{\"10\":1}}],[\"的时候都会出现获取主机名会出现这个时间超长的问题\",{\"1\":{\"830\":1}}],[\"的网桥\",{\"1\":{\"799\":1}}],[\"的网络\",{\"1\":{\"796\":1}}],[\"的权限\",{\"1\":{\"742\":1}}],[\"的证书\",{\"1\":{\"723\":1}}],[\"的相关操作请看上文的\",{\"1\":{\"667\":1}}],[\"的相关概念\",{\"1\":{\"427\":1}}],[\"的作用范围两种\",{\"1\":{\"664\":1}}],[\"的官方文档\",{\"1\":{\"663\":1}}],[\"的代表是\",{\"1\":{\"657\":1}}],[\"的代替方案\",{\"0\":{\"66\":1}}],[\"的routes\",{\"1\":{\"657\":1}}],[\"的uri代理规则\",{\"1\":{\"656\":1}}],[\"的版本\",{\"1\":{\"655\":1}}],[\"的版本中\",{\"1\":{\"155\":1}}],[\"的路由配置\",{\"1\":{\"655\":1}}],[\"的入门教程\",{\"1\":{\"652\":1}}],[\"的依赖并且配置启用了\",{\"1\":{\"645\":1}}],[\"的依赖就解决了\",{\"1\":{\"635\":1}}],[\"的客户端负载均衡工具\",{\"1\":{\"643\":1}}],[\"的负载均衡导致的\",{\"1\":{\"641\":1}}],[\"的接口\",{\"0\":{\"640\":1}}],[\"的服务发现有两种方式\",{\"1\":{\"820\":1}}],[\"的服务注册依赖\",{\"1\":{\"658\":1}}],[\"的服务注册发现功能将其服务注册到\",{\"1\":{\"627\":1}}],[\"的服务调用\",{\"1\":{\"638\":1}}],[\"的扫描注解\",{\"1\":{\"637\":1}}],[\"的文件系统中\",{\"1\":{\"723\":1}}],[\"的文章➡️\",{\"1\":{\"636\":1}}],[\"的文档\",{\"1\":{\"299\":1,\"310\":1}}],[\"的配置\",{\"1\":{\"631\":1}}],[\"的配置管理\",{\"1\":{\"625\":1}}],[\"的拼接格式变成\",{\"1\":{\"631\":1}}],[\"的详细文档请参看\",{\"1\":{\"621\":1}}],[\"的优势\",{\"0\":{\"615\":1}}],[\"的优缺点\",{\"0\":{\"452\":1}}],[\"的几大痛点\",{\"0\":{\"614\":1}}],[\"的支持\",{\"1\":{\"610\":1}}],[\"的使用\",{\"1\":{\"608\":1,\"659\":1}}],[\"的使用场景\",{\"0\":{\"432\":1}}],[\"的形式\",{\"1\":{\"556\":1}}],[\"的形式存储的\",{\"1\":{\"191\":1}}],[\"的值作为任务的负责人进行任务分配\",{\"1\":{\"522\":1}}],[\"的值\",{\"1\":{\"522\":2,\"627\":1,\"631\":1}}],[\"的历史管理类\",{\"1\":{\"500\":1}}],[\"的任务管理类\",{\"1\":{\"500\":1}}],[\"的流程运行管理类\",{\"1\":{\"500\":1}}],[\"的插件\",{\"1\":{\"499\":1}}],[\"的插件市场中查找插件并安装\",{\"1\":{\"19\":1}}],[\"的自动装配配置\",{\"1\":{\"497\":1}}],[\"的子类\",{\"1\":{\"478\":4}}],[\"的子接口\",{\"1\":{\"174\":1}}],[\"的模式\",{\"1\":{\"474\":1}}],[\"的持久化机制\",{\"1\":{\"447\":1}}],[\"的成员\",{\"1\":{\"443\":1}}],[\"的维护缓存信息\",{\"1\":{\"441\":1}}],[\"的语法差不多\",{\"1\":{\"418\":1}}],[\"的最新稳定版本或特定版本的\",{\"1\":{\"374\":1}}],[\"的最大值\",{\"1\":{\"152\":1}}],[\"的术语\",{\"0\":{\"363\":1}}],[\"的核心概念以及术语\",{\"1\":{\"358\":1}}],[\"的操作\",{\"1\":{\"349\":1}}],[\"的操作接口\",{\"1\":{\"268\":1,\"287\":1}}],[\"的集成\",{\"1\":{\"348\":1}}],[\"的结束标签\",{\"1\":{\"346\":1}}],[\"的结果是\",{\"1\":{\"155\":1}}],[\"的结果就是\",{\"1\":{\"155\":1}}],[\"的开始标签\",{\"1\":{\"345\":1}}],[\"的开源搜索及分析引擎\",{\"1\":{\"268\":1}}],[\"的下一级此时为\",{\"1\":{\"342\":1}}],[\"的参数定义\",{\"1\":{\"342\":1}}],[\"的html标签进行包裹\",{\"1\":{\"342\":1}}],[\"的复杂查询\",{\"1\":{\"338\":1}}],[\"的强大之处\",{\"1\":{\"335\":1,\"383\":1}}],[\"的github\",{\"1\":{\"317\":1}}],[\"的平均薪资以及这个年龄段的总体平均薪资\",{\"1\":{\"314\":1}}],[\"的平均薪资和\",{\"1\":{\"314\":1}}],[\"的字符串\",{\"1\":{\"311\":1}}],[\"的查询\",{\"1\":{\"310\":1}}],[\"的情况\",{\"1\":{\"308\":1}}],[\"的条件就会\",{\"1\":{\"308\":1}}],[\"的dev\",{\"1\":{\"297\":1}}],[\"的数据干掉\",{\"1\":{\"464\":1}}],[\"的数据不会因为故障而丢失\",{\"1\":{\"447\":1}}],[\"的数据类型\",{\"0\":{\"364\":1}}],[\"的数据\",{\"1\":{\"310\":1,\"385\":1,\"386\":1,\"752\":2}}],[\"的数据语法\",{\"1\":{\"296\":1}}],[\"的数据结构做查询修改是非常快的\",{\"1\":{\"167\":1}}],[\"的所有数据\",{\"1\":{\"394\":1}}],[\"的所有记录\",{\"1\":{\"305\":1,\"306\":1}}],[\"的所有增删改查都是使用\",{\"1\":{\"287\":1}}],[\"的所有元素\",{\"1\":{\"186\":1}}],[\"的安装就不详细说明\",{\"1\":{\"377\":1}}],[\"的安装步骤\",{\"1\":{\"358\":1}}],[\"的安装以及基础的\",{\"1\":{\"358\":1}}],[\"的安装\",{\"1\":{\"279\":1,\"365\":1}}],[\"的安装教程\",{\"1\":{\"26\":1}}],[\"的地址和应用名\",{\"1\":{\"631\":1}}],[\"的地址\",{\"1\":{\"627\":1}}],[\"的地址引用\",{\"1\":{\"155\":1}}],[\"的地方蛮多的\",{\"1\":{\"432\":1}}],[\"的地位与数据库实例\",{\"1\":{\"273\":1}}],[\"的概念\",{\"1\":{\"272\":1}}],[\"的概念后\",{\"1\":{\"265\":1}}],[\"的基础上给类新增功能\",{\"1\":{\"475\":1}}],[\"的基础概念\",{\"0\":{\"272\":1}}],[\"的基本概念\",{\"0\":{\"361\":1}}],[\"的基本\",{\"1\":{\"265\":1,\"349\":1}}],[\"的特点\",{\"0\":{\"270\":1}}],[\"的封装\",{\"1\":{\"268\":1,\"643\":1}}],[\"的底层是开源库\",{\"1\":{\"268\":1}}],[\"的知识点进行学习\",{\"1\":{\"264\":1}}],[\"的读取\",{\"1\":{\"253\":1}}],[\"的缓冲区\",{\"1\":{\"251\":1}}],[\"的新语法中\",{\"1\":{\"249\":1}}],[\"的常用方法\",{\"1\":{\"236\":1}}],[\"的调用声明了当前线程已经完成了生命周期中最重要的部分\",{\"1\":{\"223\":1}}],[\"的调度\",{\"1\":{\"214\":1}}],[\"的一项很重要的功能\",{\"1\":{\"820\":1}}],[\"的一个全新项目\",{\"1\":{\"653\":1}}],[\"的一个数据\",{\"1\":{\"275\":1}}],[\"的一部分\",{\"1\":{\"222\":1}}],[\"的一点心得\",{\"1\":{\"118\":1}}],[\"的利用率\",{\"1\":{\"202\":1}}],[\"的资源管理类\",{\"1\":{\"500\":1}}],[\"的资源\",{\"1\":{\"202\":1}}],[\"的能力\",{\"1\":{\"188\":1}}],[\"的实例\",{\"1\":{\"185\":1}}],[\"的父类\",{\"1\":{\"173\":2}}],[\"的位置顺序改变了\",{\"1\":{\"155\":1}}],[\"的对象\",{\"1\":{\"155\":2}}],[\"的引用地址不同\",{\"1\":{\"155\":1}}],[\"的可变字符串\",{\"1\":{\"146\":2}}],[\"的属性\",{\"1\":{\"135\":2}}],[\"的反射机制\",{\"1\":{\"120\":1}}],[\"的功能称为\",{\"1\":{\"120\":1}}],[\"的访问权限\",{\"1\":{\"81\":1}}],[\"的类信息存储到\",{\"1\":{\"121\":1}}],[\"的类\",{\"1\":{\"80\":1}}],[\"的类型\",{\"1\":{\"10\":1}}],[\"的规则\",{\"0\":{\"65\":1}}],[\"的\",{\"1\":{\"57\":1,\"59\":1,\"62\":1,\"128\":1,\"191\":1,\"242\":1,\"283\":2,\"294\":1,\"303\":1,\"440\":1,\"443\":1,\"500\":1,\"561\":1,\"595\":1,\"639\":1,\"658\":1,\"659\":1,\"733\":1,\"820\":1,\"822\":2}}],[\"的方式保存在\",{\"1\":{\"723\":1}}],[\"的方式有很多\",{\"1\":{\"690\":1}}],[\"的方式来实现的\",{\"1\":{\"658\":1}}],[\"的方式开发\",{\"1\":{\"638\":1}}],[\"的方式\",{\"1\":{\"449\":1}}],[\"的方式是用\",{\"1\":{\"56\":1}}],[\"的方法c\",{\"1\":{\"91\":1}}],[\"的方法\",{\"1\":{\"53\":2,\"133\":4}}],[\"的运行时类\",{\"1\":{\"51\":1}}],[\"的区别和联系\",{\"0\":{\"613\":1}}],[\"的区别\",{\"0\":{\"57\":1},\"1\":{\"41\":1,\"42\":1,\"291\":1,\"634\":1}}],[\"的跨平台\",{\"1\":{\"35\":1}}],[\"的激活破解教程\",{\"1\":{\"25\":1}}],[\"的设置选项\",{\"1\":{\"19\":1}}],[\"的博客\",{\"1\":{\"11\":1}}],[\"的少年\",{\"1\":{\"2\":1}}],[\"没修改前应该是这个样子\",{\"1\":{\"831\":1}}],[\"没有额外的封包解包\",{\"1\":{\"802\":1}}],[\"没有父节点\",{\"1\":{\"706\":1}}],[\"没有完善的可视化界面\",{\"1\":{\"614\":1}}],[\"没有找到时返回零值\",{\"1\":{\"590\":1}}],[\"没有找到时\",{\"1\":{\"590\":1}}],[\"没有可读性\",{\"1\":{\"452\":1}}],[\"没有设置过期时间时\",{\"1\":{\"440\":1}}],[\"没有在\",{\"1\":{\"424\":1}}],[\"没有在group\",{\"1\":{\"421\":1}}],[\"没有这一步\",{\"1\":{\"335\":1}}],[\"没有也不要紧\",{\"1\":{\"308\":1}}],[\"没有传过来\",{\"1\":{\"262\":1}}],[\"没有使用其他的框架去调用接口\",{\"1\":{\"261\":1}}],[\"没有抽象方法\",{\"1\":{\"254\":1}}],[\"没有重复的元素\",{\"1\":{\"186\":1}}],[\"没有重写\",{\"1\":{\"59\":1}}],[\"没有公共的构造器\",{\"1\":{\"122\":1}}],[\"没有继承就没有重写\",{\"1\":{\"102\":1}}],[\"没有\",{\"1\":{\"80\":1}}],[\"没有实现\",{\"1\":{\"62\":1}}],[\"没有大小为10\",{\"1\":{\"10\":1}}],[\"没激活会弹出激活窗口界面\",{\"1\":{\"27\":1}}],[\"没过多久就被抛在脑后\",{\"1\":{\"2\":1}}],[\"看到有输出信息\",{\"1\":{\"369\":1}}],[\"看场景\",{\"1\":{\"291\":1}}],[\"看第二段代码\",{\"1\":{\"155\":1}}],[\"看bytes\",{\"1\":{\"10\":1}}],[\"看了源码才发现上面的代码append多个元素没走翻倍扩容流程\",{\"1\":{\"10\":1}}],[\"看了好多技术大佬的博客\",{\"1\":{\"3\":1}}],[\"查找原因\",{\"0\":{\"674\":1}}],[\"查找指定\",{\"1\":{\"569\":1}}],[\"查找用户任务\",{\"0\":{\"504\":1}}],[\"查找的复杂度都是\",{\"1\":{\"443\":1}}],[\"查找周围10英里内的所有餐馆\",{\"1\":{\"403\":1}}],[\"查找\",{\"1\":{\"391\":1}}],[\"查找价格在\",{\"1\":{\"387\":1}}],[\"查找和替换\",{\"1\":{\"198\":1}}],[\"查出所有年龄分布\",{\"1\":{\"314\":1}}],[\"查出\",{\"1\":{\"306\":1}}],[\"查询还未分配node的pod\",{\"1\":{\"775\":1}}],[\"查询用户\",{\"1\":{\"603\":1}}],[\"查询用户已办任务列表\",{\"0\":{\"584\":1}}],[\"查询当前\",{\"0\":{\"578\":1}}],[\"查询流程\",{\"0\":{\"566\":1}}],[\"查询流程定义\",{\"0\":{\"509\":1}}],[\"查询候选人待办任务\",{\"0\":{\"580\":1}}],[\"查询候选人时会抛出异常\",{\"1\":{\"527\":1}}],[\"查询候选人任务时会遇到异常\",{\"1\":{\"561\":1}}],[\"查询候选人任务\",{\"0\":{\"527\":1}}],[\"查询候选任务\",{\"1\":{\"527\":1}}],[\"查询历史批注信息\",{\"0\":{\"506\":1}}],[\"查询任务相关\",{\"0\":{\"577\":1}}],[\"查询任务\",{\"1\":{\"504\":1}}],[\"查询出来的任务都是当前用户的待办任务\",{\"1\":{\"504\":1}}],[\"查询待办任务\",{\"0\":{\"491\":1}}],[\"查询的所有名称\",{\"1\":{\"353\":1}}],[\"查询的结果\",{\"1\":{\"308\":1}}],[\"查询商品中带\",{\"1\":{\"353\":1}}],[\"查询结果如下\",{\"1\":{\"352\":1,\"353\":1}}],[\"查询条件对象\",{\"0\":{\"350\":1},\"1\":{\"348\":1}}],[\"查询被用于\",{\"1\":{\"311\":1}}],[\"查询找出那些落在指定区间内的数字或者时间\",{\"1\":{\"309\":1}}],[\"查询类型\",{\"1\":{\"303\":1}}],[\"查询语句\",{\"1\":{\"303\":1}}],[\"查询语句结构\",{\"0\":{\"303\":1}}],[\"查询语言\",{\"1\":{\"301\":1}}],[\"查询\",{\"0\":{\"311\":1,\"385\":1,\"400\":1,\"401\":1,\"402\":1,\"697\":1},\"1\":{\"302\":1,\"308\":4,\"340\":1,\"355\":1,\"356\":1}}],[\"查询表达式\",{\"1\":{\"301\":1}}],[\"查询数据\",{\"0\":{\"297\":1}}],[\"查询文档\",{\"0\":{\"290\":1}}],[\"查询以及聚合操作\",{\"1\":{\"285\":1}}],[\"查询和聚合的基础使用\",{\"1\":{\"265\":1}}],[\"查询列表中指定索引位置对应的元素\",{\"1\":{\"176\":1}}],[\"查询修改比较慢\",{\"1\":{\"168\":1}}],[\"查询操作\",{\"1\":{\"167\":1,\"168\":1,\"176\":1}}],[\"查看你的mac的主机名称\",{\"1\":{\"831\":1}}],[\"查看nginx是否安装成功\",{\"1\":{\"824\":1}}],[\"查看是否部署成功\",{\"1\":{\"822\":1}}],[\"查看是否安装完成\",{\"1\":{\"317\":1}}],[\"查看集群ippool情况\",{\"1\":{\"813\":1}}],[\"查看集群状态\",{\"0\":{\"756\":1,\"779\":1}}],[\"查看端口bgp\",{\"1\":{\"812\":1}}],[\"查看日志\",{\"1\":{\"810\":1}}],[\"查看日志是否启动异常\",{\"1\":{\"754\":1,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1}}],[\"查看节点运行情况\",{\"0\":{\"812\":1}}],[\"查看节点\",{\"1\":{\"788\":1}}],[\"查看kubelet证书请求\",{\"1\":{\"788\":1}}],[\"查看状态\",{\"1\":{\"715\":1}}],[\"查看暂存列表\",{\"1\":{\"709\":1}}],[\"查看分支状态\",{\"1\":{\"705\":1}}],[\"查看分支信息\",{\"1\":{\"705\":2}}],[\"查看分支\",{\"0\":{\"705\":1}}],[\"查看并修改mysql编码\",{\"0\":{\"699\":1}}],[\"查看容器是否启动\",{\"0\":{\"693\":1}}],[\"查看用户权限\",{\"0\":{\"412\":1}}],[\"查看测试数据的格式我们发现数据格式是\",{\"1\":{\"296\":1}}],[\"查看所有索引\",{\"1\":{\"288\":1}}],[\"查看所有节点\",{\"1\":{\"288\":1}}],[\"查看主节点\",{\"1\":{\"288\":1}}],[\"查看它的\",{\"1\":{\"257\":1}}],[\"查看它的源代码\",{\"1\":{\"257\":1}}],[\"查看其源代码可知\",{\"1\":{\"257\":1}}],[\"查看源码可知\",{\"1\":{\"185\":1}}],[\"查看\",{\"0\":{\"422\":1},\"1\":{\"151\":2,\"288\":1,\"699\":1,\"800\":1,\"807\":2,\"818\":1}}],[\"查等操作方法\",{\"1\":{\"145\":1}}],[\"查了资料发现是go内存管理的原因\",{\"1\":{\"10\":1}}],[\"查资料得知这里的et\",{\"1\":{\"10\":1}}],[\"呢\",{\"1\":{\"10\":1}}],[\"满足某些断言\",{\"1\":{\"654\":1}}],[\"满足\",{\"1\":{\"10\":2}}],[\"省略\",{\"1\":{\"10\":2,\"123\":1}}],[\"uwsgi\",{\"1\":{\"825\":3}}],[\"ui\",{\"1\":{\"817\":1}}],[\"uid\",{\"1\":{\"813\":1}}],[\"uint32\",{\"1\":{\"595\":1}}],[\"uint16\",{\"1\":{\"595\":1}}],[\"uint8\",{\"1\":{\"595\":1}}],[\"uint64\",{\"1\":{\"594\":1,\"595\":3}}],[\"uint\",{\"1\":{\"594\":2,\"595\":1}}],[\"uintptr\",{\"1\":{\"10\":10,\"590\":1}}],[\"udp本身是非可靠协议\",{\"1\":{\"799\":1}}],[\"ufw\",{\"1\":{\"715\":2}}],[\"u3me4v\",{\"1\":{\"659\":1}}],[\"uel表达式结果类型为布尔类型\",{\"1\":{\"522\":1}}],[\"uel表达式\",{\"1\":{\"522\":1}}],[\"uel表达式分配\",{\"1\":{\"503\":1}}],[\"uel\",{\"0\":{\"517\":1},\"1\":{\"517\":3,\"522\":1}}],[\"uuids\",{\"1\":{\"496\":2}}],[\"u4eab3\",{\"1\":{\"438\":1}}],[\"ubuntu18\",{\"0\":{\"678\":1,\"823\":1},\"1\":{\"714\":3}}],[\"ubuntu\",{\"1\":{\"370\":3,\"372\":3,\"679\":1,\"680\":2}}],[\"ublic\",{\"1\":{\"253\":1}}],[\"up\",{\"1\":{\"812\":1}}],[\"upzlyx\",{\"1\":{\"518\":1}}],[\"upper\",{\"1\":{\"401\":1}}],[\"uphiel\",{\"1\":{\"305\":1}}],[\"updatedefinition\",{\"1\":{\"671\":7}}],[\"updatedefinitions\",{\"1\":{\"671\":2}}],[\"updated\",{\"1\":{\"291\":1,\"558\":1,\"671\":2}}],[\"update\",{\"0\":{\"408\":1},\"1\":{\"291\":4,\"373\":1,\"408\":3,\"411\":1,\"414\":2,\"417\":3,\"496\":2,\"537\":1,\"680\":2,\"698\":2,\"707\":3,\"824\":1}}],[\"urandom\",{\"1\":{\"746\":1}}],[\"uris\",{\"1\":{\"330\":1}}],[\"uri+请求体进行检索\",{\"0\":{\"300\":1}}],[\"uri+请求体\",{\"1\":{\"298\":1}}],[\"uri+检索参数\",{\"1\":{\"298\":1}}],[\"uri\",{\"0\":{\"656\":1},\"1\":{\"298\":1,\"654\":2,\"656\":2,\"657\":2,\"658\":2,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"665\":2,\"670\":2}}],[\"urls\",{\"1\":{\"752\":6}}],[\"urls=\",{\"1\":{\"752\":4,\"755\":4}}],[\"url一般用于调试\",{\"1\":{\"649\":1}}],[\"url\",{\"1\":{\"20\":1,\"382\":2,\"495\":1,\"552\":1,\"649\":1,\"656\":2,\"657\":2,\"660\":2,\"661\":1,\"662\":1,\"663\":1}}],[\"usa\",{\"1\":{\"699\":1}}],[\"usages\",{\"1\":{\"729\":1}}],[\"usage\",{\"1\":{\"286\":1,\"412\":2}}],[\"ustc\",{\"1\":{\"686\":1}}],[\"usr\",{\"1\":{\"680\":2,\"682\":1,\"683\":2,\"699\":1,\"726\":2,\"759\":1,\"785\":2,\"809\":2,\"811\":1,\"824\":2,\"825\":13,\"827\":4,\"828\":1}}],[\"using\",{\"1\":{\"495\":2}}],[\"useful\",{\"1\":{\"699\":1}}],[\"useserverconfiguration\",{\"1\":{\"333\":1}}],[\"used\",{\"1\":{\"138\":1,\"463\":2,\"496\":2}}],[\"useradd\",{\"1\":{\"825\":1}}],[\"userinfo\",{\"1\":{\"604\":5,\"607\":3}}],[\"userid\",{\"1\":{\"582\":2,\"584\":3}}],[\"userdetailsservice\",{\"1\":{\"561\":1,\"562\":2}}],[\"userdetails\",{\"1\":{\"561\":1,\"562\":1}}],[\"usertask\",{\"1\":{\"506\":1,\"551\":1,\"569\":4,\"576\":1}}],[\"user命令会删除用户以及对应的权限\",{\"1\":{\"419\":1}}],[\"user=nginx\",{\"1\":{\"825\":1}}],[\"user=root\",{\"1\":{\"809\":1}}],[\"user=kube\",{\"1\":{\"792\":1}}],[\"user=kubelet\",{\"1\":{\"768\":1,\"785\":1}}],[\"user=admin\",{\"1\":{\"761\":1}}],[\"user=\",{\"1\":{\"408\":1,\"698\":1}}],[\"user表和mysql\",{\"1\":{\"419\":1}}],[\"user表\",{\"0\":{\"408\":1}}],[\"usernamenotfoundexception\",{\"0\":{\"560\":1},\"1\":{\"561\":1,\"562\":1}}],[\"username\",{\"1\":{\"406\":2,\"495\":1,\"562\":2}}],[\"userservice\",{\"1\":{\"603\":1,\"604\":1}}],[\"users\",{\"1\":{\"387\":1,\"526\":1}}],[\"user\",{\"0\":{\"409\":1,\"697\":1},\"1\":{\"122\":7,\"123\":8,\"127\":1,\"128\":1,\"129\":6,\"134\":5,\"161\":2,\"254\":12,\"406\":2,\"408\":5,\"409\":1,\"411\":2,\"419\":1,\"420\":1,\"424\":1,\"540\":1,\"541\":1,\"550\":1,\"552\":1,\"553\":1,\"555\":1,\"556\":1,\"562\":1,\"603\":2,\"683\":1,\"697\":3,\"698\":4,\"730\":1,\"742\":1,\"753\":1,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1,\"809\":1,\"814\":1}}],[\"use\",{\"1\":{\"10\":1,\"496\":2,\"761\":1,\"785\":1,\"792\":1}}],[\"utf8\",{\"1\":{\"699\":1}}],[\"utf8mb4\",{\"1\":{\"699\":8}}],[\"utf\",{\"1\":{\"238\":1,\"324\":1,\"364\":1,\"495\":1}}],[\"util\",{\"1\":{\"113\":1,\"115\":1,\"188\":1,\"233\":1}}],[\"under\",{\"1\":{\"699\":2}}],[\"uname\",{\"1\":{\"680\":2}}],[\"unavailable\",{\"0\":{\"676\":1}}],[\"unified\",{\"1\":{\"517\":1}}],[\"unit\",{\"1\":{\"375\":1,\"683\":1,\"753\":1,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1,\"809\":1}}],[\"unix\",{\"1\":{\"236\":1,\"364\":1,\"619\":2}}],[\"unlock\",{\"1\":{\"233\":1}}],[\"u\",{\"1\":{\"233\":1,\"696\":1,\"705\":1,\"706\":1,\"754\":1,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1,\"810\":1}}],[\"u007f\",{\"1\":{\"41\":1}}],[\"u0000\",{\"1\":{\"41\":1}}],[\"pv\",{\"1\":{\"825\":1}}],[\"pkg\",{\"1\":{\"726\":2}}],[\"pkgpath\",{\"1\":{\"590\":1}}],[\"pprice\",{\"1\":{\"641\":2}}],[\"pname\",{\"1\":{\"641\":2}}],[\"pngoutput\",{\"1\":{\"511\":2}}],[\"pnginput\",{\"1\":{\"511\":2}}],[\"png\",{\"1\":{\"15\":1,\"16\":2,\"502\":1,\"511\":1}}],[\"pids\",{\"1\":{\"825\":1}}],[\"pid=1\",{\"1\":{\"641\":2}}],[\"pid\",{\"1\":{\"639\":5,\"640\":2,\"641\":2,\"825\":2}}],[\"pipes\",{\"1\":{\"424\":1}}],[\"pipedinputstream\",{\"1\":{\"256\":1}}],[\"pgp\",{\"1\":{\"371\":2}}],[\"pcie固态硬盘\",{\"1\":{\"351\":1,\"352\":1}}],[\"plugin=cni\",{\"1\":{\"783\":1,\"796\":1}}],[\"plugins\",{\"1\":{\"764\":1,\"797\":2,\"809\":2}}],[\"plugins=namespacelifecycle\",{\"1\":{\"764\":1}}],[\"plugin\",{\"1\":{\"317\":4,\"697\":2,\"783\":1}}],[\"phrase\",{\"0\":{\"306\":1},\"1\":{\"306\":1}}],[\"pyrami\",{\"1\":{\"295\":2,\"299\":2,\"305\":2}}],[\"p\",{\"1\":{\"281\":2,\"283\":1,\"436\":2,\"445\":1,\"457\":3,\"465\":1,\"657\":5,\"689\":3,\"692\":2,\"696\":1,\"715\":1,\"727\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1,\"751\":1,\"759\":1,\"781\":1,\"797\":1,\"799\":1}}],[\"ptr\",{\"1\":{\"586\":1,\"592\":1,\"598\":1,\"599\":1}}],[\"ptrsize\",{\"1\":{\"10\":8}}],[\"pt2\",{\"1\":{\"226\":3}}],[\"pt1\",{\"1\":{\"226\":3}}],[\"pending\",{\"1\":{\"788\":2}}],[\"peers\",{\"1\":{\"812\":1}}],[\"peer\",{\"1\":{\"752\":6,\"753\":3,\"755\":2,\"812\":3}}],[\"peeklast\",{\"1\":{\"180\":1}}],[\"peekfirst\",{\"1\":{\"180\":1}}],[\"peek\",{\"1\":{\"180\":2}}],[\"pem和kube\",{\"1\":{\"743\":1}}],[\"pem和admin\",{\"1\":{\"740\":1}}],[\"pem和server\",{\"1\":{\"737\":1}}],[\"pem和etcd\",{\"1\":{\"734\":1}}],[\"pem和ca\",{\"1\":{\"731\":1}}],[\"pem\",{\"0\":{\"734\":1,\"737\":1,\"740\":1,\"743\":1},\"1\":{\"726\":25,\"729\":1,\"731\":3,\"734\":5,\"737\":5,\"740\":5,\"743\":5,\"744\":3,\"753\":6,\"756\":3,\"761\":3,\"764\":9,\"771\":4,\"784\":1,\"785\":1,\"792\":3,\"806\":3,\"809\":3,\"813\":3}}],[\"pearltea\",{\"1\":{\"477\":2}}],[\"percentage\",{\"1\":{\"455\":1}}],[\"persitence下的rdb\",{\"1\":{\"449\":1}}],[\"persistenceconstructor\",{\"1\":{\"399\":1}}],[\"person\",{\"1\":{\"121\":3}}],[\"permissionsstartonly=true\",{\"1\":{\"809\":1}}],[\"permission\",{\"1\":{\"699\":1}}],[\"perm\",{\"1\":{\"155\":5,\"156\":1}}],[\"permsize\",{\"1\":{\"43\":1}}],[\"pause\",{\"1\":{\"783\":1}}],[\"path=\",{\"1\":{\"656\":1,\"658\":1,\"665\":2,\"764\":1,\"825\":10}}],[\"path\",{\"1\":{\"649\":1,\"657\":2}}],[\"pathvariable等\",{\"1\":{\"603\":1}}],[\"patter\",{\"1\":{\"316\":1}}],[\"patternlayout\",{\"1\":{\"495\":4}}],[\"pattern\",{\"1\":{\"256\":1,\"386\":5,\"466\":1}}],[\"panic\",{\"1\":{\"598\":1,\"599\":1}}],[\"package\",{\"1\":{\"589\":1,\"591\":1,\"596\":1,\"597\":1}}],[\"pageimpl<>\",{\"1\":{\"353\":1}}],[\"page<product>\",{\"1\":{\"353\":1}}],[\"page\",{\"1\":{\"353\":2}}],[\"pagerequest\",{\"1\":{\"348\":1,\"350\":1,\"353\":3,\"389\":1}}],[\"pageablerequest\",{\"1\":{\"389\":2}}],[\"pageable\",{\"1\":{\"348\":3,\"353\":3,\"389\":1}}],[\"passages\",{\"1\":{\"765\":1}}],[\"password=123456\",{\"1\":{\"692\":1}}],[\"password=password\",{\"1\":{\"408\":1,\"698\":1}}],[\"password\",{\"0\":{\"410\":1},\"1\":{\"254\":1,\"406\":2,\"410\":2,\"411\":1,\"495\":1,\"697\":4}}],[\"pascal\",{\"1\":{\"327\":1}}],[\"paid\",{\"1\":{\"160\":1}}],[\"particular\",{\"1\":{\"699\":2}}],[\"participant\",{\"1\":{\"541\":1,\"555\":1}}],[\"parts\",{\"1\":{\"665\":10}}],[\"parent>\",{\"1\":{\"655\":1}}],[\"parent<\",{\"1\":{\"655\":1}}],[\"parent\",{\"1\":{\"540\":1,\"542\":1,\"557\":1,\"655\":2}}],[\"parameter\",{\"1\":{\"605\":1}}],[\"parametertypes\",{\"1\":{\"127\":2,\"128\":2}}],[\"paramlist\",{\"1\":{\"596\":2}}],[\"param\",{\"1\":{\"135\":5,\"572\":2,\"670\":2,\"671\":12}}],[\"parseexception\",{\"1\":{\"115\":1}}],[\"parse\",{\"1\":{\"115\":3}}],[\"parsedavg\",{\"1\":{\"356\":2}}],[\"parsed\",{\"1\":{\"41\":1}}],[\"parseint\",{\"1\":{\"41\":1}}],[\"pod的ip地址将从该池中进行分配\",{\"1\":{\"806\":1}}],[\"pods\",{\"1\":{\"800\":1,\"806\":1,\"807\":2,\"814\":1,\"818\":1,\"822\":1}}],[\"pod\",{\"1\":{\"723\":3,\"783\":2,\"796\":2,\"806\":1,\"817\":1,\"820\":1}}],[\"policy之后\",{\"1\":{\"806\":1}}],[\"policy\",{\"0\":{\"464\":1},\"1\":{\"463\":1,\"804\":3,\"806\":1}}],[\"polllast\",{\"1\":{\"180\":1}}],[\"pollfirst\",{\"1\":{\"180\":1}}],[\"poll\",{\"1\":{\"180\":1}}],[\"point\",{\"0\":{\"402\":1},\"1\":{\"401\":2,\"402\":12,\"403\":2}}],[\"pom\",{\"0\":{\"329\":1,\"379\":1},\"1\":{\"329\":1,\"379\":1,\"636\":2}}],[\"ports\",{\"1\":{\"818\":1}}],[\"port=6443\",{\"1\":{\"764\":1}}],[\"port\",{\"1\":{\"282\":1,\"380\":1,\"638\":1,\"639\":1,\"656\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"764\":3,\"784\":1,\"818\":1}}],[\"pospxs\",{\"1\":{\"503\":1,\"517\":1}}],[\"position\",{\"1\":{\"320\":3,\"321\":5,\"326\":1}}],[\"postman\",{\"1\":{\"641\":1}}],[\"posttags\",{\"1\":{\"348\":1}}],[\"post\",{\"0\":{\"346\":1},\"1\":{\"287\":1,\"289\":4,\"291\":4,\"293\":1,\"341\":2,\"465\":1,\"654\":1,\"663\":1,\"664\":2}}],[\"pos++\",{\"1\":{\"257\":1}}],[\"pos\",{\"1\":{\"257\":2}}],[\"pop\",{\"1\":{\"180\":1,\"181\":1,\"442\":1,\"709\":1,\"710\":1}}],[\"pool可以使用两种模式\",{\"1\":{\"806\":1}}],[\"pool\",{\"0\":{\"140\":1,\"813\":1},\"1\":{\"140\":2,\"495\":1}}],[\"powers\",{\"1\":{\"10\":1}}],[\"purpose\",{\"1\":{\"699\":1}}],[\"purge\",{\"1\":{\"376\":1}}],[\"puddingdecorator\",{\"1\":{\"477\":3}}],[\"pudding\",{\"1\":{\"477\":1}}],[\"published\",{\"1\":{\"699\":1}}],[\"publishevent\",{\"1\":{\"671\":1}}],[\"publisher\",{\"1\":{\"671\":4}}],[\"publishroutechangedevent\",{\"1\":{\"671\":2}}],[\"publish\",{\"1\":{\"431\":1}}],[\"public以及一个缺省的修饰符\",{\"1\":{\"91\":1}}],[\"public\",{\"1\":{\"41\":1,\"51\":8,\"53\":1,\"54\":4,\"56\":1,\"58\":5,\"60\":5,\"62\":3,\"72\":3,\"73\":3,\"74\":1,\"75\":3,\"78\":2,\"80\":1,\"81\":2,\"82\":2,\"83\":3,\"84\":5,\"89\":9,\"91\":2,\"94\":2,\"95\":2,\"98\":2,\"103\":8,\"104\":8,\"115\":2,\"123\":5,\"133\":1,\"134\":5,\"135\":4,\"149\":1,\"155\":2,\"161\":2,\"185\":1,\"189\":3,\"190\":2,\"206\":4,\"218\":4,\"219\":4,\"221\":1,\"222\":2,\"223\":1,\"224\":1,\"225\":1,\"226\":2,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":3,\"244\":1,\"248\":1,\"252\":1,\"254\":3,\"256\":3,\"257\":13,\"262\":2,\"311\":1,\"332\":1,\"333\":1,\"334\":1,\"335\":1,\"336\":1,\"351\":2,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"382\":1,\"383\":1,\"391\":1,\"399\":5,\"477\":15,\"484\":16,\"495\":1,\"497\":2,\"502\":2,\"503\":2,\"504\":1,\"505\":1,\"506\":1,\"509\":1,\"510\":1,\"511\":1,\"513\":1,\"514\":2,\"518\":2,\"523\":1,\"527\":1,\"528\":1,\"562\":2,\"565\":1,\"566\":1,\"567\":1,\"568\":1,\"569\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"578\":1,\"579\":1,\"580\":1,\"581\":1,\"582\":1,\"583\":1,\"584\":1,\"604\":3,\"605\":1,\"606\":3,\"607\":1,\"633\":2,\"637\":2,\"639\":3,\"640\":2,\"647\":2,\"648\":2,\"657\":2,\"665\":11,\"666\":2,\"669\":1,\"670\":4,\"671\":3,\"699\":3}}],[\"pull\",{\"1\":{\"281\":1,\"283\":1,\"691\":2}}],[\"push\",{\"1\":{\"180\":1,\"442\":1,\"705\":1,\"706\":1}}],[\"putall\",{\"1\":{\"193\":1}}],[\"put\",{\"1\":{\"135\":2,\"193\":1,\"287\":1,\"289\":7,\"291\":3,\"292\":1,\"503\":1,\"513\":1,\"523\":1,\"663\":1,\"665\":1}}],[\"pd\",{\"1\":{\"134\":5,\"135\":6}}],[\"pdai\",{\"1\":{\"17\":4,\"266\":1,\"278\":1,\"286\":1,\"436\":1,\"445\":1,\"457\":1}}],[\"psxdir\",{\"1\":{\"691\":1}}],[\"ps\",{\"1\":{\"25\":1,\"542\":1,\"689\":4,\"693\":1}}],[\"prune\",{\"1\":{\"689\":1}}],[\"prt\",{\"1\":{\"598\":1,\"599\":1}}],[\"provider的时候才需要\",{\"1\":{\"770\":1}}],[\"proposal\",{\"1\":{\"756\":1}}],[\"properties>\",{\"1\":{\"324\":1,\"495\":1,\"636\":1,\"655\":1}}],[\"properties\",{\"1\":{\"324\":2,\"335\":1,\"341\":1,\"351\":1,\"495\":1,\"631\":2,\"680\":1}}],[\"propertynamingstrategies\",{\"1\":{\"382\":1}}],[\"propertydescriptors\",{\"1\":{\"134\":2,\"135\":4}}],[\"propertydescriptor\",{\"1\":{\"133\":4,\"134\":2,\"135\":4}}],[\"property\",{\"0\":{\"539\":1},\"1\":{\"41\":2,\"533\":1,\"647\":1}}],[\"proxier\",{\"1\":{\"742\":1}}],[\"proxy配置文件\",{\"0\":{\"790\":1}}],[\"proxy还是由我们统一颁发一个证书\",{\"1\":{\"745\":1}}],[\"proxy要与kube\",{\"1\":{\"745\":1}}],[\"proxy的相关\",{\"1\":{\"742\":1}}],[\"proxy证书放在这\",{\"1\":{\"742\":1}}],[\"proxy\",{\"0\":{\"741\":1,\"742\":1,\"789\":1,\"792\":1,\"793\":1},\"1\":{\"656\":2,\"657\":2,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"714\":2,\"726\":5,\"742\":7,\"743\":8,\"744\":1,\"780\":1,\"781\":2,\"790\":3,\"791\":2,\"792\":11,\"793\":5,\"794\":4,\"814\":1,\"825\":3}}],[\"progress\",{\"1\":{\"726\":1}}],[\"program\",{\"1\":{\"699\":5}}],[\"profile=kubernetes\",{\"1\":{\"734\":1,\"737\":1,\"740\":1,\"743\":1}}],[\"profile\",{\"1\":{\"631\":1,\"729\":1}}],[\"profiles\",{\"1\":{\"631\":3,\"729\":2}}],[\"proc\",{\"1\":{\"536\":1,\"540\":3,\"541\":2,\"542\":2,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":2,\"549\":1,\"550\":2,\"551\":3,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":2,\"557\":2,\"558\":1}}],[\"procinst\",{\"0\":{\"556\":1},\"1\":{\"503\":1,\"533\":1}}],[\"procdef\",{\"0\":{\"535\":1,\"536\":1},\"1\":{\"502\":1,\"533\":2}}],[\"processconfiginfo\",{\"1\":{\"670\":3}}],[\"processdiagramgenerator\",{\"1\":{\"568\":1}}],[\"processdefinitions\",{\"1\":{\"565\":3}}],[\"processdefinitionid\",{\"1\":{\"514\":3,\"568\":2}}],[\"processdefinition\",{\"1\":{\"509\":1,\"511\":1,\"514\":4,\"565\":5,\"566\":1,\"567\":1,\"569\":3}}],[\"processdefinitionlist\",{\"1\":{\"509\":2}}],[\"processdefinitionkey\",{\"1\":{\"504\":1,\"505\":1,\"509\":1,\"511\":1,\"513\":1,\"514\":1,\"527\":1,\"565\":1,\"580\":1,\"584\":1}}],[\"processed\",{\"1\":{\"550\":1}}],[\"processengines\",{\"1\":{\"495\":1,\"502\":2,\"503\":2,\"504\":1,\"505\":1,\"506\":1,\"509\":1,\"510\":1,\"511\":1,\"513\":1,\"514\":2,\"523\":1,\"527\":1,\"528\":1}}],[\"processengine\",{\"1\":{\"495\":1,\"502\":2,\"503\":2,\"504\":1,\"505\":3,\"506\":4,\"509\":3,\"510\":3,\"511\":3,\"513\":3,\"514\":6,\"523\":3,\"527\":3,\"528\":3}}],[\"processengine对象\",{\"1\":{\"495\":1}}],[\"processengineconfiguration\",{\"1\":{\"495\":1}}],[\"processinstanceid\",{\"1\":{\"506\":3,\"513\":1,\"514\":5,\"571\":3,\"573\":2,\"574\":3,\"576\":1,\"578\":1}}],[\"processinstance\",{\"1\":{\"503\":10,\"513\":2,\"514\":3,\"521\":1,\"523\":1,\"571\":1}}],[\"process\",{\"1\":{\"496\":2,\"543\":1,\"545\":1,\"546\":1,\"547\":1,\"549\":1,\"556\":1,\"670\":1,\"812\":1}}],[\"productcontroller\",{\"1\":{\"639\":1}}],[\"productpage\",{\"1\":{\"353\":6}}],[\"productservice\",{\"1\":{\"639\":2}}],[\"productserver\",{\"1\":{\"639\":2,\"640\":3}}],[\"products\",{\"1\":{\"353\":3,\"354\":2,\"355\":2,\"356\":2}}],[\"productrepository\",{\"1\":{\"351\":1}}],[\"product\",{\"1\":{\"351\":2,\"352\":1,\"353\":4,\"354\":2,\"355\":1,\"356\":1,\"636\":1,\"639\":10,\"640\":1,\"648\":1,\"665\":7}}],[\"pro2019年新品上市送三重好礼\",{\"1\":{\"351\":1}}],[\"pro\",{\"1\":{\"351\":5,\"352\":1,\"353\":1,\"831\":3}}],[\"protected\",{\"1\":{\"51\":2,\"62\":4,\"91\":7,\"94\":1,\"257\":2,\"477\":1,\"484\":1}}],[\"projectcalico\",{\"1\":{\"805\":1,\"811\":1,\"813\":3}}],[\"projects\",{\"1\":{\"327\":1}}],[\"project\",{\"1\":{\"23\":1,\"636\":2,\"653\":1,\"705\":1}}],[\"principle\",{\"1\":{\"468\":7}}],[\"prints\",{\"1\":{\"601\":3}}],[\"printstacktrace\",{\"1\":{\"62\":1,\"134\":1,\"135\":8,\"221\":1,\"222\":1,\"225\":1,\"244\":1,\"248\":1,\"252\":1,\"253\":1,\"670\":1,\"671\":3}}],[\"printf\",{\"1\":{\"591\":1}}],[\"printwriter\",{\"1\":{\"478\":1}}],[\"print\",{\"1\":{\"75\":1,\"78\":2,\"81\":1,\"82\":1,\"83\":2,\"233\":1,\"729\":1,\"730\":1,\"788\":1}}],[\"println\",{\"1\":{\"9\":2,\"41\":3,\"48\":2,\"54\":1,\"60\":1,\"73\":3,\"74\":1,\"75\":1,\"78\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":2,\"95\":2,\"103\":3,\"104\":3,\"108\":3,\"115\":2,\"122\":2,\"123\":3,\"127\":2,\"128\":2,\"129\":1,\"134\":4,\"140\":2,\"155\":4,\"172\":1,\"190\":1,\"206\":1,\"218\":2,\"219\":2,\"222\":7,\"225\":1,\"226\":3,\"254\":1,\"352\":1,\"353\":5,\"354\":1,\"355\":2,\"356\":2,\"477\":1,\"495\":1,\"502\":4,\"503\":6,\"504\":4,\"506\":5,\"509\":6,\"513\":8,\"514\":6,\"523\":2,\"527\":4,\"589\":2,\"591\":1,\"592\":1,\"594\":1,\"595\":1,\"596\":1,\"597\":1,\"598\":1,\"601\":3,\"607\":1,\"665\":1}}],[\"privileged\",{\"1\":{\"692\":1,\"764\":1,\"809\":1}}],[\"privileged=true\",{\"1\":{\"692\":2,\"764\":1,\"804\":1,\"806\":1}}],[\"privileges\",{\"1\":{\"409\":1,\"410\":1,\"411\":1,\"417\":1,\"420\":1,\"698\":1}}],[\"priv\",{\"1\":{\"417\":17}}],[\"privateconstructor\",{\"1\":{\"127\":1}}],[\"private\",{\"1\":{\"41\":2,\"72\":1,\"73\":1,\"75\":1,\"81\":1,\"82\":1,\"83\":1,\"89\":4,\"91\":3,\"123\":4,\"135\":1,\"138\":1,\"150\":1,\"151\":2,\"161\":3,\"185\":1,\"206\":1,\"222\":1,\"233\":1,\"254\":4,\"262\":1,\"332\":4,\"336\":1,\"337\":1,\"348\":1,\"351\":5,\"382\":9,\"399\":3,\"633\":2,\"639\":1,\"640\":1,\"665\":1,\"669\":3,\"670\":5,\"671\":11,\"764\":1,\"771\":1}}],[\"price就是一个流程变量名称\",{\"1\":{\"522\":1}}],[\"price<10000\",{\"1\":{\"522\":1}}],[\"priceavg\",{\"1\":{\"356\":2}}],[\"price=6199\",{\"1\":{\"353\":1}}],[\"price=6899\",{\"1\":{\"352\":1}}],[\"price=7999\",{\"1\":{\"353\":1}}],[\"price=2799\",{\"1\":{\"352\":1}}],[\"price\",{\"1\":{\"351\":14,\"353\":1,\"354\":1,\"356\":1,\"382\":1,\"387\":1,\"388\":1,\"389\":1}}],[\"primary\",{\"1\":{\"289\":1,\"290\":2,\"291\":1,\"362\":2}}],[\"prioritythread\",{\"1\":{\"226\":4}}],[\"priorityexample\",{\"1\":{\"226\":1}}],[\"priority\",{\"1\":{\"226\":5,\"495\":1,\"542\":1,\"557\":1}}],[\"predicatedefinition\",{\"1\":{\"670\":1}}],[\"predicatedefinitions\",{\"1\":{\"670\":2}}],[\"predicatestrlist\",{\"1\":{\"670\":2}}],[\"predicatespec\",{\"1\":{\"657\":1}}],[\"predicates\",{\"1\":{\"654\":1,\"656\":2,\"658\":1,\"659\":3,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"665\":2,\"670\":1}}],[\"predicate\",{\"1\":{\"654\":1,\"656\":1,\"657\":3,\"659\":1,\"660\":1,\"661\":1,\"662\":2}}],[\"pretags\",{\"1\":{\"348\":1}}],[\"pretty\",{\"1\":{\"296\":1}}],[\"pre\",{\"0\":{\"345\":1},\"1\":{\"341\":2,\"654\":1,\"664\":2}}],[\"preface\",{\"1\":{\"327\":1}}],[\"prefix=\",{\"1\":{\"825\":1}}],[\"prefix来配置\",{\"1\":{\"631\":1}}],[\"prefix\",{\"1\":{\"161\":5,\"631\":2}}],[\"prehandle\",{\"1\":{\"262\":1}}],[\"press\",{\"1\":{\"16\":2}}],[\"prevent\",{\"1\":{\"10\":1}}],[\"e9a8\",{\"1\":{\"813\":1}}],[\"eof\",{\"1\":{\"683\":2,\"684\":2,\"715\":3,\"752\":2,\"783\":2,\"784\":2,\"786\":2,\"790\":2,\"791\":2,\"793\":2,\"814\":2}}],[\"edu\",{\"1\":{\"686\":1}}],[\"ed\",{\"1\":{\"670\":1}}],[\"editor\",{\"1\":{\"537\":2}}],[\"eureka\",{\"1\":{\"613\":1,\"644\":1}}],[\"evictionhard\",{\"1\":{\"784\":1}}],[\"evt\",{\"0\":{\"550\":1},\"1\":{\"533\":1,\"540\":1}}],[\"even\",{\"1\":{\"699\":1}}],[\"event\",{\"0\":{\"548\":1},\"1\":{\"518\":1,\"533\":1,\"540\":1,\"548\":2}}],[\"eventsetdescriptor\",{\"1\":{\"133\":2}}],[\"evection\",{\"1\":{\"502\":1}}],[\"everysec\",{\"1\":{\"454\":1,\"455\":1}}],[\"ei0vjg\",{\"1\":{\"523\":1}}],[\"ee6\",{\"1\":{\"517\":1}}],[\"effect\",{\"1\":{\"806\":1}}],[\"effective\",{\"1\":{\"66\":1}}],[\"efa8of\",{\"1\":{\"449\":1}}],[\"error\",{\"0\":{\"560\":1},\"1\":{\"422\":1,\"423\":2,\"424\":1,\"451\":1,\"495\":1,\"670\":1,\"779\":1,\"787\":1,\"794\":1,\"825\":2}}],[\"echo\",{\"1\":{\"372\":1,\"746\":1}}],[\"epoch\",{\"1\":{\"334\":1}}],[\"equalfold\",{\"1\":{\"598\":1}}],[\"equals\",{\"0\":{\"55\":1,\"57\":1,\"187\":1},\"1\":{\"51\":1,\"55\":1,\"56\":2,\"57\":4,\"58\":3,\"59\":3,\"60\":3,\"186\":1,\"187\":1,\"518\":2,\"671\":1}}],[\"eq\",{\"1\":{\"299\":1}}],[\"embed\",{\"1\":{\"761\":2,\"785\":1,\"792\":2}}],[\"em>小吃\",{\"1\":{\"341\":1}}],[\"emptylist\",{\"1\":{\"562\":1}}],[\"empty\",{\"1\":{\"302\":1}}],[\"employer\",{\"1\":{\"295\":1,\"299\":1}}],[\"email\",{\"1\":{\"295\":1,\"299\":1,\"303\":2,\"305\":4,\"308\":2}}],[\"essential\",{\"1\":{\"825\":1}}],[\"es有两个模板\",{\"1\":{\"337\":1}}],[\"es01\",{\"1\":{\"281\":1}}],[\"es进行数据分析处理\",{\"1\":{\"271\":1}}],[\"es\",{\"1\":{\"265\":1,\"266\":1,\"270\":1,\"278\":1,\"286\":1,\"288\":1,\"289\":1,\"298\":1,\"303\":1,\"327\":1,\"332\":1,\"338\":1,\"341\":1,\"348\":1}}],[\"established|grep\",{\"1\":{\"812\":1}}],[\"established\",{\"1\":{\"812\":2}}],[\"establish\",{\"1\":{\"160\":1}}],[\"e>\",{\"1\":{\"176\":2}}],[\"elastic\",{\"1\":{\"268\":1,\"281\":3,\"283\":4}}],[\"elasticsearch中的分页是从第0页开始\",{\"1\":{\"353\":1}}],[\"elasticsearchtemplate\",{\"1\":{\"337\":2}}],[\"elasticsearchtest\",{\"1\":{\"336\":1}}],[\"elasticsearchrepository<product\",{\"1\":{\"351\":1}}],[\"elasticsearchrepository<strategyes\",{\"1\":{\"335\":1}}],[\"elasticsearchresttemplate\",{\"0\":{\"337\":1},\"1\":{\"337\":2,\"338\":1,\"348\":1,\"349\":1}}],[\"elasticsearch<\",{\"1\":{\"329\":1}}],[\"elasticsearch是一个基于lucene的搜索服务器\",{\"1\":{\"322\":1}}],[\"elasticsearch是最受欢迎的企业级搜索引擎\",{\"1\":{\"269\":1}}],[\"elasticsearch运行查询所花费的时间\",{\"1\":{\"299\":1}}],[\"elasticsearch\",{\"0\":{\"264\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"272\":1,\"279\":1,\"281\":1,\"282\":1,\"285\":1,\"287\":1,\"315\":1,\"316\":1,\"339\":1,\"349\":1},\"1\":{\"264\":2,\"265\":13,\"266\":2,\"267\":1,\"268\":2,\"272\":2,\"273\":1,\"274\":1,\"276\":1,\"278\":1,\"279\":3,\"281\":4,\"283\":1,\"285\":1,\"286\":1,\"287\":2,\"294\":1,\"301\":1,\"310\":1,\"312\":1,\"315\":1,\"317\":10,\"327\":4,\"328\":2,\"329\":1,\"330\":1,\"338\":4,\"339\":1,\"341\":1,\"348\":4,\"349\":2,\"350\":2}}],[\"elect\",{\"1\":{\"771\":1,\"776\":2}}],[\"elect=true\",{\"1\":{\"771\":1}}],[\"elem\",{\"1\":{\"595\":2,\"598\":2,\"599\":3}}],[\"elementtype\",{\"1\":{\"605\":1}}],[\"elementdata\",{\"1\":{\"177\":1}}],[\"element\",{\"1\":{\"176\":1,\"180\":1}}],[\"ele\",{\"1\":{\"176\":1}}],[\"else\",{\"1\":{\"10\":2,\"514\":2,\"518\":1,\"598\":1}}],[\"each中删除集合中的元素\",{\"1\":{\"172\":1}}],[\"each\",{\"1\":{\"172\":1}}],[\"eat\",{\"1\":{\"84\":3}}],[\"example\",{\"1\":{\"806\":1}}],[\"existing表示加入已有集群\",{\"1\":{\"752\":1}}],[\"exists\",{\"1\":{\"236\":1,\"338\":1}}],[\"exchange\",{\"1\":{\"657\":1,\"665\":5,\"666\":2}}],[\"exclusive\",{\"1\":{\"543\":1,\"545\":1,\"546\":1,\"549\":1}}],[\"exclusivegateway\",{\"1\":{\"530\":1}}],[\"exclusions>\",{\"1\":{\"496\":1}}],[\"exclusion>\",{\"1\":{\"496\":1}}],[\"exclude\",{\"1\":{\"497\":1}}],[\"exception\",{\"1\":{\"249\":1,\"254\":2,\"511\":1,\"543\":2,\"545\":2,\"546\":2,\"549\":2,\"604\":1,\"671\":3}}],[\"expiry\",{\"1\":{\"729\":2,\"730\":1}}],[\"expire\",{\"1\":{\"434\":1}}],[\"experimental\",{\"1\":{\"723\":1,\"771\":1}}],[\"exp\",{\"1\":{\"543\":1,\"546\":1}}],[\"expression\",{\"1\":{\"364\":1,\"517\":1}}],[\"extra\",{\"1\":{\"537\":1}}],[\"extension\",{\"1\":{\"631\":4}}],[\"extends\",{\"1\":{\"92\":1,\"95\":1,\"103\":2,\"104\":1,\"176\":2,\"218\":1,\"257\":2,\"335\":1,\"351\":1,\"383\":1,\"391\":1,\"477\":2,\"484\":3,\"665\":1}}],[\"external\",{\"1\":{\"333\":1}}],[\"ext\",{\"1\":{\"324\":5}}],[\"exetension\",{\"1\":{\"631\":1}}],[\"execstop=\",{\"1\":{\"809\":1}}],[\"execstart=\",{\"1\":{\"683\":1,\"753\":1,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1,\"809\":1}}],[\"execreload=\",{\"1\":{\"683\":1}}],[\"exec\",{\"1\":{\"284\":1,\"431\":1,\"540\":1,\"689\":1,\"695\":1}}],[\"executor\",{\"1\":{\"670\":1}}],[\"executors\",{\"1\":{\"233\":1}}],[\"executorservice\",{\"1\":{\"233\":4}}],[\"execute\",{\"1\":{\"233\":2,\"417\":2,\"484\":2}}],[\"execution\",{\"0\":{\"540\":1},\"1\":{\"23\":1,\"503\":1,\"513\":1,\"521\":1,\"533\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"549\":1,\"550\":1,\"551\":1,\"554\":1,\"557\":1,\"558\":1}}],[\"exe\",{\"1\":{\"27\":2,\"33\":1}}],[\"e\",{\"1\":{\"62\":2,\"134\":2,\"135\":16,\"173\":1,\"176\":4,\"180\":7,\"184\":3,\"204\":1,\"221\":2,\"222\":4,\"225\":2,\"244\":3,\"248\":3,\"249\":1,\"252\":3,\"253\":3,\"281\":1,\"283\":1,\"369\":1,\"569\":4,\"657\":2,\"670\":2,\"671\":6,\"692\":2,\"805\":1,\"809\":15}}],[\"env\",{\"1\":{\"806\":1}}],[\"enviction\",{\"1\":{\"464\":1}}],[\"environmentfile=\",{\"1\":{\"753\":1,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1}}],[\"environment\",{\"1\":{\"37\":1,\"647\":3}}],[\"encoding\",{\"1\":{\"806\":1}}],[\"encoding=\",{\"1\":{\"324\":1,\"495\":1}}],[\"encipherment\",{\"1\":{\"729\":1}}],[\"enp0s5\",{\"1\":{\"715\":1}}],[\"ent\",{\"1\":{\"540\":1}}],[\"enterprise=fatal\",{\"1\":{\"495\":1}}],[\"enterprise\",{\"1\":{\"495\":1}}],[\"entries\",{\"1\":{\"382\":1}}],[\"entrys\",{\"1\":{\"385\":1,\"386\":1,\"388\":1,\"389\":1,\"393\":1,\"394\":1}}],[\"entryset\",{\"1\":{\"193\":1}}],[\"entryrepository\",{\"1\":{\"383\":1,\"391\":1,\"393\":1,\"394\":1}}],[\"entry\",{\"1\":{\"382\":1,\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1}}],[\"entry>\",{\"1\":{\"324\":4}}],[\"engine<\",{\"1\":{\"495\":1}}],[\"engine\",{\"1\":{\"422\":1,\"423\":2,\"424\":1,\"495\":3,\"502\":2,\"503\":4,\"504\":2,\"518\":1,\"534\":1,\"535\":1,\"683\":1}}],[\"engine的排名\",{\"1\":{\"269\":1}}],[\"enablefeignclients\",{\"1\":{\"637\":1,\"648\":1}}],[\"enablemongorepositories\",{\"1\":{\"381\":1}}],[\"enable\",{\"1\":{\"375\":1,\"685\":1,\"754\":1,\"764\":4,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1,\"810\":1}}],[\"enableelasticsearchrepositories\",{\"1\":{\"331\":1}}],[\"enabled=true\",{\"1\":{\"809\":1}}],[\"enablediscoveryclient\",{\"1\":{\"637\":1,\"648\":1}}],[\"enablediscoveryclient注解\",{\"1\":{\"628\":1}}],[\"enabled\",{\"1\":{\"282\":1,\"540\":1,\"650\":2,\"658\":2,\"784\":2}}],[\"enum\",{\"1\":{\"161\":1}}],[\"ensurecapacityinternal\",{\"0\":{\"150\":1},\"1\":{\"149\":1,\"150\":4}}],[\"endpoints\",{\"1\":{\"806\":2}}],[\"endpoints=https\",{\"1\":{\"809\":1}}],[\"endpoints=\",{\"1\":{\"756\":1}}],[\"endpoint\",{\"1\":{\"756\":1}}],[\"endingwith\",{\"0\":{\"392\":1}}],[\"end\",{\"1\":{\"147\":2,\"320\":3,\"321\":5,\"326\":1,\"442\":1,\"444\":1,\"495\":1,\"551\":1,\"556\":2,\"557\":1}}],[\"end\\t二零二零年二月二十八日\",{\"1\":{\"11\":1}}],[\"eyjsawnlbnnlswqioijonzu3skuws0nuiiwibgljzw5zzwvoyw1lijoid3ugyw5qdw4ilcjhc3npz25lzu5hbwuioiiilcjhc3npz25lzuvtywlsijoiiiwibgljzw5zzvjlc3ryawn0aw9uijoirm9yigvkdwnhdglvbmfsihvzzsbvbmx5iiwiy2hly2tdb25jdxjyzw50vxnlijpmywxzzswichjvzhvjdhmiolt7imnvzguioijjssisinbhawrvcfrvijoimjaymc0wms0wnyj9lhsiy29kzsi6ikfdiiwicgfpzfvwvg8ioiiymdiwltaxlta3in0seyjjb2rlijoirfboiiwicgfpzfvwvg8ioiiymdiwltaxlta3in0seyjjb2rlijoiufmilcjwywlkvxbubyi6ijiwmjatmdetmdcifsx7imnvzguioijhtyisinbhawrvcfrvijoimjaymc0wms0wnyj9lhsiy29kzsi6ikrniiwicgfpzfvwvg8ioiiymdiwltaxlta3in0seyjjb2rlijoiq0wilcjwywlkvxbubyi6ijiwmjatmdetmdcifsx7imnvzguioijsuzailcjwywlkvxbubyi6ijiwmjatmdetmdcifsx7imnvzguioijsqyisinbhawrvcfrvijoimjaymc0wms0wnyj9lhsiy29kzsi6iljeiiwicgfpzfvwvg8ioiiymdiwltaxlta3in0seyjjb2rlijoiuemilcjwywlkvxbubyi6ijiwmjatmdetmdcifsx7imnvzguioijstsisinbhawrvcfrvijoimjaymc0wms0wnyj9lhsiy29kzsi6ildtiiwicgfpzfvwvg8ioiiymdiwltaxlta3in0seyjjb2rlijoireiilcjwywlkvxbubyi6ijiwmjatmdetmdcifsx7imnvzguioijeqyisinbhawrvcfrvijoimjaymc0wms0wnyj9lh\",{\"1\":{\"27\":1}}],[\"ethernets\",{\"1\":{\"715\":1}}],[\"etcdcacertfile\",{\"1\":{\"813\":1}}],[\"etcdcertfile\",{\"1\":{\"813\":1}}],[\"etcdctl\",{\"1\":{\"751\":1,\"756\":2}}],[\"etcdkeyfile\",{\"1\":{\"813\":1}}],[\"etcdendpoints\",{\"1\":{\"813\":1}}],[\"etcd集群地址\",{\"1\":{\"764\":1}}],[\"etcd证书放在这\",{\"1\":{\"733\":1}}],[\"etcd\",{\"0\":{\"732\":1,\"733\":1,\"750\":1},\"1\":{\"714\":3,\"726\":3,\"733\":6,\"734\":6,\"744\":1,\"748\":1,\"749\":2,\"751\":6,\"752\":30,\"753\":15,\"754\":3,\"755\":21,\"756\":6,\"764\":6,\"779\":1,\"803\":1,\"804\":1,\"806\":15,\"809\":4}}],[\"etc\",{\"1\":{\"372\":2,\"684\":2,\"687\":1,\"692\":2,\"699\":4,\"715\":5,\"726\":1,\"727\":1,\"729\":1,\"733\":2,\"734\":3,\"736\":2,\"737\":3,\"739\":2,\"740\":3,\"742\":2,\"743\":3,\"744\":4,\"746\":1,\"751\":2,\"752\":1,\"753\":8,\"755\":5,\"756\":4,\"759\":2,\"761\":3,\"764\":13,\"766\":2,\"771\":6,\"772\":2,\"776\":2,\"777\":2,\"781\":7,\"783\":6,\"784\":2,\"785\":2,\"786\":2,\"787\":1,\"790\":3,\"791\":2,\"792\":4,\"793\":2,\"794\":1,\"796\":1,\"806\":4,\"809\":5,\"813\":5,\"814\":1,\"824\":1,\"831\":1}}],[\"et\",{\"1\":{\"10\":6}}],[\"但在大流量\",{\"1\":{\"799\":1}}],[\"但在事实上\",{\"1\":{\"203\":1}}],[\"但只有一个会被选举为leader提供服务\",{\"1\":{\"757\":1,\"770\":1}}],[\"但并不保证后续是否存在对历史definition对象的引用\",{\"1\":{\"671\":1}}],[\"但继承具有静态特征\",{\"1\":{\"475\":1}}],[\"但这种方式存在潜在风险\",{\"1\":{\"453\":1}}],[\"但获得了更高的数据可靠性\",{\"1\":{\"451\":1}}],[\"但不同的是\",{\"1\":{\"364\":1}}],[\"但不需要分段\",{\"1\":{\"343\":1}}],[\"但不一定是优先级越高就一定先执行\",{\"1\":{\"226\":1}}],[\"但要注意如果已经存在相同的index\",{\"1\":{\"332\":1}}],[\"但它以不评分\",{\"1\":{\"308\":1}}],[\"但随着项目的升级系统的\",{\"1\":{\"254\":1}}],[\"但是它引入了多个网络组件\",{\"1\":{\"799\":1}}],[\"但是呢每个开发人员的本地都要修改\",{\"1\":{\"707\":1}}],[\"但是由于ribbon已经进入维护模式\",{\"1\":{\"644\":1}}],[\"但是这些安装方式通常比较麻烦\",{\"1\":{\"690\":1}}],[\"但是这些线程共享进程占有的内存地址空间和资源\",{\"1\":{\"204\":1}}],[\"但是这样还是不够优雅\",{\"1\":{\"603\":1}}],[\"但是有时候我们的项目中并没有使用\",{\"1\":{\"497\":1}}],[\"但是有的时候仅用分词器本身提供的通用词汇无法满足自己的项目特定的业务需求\",{\"1\":{\"322\":1}}],[\"但是使用装饰器模式会是另外一种思路更为灵活\",{\"1\":{\"475\":1}}],[\"但是一个key如果长期不用\",{\"1\":{\"460\":1}}],[\"但是一个操作执行完\",{\"1\":{\"202\":1}}],[\"但是配置就比较麻烦了\",{\"1\":{\"368\":1}}],[\"但是比行要复杂的多\",{\"1\":{\"361\":1}}],[\"但是对于不熟悉<b>上海<\",{\"1\":{\"341\":1,\"343\":2}}],[\"但是对于不熟悉上海的游客来说\",{\"1\":{\"341\":1}}],[\"但是都对中文分词的效果不太好\",{\"1\":{\"315\":1}}],[\"但是官方也提供了另外一种批量操作方式\",{\"1\":{\"296\":1}}],[\"但是还没有分配到\",{\"1\":{\"213\":1}}],[\"但是人们对实时性有了要求\",{\"1\":{\"204\":1}}],[\"但是不可改变长度\",{\"1\":{\"197\":1}}],[\"但是map中存储的\",{\"1\":{\"195\":1}}],[\"但是也导致了\",{\"1\":{\"178\":1}}],[\"但是在测试时发现出现异常时\",{\"1\":{\"261\":1}}],[\"但是在java中一个\",{\"1\":{\"236\":1}}],[\"但是在\",{\"1\":{\"155\":1}}],[\"但是从\",{\"1\":{\"113\":1}}],[\"但是必须是在第一句代码\",{\"1\":{\"68\":1}}],[\"但是调用\",{\"1\":{\"62\":1}}],[\"但是\",{\"1\":{\"59\":1,\"268\":1,\"308\":1,\"561\":1}}],[\"但是该插件是付费的\",{\"1\":{\"19\":1}}],[\"但是a\",{\"1\":{\"10\":1}}],[\"但结果让我意外\",{\"1\":{\"10\":1}}],[\"w\",{\"1\":{\"806\":4}}],[\"wjhbfh\",{\"1\":{\"500\":1}}],[\"w3\",{\"1\":{\"495\":1}}],[\"wget\",{\"1\":{\"371\":2,\"726\":1,\"800\":1,\"805\":1,\"818\":1,\"825\":1}}],[\"wlan版\",{\"1\":{\"351\":1}}],[\"w+\",{\"1\":{\"316\":1}}],[\"wfouac\",{\"1\":{\"313\":1}}],[\"what\",{\"1\":{\"616\":1}}],[\"whitespace\",{\"1\":{\"315\":1,\"316\":1}}],[\"while\",{\"1\":{\"244\":1,\"248\":1,\"252\":1,\"253\":1}}],[\"where\",{\"1\":{\"277\":1,\"385\":1,\"386\":3,\"387\":1,\"400\":2,\"401\":1,\"402\":3,\"408\":2,\"411\":1,\"698\":2}}],[\"when\",{\"1\":{\"10\":1,\"23\":1}}],[\"writes\",{\"1\":{\"451\":1}}],[\"writeobject\",{\"1\":{\"254\":2}}],[\"write\",{\"1\":{\"243\":3,\"244\":1,\"247\":4,\"248\":1,\"249\":1,\"252\":1,\"253\":1,\"454\":1,\"699\":1}}],[\"writer\",{\"0\":{\"247\":1},\"1\":{\"240\":1,\"247\":1,\"253\":1,\"478\":1}}],[\"writemethod\",{\"1\":{\"133\":1,\"134\":2}}],[\"world\",{\"1\":{\"440\":2}}],[\"word\",{\"0\":{\"321\":1},\"1\":{\"318\":1,\"320\":1,\"321\":4,\"326\":1,\"332\":6,\"335\":3,\"341\":3,\"351\":6}}],[\"workingdirectory=\",{\"1\":{\"753\":1}}],[\"worktree\",{\"1\":{\"707\":2}}],[\"works\",{\"1\":{\"699\":1}}],[\"worker\",{\"1\":{\"610\":1,\"714\":3}}],[\"work\",{\"1\":{\"22\":1,\"451\":1}}],[\"woman\",{\"1\":{\"160\":1}}],[\"warranty\",{\"1\":{\"699\":2}}],[\"warn\",{\"1\":{\"495\":1}}],[\"warnings\",{\"1\":{\"411\":1}}],[\"warning\",{\"1\":{\"411\":1}}],[\"wantedby=multi\",{\"1\":{\"683\":1,\"753\":1,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1,\"809\":1}}],[\"wants=network\",{\"1\":{\"683\":1,\"753\":1}}],[\"walk\",{\"1\":{\"95\":1}}],[\"waitnotify\",{\"1\":{\"222\":1}}],[\"wait\",{\"0\":{\"222\":1},\"1\":{\"51\":1,\"210\":1,\"222\":4}}],[\"waste\",{\"1\":{\"10\":2}}],[\"wiki\",{\"1\":{\"626\":1,\"630\":1}}],[\"wifi版\",{\"1\":{\"351\":1}}],[\"wifi\",{\"1\":{\"351\":1}}],[\"without\",{\"1\":{\"699\":2}}],[\"withscores\",{\"1\":{\"444\":3}}],[\"withsort\",{\"1\":{\"354\":1}}],[\"withinsphere\",{\"1\":{\"400\":1}}],[\"within\",{\"1\":{\"400\":1,\"401\":1,\"806\":1}}],[\"withhighlightbuilder\",{\"1\":{\"348\":1}}],[\"withpageable\",{\"1\":{\"348\":1,\"353\":1}}],[\"withquery\",{\"1\":{\"348\":1,\"352\":1,\"353\":1,\"354\":1}}],[\"with\",{\"1\":{\"282\":1,\"388\":1,\"389\":1,\"643\":1,\"644\":1,\"699\":4,\"718\":1,\"825\":3}}],[\"winter\",{\"1\":{\"160\":1}}],[\"windows系统中将命令行窗口关闭\",{\"1\":{\"325\":1}}],[\"windows\",{\"1\":{\"236\":2,\"366\":1,\"715\":1}}],[\"window\",{\"0\":{\"367\":1},\"1\":{\"33\":2,\"35\":1,\"269\":1,\"408\":1,\"619\":1,\"690\":1}}],[\"will\",{\"1\":{\"10\":1,\"671\":2,\"699\":1}}],[\"wyyty8\",{\"1\":{\"27\":1}}],[\"www\",{\"1\":{\"16\":1,\"17\":2,\"266\":1,\"278\":1,\"286\":1,\"366\":1,\"371\":2,\"436\":2,\"445\":2,\"457\":4,\"465\":1,\"486\":1,\"495\":4,\"799\":1}}],[\"webhook\",{\"1\":{\"784\":3}}],[\"webfilter\",{\"1\":{\"654\":1}}],[\"webflux\",{\"1\":{\"610\":1,\"612\":1,\"659\":1}}],[\"webclient\",{\"1\":{\"645\":2}}],[\"webconfig\",{\"1\":{\"606\":1}}],[\"webservlet\",{\"1\":{\"610\":1}}],[\"webmvcconfigurer\",{\"1\":{\"606\":1}}],[\"webdatabinderfactory\",{\"1\":{\"604\":2}}],[\"web\",{\"1\":{\"360\":1,\"420\":1,\"654\":1,\"655\":2}}],[\"wechatpay\",{\"1\":{\"160\":1}}],[\"wednesday\",{\"1\":{\"160\":1}}],[\"we\",{\"1\":{\"10\":1}}],[\"welcome\",{\"1\":{\"1\":1}}],[\"typha\",{\"1\":{\"806\":1}}],[\"type=calico\",{\"1\":{\"806\":2}}],[\"type=notify\",{\"1\":{\"683\":1,\"753\":1,\"766\":1}}],[\"type=single\",{\"1\":{\"281\":1}}],[\"type>\",{\"1\":{\"636\":2,\"655\":1}}],[\"typename\",{\"1\":{\"599\":4}}],[\"typeofa\",{\"1\":{\"589\":3,\"592\":2}}],[\"typeofcat\",{\"1\":{\"589\":3,\"591\":4}}],[\"typeof\",{\"0\":{\"587\":1},\"1\":{\"585\":1,\"587\":1,\"588\":1,\"589\":2,\"591\":1,\"592\":1}}],[\"types\",{\"1\":{\"445\":1,\"650\":1}}],[\"type\",{\"0\":{\"274\":1,\"587\":1,\"588\":1,\"590\":1},\"1\":{\"274\":1,\"275\":1,\"282\":1,\"289\":2,\"290\":2,\"291\":1,\"296\":1,\"299\":1,\"320\":3,\"321\":5,\"326\":1,\"332\":5,\"334\":1,\"335\":5,\"341\":5,\"351\":11,\"534\":1,\"535\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"541\":2,\"542\":1,\"543\":3,\"544\":2,\"545\":3,\"546\":3,\"547\":1,\"548\":2,\"549\":3,\"550\":2,\"551\":2,\"552\":2,\"553\":2,\"554\":3,\"555\":2,\"556\":1,\"557\":1,\"558\":2,\"585\":1,\"587\":2,\"588\":4,\"589\":2,\"590\":4,\"591\":5,\"592\":2,\"595\":2,\"597\":1,\"598\":2,\"599\":2,\"601\":1,\"650\":1,\"800\":1,\"806\":1,\"812\":1,\"818\":1}}],[\"tls协议运行机制的概述\",{\"1\":{\"720\":1}}],[\"tls了\",{\"1\":{\"720\":1}}],[\"tls\",{\"0\":{\"745\":1,\"760\":1,\"765\":1},\"1\":{\"716\":1,\"720\":1,\"745\":2,\"760\":1,\"764\":3,\"765\":2}}],[\"tgz\",{\"1\":{\"682\":1,\"797\":1}}],[\"tcp\",{\"1\":{\"643\":1,\"812\":1}}],[\"two\",{\"1\":{\"601\":2}}],[\"t>\",{\"1\":{\"484\":1}}],[\"t2\",{\"1\":{\"456\":1}}],[\"t1\",{\"1\":{\"456\":1}}],[\"ttl\",{\"1\":{\"440\":6,\"463\":1,\"464\":1}}],[\"tmp\",{\"1\":{\"417\":1,\"825\":6}}],[\"tutorial\",{\"1\":{\"370\":1}}],[\"tuesday\",{\"1\":{\"160\":1}}],[\"txt\",{\"1\":{\"244\":2,\"248\":2,\"252\":2,\"253\":2,\"707\":2}}],[\"tip\",{\"1\":{\"665\":1}}],[\"tinyint\",{\"1\":{\"535\":2,\"538\":1,\"540\":6,\"543\":1,\"545\":1,\"546\":1,\"549\":1,\"550\":1}}],[\"titlecolor\",{\"1\":{\"382\":1}}],[\"title=华为\",{\"1\":{\"353\":1}}],[\"title=华为huawei\",{\"1\":{\"353\":1}}],[\"title=小米\",{\"1\":{\"352\":1}}],[\"title=小米9\",{\"1\":{\"352\":1}}],[\"title\",{\"1\":{\"332\":1,\"335\":1,\"341\":5,\"348\":1,\"351\":14,\"352\":1,\"353\":1,\"354\":1,\"382\":2,\"385\":2,\"386\":2,\"391\":2,\"394\":1,\"396\":2,\"397\":1}}],[\"ticketrunnableexample\",{\"1\":{\"206\":1}}],[\"ticketrunnable\",{\"1\":{\"206\":3}}],[\"time=true\",{\"1\":{\"665\":1}}],[\"timegatewayfilterfactory\",{\"1\":{\"665\":5}}],[\"timer\",{\"0\":{\"543\":1},\"1\":{\"533\":1,\"540\":1}}],[\"timed\",{\"1\":{\"299\":2,\"651\":1}}],[\"timeunit\",{\"1\":{\"222\":3}}],[\"timeoutstartsec=0\",{\"1\":{\"683\":1}}],[\"timeout表示失效时间\",{\"1\":{\"440\":1}}],[\"timeout设置0\",{\"1\":{\"222\":1}}],[\"timeout\",{\"1\":{\"222\":1,\"440\":1,\"669\":1}}],[\"time\",{\"1\":{\"116\":2,\"161\":4,\"334\":1,\"534\":1,\"537\":2,\"540\":2,\"542\":2,\"543\":1,\"546\":1,\"550\":2,\"551\":2,\"552\":1,\"553\":1,\"554\":1,\"556\":2,\"557\":3,\"558\":2,\"715\":1}}],[\"timestamping\",{\"1\":{\"726\":1}}],[\"timestamp\",{\"0\":{\"112\":1},\"1\":{\"364\":1,\"534\":1,\"537\":2,\"540\":1,\"542\":1,\"543\":2,\"545\":1,\"546\":2,\"547\":1,\"548\":1,\"549\":1,\"550\":2}}],[\"tar\",{\"1\":{\"682\":1,\"751\":2,\"759\":2,\"797\":1,\"825\":4}}],[\"targetport\",{\"1\":{\"818\":1}}],[\"targetdefids\",{\"1\":{\"671\":5}}],[\"targetdate\",{\"1\":{\"117\":1}}],[\"targetroutedefinitions\",{\"1\":{\"670\":5}}],[\"target\",{\"1\":{\"605\":1,\"683\":3,\"753\":4,\"766\":2,\"772\":1,\"777\":1,\"786\":1,\"793\":2,\"809\":1}}],[\"taskcandidateuser\",{\"1\":{\"527\":1,\"561\":1,\"580\":1}}],[\"taskcomments\",{\"1\":{\"506\":2,\"575\":3}}],[\"taskid\",{\"0\":{\"581\":1},\"1\":{\"524\":2,\"526\":2,\"528\":3,\"575\":2,\"579\":2,\"581\":3,\"582\":5,\"583\":2}}],[\"taskinst只记录usertask内容\",{\"1\":{\"551\":1}}],[\"taskinst不同的是\",{\"1\":{\"551\":1}}],[\"taskinst\",{\"0\":{\"557\":1},\"1\":{\"503\":1,\"533\":1}}],[\"tasklistener\",{\"1\":{\"518\":1}}],[\"tasklistener接口\",{\"1\":{\"518\":1}}],[\"tasklist\",{\"1\":{\"505\":2,\"513\":2,\"527\":2}}],[\"taskassignee\",{\"1\":{\"504\":1,\"505\":1,\"506\":3,\"513\":1,\"584\":1}}],[\"task\",{\"0\":{\"542\":1,\"578\":1,\"579\":1,\"581\":1,\"583\":1},\"1\":{\"503\":1,\"504\":6,\"505\":6,\"513\":7,\"521\":1,\"527\":6,\"533\":1,\"540\":1,\"541\":1,\"542\":2,\"544\":1,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"557\":2,\"558\":1,\"577\":1,\"580\":1,\"581\":1,\"582\":5}}],[\"taskservice\",{\"1\":{\"500\":2,\"504\":4,\"505\":5,\"506\":5,\"513\":1,\"524\":1,\"526\":1,\"527\":3,\"528\":4,\"561\":1,\"575\":1,\"578\":1,\"579\":1,\"580\":1,\"581\":1,\"582\":4,\"583\":1}}],[\"tap\",{\"1\":{\"377\":1}}],[\"tags\",{\"0\":{\"345\":1,\"346\":1},\"1\":{\"341\":4}}],[\"tag\",{\"1\":{\"311\":1,\"443\":1,\"590\":2,\"591\":4}}],[\"tables\",{\"1\":{\"411\":3,\"417\":3,\"422\":1,\"423\":2,\"424\":1}}],[\"table\",{\"1\":{\"275\":1,\"277\":1,\"362\":2,\"417\":3}}],[\"ta\",{\"1\":{\"225\":4}}],[\"tail\",{\"1\":{\"10\":1,\"787\":1,\"794\":1}}],[\"tenant\",{\"1\":{\"534\":1,\"535\":1,\"537\":1,\"540\":1,\"542\":1,\"543\":1,\"545\":1,\"546\":1,\"548\":1,\"549\":1,\"551\":1,\"556\":1,\"557\":1}}],[\"temp\",{\"1\":{\"825\":5}}],[\"temporary\",{\"1\":{\"417\":1}}],[\"template\",{\"1\":{\"400\":2,\"401\":1,\"402\":3}}],[\"tee\",{\"1\":{\"372\":1}}],[\"terms\",{\"1\":{\"313\":1,\"314\":3,\"355\":6,\"356\":6,\"699\":2}}],[\"term\",{\"0\":{\"311\":1},\"1\":{\"277\":1,\"289\":1,\"290\":2,\"291\":1,\"311\":6}}],[\"text2\",{\"1\":{\"544\":1,\"554\":1,\"558\":1}}],[\"text\",{\"1\":{\"115\":1,\"311\":2,\"319\":1,\"320\":1,\"321\":1,\"326\":1,\"332\":3,\"335\":3,\"341\":3,\"351\":4,\"544\":1,\"554\":1,\"558\":1,\"650\":1}}],[\"testclaimtask\",{\"1\":{\"528\":1}}],[\"testdownloadresource\",{\"1\":{\"511\":1}}],[\"testdeletedeploy\",{\"1\":{\"510\":1}}],[\"testdefinitionquery\",{\"1\":{\"509\":1}}],[\"testdb\",{\"1\":{\"414\":5,\"415\":3,\"416\":1,\"420\":1}}],[\"testaddcomment\",{\"1\":{\"505\":1}}],[\"testagg\",{\"1\":{\"355\":1}}],[\"test06\",{\"1\":{\"504\":1}}],[\"test03\",{\"1\":{\"503\":2}}],[\"test02\",{\"1\":{\"502\":1}}],[\"test01\",{\"1\":{\"495\":1,\"502\":1}}],[\"testselectcandidatetasklist\",{\"1\":{\"527\":1}}],[\"testselecthistorytask\",{\"1\":{\"506\":1}}],[\"testsuspendsingleprocessinstance\",{\"1\":{\"514\":1}}],[\"testsuspendallprocessinstance\",{\"1\":{\"514\":1}}],[\"testsubagg\",{\"1\":{\"356\":1}}],[\"teststartprocess\",{\"1\":{\"513\":1,\"523\":1}}],[\"testsort\",{\"1\":{\"354\":1}}],[\"testnativequery\",{\"1\":{\"353\":1}}],[\"testquery\",{\"1\":{\"352\":1}}],[\"test2\",{\"1\":{\"293\":1}}],[\"test1\",{\"1\":{\"293\":1}}],[\"test\",{\"1\":{\"84\":1,\"244\":3,\"248\":3,\"252\":3,\"253\":3,\"281\":1,\"289\":1,\"291\":3,\"336\":1,\"338\":2,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"412\":5,\"414\":5,\"415\":3,\"416\":3,\"418\":1,\"419\":1,\"420\":2,\"440\":5,\"495\":1,\"502\":2,\"503\":2,\"504\":1,\"505\":1,\"506\":1,\"509\":1,\"510\":1,\"511\":1,\"513\":1,\"514\":2,\"523\":1,\"527\":1,\"528\":1,\"633\":1,\"661\":1}}],[\"tech\",{\"1\":{\"17\":2,\"266\":1,\"278\":1,\"286\":1,\"436\":1,\"445\":1,\"457\":1}}],[\"that\",{\"1\":{\"699\":3}}],[\"th3\",{\"1\":{\"206\":2}}],[\"th2\",{\"1\":{\"206\":2}}],[\"th1\",{\"1\":{\"206\":2}}],[\"threadexample\",{\"1\":{\"218\":1}}],[\"thread\",{\"0\":{\"218\":1},\"1\":{\"206\":12,\"217\":2,\"218\":3,\"219\":5,\"221\":2,\"222\":3,\"223\":2,\"224\":4,\"226\":5}}],[\"throw\",{\"1\":{\"151\":1,\"257\":1}}],[\"throwable\",{\"1\":{\"51\":1}}],[\"throws\",{\"1\":{\"51\":3,\"62\":2,\"115\":1,\"254\":2,\"256\":2,\"257\":8,\"511\":1,\"562\":1,\"604\":1}}],[\"thursday\",{\"1\":{\"160\":1}}],[\"thisisnotavalidpasswordthatcanbeusedhere\",{\"1\":{\"697\":2}}],[\"this\",{\"0\":{\"68\":1},\"1\":{\"54\":1,\"56\":1,\"58\":2,\"60\":2,\"68\":1,\"73\":3,\"89\":2,\"123\":3,\"149\":1,\"161\":3,\"229\":1,\"257\":1,\"399\":4,\"477\":4,\"484\":2,\"502\":1,\"665\":3,\"671\":7,\"699\":4,\"806\":1}}],[\"they\",{\"1\":{\"699\":1}}],[\"then\",{\"1\":{\"401\":1,\"665\":1}}],[\"theme\",{\"1\":{\"16\":4,\"17\":2}}],[\"the\",{\"1\":{\"10\":2,\"41\":2,\"138\":1,\"316\":1,\"495\":1,\"699\":11,\"806\":1}}],[\"trusted\",{\"1\":{\"753\":2}}],[\"truncated\",{\"1\":{\"455\":1}}],[\"true启动数据库历史记录\",{\"1\":{\"496\":1}}],[\"true\",{\"1\":{\"41\":2,\"58\":1,\"60\":1,\"108\":2,\"122\":2,\"126\":1,\"128\":1,\"129\":2,\"135\":1,\"140\":1,\"155\":2,\"224\":1,\"249\":1,\"262\":1,\"282\":2,\"290\":1,\"311\":1,\"332\":4,\"333\":1,\"334\":1,\"335\":3,\"341\":3,\"351\":9,\"495\":2,\"496\":3,\"510\":1,\"514\":2,\"601\":3,\"604\":1,\"650\":2,\"658\":1,\"779\":1,\"784\":1,\"813\":1,\"814\":1}}],[\"trim\",{\"1\":{\"442\":1}}],[\"trans\",{\"1\":{\"422\":1,\"423\":2,\"424\":1}}],[\"transport\",{\"1\":{\"337\":1,\"680\":1}}],[\"transient\",{\"1\":{\"177\":1,\"185\":1,\"254\":2}}],[\"train\",{\"1\":{\"327\":1}}],[\"tr\",{\"1\":{\"206\":4,\"746\":1}}],[\"treemap底层基于红黑树算法\",{\"1\":{\"195\":1}}],[\"treemap\",{\"0\":{\"195\":1},\"1\":{\"192\":1}}],[\"treeset<>\",{\"1\":{\"190\":1}}],[\"treeset<string>\",{\"1\":{\"190\":1}}],[\"treeset\",{\"0\":{\"188\":1},\"1\":{\"173\":1,\"183\":1,\"188\":4,\"189\":2,\"190\":6,\"195\":2}}],[\"tree\",{\"1\":{\"165\":1}}],[\"try\",{\"1\":{\"41\":1,\"62\":1,\"134\":1,\"135\":3,\"221\":1,\"222\":3,\"225\":1,\"233\":1,\"244\":1,\"248\":1,\"249\":1,\"252\":1,\"253\":1,\"670\":1,\"671\":3}}],[\"t\",{\"1\":{\"10\":1,\"135\":5,\"189\":1,\"190\":2,\"197\":1,\"484\":4,\"599\":2,\"671\":1,\"689\":1,\"746\":1,\"828\":1}}],[\"tomap\",{\"1\":{\"671\":1}}],[\"tostream\",{\"1\":{\"671\":1}}],[\"tostring\",{\"0\":{\"52\":1},\"1\":{\"51\":1,\"52\":1,\"53\":1,\"161\":1,\"197\":1,\"399\":2,\"665\":2}}],[\"tolist\",{\"1\":{\"353\":1,\"670\":2,\"671\":4}}],[\"tools=5\",{\"1\":{\"374\":1}}],[\"tool来进行学习测试\",{\"1\":{\"297\":1}}],[\"took\",{\"1\":{\"299\":2,\"756\":1}}],[\"total\",{\"1\":{\"289\":1,\"291\":1,\"299\":3}}],[\"toarray\",{\"1\":{\"176\":1}}],[\"token等重要的认证信息\",{\"1\":{\"785\":1}}],[\"token认证的\",{\"1\":{\"785\":1}}],[\"token文件\",{\"1\":{\"764\":1}}],[\"token=71dacbf4a541549a2426e3fae9b03a0f\",{\"1\":{\"785\":1}}],[\"token=\",{\"1\":{\"752\":1,\"755\":1}}],[\"tokens\",{\"1\":{\"320\":1,\"321\":1,\"326\":1,\"723\":1}}],[\"token\",{\"1\":{\"161\":2,\"282\":1,\"320\":3,\"321\":5,\"326\":1,\"603\":4,\"604\":3,\"723\":3,\"746\":1,\"752\":1,\"760\":1,\"764\":5,\"765\":2}}],[\"tohexstring\",{\"1\":{\"53\":1}}],[\"todo\",{\"1\":{\"48\":1,\"128\":1,\"244\":1,\"248\":1,\"252\":1,\"253\":1,\"470\":1,\"472\":1}}],[\"to\",{\"0\":{\"135\":1,\"677\":1},\"1\":{\"1\":1,\"10\":2,\"41\":1,\"115\":2,\"135\":2,\"262\":1,\"375\":1,\"412\":1,\"413\":1,\"414\":5,\"415\":3,\"416\":2,\"418\":1,\"420\":1,\"495\":6,\"635\":1,\"670\":1,\"699\":3,\"812\":1,\"814\":4}}],[\"dns\",{\"0\":{\"819\":1},\"1\":{\"780\":1,\"820\":3,\"822\":2}}],[\"dhcp4\",{\"1\":{\"715\":1}}],[\"dynamic\",{\"1\":{\"670\":1}}],[\"dynamicroutingfileproperties\",{\"1\":{\"669\":1,\"670\":5}}],[\"dynamicroutelistener\",{\"1\":{\"670\":2}}],[\"dynamicrouteservicelistener\",{\"1\":{\"670\":1}}],[\"dynamicrouteservice\",{\"1\":{\"670\":4,\"671\":1}}],[\"dynamicroute\",{\"1\":{\"668\":1,\"669\":2}}],[\"d+\",{\"1\":{\"662\":1}}],[\"dgrm\",{\"1\":{\"535\":1}}],[\"dsxu1m\",{\"1\":{\"499\":1}}],[\"dsl\",{\"0\":{\"301\":1},\"1\":{\"270\":1,\"301\":1}}],[\"driver\",{\"1\":{\"495\":1}}],[\"driverclassname\",{\"1\":{\"495\":1}}],[\"druiddatasource\",{\"1\":{\"495\":1}}],[\"druid\",{\"1\":{\"495\":1}}],[\"drop\",{\"1\":{\"415\":1,\"417\":2,\"419\":2,\"495\":2,\"496\":2,\"709\":1}}],[\"d3ba7b8ad964\",{\"1\":{\"457\":1}}],[\"dubbo\",{\"1\":{\"610\":2}}],[\"duration=87600h0m0s\",{\"1\":{\"771\":1}}],[\"duration\",{\"1\":{\"551\":1,\"556\":1,\"557\":1}}],[\"duedate\",{\"1\":{\"543\":1,\"545\":1,\"546\":1,\"549\":1}}],[\"due\",{\"1\":{\"542\":1,\"557\":1}}],[\"dump\",{\"1\":{\"451\":1}}],[\"duke\",{\"1\":{\"295\":1,\"299\":1}}],[\"dc\",{\"1\":{\"372\":1}}],[\"dxomark全球第二高分\",{\"1\":{\"351\":1}}],[\"dtd\",{\"1\":{\"324\":2}}],[\"dvw0gy\",{\"1\":{\"308\":1}}],[\"dbcp<\",{\"1\":{\"495\":2}}],[\"dbfilename\",{\"1\":{\"451\":4}}],[\"db表的相应记录都消失了\",{\"1\":{\"419\":1}}],[\"dbpath\",{\"1\":{\"369\":1}}],[\"db文件夹\",{\"1\":{\"368\":1}}],[\"db\",{\"1\":{\"266\":1,\"278\":1,\"286\":1,\"369\":1,\"436\":2,\"445\":2,\"457\":2,\"496\":2}}],[\"dll\",{\"1\":{\"254\":2}}],[\"did\",{\"0\":{\"677\":1},\"1\":{\"635\":1}}],[\"diagrams\",{\"1\":{\"499\":1}}],[\"dip\",{\"1\":{\"468\":2}}],[\"dir=\",{\"1\":{\"752\":1,\"755\":1,\"764\":1,\"771\":1,\"776\":1,\"783\":3,\"790\":1}}],[\"dir\",{\"1\":{\"451\":4,\"455\":1,\"699\":1,\"752\":1,\"764\":1,\"783\":2,\"796\":2}}],[\"direction\",{\"1\":{\"348\":1,\"353\":1,\"388\":1,\"389\":1}}],[\"disable\",{\"1\":{\"715\":1,\"809\":1}}],[\"distributed\",{\"1\":{\"699\":2}}],[\"distance\",{\"1\":{\"403\":1}}],[\"discovery<\",{\"1\":{\"626\":1,\"636\":1,\"658\":1}}],[\"discovery\",{\"1\":{\"281\":1,\"282\":1,\"621\":2,\"625\":1,\"627\":1,\"631\":1,\"636\":1,\"638\":1,\"658\":2}}],[\"dic<\",{\"1\":{\"324\":1}}],[\"dictionary\",{\"1\":{\"430\":1}}],[\"dict\",{\"1\":{\"324\":2}}],[\"dic>标签中写入自定义词库的路径\",{\"1\":{\"324\":1}}],[\"dic的文件\",{\"1\":{\"323\":1}}],[\"dic文件中就有27w的词汇量\",{\"1\":{\"322\":1}}],[\"die\",{\"1\":{\"160\":1}}],[\"division\",{\"1\":{\"10\":2,\"422\":1,\"423\":2,\"424\":1}}],[\"dashboard\",{\"1\":{\"817\":5,\"818\":6}}],[\"dashboard简介\",{\"0\":{\"817\":1}}],[\"dataid\",{\"1\":{\"631\":2,\"668\":2,\"669\":2}}],[\"dataid字段的一部分\",{\"1\":{\"631\":1}}],[\"datainputstream\",{\"1\":{\"256\":1}}],[\"datasourceautoconfiguration\",{\"1\":{\"497\":1}}],[\"datasource\",{\"1\":{\"495\":3}}],[\"data来查询mongodb的最常用方法之一是使用\",{\"1\":{\"384\":1}}],[\"data\",{\"1\":{\"296\":1,\"327\":3,\"328\":1,\"329\":1,\"331\":1,\"332\":1,\"335\":1,\"338\":1,\"348\":1,\"351\":1,\"364\":1,\"369\":2,\"378\":1,\"379\":1,\"380\":1,\"381\":1,\"382\":1,\"383\":1,\"384\":2,\"390\":1,\"404\":1,\"445\":1,\"451\":1,\"550\":1,\"601\":3,\"631\":1,\"632\":1,\"669\":2,\"692\":2,\"752\":2,\"755\":1,\"806\":2}}],[\"databaseschemaupdate\",{\"1\":{\"495\":1}}],[\"database=5\",{\"1\":{\"374\":1}}],[\"database\",{\"1\":{\"273\":2,\"288\":1,\"362\":2,\"380\":1,\"496\":2,\"692\":6,\"699\":2}}],[\"datetime\",{\"1\":{\"540\":1,\"542\":2,\"551\":2,\"552\":1,\"553\":1,\"554\":1,\"556\":2,\"557\":4,\"558\":2}}],[\"date1\",{\"1\":{\"115\":2}}],[\"datestr\",{\"1\":{\"115\":3}}],[\"date类型\",{\"1\":{\"115\":1}}],[\"date类型的数据\",{\"1\":{\"115\":1}}],[\"date类中关于\",{\"1\":{\"113\":1}}],[\"dateformat\",{\"1\":{\"113\":1,\"334\":3}}],[\"date\",{\"0\":{\"113\":1},\"1\":{\"113\":1,\"114\":1,\"115\":9,\"117\":5,\"311\":1,\"334\":1,\"364\":2,\"422\":2,\"423\":4,\"424\":2,\"542\":1,\"547\":1,\"557\":1}}],[\"daemonset\",{\"1\":{\"806\":1,\"817\":1}}],[\"daemon\",{\"0\":{\"224\":1},\"1\":{\"375\":1,\"684\":1,\"685\":1,\"687\":1,\"754\":1,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1,\"810\":1}}],[\"day\",{\"1\":{\"117\":2,\"523\":1}}],[\"df\",{\"1\":{\"115\":3}}],[\"ddd\",{\"1\":{\"444\":4}}],[\"dd\",{\"1\":{\"115\":4}}],[\"d\",{\"1\":{\"27\":1,\"48\":2,\"107\":1,\"372\":2,\"495\":2,\"511\":2,\"689\":1,\"692\":4,\"699\":3,\"715\":2,\"746\":1,\"796\":1,\"806\":1}}],[\"derivative\",{\"1\":{\"699\":1}}],[\"deepequal\",{\"0\":{\"600\":1,\"601\":1},\"1\":{\"601\":4}}],[\"deadletter\",{\"0\":{\"549\":1},\"1\":{\"533\":1,\"540\":1}}],[\"defined\",{\"0\":{\"677\":1},\"1\":{\"635\":1}}],[\"definitionkey\",{\"1\":{\"565\":2,\"580\":3,\"584\":3}}],[\"definition\",{\"1\":{\"509\":1,\"511\":4}}],[\"definitions\",{\"1\":{\"496\":2,\"671\":15}}],[\"def\",{\"1\":{\"536\":1,\"540\":1,\"541\":1,\"542\":2,\"543\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"549\":1,\"550\":1,\"551\":1,\"556\":1,\"557\":2}}],[\"defaultendpointtohostaction=accept\",{\"1\":{\"809\":1}}],[\"defaults\",{\"1\":{\"729\":1,\"730\":1,\"814\":1}}],[\"defaultprocessdiagramgenerator\",{\"1\":{\"568\":1}}],[\"defaultprocessengine\",{\"1\":{\"502\":2}}],[\"defaultmethod\",{\"1\":{\"95\":2}}],[\"default\",{\"1\":{\"10\":1,\"95\":1,\"319\":1,\"333\":7,\"334\":8,\"411\":2,\"423\":2,\"632\":1,\"651\":1,\"699\":2,\"729\":1,\"736\":4,\"752\":1,\"755\":1,\"785\":2,\"792\":2,\"813\":1}}],[\"demo\",{\"1\":{\"495\":1}}],[\"demeter\",{\"1\":{\"468\":1}}],[\"detail\",{\"0\":{\"554\":1},\"1\":{\"533\":1}}],[\"details\",{\"1\":{\"457\":2,\"699\":1}}],[\"detect\",{\"1\":{\"10\":1,\"806\":1}}],[\"deb\",{\"1\":{\"372\":1,\"680\":1}}],[\"debug\",{\"1\":{\"262\":2,\"450\":1,\"495\":1}}],[\"deptleader\",{\"1\":{\"503\":1,\"513\":1}}],[\"deploy\",{\"1\":{\"502\":8,\"534\":1,\"818\":1,\"822\":3}}],[\"deploymentid\",{\"1\":{\"510\":3,\"511\":3,\"566\":3,\"567\":3}}],[\"deployment\",{\"0\":{\"534\":1},\"1\":{\"23\":1,\"502\":3,\"533\":1,\"535\":1,\"537\":1,\"538\":1,\"723\":1,\"748\":1,\"770\":1,\"817\":2,\"821\":2}}],[\"dependencies<\",{\"1\":{\"636\":2,\"655\":1}}],[\"dependencies>\",{\"1\":{\"495\":1,\"636\":1,\"655\":1}}],[\"dependencymanagement\",{\"1\":{\"655\":2}}],[\"dependencymanagement>\",{\"1\":{\"636\":1,\"655\":1}}],[\"dependency\",{\"1\":{\"468\":1}}],[\"dependency>\",{\"1\":{\"329\":1,\"379\":1,\"495\":14,\"496\":2,\"626\":1,\"630\":1,\"635\":1,\"636\":5,\"655\":2,\"658\":3,\"675\":1,\"676\":1}}],[\"deprecated\",{\"1\":{\"333\":5,\"643\":1}}],[\"decode\",{\"1\":{\"649\":1}}],[\"decode404\",{\"1\":{\"649\":1}}],[\"decoratorexample\",{\"1\":{\"477\":1}}],[\"decorator\",{\"0\":{\"257\":1,\"474\":1},\"1\":{\"256\":2,\"257\":1,\"471\":1,\"476\":1,\"477\":2,\"479\":1}}],[\"decrby\",{\"1\":{\"440\":3}}],[\"decr\",{\"1\":{\"440\":3}}],[\"decfile\",{\"1\":{\"244\":2,\"248\":2,\"249\":1,\"252\":2,\"253\":2}}],[\"declaredmethods\",{\"1\":{\"128\":2}}],[\"declaredconstructors\",{\"1\":{\"127\":2}}],[\"declared\",{\"1\":{\"123\":1,\"127\":1}}],[\"designated\",{\"1\":{\"699\":1}}],[\"designer\",{\"1\":{\"488\":1,\"499\":1}}],[\"design\",{\"1\":{\"466\":1}}],[\"desktop\",{\"1\":{\"296\":2}}],[\"destpos\",{\"1\":{\"197\":1}}],[\"dest\",{\"1\":{\"197\":1,\"198\":1}}],[\"description=calico\",{\"1\":{\"809\":1}}],[\"description=kubernetes\",{\"1\":{\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1}}],[\"description=etcd\",{\"1\":{\"753\":1}}],[\"description=docker\",{\"1\":{\"683\":1}}],[\"description\",{\"1\":{\"382\":1,\"386\":2,\"535\":1,\"542\":1,\"552\":1,\"557\":1}}],[\"desc\",{\"1\":{\"15\":1,\"16\":3,\"17\":2,\"300\":1,\"314\":1,\"353\":1,\"354\":1,\"511\":1,\"565\":1,\"576\":1,\"580\":1,\"584\":1}}],[\"deque\",{\"1\":{\"169\":1}}],[\"delegation\",{\"1\":{\"542\":1}}],[\"delegate=yes\",{\"1\":{\"683\":1}}],[\"delegatetask\",{\"1\":{\"518\":6}}],[\"delegate\",{\"1\":{\"518\":1}}],[\"deleteprocessinstance\",{\"1\":{\"572\":1}}],[\"deleteprocins\",{\"1\":{\"572\":1}}],[\"deletereason\",{\"1\":{\"572\":3}}],[\"deleteattachment\",{\"1\":{\"553\":1}}],[\"deletegrouplink\",{\"1\":{\"553\":1}}],[\"deleteuserlink\",{\"1\":{\"553\":1}}],[\"deletedeployment\",{\"1\":{\"510\":2}}],[\"deletebyid\",{\"1\":{\"336\":1}}],[\"delete\",{\"1\":{\"147\":1,\"236\":1,\"287\":1,\"292\":2,\"293\":2,\"336\":1,\"338\":1,\"414\":2,\"417\":3,\"518\":1,\"551\":1,\"556\":1,\"557\":1,\"663\":1,\"671\":2,\"822\":1}}],[\"del\",{\"1\":{\"440\":3}}],[\"delivered\",{\"1\":{\"160\":1}}],[\"dev\",{\"1\":{\"668\":1,\"746\":1,\"825\":3}}],[\"development\",{\"1\":{\"37\":1}}],[\"devtool\",{\"1\":{\"27\":1}}],[\"doremovedefinitions\",{\"1\":{\"671\":2}}],[\"doupdatedefinitions\",{\"1\":{\"671\":2}}],[\"double类型对应的值\",{\"1\":{\"544\":1}}],[\"double\",{\"1\":{\"38\":1,\"364\":1,\"399\":6,\"444\":1,\"477\":5,\"544\":2,\"554\":2,\"558\":2}}],[\"doublecap\",{\"1\":{\"10\":5}}],[\"doexecute\",{\"1\":{\"484\":5}}],[\"download\",{\"1\":{\"317\":1,\"366\":1,\"680\":1,\"681\":1,\"825\":1}}],[\"docreatedefinitions\",{\"1\":{\"671\":2}}],[\"docs\",{\"1\":{\"370\":1,\"616\":2,\"618\":1,\"653\":2,\"683\":1,\"805\":1,\"813\":1}}],[\"documnet\",{\"0\":{\"333\":1}}],[\"documentation\",{\"1\":{\"699\":1,\"800\":1}}],[\"documentation=https\",{\"1\":{\"683\":1,\"766\":1,\"772\":1,\"777\":1}}],[\"document\",{\"0\":{\"275\":1},\"1\":{\"275\":2,\"332\":1,\"333\":1,\"335\":1,\"351\":1,\"361\":1,\"362\":1,\"382\":1,\"399\":1,\"670\":2}}],[\"documents\",{\"1\":{\"270\":1}}],[\"doctype\",{\"1\":{\"324\":1}}],[\"doc\",{\"1\":{\"289\":7,\"290\":2,\"291\":5,\"292\":1,\"293\":1,\"296\":1,\"299\":2,\"313\":1,\"335\":2,\"341\":2,\"351\":2}}],[\"docker0\",{\"1\":{\"799\":1}}],[\"docker安装并配置mysql环境\",{\"0\":{\"690\":1}}],[\"docker常用命令\",{\"0\":{\"688\":1}}],[\"docker中国官方镜像\",{\"1\":{\"686\":1}}],[\"dockerhub\",{\"1\":{\"686\":1}}],[\"dockerd\",{\"1\":{\"683\":1,\"687\":1}}],[\"docker\",{\"0\":{\"686\":1,\"701\":1},\"1\":{\"281\":5,\"283\":4,\"284\":1,\"679\":1,\"680\":12,\"681\":2,\"682\":2,\"683\":2,\"684\":2,\"685\":2,\"686\":2,\"687\":3,\"689\":17,\"690\":2,\"691\":4,\"692\":1,\"693\":2,\"695\":1,\"699\":1,\"714\":3,\"716\":1,\"757\":1,\"800\":1,\"809\":6}}],[\"domain\",{\"1\":{\"134\":4,\"351\":1}}],[\"dog也是实现了iswimable接口的\",{\"1\":{\"104\":1}}],[\"dog\",{\"1\":{\"103\":2,\"104\":2,\"107\":4,\"108\":2,\"595\":2}}],[\"dog类\",{\"1\":{\"103\":1,\"104\":1}}],[\"don\",{\"1\":{\"10\":1}}],[\"<file>\",{\"1\":{\"806\":1}}],[\"<none>\",{\"1\":{\"788\":1,\"807\":2}}],[\"<hostname>\",{\"1\":{\"715\":1}}],[\"<分支名称>\",{\"1\":{\"706\":2}}],[\"<my\",{\"1\":{\"687\":2}}],[\"<remaining>\",{\"1\":{\"657\":1}}],[\"<relativepath\",{\"1\":{\"655\":1}}],[\"<parent>\",{\"1\":{\"655\":1}}],[\"<project\",{\"1\":{\"636\":2}}],[\"<property\",{\"1\":{\"495\":6}}],[\"<properties>\",{\"1\":{\"324\":1,\"495\":1,\"636\":1,\"655\":1}}],[\"<type>pom<\",{\"1\":{\"636\":2,\"655\":1}}],[\"<t>\",{\"1\":{\"135\":2}}],[\"<java\",{\"1\":{\"636\":1}}],[\"<version>2\",{\"1\":{\"655\":1}}],[\"<version>1\",{\"1\":{\"495\":1}}],[\"<version>3\",{\"1\":{\"495\":1}}],[\"<version>$\",{\"1\":{\"495\":3,\"636\":2,\"655\":1}}],[\"<version>4\",{\"1\":{\"495\":1}}],[\"<version>5\",{\"1\":{\"495\":1}}],[\"<version>7\",{\"1\":{\"495\":7,\"496\":2}}],[\"<groupid>com\",{\"1\":{\"626\":1,\"630\":1,\"636\":2,\"658\":2}}],[\"<groupid>commons\",{\"1\":{\"495\":1}}],[\"<groupid>log4j<\",{\"1\":{\"495\":1}}],[\"<groupid>junit<\",{\"1\":{\"495\":1}}],[\"<groupid>mysql<\",{\"1\":{\"495\":1}}],[\"<groupid>org\",{\"1\":{\"329\":1,\"379\":1,\"495\":10,\"496\":3,\"635\":1,\"636\":3,\"655\":3,\"658\":1,\"675\":1,\"676\":1}}],[\"<artifactid>commons\",{\"1\":{\"495\":1}}],[\"<artifactid>mybatis<\",{\"1\":{\"495\":1,\"496\":1}}],[\"<artifactid>mysql\",{\"1\":{\"495\":1}}],[\"<artifactid>slf4j\",{\"1\":{\"495\":2}}],[\"<artifactid>spring\",{\"1\":{\"329\":1,\"379\":1,\"626\":1,\"630\":1,\"635\":1,\"636\":5,\"655\":3,\"658\":3,\"675\":1,\"676\":1}}],[\"<artifactid>log4j<\",{\"1\":{\"495\":1}}],[\"<artifactid>junit<\",{\"1\":{\"495\":1}}],[\"<artifactid>activiti\",{\"1\":{\"495\":7,\"496\":2}}],[\"<dependencymanagement>\",{\"1\":{\"636\":1,\"655\":1}}],[\"<dependency>\",{\"1\":{\"329\":1,\"379\":1,\"495\":14,\"496\":2,\"626\":1,\"630\":1,\"635\":1,\"636\":5,\"655\":2,\"658\":3,\"675\":1,\"676\":1}}],[\"<dependencies>\",{\"1\":{\"495\":1,\"636\":1,\"655\":1}}],[\"<log4j\",{\"1\":{\"495\":1}}],[\"<bean\",{\"1\":{\"495\":2}}],[\"<beans\",{\"1\":{\"495\":1}}],[\"<bytes>\",{\"1\":{\"463\":1}}],[\"<b>\",{\"1\":{\"341\":2,\"345\":1}}],[\"<changes>\",{\"1\":{\"451\":1}}],[\"<comment>ik\",{\"1\":{\"324\":1}}],[\"<segment>\",{\"1\":{\"658\":1}}],[\"<seconds>\",{\"1\":{\"451\":1}}],[\"<scope>import<\",{\"1\":{\"636\":2,\"655\":1}}],[\"<spring\",{\"1\":{\"636\":2,\"655\":1}}],[\"<span\",{\"1\":{\"348\":1}}],[\"<slf4j\",{\"1\":{\"495\":1}}],[\"<exclusion>\",{\"1\":{\"496\":1}}],[\"<exclusions>\",{\"1\":{\"496\":1}}],[\"<em>\",{\"1\":{\"346\":1}}],[\"<entry\",{\"1\":{\"324\":4}}],[\"<容器\",{\"1\":{\"284\":1}}],[\"<<eof\",{\"1\":{\"715\":1}}],[\"<<\",{\"1\":{\"151\":2,\"683\":1,\"684\":1,\"715\":1,\"752\":1,\"783\":1,\"784\":1,\"786\":1,\"790\":1,\"791\":1,\"793\":1,\"814\":1}}],[\"<=\",{\"1\":{\"10\":1,\"41\":1,\"107\":2,\"151\":1,\"257\":2}}],[\"<\",{\"1\":{\"10\":4,\"41\":1,\"151\":3,\"206\":1,\"218\":2,\"219\":2,\"225\":1,\"233\":1,\"324\":9,\"329\":1,\"341\":2,\"346\":1,\"348\":1,\"379\":1,\"495\":26,\"496\":6,\"591\":1,\"598\":1,\"599\":1,\"626\":2,\"630\":2,\"635\":2,\"636\":14,\"655\":8,\"658\":6,\"675\":1,\"676\":2}}],[\">>\",{\"1\":{\"715\":1}}],[\">0\",{\"1\":{\"506\":1}}],[\">words\",{\"1\":{\"324\":2}}],[\"><\",{\"1\":{\"324\":1}}],[\">mydic\",{\"1\":{\"324\":1}}],[\">config目录\",{\"1\":{\"323\":1,\"324\":1}}],[\">ik\",{\"1\":{\"323\":1,\"324\":1}}],[\">string\",{\"1\":{\"239\":1}}],[\">byte\",{\"1\":{\"239\":1}}],[\">=\",{\"1\":{\"41\":2,\"257\":2}}],[\">\",{\"1\":{\"10\":4,\"51\":1,\"128\":2,\"133\":2,\"150\":1,\"151\":1,\"206\":1,\"222\":2,\"233\":2,\"324\":8,\"348\":1,\"355\":1,\"356\":1,\"495\":13,\"496\":2,\"499\":2,\"565\":1,\"598\":1,\"626\":1,\"630\":1,\"635\":1,\"636\":4,\"655\":2,\"657\":4,\"658\":3,\"665\":1,\"671\":6,\"676\":1,\"683\":1,\"684\":1,\"715\":1,\"729\":1,\"730\":1,\"731\":2,\"734\":2,\"737\":2,\"740\":2,\"743\":2,\"744\":2,\"746\":1,\"752\":1,\"756\":1,\"783\":1,\"784\":1,\"786\":1,\"790\":1,\"791\":1,\"793\":1,\"814\":1,\"822\":2}}],[\"il\",{\"1\":{\"295\":1,\"299\":1}}],[\"illegalargumentexception\",{\"1\":{\"257\":1}}],[\"illegalaccessexception\",{\"1\":{\"126\":1,\"135\":3}}],[\"illegalmonitorstateexeception\",{\"1\":{\"222\":1}}],[\"i18n\",{\"1\":{\"284\":1}}],[\"i10\",{\"1\":{\"41\":2}}],[\"ippoollist\",{\"1\":{\"813\":1}}],[\"ippool\",{\"1\":{\"813\":3}}],[\"ip=192\",{\"1\":{\"809\":1}}],[\"ipinipmtu=1440\",{\"1\":{\"809\":1}}],[\"ipipmode\",{\"1\":{\"813\":1}}],[\"ipip=off\",{\"1\":{\"809\":1}}],[\"ipip=\",{\"1\":{\"806\":2}}],[\"ipip\",{\"1\":{\"806\":2}}],[\"ipv6\",{\"1\":{\"812\":2}}],[\"ipv6support=false\",{\"1\":{\"809\":1}}],[\"ipv6support\",{\"1\":{\"806\":1}}],[\"ipv4pool\",{\"1\":{\"805\":1,\"806\":6,\"809\":2}}],[\"ipv4\",{\"1\":{\"715\":1,\"812\":1,\"813\":1}}],[\"ipam的ip地址池\",{\"1\":{\"806\":1}}],[\"ipam的可执行文件\",{\"1\":{\"806\":1}}],[\"ipam\",{\"1\":{\"806\":1}}],[\"ipam中的\",{\"1\":{\"806\":1}}],[\"ipad\",{\"1\":{\"351\":1}}],[\"ip自行修改\",{\"1\":{\"761\":1,\"785\":1}}],[\"iptables规则等\",{\"1\":{\"803\":1}}],[\"iptables\",{\"1\":{\"715\":1}}],[\"ip6tables\",{\"1\":{\"715\":1}}],[\"ip地址的方式\",{\"1\":{\"806\":1}}],[\"ip地址\",{\"1\":{\"714\":1,\"803\":1}}],[\"iproductservice\",{\"1\":{\"639\":1}}],[\"ips\",{\"1\":{\"351\":1}}],[\"iphonexr限时特惠\",{\"1\":{\"351\":1}}],[\"iphone\",{\"1\":{\"351\":1}}],[\"ip\",{\"0\":{\"813\":1},\"1\":{\"283\":2,\"715\":2,\"733\":2,\"736\":2,\"764\":2,\"771\":1,\"806\":7,\"809\":1,\"822\":2}}],[\"ik分词器本身也提供了自定义词库\",{\"1\":{\"323\":1}}],[\"ik分词器分词的原理是在源文件中收集了很多词汇\",{\"1\":{\"322\":1}}],[\"ik\",{\"0\":{\"317\":1,\"318\":1,\"320\":1,\"321\":1},\"1\":{\"265\":2,\"317\":6,\"318\":3,\"320\":1,\"321\":1,\"326\":1,\"332\":6,\"335\":3,\"341\":5,\"351\":6}}],[\"id集合\",{\"1\":{\"671\":3}}],[\"id对应画图时的id\",{\"1\":{\"540\":1}}],[\"id字段\",{\"1\":{\"363\":1}}],[\"id字段类似于文档的主键\",{\"1\":{\"363\":1}}],[\"id字段表示mongodb文档中的唯一值\",{\"1\":{\"363\":1}}],[\"id字段设置为主键\",{\"1\":{\"362\":1}}],[\"id=5\",{\"1\":{\"353\":1}}],[\"id=4\",{\"1\":{\"353\":1}}],[\"id=11\",{\"1\":{\"352\":1}}],[\"id=10\",{\"1\":{\"352\":1}}],[\"id=\",{\"1\":{\"352\":2,\"399\":1,\"495\":2,\"503\":2}}],[\"id>\",{\"1\":{\"284\":1}}],[\"ids\",{\"1\":{\"277\":1}}],[\"id\",{\"0\":{\"566\":1,\"578\":1},\"1\":{\"262\":4,\"277\":1,\"289\":8,\"290\":3,\"291\":1,\"293\":3,\"295\":1,\"299\":1,\"332\":2,\"335\":1,\"341\":3,\"348\":1,\"351\":27,\"363\":1,\"364\":3,\"382\":2,\"399\":3,\"503\":2,\"505\":2,\"524\":1,\"526\":1,\"534\":2,\"535\":3,\"536\":3,\"537\":5,\"538\":3,\"540\":10,\"541\":7,\"542\":7,\"543\":6,\"544\":5,\"545\":6,\"546\":6,\"547\":5,\"548\":7,\"549\":6,\"550\":5,\"551\":8,\"552\":5,\"553\":5,\"554\":6,\"555\":6,\"556\":8,\"557\":6,\"558\":5,\"567\":1,\"568\":2,\"569\":1,\"576\":1,\"591\":2,\"631\":1,\"632\":1,\"654\":1,\"656\":4,\"658\":1,\"660\":1,\"661\":1,\"662\":2,\"663\":1,\"665\":2,\"670\":1,\"709\":1}}],[\"id来开启的\",{\"1\":{\"262\":1}}],[\"identity\",{\"1\":{\"671\":1}}],[\"identitylink\",{\"0\":{\"541\":1,\"555\":1},\"1\":{\"503\":1,\"533\":2}}],[\"identified\",{\"1\":{\"406\":2,\"409\":1,\"420\":1,\"698\":1}}],[\"ide工具破解\",{\"0\":{\"25\":1}}],[\"ide\",{\"1\":{\"19\":1,\"488\":1}}],[\"idea64\",{\"1\":{\"27\":1}}],[\"idea\",{\"0\":{\"18\":1},\"1\":{\"19\":1,\"23\":1,\"25\":1,\"26\":1,\"27\":4}}],[\"ioutils\",{\"1\":{\"511\":2}}],[\"io流\",{\"0\":{\"258\":1}}],[\"ioexception\",{\"1\":{\"244\":1,\"248\":1,\"252\":1,\"253\":1,\"256\":2,\"257\":8}}],[\"io\",{\"1\":{\"244\":1,\"251\":1,\"254\":2,\"255\":1,\"327\":1,\"616\":2,\"618\":1,\"653\":1,\"749\":1,\"784\":1,\"788\":1,\"791\":1,\"800\":1,\"814\":6}}],[\"io包中的类命名规则\",{\"1\":{\"240\":1}}],[\"io包中的类是按照\",{\"1\":{\"240\":1}}],[\"i++\",{\"1\":{\"206\":1,\"218\":2,\"219\":2,\"225\":1,\"233\":1,\"591\":1,\"598\":1,\"599\":1}}],[\"iwalkable\",{\"1\":{\"95\":1}}],[\"implied\",{\"1\":{\"699\":1}}],[\"impl\",{\"1\":{\"495\":1}}],[\"implements\",{\"1\":{\"62\":1,\"95\":1,\"104\":2,\"189\":1,\"206\":1,\"219\":1,\"254\":2,\"256\":1,\"262\":1,\"477\":3,\"518\":1,\"562\":1,\"604\":1,\"606\":1,\"666\":1,\"670\":1,\"671\":1}}],[\"import\",{\"1\":{\"76\":1,\"115\":2,\"589\":1,\"591\":1,\"596\":1,\"597\":1,\"601\":1,\"669\":3}}],[\"imagefs\",{\"1\":{\"784\":1}}],[\"image=registry\",{\"1\":{\"783\":1}}],[\"imageurl\",{\"1\":{\"382\":1}}],[\"images\",{\"1\":{\"17\":1}}],[\"image\",{\"1\":{\"16\":1,\"382\":1,\"496\":1,\"783\":1,\"806\":1}}],[\"itzgr\",{\"1\":{\"799\":1}}],[\"its\",{\"1\":{\"495\":2,\"699\":1}}],[\"iterator\",{\"1\":{\"172\":3}}],[\"iterator<t>\",{\"1\":{\"172\":1}}],[\"iterable\",{\"0\":{\"172\":1},\"1\":{\"172\":2}}],[\"it\",{\"1\":{\"41\":1,\"172\":3,\"284\":1,\"689\":2,\"695\":1,\"699\":3}}],[\"ignore\",{\"1\":{\"41\":1}}],[\"i\",{\"0\":{\"235\":1,\"255\":1},\"1\":{\"41\":9,\"198\":1,\"206\":2,\"214\":1,\"215\":1,\"218\":6,\"219\":6,\"225\":4,\"233\":3,\"235\":1,\"478\":3,\"590\":1,\"591\":3,\"597\":1,\"598\":4,\"599\":4,\"800\":1,\"805\":1,\"822\":2}}],[\"i9\",{\"1\":{\"41\":2}}],[\"i8\",{\"1\":{\"41\":2}}],[\"i7\",{\"1\":{\"41\":2,\"351\":1}}],[\"i6\",{\"1\":{\"41\":2}}],[\"i5\",{\"1\":{\"41\":2,\"351\":1,\"353\":1}}],[\"issues39701\",{\"1\":{\"800\":1}}],[\"issuspended\",{\"1\":{\"514\":2}}],[\"isnotempty\",{\"1\":{\"670\":1}}],[\"isnull\",{\"1\":{\"670\":2}}],[\"isautoexec\",{\"1\":{\"484\":5}}],[\"isp\",{\"1\":{\"468\":2}}],[\"ispoweroftwo\",{\"1\":{\"10\":1}}],[\"isinserving\",{\"1\":{\"382\":1}}],[\"isblank\",{\"1\":{\"262\":1}}],[\"isdebugenabled\",{\"1\":{\"262\":2}}],[\"isdirectory\",{\"1\":{\"236\":1}}],[\"iso8601\",{\"1\":{\"495\":2}}],[\"iso\",{\"1\":{\"238\":1}}],[\"isempty\",{\"1\":{\"176\":1,\"193\":1}}],[\"isecct\",{\"1\":{\"23\":1}}],[\"iswimable\",{\"1\":{\"104\":5}}],[\"is\",{\"0\":{\"385\":1},\"1\":{\"41\":1,\"138\":1,\"316\":1,\"382\":1,\"385\":1,\"495\":2,\"540\":6,\"550\":1,\"616\":1,\"643\":1,\"699\":4,\"756\":1,\"812\":1}}],[\"ieda\",{\"1\":{\"23\":1}}],[\"iconurl\",{\"1\":{\"382\":1}}],[\"iconfont\",{\"1\":{\"16\":3}}],[\"icon\",{\"1\":{\"15\":1,\"16\":3,\"17\":2,\"382\":1}}],[\"inodesfree\",{\"1\":{\"784\":1}}],[\"initca\",{\"1\":{\"731\":1}}],[\"initialization\",{\"1\":{\"670\":1}}],[\"initial\",{\"1\":{\"282\":1,\"752\":8,\"755\":4}}],[\"inid\",{\"1\":{\"705\":1}}],[\"inc\",{\"1\":{\"699\":1}}],[\"including\",{\"1\":{\"699\":1}}],[\"includedir\",{\"1\":{\"699\":2}}],[\"included\",{\"1\":{\"699\":2}}],[\"include\",{\"0\":{\"677\":1},\"1\":{\"635\":1}}],[\"inclusivegateway\",{\"1\":{\"531\":1}}],[\"incremental\",{\"1\":{\"455\":1}}],[\"incrby\",{\"1\":{\"440\":3}}],[\"incr\",{\"1\":{\"440\":3}}],[\"infra\",{\"1\":{\"783\":2}}],[\"info\",{\"0\":{\"536\":1},\"1\":{\"449\":1,\"495\":2,\"533\":1,\"536\":1,\"537\":1,\"633\":1,\"670\":1,\"671\":7,\"812\":1}}],[\"infinite\",{\"1\":{\"10\":1}}],[\"ingalls\",{\"1\":{\"327\":1}}],[\"indices\",{\"1\":{\"273\":1,\"288\":2}}],[\"indexcoordinate\",{\"1\":{\"350\":1}}],[\"indexcoordinates\",{\"1\":{\"338\":3,\"348\":1,\"353\":3,\"354\":1}}],[\"indexops\",{\"1\":{\"338\":3}}],[\"indexstoretype\",{\"1\":{\"333\":1}}],[\"indexname\",{\"1\":{\"332\":1,\"333\":1,\"351\":1}}],[\"index\",{\"0\":{\"273\":1},\"1\":{\"17\":1,\"147\":1,\"176\":4,\"273\":1,\"275\":1,\"289\":1,\"290\":2,\"291\":1,\"293\":2,\"295\":2,\"299\":1,\"332\":1,\"334\":1,\"335\":1,\"341\":1,\"351\":2,\"362\":2,\"417\":2,\"442\":1,\"590\":2,\"633\":1,\"707\":3}}],[\"inversion\",{\"1\":{\"468\":1}}],[\"invalidclassexception\",{\"1\":{\"254\":1}}],[\"invocationtargetexception\",{\"1\":{\"135\":2}}],[\"invoke\",{\"1\":{\"128\":4,\"135\":2}}],[\"inputstream\",{\"0\":{\"242\":1},\"1\":{\"240\":3,\"242\":2,\"256\":3,\"257\":6,\"478\":1,\"502\":4,\"511\":2,\"567\":1,\"568\":4}}],[\"ins\",{\"1\":{\"591\":2}}],[\"inst\",{\"1\":{\"540\":2,\"541\":1,\"542\":1,\"544\":1,\"548\":1,\"550\":1,\"551\":2,\"552\":1,\"553\":1,\"554\":2,\"555\":1,\"556\":1,\"557\":1,\"558\":1}}],[\"installation\",{\"1\":{\"805\":1}}],[\"install\",{\"1\":{\"317\":2,\"367\":1,\"370\":1,\"371\":1,\"374\":2,\"377\":1,\"680\":2,\"683\":1,\"715\":1,\"753\":1,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1,\"806\":1,\"809\":1,\"822\":1,\"824\":1,\"825\":2}}],[\"instanceid\",{\"1\":{\"572\":3,\"576\":3,\"578\":2}}],[\"instance\",{\"1\":{\"495\":1,\"503\":1,\"506\":2,\"513\":4,\"523\":3,\"543\":1,\"545\":1,\"546\":1,\"547\":1,\"549\":1,\"556\":1,\"671\":1}}],[\"instanceof\",{\"0\":{\"108\":1},\"1\":{\"108\":4,\"569\":1}}],[\"instantiationexception\",{\"1\":{\"135\":1}}],[\"insert\",{\"1\":{\"147\":2,\"273\":1,\"414\":2,\"417\":3}}],[\"inner3\",{\"1\":{\"83\":1}}],[\"inner2\",{\"1\":{\"82\":1}}],[\"inner1\",{\"1\":{\"81\":1}}],[\"innerexample\",{\"1\":{\"81\":1,\"82\":1,\"83\":1}}],[\"inner\",{\"1\":{\"80\":1}}],[\"innerclass\",{\"1\":{\"75\":4}}],[\"in\",{\"1\":{\"41\":1,\"62\":1,\"244\":2,\"248\":2,\"249\":1,\"252\":2,\"253\":2,\"254\":2,\"257\":14,\"262\":2,\"382\":1,\"412\":1,\"422\":2,\"423\":2,\"424\":1,\"697\":1,\"699\":5}}],[\"int32\",{\"1\":{\"595\":1}}],[\"int16\",{\"1\":{\"595\":1}}],[\"int8\",{\"1\":{\"595\":1}}],[\"int64\",{\"1\":{\"594\":1,\"595\":3}}],[\"int等\",{\"1\":{\"544\":1}}],[\"intro=3k全面屏开启无界视野\",{\"1\":{\"353\":1}}],[\"intro=\",{\"1\":{\"352\":1,\"353\":1}}],[\"intro=限时优惠200\",{\"1\":{\"352\":1}}],[\"intro\",{\"1\":{\"351\":14}}],[\"introduce\",{\"1\":{\"278\":1,\"436\":1}}],[\"introspectionexception\",{\"1\":{\"134\":1,\"135\":2}}],[\"introspector\",{\"0\":{\"130\":1},\"1\":{\"131\":1,\"133\":2,\"134\":1,\"135\":2}}],[\"integration\",{\"0\":{\"547\":1},\"1\":{\"533\":1}}],[\"integercachehighpropvalue\",{\"1\":{\"41\":3}}],[\"integercache\",{\"1\":{\"41\":8}}],[\"integer\",{\"1\":{\"40\":1,\"41\":24,\"53\":1,\"151\":3,\"152\":4,\"351\":3,\"364\":1,\"440\":8,\"441\":5,\"442\":2,\"443\":7,\"444\":1}}],[\"integer包装类\",{\"1\":{\"40\":1}}],[\"interceptor\",{\"1\":{\"645\":1}}],[\"intern方法也是没有任何关系的\",{\"1\":{\"155\":1}}],[\"intern\",{\"0\":{\"136\":1,\"153\":1,\"155\":1},\"1\":{\"137\":1,\"153\":1,\"155\":9,\"156\":2}}],[\"interned\",{\"1\":{\"41\":1}}],[\"interface=eth\",{\"1\":{\"806\":1}}],[\"interface=enp\",{\"1\":{\"806\":1}}],[\"interface\",{\"1\":{\"84\":1,\"93\":1,\"95\":2,\"104\":1,\"189\":1,\"190\":1,\"333\":1,\"334\":1,\"335\":1,\"351\":1,\"383\":1,\"391\":1,\"468\":1,\"477\":1,\"594\":4,\"598\":3,\"599\":5,\"605\":1,\"639\":1}}],[\"interruptedexception\",{\"1\":{\"51\":1,\"221\":2,\"222\":3,\"225\":1}}],[\"intellij\",{\"1\":{\"23\":1,\"25\":1,\"27\":1}}],[\"into\",{\"1\":{\"10\":1,\"41\":1}}],[\"int\",{\"1\":{\"9\":1,\"10\":2,\"38\":1,\"40\":3,\"41\":9,\"46\":5,\"47\":3,\"48\":4,\"51\":1,\"58\":1,\"72\":5,\"73\":2,\"75\":2,\"78\":1,\"89\":4,\"123\":3,\"127\":1,\"128\":1,\"133\":1,\"134\":2,\"146\":1,\"147\":6,\"149\":1,\"150\":1,\"151\":5,\"176\":5,\"184\":1,\"189\":3,\"190\":1,\"197\":4,\"198\":3,\"206\":2,\"218\":2,\"219\":2,\"225\":1,\"233\":1,\"242\":2,\"243\":3,\"244\":1,\"246\":2,\"247\":3,\"248\":1,\"252\":1,\"254\":1,\"256\":1,\"257\":9,\"353\":2,\"382\":1,\"393\":2,\"535\":3,\"536\":1,\"537\":2,\"538\":1,\"539\":1,\"540\":11,\"541\":1,\"542\":3,\"543\":2,\"544\":1,\"545\":2,\"546\":2,\"548\":1,\"549\":1,\"552\":1,\"554\":1,\"557\":1,\"558\":1,\"588\":3,\"589\":2,\"590\":5,\"591\":1,\"592\":2,\"594\":8,\"595\":4,\"596\":3,\"597\":2,\"601\":2,\"670\":2,\"671\":1}}],[\"iface=iface\",{\"1\":{\"800\":1}}],[\"iface参数指定集群主机内网网卡的名称\",{\"1\":{\"800\":1}}],[\"ifly\",{\"1\":{\"84\":5}}],[\"if\",{\"1\":{\"10\":3,\"41\":3,\"58\":2,\"60\":2,\"149\":1,\"150\":1,\"151\":2,\"206\":1,\"225\":1,\"257\":3,\"262\":3,\"355\":1,\"356\":1,\"484\":2,\"506\":1,\"514\":2,\"518\":2,\"565\":1,\"569\":2,\"575\":1,\"591\":1,\"598\":4,\"599\":2,\"665\":1,\"670\":2,\"671\":1,\"699\":1}}],[\"+x\",{\"1\":{\"680\":1,\"726\":1}}],[\"+processinstanceid+\",{\"1\":{\"514\":3}}],[\"+processdefinitionid+\",{\"1\":{\"514\":2}}],[\"+definition\",{\"1\":{\"509\":5}}],[\"+taskcomments\",{\"1\":{\"506\":1}}],[\"+instance\",{\"1\":{\"506\":4,\"513\":1}}],[\"+2\",{\"1\":{\"151\":2}}],[\"+=\",{\"1\":{\"10\":1,\"149\":1}}],[\"+\",{\"0\":{\"676\":1},\"1\":{\"10\":1,\"23\":3,\"41\":2,\"53\":2,\"82\":1,\"123\":2,\"129\":2,\"134\":2,\"149\":1,\"150\":1,\"151\":1,\"155\":3,\"168\":2,\"173\":2,\"206\":2,\"218\":2,\"219\":2,\"225\":1,\"233\":1,\"240\":3,\"305\":1,\"356\":4,\"399\":6,\"412\":6,\"422\":6,\"440\":1,\"477\":4,\"502\":4,\"503\":6,\"504\":4,\"505\":1,\"513\":6,\"514\":2,\"523\":2,\"527\":4,\"596\":1,\"636\":1,\"639\":2,\"658\":1,\"665\":2,\"668\":1,\"697\":15,\"699\":18,\"812\":18}}],[\"rsa\",{\"1\":{\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"r1\",{\"1\":{\"726\":2}}],[\"rbac是更好的选择\",{\"1\":{\"724\":1}}],[\"rbac\",{\"1\":{\"724\":1,\"814\":8}}],[\"rf\",{\"1\":{\"706\":1,\"825\":2}}],[\"r是一个客户端负载均衡器\",{\"1\":{\"644\":1}}],[\"raw\",{\"1\":{\"800\":1,\"818\":1}}],[\"rabbitmq\",{\"1\":{\"613\":1}}],[\"randomloadbalancer\",{\"1\":{\"647\":2}}],[\"randomloadbalancerconfig\",{\"1\":{\"647\":1,\"648\":1}}],[\"random\",{\"1\":{\"464\":2}}],[\"range=30000\",{\"1\":{\"764\":1}}],[\"range=10\",{\"1\":{\"764\":1,\"771\":1}}],[\"range\",{\"0\":{\"309\":1},\"1\":{\"41\":2,\"309\":2,\"310\":1,\"598\":1,\"736\":1,\"764\":2}}],[\"ri\",{\"1\":{\"715\":1}}],[\"ribbon的\",{\"1\":{\"658\":1,\"676\":1}}],[\"ribbon就进入维护状态\",{\"1\":{\"643\":1}}],[\"ribbon\",{\"0\":{\"643\":1},\"1\":{\"610\":1,\"612\":1,\"635\":2,\"643\":5,\"644\":1,\"658\":1,\"676\":1}}],[\"right\",{\"1\":{\"401\":1}}],[\"rules\",{\"1\":{\"814\":1}}],[\"ru\",{\"0\":{\"540\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"549\":1},\"1\":{\"503\":3,\"533\":10}}],[\"ruoyiapplication\",{\"1\":{\"497\":2}}],[\"runable\",{\"1\":{\"218\":1}}],[\"runnableexample\",{\"1\":{\"219\":1}}],[\"runnable\",{\"0\":{\"219\":1},\"1\":{\"206\":1,\"217\":2,\"219\":2}}],[\"running\",{\"1\":{\"23\":1,\"812\":1,\"822\":1}}],[\"run\",{\"1\":{\"73\":1,\"75\":1,\"160\":1,\"206\":1,\"214\":1,\"218\":3,\"219\":2,\"221\":1,\"223\":1,\"281\":1,\"283\":1,\"497\":1,\"513\":1,\"637\":1,\"648\":1,\"670\":1,\"689\":1,\"692\":1,\"809\":7}}],[\"runtimeservice\",{\"1\":{\"500\":2,\"503\":6,\"513\":4,\"514\":5,\"523\":3,\"571\":1,\"572\":1,\"573\":1}}],[\"runtime\",{\"1\":{\"10\":2,\"37\":1,\"605\":1}}],[\"rdb和aof混合方式\",{\"0\":{\"456\":1}}],[\"rdb和aof机制详解\",{\"1\":{\"427\":1}}],[\"rdb文件是二进制的\",{\"1\":{\"452\":1}}],[\"rdb文件是某个时间节点的快照\",{\"1\":{\"452\":1}}],[\"rdb方式实时性不够\",{\"1\":{\"452\":1}}],[\"rdbchecksum\",{\"1\":{\"451\":1}}],[\"rdbcompression\",{\"1\":{\"451\":2}}],[\"rdb持久化过程由子进程负责\",{\"1\":{\"449\":1}}],[\"rdb持久化是把当前进程数据生成快照保存到硬盘的过程\",{\"1\":{\"448\":1}}],[\"rdb\",{\"0\":{\"448\":1,\"452\":1},\"1\":{\"447\":1,\"451\":1,\"456\":1,\"457\":1}}],[\"r方法\",{\"1\":{\"435\":1}}],[\"r\",{\"1\":{\"376\":2,\"744\":1,\"755\":3,\"781\":2,\"800\":1}}],[\"rmi\",{\"1\":{\"689\":1}}],[\"rm\",{\"1\":{\"376\":2,\"689\":3,\"706\":1,\"809\":1,\"825\":2}}],[\"rpop\",{\"1\":{\"442\":3}}],[\"rpush\",{\"1\":{\"442\":3}}],[\"rp645显卡\",{\"1\":{\"351\":1}}],[\"rpc\",{\"1\":{\"610\":1}}],[\"rpc服务\",{\"1\":{\"610\":1}}],[\"rpccontext\",{\"1\":{\"262\":1}}],[\"rpcxid\",{\"1\":{\"262\":5}}],[\"roleref\",{\"1\":{\"814\":1}}],[\"roles\",{\"1\":{\"788\":1,\"807\":1}}],[\"rolebinding\",{\"1\":{\"742\":1}}],[\"role\",{\"1\":{\"724\":1,\"742\":1}}],[\"routeid\",{\"1\":{\"671\":2}}],[\"routeitem\",{\"1\":{\"670\":6}}],[\"router\",{\"1\":{\"670\":1}}],[\"routelist\",{\"1\":{\"670\":3}}],[\"routelocatorbuilder\",{\"1\":{\"657\":2}}],[\"routelocator\",{\"1\":{\"657\":2}}],[\"routedefinition>\",{\"1\":{\"671\":5}}],[\"routedefinitionrepository\",{\"1\":{\"671\":7}}],[\"routedefinition\",{\"1\":{\"670\":10,\"671\":3}}],[\"routes\",{\"1\":{\"656\":1,\"657\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"665\":2,\"670\":2}}],[\"route\",{\"1\":{\"654\":1,\"657\":2,\"658\":1,\"660\":1,\"661\":1,\"662\":2,\"665\":2,\"671\":17,\"803\":2}}],[\"routine\",{\"1\":{\"417\":5}}],[\"roundupsize\",{\"1\":{\"10\":6}}],[\"root都到手了\",{\"1\":{\"719\":1}}],[\"root你的机器后让我们集群依然安全吗\",{\"1\":{\"719\":1}}],[\"rootcategory=debug\",{\"1\":{\"495\":1}}],[\"rootcategory=info\",{\"1\":{\"495\":1}}],[\"rootcontext\",{\"1\":{\"262\":8}}],[\"root\",{\"0\":{\"411\":1,\"698\":1},\"1\":{\"408\":2,\"411\":5,\"495\":2,\"540\":2,\"692\":2,\"696\":1,\"697\":1,\"698\":3,\"744\":1,\"755\":3,\"771\":1,\"781\":4,\"785\":1}}],[\"rows\",{\"1\":{\"411\":3,\"697\":1,\"699\":2}}],[\"row\",{\"1\":{\"362\":1,\"412\":1,\"422\":1}}],[\"road\",{\"1\":{\"306\":1}}],[\"remaining\",{\"1\":{\"657\":1}}],[\"remote\",{\"1\":{\"324\":2,\"430\":1}}],[\"removedid\",{\"1\":{\"671\":3}}],[\"removeddefinitionids\",{\"1\":{\"671\":5}}],[\"removed\",{\"1\":{\"671\":2}}],[\"removedefinitions\",{\"1\":{\"671\":2}}],[\"removelast\",{\"1\":{\"180\":1}}],[\"removefirst\",{\"1\":{\"180\":1}}],[\"removeall\",{\"1\":{\"176\":1}}],[\"remove\",{\"1\":{\"176\":2,\"180\":1,\"184\":1,\"193\":1}}],[\"recommended\",{\"1\":{\"818\":3}}],[\"recreate\",{\"1\":{\"671\":1}}],[\"received\",{\"1\":{\"699\":1}}],[\"receiveconfiginfo\",{\"1\":{\"670\":1}}],[\"recently\",{\"1\":{\"463\":1}}],[\"recketmq\",{\"1\":{\"613\":1}}],[\"reactor\",{\"1\":{\"653\":1}}],[\"reactorloadbalancer<serviceinstance>\",{\"1\":{\"647\":1}}],[\"reactorloadbalancerexchangefilterfunction\",{\"1\":{\"645\":1}}],[\"reason\",{\"1\":{\"551\":1,\"556\":1,\"557\":1}}],[\"readonlyport\",{\"1\":{\"784\":1}}],[\"readobject\",{\"1\":{\"254\":2}}],[\"readtimeout\",{\"1\":{\"651\":1}}],[\"readlimit\",{\"1\":{\"257\":2}}],[\"readline\",{\"1\":{\"253\":2}}],[\"reader\",{\"0\":{\"246\":1},\"1\":{\"240\":2,\"246\":1,\"253\":1,\"478\":1}}],[\"ready\",{\"1\":{\"160\":1,\"807\":2,\"822\":1}}],[\"readmethod\",{\"1\":{\"133\":1,\"134\":2}}],[\"read\",{\"1\":{\"1\":1,\"17\":1,\"242\":2,\"244\":1,\"246\":2,\"248\":1,\"252\":1,\"256\":1,\"257\":8,\"651\":1}}],[\"re\",{\"0\":{\"534\":1,\"535\":1,\"537\":1},\"1\":{\"502\":2,\"533\":3}}],[\"reuse\",{\"1\":{\"468\":1}}],[\"rewritepath=\",{\"1\":{\"658\":1}}],[\"rewritepath\",{\"1\":{\"657\":2}}],[\"rewrite\",{\"1\":{\"455\":4}}],[\"rev\",{\"1\":{\"535\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"548\":1,\"549\":1,\"552\":1,\"554\":1,\"558\":1}}],[\"revoke\",{\"0\":{\"418\":1},\"1\":{\"418\":2}}],[\"reverse\",{\"1\":{\"198\":1}}],[\"regexp\",{\"1\":{\"392\":2,\"397\":1}}],[\"regex\",{\"1\":{\"386\":2}}],[\"regular\",{\"1\":{\"364\":1}}],[\"registered\",{\"1\":{\"670\":1}}],[\"regist\",{\"1\":{\"161\":2}}],[\"registry\",{\"1\":{\"23\":1,\"684\":2,\"686\":1,\"687\":3,\"800\":1}}],[\"retentionpolicy\",{\"1\":{\"605\":1}}],[\"retention\",{\"1\":{\"605\":1}}],[\"retlist\",{\"1\":{\"596\":2}}],[\"retries\",{\"1\":{\"543\":1,\"545\":1,\"546\":1}}],[\"retina显示屏\",{\"1\":{\"351\":1}}],[\"return\",{\"1\":{\"41\":2,\"53\":1,\"56\":1,\"58\":4,\"60\":3,\"62\":2,\"89\":2,\"135\":7,\"149\":2,\"151\":2,\"160\":1,\"161\":1,\"189\":1,\"257\":8,\"262\":1,\"399\":3,\"477\":5,\"562\":1,\"565\":1,\"566\":1,\"567\":1,\"568\":1,\"571\":1,\"573\":1,\"574\":1,\"575\":2,\"576\":1,\"578\":1,\"580\":1,\"581\":1,\"584\":1,\"596\":1,\"598\":2,\"599\":1,\"604\":2,\"606\":1,\"633\":1,\"639\":1,\"640\":1,\"647\":1,\"657\":1,\"665\":6,\"666\":1,\"670\":4,\"671\":2}}],[\"red\",{\"1\":{\"348\":1}}],[\"redistribute\",{\"1\":{\"699\":1}}],[\"redis服务器实际使用的是\",{\"1\":{\"462\":1}}],[\"redis每秒随机取100个数据进行过期检查\",{\"1\":{\"462\":1}}],[\"redis要求高性能\",{\"1\":{\"453\":1}}],[\"redis持久化的主流方式\",{\"1\":{\"453\":1}}],[\"redis持久化主要分为两种方式\",{\"1\":{\"446\":1}}],[\"redis提供了两种机制配合来达到上述目的\",{\"1\":{\"458\":1}}],[\"redis提供了三种写回策略\",{\"1\":{\"454\":1}}],[\"redis提供了\",{\"1\":{\"452\":1}}],[\"redis加载rdb文件恢复数据要远远快于aof方式\",{\"1\":{\"452\":1}}],[\"redis默认采用\",{\"1\":{\"451\":1}}],[\"redis进程执行fork操作创建子进程\",{\"1\":{\"449\":1}}],[\"redis进阶\",{\"0\":{\"446\":1,\"458\":1}}],[\"redis用双端链表实现list\",{\"1\":{\"442\":1}}],[\"redis中\",{\"1\":{\"463\":1}}],[\"redis中大家会对存入的数据设置过期时间\",{\"1\":{\"459\":1}}],[\"redis中的list类似java中的queue\",{\"1\":{\"442\":1}}],[\"redis中的list其实就是链表\",{\"1\":{\"442\":1}}],[\"redis中可以使用\",{\"1\":{\"434\":1}}],[\"redis实现session共享\",{\"1\":{\"440\":1}}],[\"redis是没有开启aof的\",{\"1\":{\"455\":1}}],[\"redis是单线程模型\",{\"1\":{\"440\":1}}],[\"redis是一个支持持久化的内存数据库\",{\"1\":{\"446\":1}}],[\"redis是一个key\",{\"1\":{\"430\":1}}],[\"redis是一款\",{\"1\":{\"430\":1}}],[\"redis是一种支持key\",{\"1\":{\"429\":1,\"430\":1}}],[\"redis作为缓存层\",{\"1\":{\"440\":1}}],[\"redis所有的key\",{\"1\":{\"437\":1}}],[\"redis还支持\",{\"1\":{\"431\":1}}],[\"redis的用途非常广泛\",{\"1\":{\"458\":1}}],[\"redis的数据正常都是存储在内存内\",{\"1\":{\"447\":1}}],[\"redis的所有操作都是原子性的\",{\"1\":{\"431\":1}}],[\"redis的key的管理类\",{\"1\":{\"161\":1}}],[\"redis支持rdb\",{\"1\":{\"431\":1}}],[\"redis支持二进制案例的\",{\"1\":{\"431\":1}}],[\"redis支持数据的持久化\",{\"1\":{\"427\":1}}],[\"redis能读的速度是110000次\",{\"1\":{\"431\":1}}],[\"redis全称为\",{\"1\":{\"430\":1}}],[\"redis概念\",{\"0\":{\"429\":1}}],[\"redis入门\",{\"0\":{\"429\":1,\"437\":1}}],[\"redis菜鸟教程\",{\"1\":{\"428\":1}}],[\"redis教程\",{\"1\":{\"428\":1}}],[\"redis官方文档\",{\"1\":{\"428\":1}}],[\"redis内存淘汰机制是指当内存使用达到上限\",{\"1\":{\"427\":1,\"463\":1}}],[\"redis\",{\"0\":{\"425\":1,\"430\":1,\"431\":1,\"432\":1,\"438\":1,\"451\":1,\"463\":1},\"1\":{\"425\":1,\"427\":8,\"430\":1,\"432\":1,\"435\":1,\"436\":2,\"440\":1,\"443\":2,\"444\":2,\"445\":3,\"446\":1,\"447\":3,\"449\":1,\"450\":2,\"451\":1,\"453\":2,\"456\":1,\"457\":2,\"459\":1}}],[\"rediskeys\",{\"1\":{\"161\":2}}],[\"requires=docker\",{\"1\":{\"809\":1}}],[\"requirefieldmatch\",{\"1\":{\"348\":1}}],[\"requestor\",{\"1\":{\"788\":1}}],[\"requestmethod\",{\"1\":{\"633\":1}}],[\"requestmapping\",{\"1\":{\"607\":1,\"633\":1,\"639\":2,\"640\":1}}],[\"requestparam\",{\"1\":{\"603\":1,\"639\":2}}],[\"request\",{\"1\":{\"262\":2,\"293\":2,\"298\":2,\"603\":2,\"604\":3,\"650\":2,\"654\":1,\"662\":1}}],[\"requested\",{\"1\":{\"10\":1,\"282\":1}}],[\"repeat\",{\"1\":{\"543\":1,\"545\":1,\"546\":1,\"549\":1}}],[\"repo无updater的结局方法\",{\"1\":{\"671\":1}}],[\"reporting\",{\"1\":{\"636\":2}}],[\"repo\",{\"1\":{\"372\":1}}],[\"repositoryservice\",{\"1\":{\"500\":2,\"502\":6,\"509\":3,\"510\":4,\"511\":5,\"514\":5,\"565\":1,\"566\":1,\"567\":1,\"568\":1,\"569\":1}}],[\"repository\",{\"0\":{\"335\":1,\"383\":1,\"390\":1},\"1\":{\"331\":1,\"335\":1,\"338\":1,\"349\":2,\"351\":3,\"381\":1,\"383\":1,\"391\":1,\"655\":1,\"680\":1}}],[\"replicas\",{\"1\":{\"333\":1}}],[\"replication\",{\"1\":{\"276\":1}}],[\"replaceall\",{\"1\":{\"198\":1}}],[\"replace\",{\"1\":{\"147\":1}}],[\"reload\",{\"1\":{\"375\":1,\"450\":1,\"685\":1,\"754\":1,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1,\"810\":1,\"827\":1}}],[\"relation\",{\"1\":{\"299\":1}}],[\"releases\",{\"1\":{\"317\":1,\"617\":1,\"618\":1,\"680\":1,\"749\":1,\"797\":1,\"811\":1}}],[\"release\",{\"1\":{\"27\":1,\"327\":1,\"372\":1}}],[\"resolvers\",{\"1\":{\"606\":2}}],[\"resolveargument\",{\"1\":{\"604\":2}}],[\"resourceversion\",{\"1\":{\"813\":2}}],[\"resourcequota\",{\"1\":{\"764\":1}}],[\"resourcename\",{\"1\":{\"567\":3}}],[\"resource\",{\"1\":{\"535\":2,\"671\":1}}],[\"resources\",{\"1\":{\"24\":1,\"814\":1}}],[\"responsibility\",{\"1\":{\"468\":1,\"480\":1}}],[\"response\",{\"1\":{\"262\":1,\"650\":1}}],[\"results\",{\"1\":{\"699\":1}}],[\"resultmap\",{\"1\":{\"599\":4}}],[\"result\",{\"1\":{\"289\":1,\"291\":1}}],[\"restful形式的api供集群内外客户端调用\",{\"1\":{\"722\":1}}],[\"restcontroller\",{\"1\":{\"633\":1,\"639\":1,\"640\":1}}],[\"restarts\",{\"1\":{\"822\":1}}],[\"restartsec=10\",{\"1\":{\"809\":1}}],[\"restartsec=5\",{\"1\":{\"766\":1,\"772\":1}}],[\"restart=always\",{\"1\":{\"809\":1}}],[\"restart=on\",{\"1\":{\"683\":1,\"753\":1,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1}}],[\"restart\",{\"1\":{\"375\":1,\"689\":1,\"699\":1}}],[\"resttemplate\",{\"1\":{\"337\":1,\"338\":3,\"348\":2,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"610\":2,\"645\":3}}],[\"rest\",{\"1\":{\"268\":1,\"287\":1,\"298\":2,\"330\":1,\"337\":1,\"643\":1}}],[\"reset\",{\"1\":{\"257\":2}}],[\"renameto\",{\"1\":{\"236\":1}}],[\"reentrantlock\",{\"0\":{\"233\":1},\"1\":{\"208\":1,\"227\":1,\"233\":2}}],[\"ref=\",{\"1\":{\"495\":1}}],[\"reference\",{\"1\":{\"653\":1}}],[\"references\",{\"1\":{\"417\":2}}],[\"referenced\",{\"1\":{\"72\":1,\"73\":2}}],[\"refreshroutesevent\",{\"1\":{\"671\":1}}],[\"refreshscope\",{\"1\":{\"633\":2,\"670\":1}}],[\"refreshinterval\",{\"1\":{\"333\":1}}],[\"refresh\",{\"1\":{\"296\":1,\"670\":1,\"671\":1}}],[\"reflector来完成大规模集群的分级路由分发\",{\"1\":{\"803\":1}}],[\"reflector\",{\"1\":{\"803\":1}}],[\"reflect包\",{\"1\":{\"585\":1}}],[\"reflect\",{\"1\":{\"118\":1,\"122\":1,\"585\":4,\"587\":3,\"588\":3,\"589\":3,\"591\":2,\"592\":3,\"593\":2,\"594\":2,\"595\":3,\"596\":9,\"597\":2,\"598\":4,\"599\":4,\"601\":5}}],[\"svc\",{\"1\":{\"736\":3,\"800\":1,\"818\":1,\"820\":1}}],[\"svg\",{\"1\":{\"17\":1}}],[\"sdiffstore\",{\"1\":{\"443\":2}}],[\"sdiff\",{\"1\":{\"443\":3}}],[\"sms\",{\"1\":{\"613\":1}}],[\"smove\",{\"1\":{\"443\":2}}],[\"smembers\",{\"1\":{\"443\":5}}],[\"smart\",{\"0\":{\"320\":1},\"1\":{\"318\":1,\"320\":1,\"326\":1}}],[\"scgi\",{\"1\":{\"825\":3}}],[\"scp\",{\"1\":{\"744\":1,\"755\":3,\"781\":4,\"785\":1}}],[\"scheduler的配置文件\",{\"0\":{\"776\":1}}],[\"scheduler和apiserver\",{\"1\":{\"770\":1}}],[\"scheduler\",{\"0\":{\"774\":1},\"1\":{\"714\":1,\"735\":1,\"757\":2,\"759\":1,\"775\":1,\"776\":4,\"777\":7,\"778\":3,\"779\":1}}],[\"schedulerx\",{\"1\":{\"610\":1,\"613\":1}}],[\"schemalocation=\",{\"1\":{\"495\":1}}],[\"schema\",{\"1\":{\"495\":3,\"496\":2,\"658\":1}}],[\"scope>\",{\"1\":{\"636\":2,\"655\":1}}],[\"scope\",{\"1\":{\"540\":2}}],[\"score=1\",{\"1\":{\"352\":2}}],[\"score\",{\"1\":{\"299\":4,\"341\":1,\"444\":1}}],[\"scard\",{\"1\":{\"443\":3}}],[\"snakecasestrategy\",{\"1\":{\"382\":1}}],[\"sringcloud\",{\"1\":{\"655\":1}}],[\"sr1<\",{\"1\":{\"496\":2}}],[\"srp\",{\"1\":{\"468\":2}}],[\"srandmember\",{\"1\":{\"443\":2}}],[\"srem\",{\"1\":{\"443\":3}}],[\"srgb色域\",{\"1\":{\"351\":1}}],[\"srcfile\",{\"1\":{\"244\":2,\"248\":2,\"249\":1,\"252\":2,\"253\":2}}],[\"srcpos\",{\"1\":{\"197\":1}}],[\"src\",{\"1\":{\"10\":2,\"197\":1,\"198\":1,\"327\":1}}],[\"sadd\",{\"1\":{\"443\":5}}],[\"save命令\",{\"1\":{\"449\":1}}],[\"save\",{\"1\":{\"336\":1,\"449\":3,\"451\":5,\"671\":2}}],[\"saturday\",{\"1\":{\"160\":1}}],[\"sock\",{\"1\":{\"809\":2}}],[\"software\",{\"1\":{\"680\":1,\"699\":5}}],[\"sourceencoding>\",{\"1\":{\"636\":1}}],[\"sourceencoding>utf\",{\"1\":{\"636\":1}}],[\"sources\",{\"1\":{\"372\":2}}],[\"source\",{\"1\":{\"290\":2,\"299\":1,\"304\":2,\"341\":1,\"537\":2}}],[\"sortorder\",{\"1\":{\"354\":1}}],[\"sortbuilders\",{\"1\":{\"354\":2}}],[\"sortvalues=\",{\"1\":{\"352\":2}}],[\"sort排序\",{\"1\":{\"303\":1}}],[\"sort=account\",{\"1\":{\"299\":1}}],[\"sort\",{\"1\":{\"197\":1,\"198\":2,\"299\":1,\"300\":1,\"303\":1,\"348\":1,\"353\":1,\"388\":3,\"389\":5}}],[\"sql术语\",{\"1\":{\"362\":1}}],[\"sql\",{\"0\":{\"422\":1,\"424\":1},\"1\":{\"270\":1,\"312\":2,\"363\":1,\"416\":1,\"421\":1,\"422\":2,\"423\":2}}],[\"skipped\",{\"1\":{\"299\":1}}],[\"skip\",{\"1\":{\"257\":2,\"411\":3,\"707\":2}}],[\"slf4j<\",{\"1\":{\"495\":2}}],[\"slf4j\",{\"1\":{\"495\":3,\"639\":1,\"640\":1,\"670\":1,\"671\":1}}],[\"sleep\",{\"0\":{\"221\":1},\"1\":{\"210\":1,\"214\":1,\"221\":3,\"222\":3,\"597\":1}}],[\"slice\",{\"1\":{\"8\":1,\"10\":1,\"11\":1}}],[\"slice扩容深度分析\",{\"1\":{\"8\":1,\"11\":1}}],[\"swapoff\",{\"1\":{\"715\":1}}],[\"swap\",{\"1\":{\"198\":1,\"715\":1}}],[\"swim\",{\"1\":{\"104\":5}}],[\"switch\",{\"1\":{\"10\":1}}],[\"sbin\",{\"1\":{\"824\":1,\"825\":1,\"827\":4,\"828\":1}}],[\"sb\",{\"1\":{\"161\":4}}],[\"s对象\",{\"1\":{\"155\":1}}],[\"s和s2\",{\"1\":{\"155\":2}}],[\"s4\",{\"1\":{\"155\":11}}],[\"s3和s4\",{\"1\":{\"155\":1}}],[\"s3\",{\"1\":{\"155\":15}}],[\"sync\",{\"1\":{\"454\":1}}],[\"synchronizedexample\",{\"1\":{\"231\":1}}],[\"synchronizedxxx\",{\"1\":{\"198\":1}}],[\"synchronizedlist\",{\"1\":{\"177\":2,\"198\":1}}],[\"synchronized\",{\"0\":{\"228\":1},\"1\":{\"133\":5,\"144\":1,\"178\":1,\"208\":1,\"222\":2,\"227\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"257\":3,\"671\":1}}],[\"symbol\",{\"1\":{\"364\":1}}],[\"sysctl\",{\"1\":{\"715\":4}}],[\"systemd管理kube\",{\"0\":{\"793\":1}}],[\"systemd管理kubelet\",{\"0\":{\"786\":1}}],[\"systemd管理docker\",{\"0\":{\"683\":1}}],[\"systemd\",{\"1\":{\"683\":1,\"753\":1,\"755\":2,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1,\"809\":1}}],[\"systemctl\",{\"1\":{\"375\":7,\"685\":3,\"754\":3,\"767\":3,\"773\":3,\"778\":3,\"787\":3,\"794\":3,\"810\":2}}],[\"system类下的数组拷贝方法\",{\"1\":{\"197\":1}}],[\"system\",{\"1\":{\"41\":3,\"48\":2,\"54\":1,\"60\":1,\"73\":3,\"74\":1,\"75\":1,\"78\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":2,\"95\":2,\"103\":3,\"104\":3,\"108\":3,\"115\":2,\"122\":2,\"123\":3,\"127\":2,\"128\":2,\"129\":1,\"134\":4,\"140\":2,\"155\":4,\"172\":1,\"190\":1,\"197\":1,\"206\":1,\"218\":2,\"219\":2,\"222\":7,\"225\":1,\"226\":3,\"233\":1,\"254\":1,\"324\":1,\"352\":1,\"353\":5,\"354\":1,\"355\":2,\"356\":2,\"477\":1,\"495\":1,\"502\":4,\"503\":6,\"504\":4,\"506\":5,\"509\":6,\"513\":8,\"514\":6,\"523\":2,\"527\":4,\"607\":1,\"665\":3,\"670\":2,\"683\":1,\"699\":1,\"715\":1,\"730\":1,\"733\":1,\"736\":1,\"739\":2,\"742\":6,\"746\":1,\"753\":1,\"755\":2,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1,\"800\":2,\"806\":2,\"807\":1,\"809\":1,\"814\":3,\"822\":1}}],[\"sys\",{\"1\":{\"10\":8,\"697\":1}}],[\"s\",{\"1\":{\"123\":1,\"154\":1,\"155\":7,\"431\":2,\"484\":5,\"680\":1,\"683\":1,\"715\":1,\"800\":1,\"805\":1,\"827\":3}}],[\"ssl\",{\"1\":{\"720\":2,\"825\":1}}],[\"ssd\",{\"1\":{\"351\":1}}],[\"ss\",{\"1\":{\"115\":4}}],[\"signername\",{\"1\":{\"788\":1}}],[\"signing\",{\"1\":{\"729\":3,\"771\":5}}],[\"side\",{\"1\":{\"643\":1,\"644\":1}}],[\"since\",{\"1\":{\"812\":1}}],[\"singleresult\",{\"1\":{\"513\":1,\"514\":2,\"566\":1,\"571\":1,\"574\":1,\"581\":1}}],[\"single\",{\"1\":{\"468\":1}}],[\"sinterstore\",{\"1\":{\"443\":2}}],[\"sinter\",{\"1\":{\"443\":3}}],[\"sismember\",{\"1\":{\"443\":4}}],[\"sismembe\",{\"1\":{\"435\":1}}],[\"simple\",{\"1\":{\"315\":1,\"316\":1}}],[\"simpledateformatexample\",{\"1\":{\"115\":1}}],[\"simpledateformat\",{\"0\":{\"115\":1},\"1\":{\"115\":4}}],[\"size则忽略\",{\"1\":{\"343\":1}}],[\"sizeclasses\",{\"1\":{\"10\":1}}],[\"size是指元素在计算机的字节大小\",{\"1\":{\"10\":1}}],[\"size\",{\"0\":{\"344\":1},\"1\":{\"10\":6,\"41\":1,\"60\":1,\"151\":3,\"152\":1,\"176\":1,\"184\":1,\"257\":4,\"303\":1,\"304\":1,\"313\":1,\"314\":5,\"341\":1,\"353\":2,\"355\":1,\"356\":1,\"455\":1,\"506\":1,\"565\":1,\"650\":1,\"670\":1,\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"s2\",{\"1\":{\"74\":1,\"155\":5,\"601\":4}}],[\"s1\",{\"1\":{\"74\":1,\"601\":4}}],[\"supportsparameter\",{\"1\":{\"604\":2}}],[\"super只是一个关键字\",{\"1\":{\"70\":1}}],[\"super\",{\"0\":{\"70\":1},\"1\":{\"62\":2,\"70\":2,\"73\":1,\"257\":1,\"399\":2,\"417\":2,\"540\":1,\"556\":1,\"665\":1}}],[\"susp\",{\"1\":{\"540\":1}}],[\"suspension\",{\"1\":{\"535\":1,\"540\":1,\"542\":1}}],[\"suspendprocessinstancebyid\",{\"1\":{\"514\":1}}],[\"suspendprocessdefinitionbyid\",{\"1\":{\"514\":1}}],[\"suspended\",{\"0\":{\"545\":1},\"1\":{\"514\":6,\"533\":1}}],[\"sugardecorator\",{\"1\":{\"477\":3}}],[\"sugar\",{\"1\":{\"477\":1}}],[\"sudo\",{\"1\":{\"371\":3,\"372\":1,\"373\":1,\"374\":2,\"375\":7,\"376\":4,\"680\":8,\"689\":1}}],[\"subjects\",{\"1\":{\"814\":1}}],[\"sub\",{\"1\":{\"441\":2}}],[\"subscr\",{\"0\":{\"548\":1},\"1\":{\"533\":1,\"540\":1}}],[\"subscribe\",{\"1\":{\"431\":1,\"671\":4}}],[\"substitution\",{\"1\":{\"422\":1,\"423\":2,\"424\":1,\"468\":1}}],[\"submaps\",{\"1\":{\"356\":2}}],[\"subaggregation\",{\"1\":{\"356\":1}}],[\"subtitle\",{\"1\":{\"332\":1,\"335\":1,\"341\":5,\"348\":1}}],[\"summary\",{\"1\":{\"332\":1,\"335\":1,\"341\":5,\"343\":3,\"348\":1}}],[\"summer\",{\"1\":{\"160\":1}}],[\"successfully\",{\"1\":{\"756\":1}}],[\"successful\",{\"1\":{\"289\":1,\"291\":1,\"299\":1}}],[\"sunionstore\",{\"1\":{\"443\":2}}],[\"sunion\",{\"1\":{\"443\":3}}],[\"sunday\",{\"1\":{\"160\":1}}],[\"sun公司专门提供了一套操作\",{\"1\":{\"131\":1}}],[\"sun\",{\"1\":{\"41\":1,\"324\":1}}],[\"stub\",{\"1\":{\"825\":1}}],[\"student\",{\"1\":{\"89\":3}}],[\"st\",{\"1\":{\"699\":1,\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"style=\",{\"1\":{\"348\":1}}],[\"stock\",{\"1\":{\"641\":2}}],[\"store\",{\"1\":{\"332\":4,\"334\":1,\"335\":3,\"341\":3,\"351\":9}}],[\"storage\",{\"1\":{\"138\":1}}],[\"stopwords\",{\"1\":{\"324\":2}}],[\"stop\",{\"1\":{\"316\":1,\"375\":1,\"376\":1,\"377\":1,\"451\":1,\"689\":3,\"827\":1}}],[\"stop方法来终止一个线程\",{\"1\":{\"216\":1}}],[\"stopclass\",{\"1\":{\"134\":2}}],[\"str解析出route定义\",{\"1\":{\"670\":1}}],[\"struct2map\",{\"1\":{\"599\":1}}],[\"structtag\",{\"1\":{\"590\":1}}],[\"structfield结构\",{\"1\":{\"590\":1}}],[\"structfield\",{\"1\":{\"590\":4}}],[\"struct\",{\"0\":{\"598\":1,\"599\":1},\"1\":{\"589\":2,\"590\":2,\"591\":1,\"595\":1,\"597\":1,\"598\":2,\"599\":1,\"601\":1}}],[\"strong\",{\"1\":{\"496\":2}}],[\"stripprefix=1\",{\"1\":{\"665\":2}}],[\"strict\",{\"1\":{\"422\":1,\"423\":2,\"424\":1}}],[\"string类型是二进制安全的\",{\"1\":{\"440\":1}}],[\"string类型的数组\",{\"1\":{\"48\":1}}],[\"string是redis中最基本的数据类型\",{\"1\":{\"440\":1}}],[\"string是不可变的\",{\"1\":{\"138\":1}}],[\"string字符串\",{\"1\":{\"438\":1}}],[\"strings\",{\"1\":{\"431\":1,\"598\":1}}],[\"string=password\",{\"1\":{\"408\":1}}],[\"string>\",{\"1\":{\"383\":1,\"391\":1}}],[\"stringutils\",{\"1\":{\"262\":1}}],[\"stringbuilder\",{\"0\":{\"142\":1},\"1\":{\"143\":1,\"144\":1,\"145\":1,\"147\":1,\"148\":1,\"161\":2}}],[\"stringbuilder的操作\",{\"1\":{\"136\":1}}],[\"stringbuffer和stringbuilder\",{\"0\":{\"147\":1}}],[\"stringbuffer\",{\"0\":{\"142\":1,\"145\":1,\"146\":1},\"1\":{\"143\":1,\"144\":1,\"145\":2,\"146\":2,\"147\":2,\"148\":1}}],[\"string\",{\"0\":{\"138\":1,\"140\":1,\"142\":1,\"153\":1,\"154\":1,\"440\":1},\"1\":{\"40\":1,\"41\":1,\"48\":1,\"51\":1,\"53\":1,\"54\":3,\"58\":2,\"60\":3,\"62\":1,\"72\":1,\"74\":1,\"75\":1,\"81\":1,\"82\":1,\"83\":2,\"84\":1,\"89\":4,\"103\":1,\"104\":1,\"115\":6,\"123\":4,\"127\":2,\"128\":3,\"129\":2,\"134\":4,\"135\":3,\"136\":1,\"138\":1,\"140\":8,\"141\":2,\"143\":1,\"144\":1,\"147\":2,\"149\":1,\"153\":1,\"154\":7,\"155\":25,\"156\":2,\"161\":5,\"190\":3,\"206\":1,\"218\":1,\"219\":1,\"222\":1,\"224\":1,\"225\":1,\"226\":1,\"233\":1,\"239\":1,\"244\":1,\"247\":1,\"248\":1,\"249\":1,\"252\":1,\"253\":2,\"254\":4,\"262\":2,\"332\":3,\"333\":3,\"334\":4,\"348\":3,\"351\":3,\"364\":1,\"382\":8,\"391\":1,\"392\":2,\"396\":1,\"397\":1,\"399\":6,\"411\":1,\"427\":1,\"430\":1,\"437\":1,\"440\":1,\"443\":1,\"444\":1,\"477\":1,\"497\":1,\"503\":2,\"504\":1,\"505\":1,\"506\":2,\"510\":1,\"511\":1,\"513\":1,\"514\":2,\"527\":1,\"528\":2,\"562\":1,\"565\":1,\"566\":1,\"567\":2,\"568\":1,\"569\":1,\"571\":1,\"572\":2,\"573\":1,\"574\":1,\"575\":2,\"576\":1,\"578\":1,\"579\":2,\"580\":2,\"581\":1,\"582\":3,\"583\":2,\"584\":2,\"590\":3,\"591\":1,\"594\":2,\"595\":2,\"597\":2,\"598\":2,\"599\":2,\"601\":4,\"603\":1,\"604\":1,\"633\":2,\"637\":1,\"647\":1,\"648\":1,\"665\":2,\"669\":2,\"670\":6,\"697\":2}}],[\"stream\",{\"1\":{\"353\":1,\"575\":1,\"610\":1,\"670\":2,\"671\":4}}],[\"strategyesrepository\",{\"1\":{\"335\":1,\"336\":5}}],[\"strategyes\",{\"1\":{\"332\":1,\"336\":5}}],[\"strategy\",{\"1\":{\"332\":1,\"341\":1,\"348\":2}}],[\"str3\",{\"1\":{\"140\":2}}],[\"str2\",{\"1\":{\"140\":2}}],[\"str1\",{\"1\":{\"140\":3}}],[\"str\",{\"1\":{\"83\":2,\"147\":2,\"149\":4,\"247\":1,\"670\":1}}],[\"stash\",{\"0\":{\"708\":1},\"1\":{\"708\":1,\"709\":6,\"710\":3}}],[\"stable\",{\"1\":{\"680\":1,\"681\":1}}],[\"stamp\",{\"1\":{\"550\":1}}],[\"standalone\",{\"1\":{\"619\":2}}],[\"standalone代表着单机模式运行\",{\"1\":{\"619\":2}}],[\"standaloneprocessengineconfiguration\",{\"1\":{\"495\":1}}],[\"standard\",{\"1\":{\"316\":1}}],[\"stats\",{\"1\":{\"814\":1}}],[\"status\",{\"1\":{\"375\":1,\"705\":1,\"715\":1,\"779\":1,\"788\":1,\"807\":1,\"812\":3,\"822\":1,\"825\":1}}],[\"state=\",{\"1\":{\"752\":1,\"755\":1}}],[\"state\",{\"1\":{\"295\":1,\"299\":1,\"307\":2,\"313\":2,\"535\":1,\"540\":2,\"542\":1,\"752\":1,\"812\":1}}],[\"staticname\",{\"1\":{\"82\":3,\"83\":1}}],[\"staticinnerclass\",{\"1\":{\"75\":4}}],[\"staticdemo\",{\"1\":{\"72\":7,\"73\":2,\"74\":4,\"75\":5}}],[\"static\",{\"0\":{\"71\":1},\"1\":{\"41\":6,\"54\":1,\"60\":1,\"62\":1,\"72\":5,\"73\":5,\"74\":2,\"75\":3,\"76\":1,\"80\":2,\"82\":2,\"83\":1,\"84\":1,\"94\":3,\"95\":1,\"98\":1,\"103\":1,\"104\":1,\"115\":1,\"123\":1,\"133\":1,\"134\":1,\"135\":3,\"155\":2,\"190\":1,\"206\":1,\"218\":1,\"219\":1,\"222\":2,\"224\":1,\"225\":1,\"226\":1,\"232\":1,\"233\":1,\"244\":1,\"248\":1,\"252\":1,\"253\":1,\"254\":3,\"262\":1,\"371\":2,\"477\":1,\"497\":1,\"633\":1,\"637\":1,\"648\":1,\"665\":2,\"681\":1,\"825\":1}}],[\"started\",{\"1\":{\"805\":1,\"813\":1}}],[\"starter<\",{\"1\":{\"496\":1}}],[\"starter\",{\"0\":{\"677\":1},\"1\":{\"329\":1,\"378\":1,\"379\":1,\"541\":1,\"555\":1,\"621\":2,\"625\":1,\"626\":1,\"629\":1,\"630\":1,\"635\":2,\"636\":3,\"655\":3,\"658\":3,\"675\":1,\"676\":1}}],[\"startlimitinterval=60s\",{\"1\":{\"683\":1}}],[\"startlimitburst=3\",{\"1\":{\"683\":1}}],[\"starttime\",{\"1\":{\"665\":4,\"670\":2}}],[\"startswith\",{\"1\":{\"657\":1}}],[\"startup\",{\"1\":{\"619\":2}}],[\"startprocessinstancebykey\",{\"1\":{\"503\":2,\"513\":1,\"523\":1}}],[\"startingwith\",{\"0\":{\"392\":1}}],[\"start\",{\"1\":{\"147\":2,\"206\":3,\"212\":1,\"218\":2,\"219\":2,\"222\":2,\"225\":1,\"226\":2,\"320\":3,\"321\":5,\"326\":1,\"375\":3,\"377\":1,\"442\":1,\"444\":1,\"495\":1,\"535\":1,\"540\":2,\"551\":1,\"556\":3,\"557\":1,\"616\":1,\"618\":1,\"665\":2,\"685\":1,\"689\":1,\"754\":1,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1,\"810\":1,\"824\":1}}],[\"stackoverflowerror\",{\"1\":{\"43\":1}}],[\"stack\",{\"0\":{\"170\":1,\"181\":1},\"1\":{\"43\":3,\"48\":1,\"165\":1,\"170\":1,\"175\":1,\"181\":1,\"264\":1,\"543\":1,\"545\":1,\"546\":1,\"549\":1}}],[\"sh\",{\"1\":{\"619\":4,\"822\":3}}],[\"shell=5\",{\"1\":{\"374\":1}}],[\"shell\",{\"1\":{\"372\":1}}],[\"shanghai\",{\"1\":{\"800\":1}}],[\"share\",{\"1\":{\"699\":1,\"824\":1}}],[\"shards\",{\"1\":{\"289\":1,\"291\":1,\"299\":2,\"333\":1}}],[\"shard\",{\"1\":{\"276\":1}}],[\"sha1\",{\"1\":{\"27\":1}}],[\"shuffle\",{\"1\":{\"198\":1}}],[\"shutdown\",{\"1\":{\"619\":2}}],[\"shut\",{\"1\":{\"103\":5,\"104\":1,\"105\":2}}],[\"should\",{\"1\":{\"308\":7,\"310\":1,\"699\":1,\"806\":1}}],[\"shout\",{\"1\":{\"103\":1}}],[\"showmethod\",{\"1\":{\"597\":2}}],[\"show2\",{\"1\":{\"128\":2}}],[\"show1\",{\"1\":{\"128\":4}}],[\"show\",{\"1\":{\"123\":4,\"128\":5,\"288\":1,\"412\":1,\"417\":2,\"499\":1,\"597\":1,\"699\":2,\"726\":1}}],[\"shortcutfieldorder\",{\"1\":{\"665\":1}}],[\"short\",{\"1\":{\"38\":1,\"41\":1,\"333\":2}}],[\"shift\",{\"1\":{\"10\":2,\"23\":1}}],[\"sed\",{\"1\":{\"715\":1,\"800\":1,\"805\":1}}],[\"separately\",{\"1\":{\"699\":1}}],[\"separate\",{\"1\":{\"699\":1}}],[\"see\",{\"1\":{\"670\":1,\"699\":1}}],[\"seed\",{\"1\":{\"282\":1}}],[\"sentinel\",{\"1\":{\"612\":1,\"613\":1}}],[\"selfuserdetailsserviceimpl\",{\"1\":{\"562\":1}}],[\"selector\",{\"1\":{\"818\":1}}],[\"selectdonetasklist\",{\"1\":{\"584\":1}}],[\"selecttodotasklist\",{\"1\":{\"580\":1}}],[\"selecthistorytasklist\",{\"1\":{\"576\":1}}],[\"selectprocessdefinitionbydeploymentid\",{\"1\":{\"566\":1}}],[\"selectprocessdefinitionbykey\",{\"1\":{\"565\":1,\"569\":1}}],[\"select\",{\"1\":{\"277\":1,\"414\":2,\"417\":3,\"422\":1,\"424\":1,\"697\":1}}],[\"segment\",{\"1\":{\"658\":1}}],[\"segmentfault\",{\"1\":{\"457\":1}}],[\"segregation\",{\"1\":{\"468\":1}}],[\"session\",{\"1\":{\"440\":2,\"603\":1,\"697\":1}}],[\"secret\",{\"1\":{\"806\":2}}],[\"secrets\",{\"1\":{\"804\":1,\"806\":7}}],[\"secure\",{\"1\":{\"764\":2}}],[\"securitycontext\",{\"1\":{\"806\":1}}],[\"security时\",{\"1\":{\"561\":1}}],[\"security集成了\",{\"1\":{\"561\":1}}],[\"securityautoconfiguration\",{\"1\":{\"497\":1}}],[\"security配置\",{\"0\":{\"497\":1},\"1\":{\"561\":1}}],[\"security\",{\"1\":{\"496\":1,\"497\":2,\"561\":1}}],[\"sec\",{\"1\":{\"411\":2,\"412\":1,\"422\":1,\"697\":1,\"699\":2}}],[\"seconds\",{\"1\":{\"222\":3}}],[\"second\",{\"1\":{\"117\":2}}],[\"serving\",{\"1\":{\"382\":1}}],[\"service文件\",{\"1\":{\"772\":1,\"777\":1}}],[\"service虚拟ip地址段\",{\"1\":{\"764\":1}}],[\"service等等\",{\"1\":{\"748\":1}}],[\"serviceaccount\",{\"1\":{\"723\":1,\"725\":1,\"764\":1}}],[\"serviceaccounttokens等等\",{\"1\":{\"723\":1}}],[\"serviceinstancelistsupplier\",{\"1\":{\"647\":1}}],[\"services\",{\"1\":{\"377\":2,\"495\":1}}],[\"service\",{\"0\":{\"676\":1,\"809\":1},\"1\":{\"375\":2,\"376\":1,\"500\":2,\"683\":3,\"723\":5,\"736\":1,\"753\":3,\"755\":2,\"764\":6,\"766\":5,\"771\":2,\"772\":3,\"777\":3,\"786\":3,\"793\":2,\"806\":1,\"809\":4,\"810\":2,\"818\":1,\"824\":1}}],[\"servers\",{\"1\":{\"764\":1}}],[\"servers=https\",{\"1\":{\"764\":1}}],[\"server才直接操作etcd\",{\"1\":{\"763\":1}}],[\"server查询或修改数据\",{\"1\":{\"763\":1}}],[\"server证书放在这\",{\"1\":{\"736\":1}}],[\"server通讯\",{\"1\":{\"735\":1}}],[\"server在同一台机器上\",{\"1\":{\"735\":1}}],[\"server中\",{\"1\":{\"725\":1}}],[\"server开启\",{\"1\":{\"723\":1}}],[\"server需要用\",{\"1\":{\"723\":1}}],[\"server03\",{\"1\":{\"714\":1,\"715\":1}}],[\"server02\",{\"1\":{\"714\":1,\"715\":1}}],[\"server01\",{\"1\":{\"714\":1,\"715\":1,\"783\":1,\"788\":1}}],[\"serverwebexchange\",{\"1\":{\"654\":1,\"665\":1,\"666\":1}}],[\"servertimezone=utc\",{\"1\":{\"495\":1}}],[\"server=https\",{\"1\":{\"761\":1,\"785\":1,\"792\":1}}],[\"server=utf8mb4\",{\"1\":{\"411\":1,\"423\":1,\"699\":1}}],[\"server=5\",{\"1\":{\"374\":1}}],[\"server\",{\"0\":{\"735\":1,\"736\":1,\"762\":1},\"1\":{\"371\":2,\"430\":1,\"621\":2,\"627\":3,\"629\":1,\"631\":4,\"636\":2,\"638\":3,\"639\":1,\"648\":1,\"656\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"665\":5,\"699\":2,\"723\":1,\"726\":6,\"729\":2,\"736\":3,\"737\":6,\"742\":1,\"746\":1,\"752\":1,\"753\":1,\"759\":4,\"764\":16,\"766\":2,\"771\":2,\"772\":2,\"776\":2,\"777\":2,\"781\":1,\"782\":1,\"806\":4,\"814\":1}}],[\"serialversionuid\",{\"1\":{\"254\":6}}],[\"serializable\",{\"0\":{\"254\":1},\"1\":{\"254\":5}}],[\"search方法中的\",{\"1\":{\"352\":1}}],[\"searchhit\",{\"1\":{\"352\":2,\"353\":1}}],[\"searchhits<product>\",{\"1\":{\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1}}],[\"searchhits<strategy>\",{\"1\":{\"348\":1}}],[\"searchhits\",{\"1\":{\"348\":1}}],[\"searchquery\",{\"1\":{\"348\":2}}],[\"searchanalyzer\",{\"1\":{\"332\":3,\"334\":1,\"351\":2}}],[\"searchbox\",{\"1\":{\"327\":1}}],[\"search\",{\"1\":{\"299\":2,\"300\":1,\"302\":3,\"303\":1,\"304\":1,\"305\":2,\"306\":1,\"307\":1,\"308\":1,\"313\":1,\"314\":2,\"338\":1,\"348\":1,\"349\":1,\"352\":1,\"353\":2,\"354\":1,\"355\":1,\"356\":1,\"691\":1}}],[\"seatahandlerinterceptor\",{\"1\":{\"262\":3}}],[\"seata\",{\"0\":{\"259\":1},\"1\":{\"259\":1,\"260\":1,\"261\":1,\"262\":2,\"612\":1,\"613\":1}}],[\"seat\",{\"1\":{\"22\":1}}],[\"seq\",{\"1\":{\"289\":1,\"290\":2,\"291\":1}}],[\"sex\",{\"1\":{\"289\":2,\"290\":1,\"291\":3,\"293\":2}}],[\"set<string>\",{\"1\":{\"671\":2}}],[\"setorder\",{\"1\":{\"670\":1,\"671\":1}}],[\"setfilters\",{\"1\":{\"670\":1}}],[\"setfloat\",{\"1\":{\"595\":1}}],[\"seturi\",{\"1\":{\"670\":1}}],[\"setuint\",{\"1\":{\"595\":1}}],[\"setid\",{\"1\":{\"670\":1}}],[\"setint\",{\"1\":{\"595\":2}}],[\"setpredicates\",{\"1\":{\"670\":1}}],[\"setpriority\",{\"0\":{\"226\":1},\"1\":{\"226\":2}}],[\"setparts\",{\"1\":{\"665\":1}}],[\"setpname\",{\"1\":{\"639\":1}}],[\"setbytes\",{\"1\":{\"595\":1}}],[\"setbool\",{\"1\":{\"595\":1}}],[\"setlnt\",{\"1\":{\"595\":1}}],[\"setvariable\",{\"1\":{\"524\":1,\"582\":1,\"583\":2}}],[\"set1\",{\"1\":{\"443\":9}}],[\"setnx\",{\"1\":{\"440\":2}}],[\"setname\",{\"1\":{\"89\":2,\"134\":1}}],[\"setex\",{\"1\":{\"440\":3}}],[\"seter\",{\"1\":{\"123\":1}}],[\"set集合\",{\"1\":{\"438\":1}}],[\"set是一个很好的选择\",{\"1\":{\"435\":1}}],[\"set对外提供的功能与list类似是一个列表的功能\",{\"1\":{\"435\":1}}],[\"setstring\",{\"1\":{\"595\":1}}],[\"sets\",{\"1\":{\"431\":2,\"699\":1}}],[\"set=utf8mb4\",{\"1\":{\"411\":2,\"423\":2,\"699\":2}}],[\"setdaemon\",{\"1\":{\"224\":2}}],[\"setcharat\",{\"1\":{\"147\":1}}],[\"setwritemethod\",{\"1\":{\"133\":1}}],[\"setreadmethod\",{\"1\":{\"133\":1}}],[\"setapplicationeventpublisher\",{\"1\":{\"671\":1}}],[\"setassignee\",{\"1\":{\"518\":2}}],[\"setaccessible\",{\"1\":{\"126\":2,\"128\":2,\"129\":4,\"135\":2}}],[\"setage\",{\"1\":{\"89\":2,\"134\":1}}],[\"settime\",{\"1\":{\"117\":2}}],[\"setter和getter\",{\"1\":{\"133\":1}}],[\"setter\",{\"1\":{\"89\":1,\"133\":2}}],[\"set\",{\"0\":{\"182\":1,\"410\":1,\"443\":1},\"1\":{\"10\":1,\"89\":1,\"117\":4,\"129\":2,\"173\":1,\"176\":1,\"182\":3,\"185\":1,\"188\":1,\"191\":1,\"193\":2,\"194\":1,\"195\":1,\"198\":1,\"254\":1,\"408\":2,\"410\":1,\"411\":2,\"412\":1,\"422\":1,\"423\":1,\"427\":1,\"430\":1,\"437\":1,\"440\":4,\"443\":1,\"451\":5,\"495\":4,\"595\":1,\"598\":1,\"697\":1,\"698\":2,\"699\":10,\"715\":1,\"761\":3,\"785\":3,\"792\":3}}],[\"spec\",{\"1\":{\"813\":2,\"814\":1,\"818\":1}}],[\"specialize\",{\"1\":{\"10\":1}}],[\"sp2\",{\"1\":{\"569\":1}}],[\"sp1\",{\"1\":{\"569\":1}}],[\"spop\",{\"1\":{\"443\":3}}],[\"spring5\",{\"1\":{\"654\":1}}],[\"springcloudconfig\",{\"1\":{\"613\":1}}],[\"springcloudalibaba\",{\"1\":{\"613\":1,\"652\":1}}],[\"springcloudalibaba实际上对我们的springcloud2\",{\"1\":{\"613\":1}}],[\"springcloud\",{\"0\":{\"614\":1,\"615\":1,\"616\":1,\"652\":1,\"676\":1},\"1\":{\"613\":1,\"614\":3,\"635\":2,\"636\":1,\"652\":2,\"653\":2,\"655\":2,\"658\":2,\"663\":1,\"666\":1,\"667\":1,\"676\":2,\"677\":1}}],[\"springmvc\",{\"1\":{\"603\":2}}],[\"springscurity\",{\"1\":{\"561\":1}}],[\"springapplication\",{\"1\":{\"497\":1,\"637\":1,\"648\":1}}],[\"spring<\",{\"1\":{\"495\":1}}],[\"spring提供的一个查询条件构建器\",{\"1\":{\"350\":1,\"352\":1}}],[\"springframework\",{\"1\":{\"329\":1,\"379\":1,\"495\":3,\"561\":1,\"635\":1,\"636\":3,\"655\":3,\"658\":1,\"669\":2,\"675\":1,\"676\":1}}],[\"springdata\",{\"1\":{\"327\":1}}],[\"spring\",{\"0\":{\"608\":1,\"613\":1,\"644\":1,\"672\":1,\"673\":1,\"677\":1},\"1\":{\"160\":1,\"260\":1,\"327\":6,\"328\":1,\"330\":1,\"331\":1,\"335\":1,\"338\":1,\"348\":1,\"378\":1,\"380\":1,\"381\":1,\"383\":1,\"384\":1,\"404\":1,\"484\":1,\"495\":1,\"496\":3,\"497\":2,\"608\":2,\"609\":4,\"610\":4,\"612\":7,\"616\":2,\"617\":1,\"621\":5,\"625\":3,\"627\":2,\"629\":1,\"631\":9,\"635\":4,\"636\":6,\"638\":1,\"643\":4,\"644\":5,\"645\":2,\"653\":7,\"654\":5,\"655\":4,\"656\":1,\"658\":1,\"659\":4,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"665\":2,\"667\":1,\"672\":1,\"674\":1}}],[\"springbootapplication\",{\"1\":{\"497\":1,\"637\":1,\"648\":1}}],[\"springboot集成\",{\"0\":{\"378\":1},\"1\":{\"358\":1}}],[\"springboot集成elasticsearch\",{\"0\":{\"327\":1}}],[\"springboot启动时会自动创建映射\",{\"1\":{\"332\":1}}],[\"springboot默认支持两种技术来和\",{\"1\":{\"327\":1}}],[\"springboot\",{\"0\":{\"496\":1,\"603\":1},\"1\":{\"18\":1,\"265\":2,\"328\":1,\"329\":1,\"335\":1,\"338\":1,\"348\":3,\"349\":1,\"358\":1,\"378\":1,\"379\":1,\"496\":1,\"527\":1,\"560\":1,\"652\":1,\"655\":1,\"830\":1}}],[\"span>\",{\"1\":{\"348\":1}}],[\"span\",{\"1\":{\"10\":1}}],[\"cgroupfs\",{\"1\":{\"784\":1}}],[\"cgroupdriver\",{\"1\":{\"784\":1}}],[\"cp\",{\"1\":{\"759\":2}}],[\"cpu\",{\"1\":{\"202\":3,\"203\":3,\"204\":2,\"213\":2,\"214\":2,\"222\":1,\"226\":1}}],[\"cd\",{\"1\":{\"729\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1,\"759\":1,\"781\":1,\"821\":1,\"825\":2}}],[\"cfssljson\",{\"1\":{\"726\":4,\"731\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1}}],[\"cfssl是非常好用的ca工具\",{\"1\":{\"726\":1}}],[\"cfssl\",{\"0\":{\"726\":1},\"1\":{\"717\":1,\"726\":7,\"729\":1,\"730\":1,\"731\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1}}],[\"cfg\",{\"1\":{\"324\":1,\"495\":3,\"543\":1,\"545\":1,\"546\":1,\"549\":1,\"751\":1,\"752\":1,\"753\":1,\"755\":1,\"759\":1,\"764\":1,\"766\":1,\"771\":1,\"772\":1,\"776\":1,\"777\":1,\"781\":1,\"783\":4,\"784\":1,\"785\":1,\"786\":1,\"790\":2,\"791\":2,\"792\":1,\"793\":1,\"813\":2,\"814\":1}}],[\"c6jmcp\",{\"1\":{\"702\":1}}],[\"cv\",{\"1\":{\"665\":1}}],[\"cj\",{\"1\":{\"495\":1}}],[\"c语言中文网\",{\"1\":{\"473\":1,\"479\":1}}],[\"cs\",{\"1\":{\"779\":1}}],[\"csv我们在\",{\"1\":{\"760\":1}}],[\"csv\",{\"1\":{\"746\":2,\"764\":1}}],[\"csr|grep\",{\"1\":{\"788\":1}}],[\"csr是个中间证书请求文件\",{\"1\":{\"734\":1,\"737\":1}}],[\"csr\",{\"1\":{\"730\":6,\"731\":3,\"733\":1,\"734\":3,\"736\":1,\"737\":3,\"739\":1,\"740\":3,\"742\":1,\"743\":3,\"744\":2,\"788\":2}}],[\"csdn\",{\"1\":{\"457\":2}}],[\"cst\",{\"1\":{\"115\":1}}],[\"ccc\",{\"1\":{\"444\":4}}],[\"cidr`\",{\"1\":{\"806\":1}}],[\"cidr\",{\"1\":{\"805\":1,\"806\":2,\"813\":1}}],[\"cidr=172\",{\"1\":{\"800\":1,\"809\":1}}],[\"cidr=10\",{\"1\":{\"771\":1}}],[\"cidrs=true\",{\"1\":{\"771\":1}}],[\"ci\",{\"1\":{\"699\":3}}],[\"circle\",{\"0\":{\"400\":1},\"1\":{\"400\":8}}],[\"circle和point\",{\"1\":{\"398\":1}}],[\"city\",{\"1\":{\"295\":1,\"299\":1}}],[\"cmd\",{\"1\":{\"369\":1,\"619\":2}}],[\"certfile=\",{\"1\":{\"764\":1}}],[\"certs=true\",{\"1\":{\"761\":2,\"785\":1,\"792\":2}}],[\"certificate=\",{\"1\":{\"761\":1,\"764\":1,\"792\":1}}],[\"certificate\",{\"1\":{\"761\":1,\"785\":1,\"788\":1,\"792\":1}}],[\"certificates\",{\"1\":{\"680\":1}}],[\"cert=\",{\"1\":{\"756\":1}}],[\"cert\",{\"1\":{\"753\":2,\"764\":1,\"771\":2,\"783\":2,\"806\":4,\"809\":2}}],[\"certain\",{\"1\":{\"699\":1}}],[\"ce\",{\"1\":{\"680\":3}}],[\"center\",{\"1\":{\"366\":1}}],[\"cedward\",{\"1\":{\"303\":2,\"305\":5}}],[\"c++\",{\"1\":{\"360\":1}}],[\"cron\",{\"1\":{\"610\":1}}],[\"criteria类提供了特定于地理空间查询的方法\",{\"1\":{\"398\":1}}],[\"criteria\",{\"1\":{\"384\":1,\"385\":1,\"386\":3,\"387\":1,\"400\":2,\"401\":1,\"402\":3}}],[\"crudrepository<entry\",{\"1\":{\"383\":1,\"391\":1}}],[\"crudindextest\",{\"1\":{\"338\":1}}],[\"crud\",{\"0\":{\"336\":1,\"338\":1},\"1\":{\"338\":1,\"349\":1,\"358\":1}}],[\"creationtimestamp\",{\"1\":{\"813\":1}}],[\"createhistorictaskinstancequery\",{\"1\":{\"584\":1}}],[\"createhistoricprocessinstancequery\",{\"1\":{\"574\":1}}],[\"createhistoricactivityinstancequery\",{\"1\":{\"506\":1,\"576\":1}}],[\"createprocessinstancequery\",{\"1\":{\"513\":1,\"514\":1,\"571\":1}}],[\"createprocessdefinitionquery\",{\"1\":{\"509\":1,\"511\":1,\"514\":1,\"565\":1,\"566\":1}}],[\"createtaskquery\",{\"1\":{\"504\":1,\"505\":1,\"513\":1,\"527\":1,\"578\":1,\"580\":1,\"581\":1}}],[\"createstrategyestest\",{\"1\":{\"336\":1}}],[\"createindex\",{\"1\":{\"333\":1}}],[\"createdef\",{\"1\":{\"671\":4}}],[\"createdefinitions\",{\"1\":{\"671\":2}}],[\"createdeployment\",{\"1\":{\"502\":2}}],[\"created\",{\"1\":{\"289\":1,\"547\":1,\"548\":1,\"671\":1}}],[\"create\",{\"1\":{\"281\":1,\"338\":1,\"351\":12,\"406\":2,\"415\":1,\"417\":9,\"420\":1,\"424\":1,\"495\":3,\"496\":2,\"518\":1,\"537\":1,\"542\":1,\"558\":1,\"670\":1,\"671\":2,\"768\":1}}],[\"createnewfile\",{\"1\":{\"236\":1}}],[\"credentials\",{\"1\":{\"282\":1,\"761\":1,\"785\":1,\"792\":1}}],[\"creditcard\",{\"1\":{\"160\":1}}],[\"cybwlf\",{\"1\":{\"310\":1}}],[\"customroutelocator\",{\"1\":{\"657\":1}}],[\"custom\",{\"1\":{\"367\":1}}],[\"customer\",{\"1\":{\"289\":5,\"290\":2,\"291\":4,\"292\":3,\"293\":1,\"316\":1}}],[\"currenttimemillis\",{\"1\":{\"665\":2,\"670\":2}}],[\"currentthread\",{\"1\":{\"206\":1}}],[\"current\",{\"1\":{\"653\":1}}],[\"currentuser\",{\"1\":{\"604\":2,\"605\":1,\"607\":1}}],[\"currentuserargumentresolver\",{\"1\":{\"604\":1,\"606\":4}}],[\"curl\",{\"1\":{\"296\":1,\"680\":3}}],[\"cbuf\",{\"1\":{\"246\":2,\"247\":5}}],[\"c2\",{\"1\":{\"60\":2,\"62\":2}}],[\"c1\",{\"1\":{\"60\":2,\"62\":3}}],[\"clis\",{\"1\":{\"813\":1}}],[\"clientconnection\",{\"1\":{\"791\":1}}],[\"clientcafile\",{\"1\":{\"784\":1}}],[\"client和\",{\"1\":{\"337\":1}}],[\"client\",{\"0\":{\"677\":1},\"1\":{\"327\":1,\"337\":1,\"411\":1,\"423\":1,\"483\":1,\"610\":1,\"635\":1,\"643\":1,\"644\":1,\"651\":1,\"699\":2,\"723\":1,\"729\":2,\"752\":4,\"755\":2,\"761\":2,\"764\":4,\"788\":1,\"792\":2,\"803\":1,\"825\":3}}],[\"clean\",{\"1\":{\"671\":1}}],[\"clear\",{\"1\":{\"184\":1,\"709\":1}}],[\"claimandcomplatetask\",{\"1\":{\"582\":1}}],[\"claim\",{\"1\":{\"528\":1,\"542\":1,\"557\":1,\"582\":1}}],[\"class=\",{\"1\":{\"495\":2}}],[\"classname\",{\"1\":{\"76\":1}}],[\"class<t>\",{\"1\":{\"135\":1}}],[\"class<\",{\"1\":{\"51\":1,\"128\":2,\"133\":2}}],[\"class\",{\"0\":{\"121\":1},\"1\":{\"10\":1,\"36\":1,\"41\":1,\"51\":1,\"54\":1,\"58\":1,\"60\":1,\"62\":1,\"72\":1,\"73\":1,\"75\":3,\"78\":1,\"80\":3,\"81\":2,\"82\":2,\"83\":2,\"84\":2,\"89\":1,\"103\":4,\"104\":3,\"115\":1,\"118\":1,\"119\":1,\"121\":7,\"122\":13,\"123\":1,\"124\":1,\"125\":1,\"127\":7,\"128\":5,\"129\":1,\"134\":5,\"135\":4,\"189\":1,\"206\":2,\"218\":2,\"219\":2,\"222\":1,\"226\":1,\"231\":1,\"233\":1,\"254\":3,\"256\":1,\"257\":2,\"262\":2,\"332\":1,\"335\":1,\"336\":1,\"348\":1,\"351\":2,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"382\":2,\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1,\"399\":1,\"400\":2,\"401\":1,\"402\":3,\"403\":1,\"477\":6,\"484\":4,\"497\":5,\"518\":1,\"562\":1,\"604\":4,\"606\":1,\"633\":2,\"637\":2,\"639\":1,\"640\":1,\"647\":2,\"648\":3,\"657\":1,\"665\":3,\"666\":1,\"669\":1,\"670\":1,\"671\":1}}],[\"clusterip\",{\"1\":{\"820\":1}}],[\"clustering\",{\"1\":{\"752\":1,\"755\":1}}],[\"clustercidr\",{\"1\":{\"791\":1}}],[\"clusterdomain\",{\"1\":{\"784\":1}}],[\"clusterdns\",{\"1\":{\"784\":1,\"822\":1}}],[\"clusterrole\",{\"1\":{\"814\":2}}],[\"clusterrole=system\",{\"1\":{\"768\":1}}],[\"clusterrolebinding\",{\"1\":{\"768\":1,\"814\":1}}],[\"cluster=kubernetes\",{\"1\":{\"761\":1,\"785\":1,\"792\":1}}],[\"cluster=\",{\"1\":{\"752\":1,\"755\":1}}],[\"cluster\",{\"1\":{\"276\":1,\"282\":1,\"736\":3,\"752\":6,\"755\":3,\"761\":1,\"764\":2,\"771\":7,\"784\":1,\"785\":1,\"792\":1,\"800\":1,\"806\":1,\"822\":1}}],[\"cloud的gateway后还需自定义实现动态的路由配置来提供后续更为灵活的接口发布与维护\",{\"1\":{\"667\":1}}],[\"cloud全家桶在spring\",{\"1\":{\"644\":1}}],[\"cloud\",{\"0\":{\"608\":1,\"613\":2,\"644\":1,\"672\":1,\"673\":1,\"677\":1},\"1\":{\"495\":1,\"608\":2,\"609\":4,\"610\":4,\"612\":7,\"613\":2,\"616\":2,\"617\":1,\"621\":5,\"625\":3,\"626\":1,\"627\":1,\"629\":1,\"630\":1,\"631\":3,\"635\":5,\"636\":13,\"638\":1,\"643\":6,\"644\":6,\"645\":2,\"653\":4,\"654\":4,\"655\":5,\"656\":1,\"658\":4,\"659\":3,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"667\":1,\"672\":1,\"675\":1,\"676\":1,\"770\":1}}],[\"cloud<\",{\"1\":{\"495\":1,\"626\":1,\"630\":1,\"635\":1,\"636\":5,\"655\":2,\"658\":3,\"675\":1,\"676\":1}}],[\"closed\",{\"1\":{\"468\":1}}],[\"closeable\",{\"1\":{\"256\":1}}],[\"close\",{\"1\":{\"242\":2,\"243\":1,\"246\":1,\"247\":1,\"254\":2,\"256\":1,\"257\":2}}],[\"clone方法\",{\"1\":{\"65\":1}}],[\"cloneable\",{\"0\":{\"62\":1},\"1\":{\"62\":5}}],[\"clonenotsupportedexception\",{\"1\":{\"51\":1,\"62\":5}}],[\"clone\",{\"0\":{\"61\":1,\"65\":1,\"66\":1},\"1\":{\"51\":1,\"62\":14,\"63\":1,\"66\":2,\"91\":2,\"704\":2,\"821\":1}}],[\"clz\",{\"1\":{\"127\":6,\"128\":7,\"129\":3,\"135\":6}}],[\"clz3\",{\"1\":{\"122\":2}}],[\"clz2\",{\"1\":{\"122\":3}}],[\"clz1\",{\"1\":{\"122\":2}}],[\"c\",{\"1\":{\"48\":1,\"107\":1,\"176\":2,\"233\":1,\"247\":2,\"597\":1,\"686\":1,\"699\":1,\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1,\"746\":1,\"797\":1}}],[\"chmod\",{\"1\":{\"680\":1,\"726\":1,\"811\":1}}],[\"changelog\",{\"1\":{\"758\":2}}],[\"changed\",{\"1\":{\"411\":1}}],[\"chain\",{\"0\":{\"480\":1},\"1\":{\"480\":1,\"665\":3,\"666\":2}}],[\"charsets\",{\"1\":{\"699\":1}}],[\"characterencoding=utf\",{\"1\":{\"495\":1}}],[\"character\",{\"1\":{\"138\":1,\"411\":3,\"423\":3,\"699\":11}}],[\"char\",{\"1\":{\"38\":1,\"41\":1,\"138\":2,\"147\":1,\"240\":1,\"246\":1,\"247\":2,\"248\":2,\"320\":2,\"321\":2,\"699\":1}}],[\"ch\",{\"1\":{\"147\":1}}],[\"checkout\",{\"1\":{\"706\":1,\"710\":1}}],[\"checked\",{\"1\":{\"160\":1}}],[\"check\",{\"1\":{\"10\":1,\"496\":2}}],[\"ctrl\",{\"1\":{\"23\":1}}],[\"c827badf9fa7a\",{\"1\":{\"16\":1}}],[\"cni容器完成\",{\"1\":{\"804\":1}}],[\"cni二进制文件和网络配置参数\",{\"1\":{\"804\":1}}],[\"cni\",{\"0\":{\"797\":1},\"1\":{\"783\":4,\"796\":9,\"797\":3,\"806\":6}}],[\"cnblogs\",{\"1\":{\"445\":1,\"457\":2,\"465\":1,\"799\":1}}],[\"cnf\",{\"0\":{\"423\":1},\"1\":{\"423\":1,\"699\":2}}],[\"cn\",{\"1\":{\"15\":1,\"16\":1,\"122\":1,\"134\":4,\"284\":1,\"320\":3,\"321\":5,\"326\":1,\"465\":1,\"616\":2,\"618\":1,\"656\":2,\"657\":3,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"680\":2,\"686\":3,\"730\":3,\"733\":2,\"736\":2,\"739\":2,\"742\":3,\"783\":1,\"800\":1}}],[\"cost\",{\"1\":{\"670\":1}}],[\"cookie=sessionid\",{\"1\":{\"661\":1}}],[\"cookie\",{\"0\":{\"661\":1},\"1\":{\"661\":3,\"662\":1}}],[\"coredns\",{\"1\":{\"820\":1,\"821\":1,\"822\":7}}],[\"coredns简介\",{\"0\":{\"820\":1}}],[\"coreos\",{\"1\":{\"800\":2}}],[\"core\",{\"1\":{\"561\":1,\"780\":1}}],[\"cors\",{\"1\":{\"282\":4}}],[\"column\",{\"1\":{\"362\":1,\"444\":1}}],[\"color\",{\"1\":{\"348\":1,\"382\":1}}],[\"collation\",{\"1\":{\"699\":4}}],[\"collectors\",{\"1\":{\"353\":1,\"575\":1,\"670\":2,\"671\":5}}],[\"collect\",{\"1\":{\"353\":1,\"575\":1,\"670\":2,\"671\":5}}],[\"collectionutils\",{\"1\":{\"670\":1}}],[\"collection=\",{\"1\":{\"399\":1}}],[\"collections提供了基本每种集合类型都有的方法\",{\"1\":{\"198\":1}}],[\"collections\",{\"0\":{\"198\":1},\"1\":{\"177\":2,\"198\":2,\"562\":1}}],[\"collection<flowelement>\",{\"1\":{\"569\":1}}],[\"collection<\",{\"1\":{\"176\":2}}],[\"collection接口\",{\"1\":{\"174\":1}}],[\"collection\",{\"0\":{\"173\":1},\"1\":{\"172\":2,\"173\":4,\"176\":2,\"182\":1,\"193\":1,\"198\":6,\"362\":1,\"442\":1}}],[\"coll\",{\"1\":{\"172\":1}}],[\"co\",{\"1\":{\"281\":2,\"283\":2}}],[\"copyright\",{\"1\":{\"699\":1}}],[\"copy\",{\"1\":{\"198\":1,\"511\":2,\"699\":1}}],[\"copyof\",{\"1\":{\"150\":2,\"197\":1}}],[\"code\",{\"1\":{\"150\":1,\"151\":1,\"161\":2,\"364\":1}}],[\"counter\",{\"1\":{\"440\":10}}],[\"count表示bucket中每个州的数据条数\",{\"1\":{\"313\":1}}],[\"count\",{\"1\":{\"149\":3,\"150\":1,\"206\":4,\"257\":2,\"443\":2,\"540\":9}}],[\"condition\",{\"1\":{\"788\":1}}],[\"connection\",{\"1\":{\"699\":2}}],[\"connecttimeout\",{\"1\":{\"651\":1}}],[\"connector\",{\"1\":{\"495\":1}}],[\"conversionpattern=\",{\"1\":{\"495\":2}}],[\"converter<\",{\"1\":{\"495\":2}}],[\"conf配置文件\",{\"1\":{\"771\":1,\"776\":1}}],[\"conf配置文件中的节点名称和当前服务器ip\",{\"1\":{\"755\":1}}],[\"confirmhandler\",{\"1\":{\"484\":3}}],[\"config选项与需要数据存储访问的命令一起使用\",{\"1\":{\"813\":1}}],[\"configmap\",{\"1\":{\"806\":2}}],[\"config=\",{\"1\":{\"734\":1,\"737\":1,\"740\":1,\"743\":1,\"783\":1,\"790\":1}}],[\"configinfo\",{\"1\":{\"670\":9}}],[\"configservice\",{\"1\":{\"670\":3}}],[\"config文件监听\",{\"1\":{\"669\":1}}],[\"config>\",{\"1\":{\"665\":1}}],[\"configcontroller\",{\"1\":{\"633\":2}}],[\"config<\",{\"1\":{\"630\":1,\"658\":1}}],[\"configure\",{\"1\":{\"813\":1,\"825\":1}}],[\"configurer\",{\"1\":{\"670\":1}}],[\"configured\",{\"1\":{\"41\":1}}],[\"configuration\",{\"1\":{\"548\":1,\"606\":1,\"647\":1,\"648\":1,\"649\":1,\"657\":1,\"669\":2}}],[\"config\",{\"1\":{\"284\":1,\"451\":5,\"621\":2,\"629\":1,\"631\":3,\"633\":2,\"651\":1,\"665\":7,\"670\":1,\"673\":1,\"729\":6,\"731\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1,\"744\":1,\"761\":5,\"783\":2,\"784\":2,\"785\":4,\"790\":1,\"791\":2,\"792\":4,\"804\":1,\"806\":2,\"825\":1}}],[\"conf文件来开启aof持久化\",{\"1\":{\"455\":1}}],[\"conf\",{\"0\":{\"455\":1},\"1\":{\"692\":4,\"699\":3,\"715\":2,\"752\":1,\"753\":1,\"755\":1,\"764\":1,\"766\":1,\"771\":2,\"772\":1,\"776\":2,\"777\":1,\"783\":1,\"786\":1,\"790\":1,\"793\":1,\"796\":1,\"800\":1,\"825\":2}}],[\"conf中配置rdb\",{\"0\":{\"451\":1}}],[\"conf中配置save\",{\"1\":{\"450\":1}}],[\"concat\",{\"1\":{\"424\":1}}],[\"concrete\",{\"1\":{\"483\":1}}],[\"concretedecorator\",{\"1\":{\"256\":1,\"257\":1,\"476\":1}}],[\"concretecomponent\",{\"1\":{\"256\":2,\"476\":1,\"477\":1}}],[\"concurrent\",{\"1\":{\"233\":1,\"540\":1}}],[\"concurrentmodificationexception\",{\"1\":{\"172\":1}}],[\"containernetworking\",{\"1\":{\"797\":1}}],[\"containers\",{\"1\":{\"783\":1,\"806\":1}}],[\"container\",{\"1\":{\"683\":1,\"689\":1,\"783\":2}}],[\"containsvalue\",{\"1\":{\"193\":1}}],[\"containskey\",{\"1\":{\"193\":1}}],[\"contains\",{\"1\":{\"176\":1,\"184\":1,\"671\":3}}],[\"control\",{\"1\":{\"722\":1}}],[\"controllers就会自动通知各node上的calico\",{\"1\":{\"806\":1}}],[\"controllers容器\",{\"1\":{\"806\":1}}],[\"controllers解析配置\",{\"1\":{\"806\":1}}],[\"controller的deployment\",{\"1\":{\"804\":1}}],[\"controller的service配置文件\",{\"0\":{\"772\":1,\"777\":1}}],[\"controller的配置文件\",{\"0\":{\"771\":1}}],[\"controller管理deployment等等\",{\"1\":{\"770\":1}}],[\"controller节点控制\",{\"1\":{\"770\":1}}],[\"controller控制副本\",{\"1\":{\"770\":1}}],[\"controller\",{\"0\":{\"769\":1},\"1\":{\"639\":3,\"714\":1,\"726\":1,\"735\":1,\"757\":2,\"759\":1,\"770\":6,\"771\":4,\"772\":7,\"773\":3,\"779\":1,\"800\":1,\"804\":1}}],[\"contract\",{\"1\":{\"649\":1}}],[\"continue\",{\"1\":{\"598\":1,\"599\":1}}],[\"contents\",{\"1\":{\"806\":1}}],[\"content=product\",{\"1\":{\"352\":2}}],[\"content\",{\"1\":{\"282\":2,\"296\":1,\"552\":1}}],[\"context\",{\"1\":{\"72\":1,\"73\":2,\"669\":1,\"761\":2,\"785\":2,\"792\":2}}],[\"console=org\",{\"1\":{\"495\":1}}],[\"consoleappender\",{\"1\":{\"495\":2}}],[\"console\",{\"1\":{\"495\":8}}],[\"conscious\",{\"1\":{\"150\":1,\"151\":1}}],[\"constructor1\",{\"1\":{\"127\":1}}],[\"constructors\",{\"1\":{\"127\":2}}],[\"constructor\",{\"0\":{\"127\":1},\"1\":{\"124\":1,\"126\":2,\"127\":13}}],[\"constant\",{\"1\":{\"10\":1}}],[\"command\",{\"1\":{\"806\":1}}],[\"commandlinerunner\",{\"1\":{\"670\":1}}],[\"committed\",{\"1\":{\"756\":1}}],[\"commit\",{\"1\":{\"705\":1,\"706\":1}}],[\"commentstr\",{\"1\":{\"582\":2}}],[\"comment\",{\"0\":{\"553\":1},\"1\":{\"533\":1,\"534\":1,\"535\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"549\":1,\"550\":1,\"551\":1,\"552\":1,\"553\":2,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"575\":1}}],[\"comment>\",{\"1\":{\"324\":1}}],[\"community\",{\"1\":{\"366\":1,\"377\":3}}],[\"commons项目中\",{\"1\":{\"644\":1}}],[\"common\",{\"1\":{\"10\":1,\"680\":1,\"730\":1}}],[\"compression\",{\"1\":{\"650\":1}}],[\"completetime\",{\"1\":{\"670\":2}}],[\"complete\",{\"1\":{\"505\":1,\"506\":1,\"528\":1,\"582\":1}}],[\"compose\",{\"1\":{\"680\":6}}],[\"composite\",{\"1\":{\"468\":1}}],[\"component\",{\"1\":{\"256\":2,\"476\":1,\"477\":1,\"562\":1,\"665\":1,\"666\":1,\"670\":1,\"671\":1,\"699\":1}}],[\"compile\",{\"1\":{\"386\":1}}],[\"compiler\",{\"1\":{\"10\":1,\"23\":2}}],[\"compass是一个图形界面管理工具\",{\"1\":{\"367\":1}}],[\"compass\",{\"1\":{\"367\":1}}],[\"comparingint\",{\"1\":{\"190\":1}}],[\"compare\",{\"1\":{\"190\":1}}],[\"compareto\",{\"1\":{\"189\":3}}],[\"comparator<t>\",{\"1\":{\"190\":1}}],[\"comparator\",{\"0\":{\"190\":1},\"1\":{\"190\":4,\"198\":5}}],[\"comparable<user>\",{\"1\":{\"189\":1}}],[\"comparable<t>\",{\"1\":{\"189\":1}}],[\"comparableexample\",{\"1\":{\"189\":2}}],[\"comparable\",{\"0\":{\"189\":1},\"1\":{\"188\":1,\"189\":1}}],[\"compyrami\",{\"1\":{\"305\":1}}],[\"com\",{\"1\":{\"10\":2,\"17\":2,\"20\":1,\"76\":1,\"295\":1,\"299\":1,\"303\":2,\"305\":7,\"308\":2,\"317\":2,\"324\":1,\"327\":1,\"366\":1,\"370\":1,\"436\":2,\"445\":1,\"457\":4,\"465\":1,\"495\":2,\"618\":1,\"680\":1,\"681\":1,\"683\":1,\"684\":1,\"686\":2,\"704\":1,\"715\":1,\"749\":1,\"758\":1,\"766\":1,\"772\":1,\"777\":1,\"783\":1,\"797\":1,\"799\":1,\"800\":2,\"811\":1,\"818\":1,\"821\":1}}],[\"cafile=\",{\"1\":{\"764\":1}}],[\"cacert=\",{\"1\":{\"756\":1}}],[\"cacheunauthorizedttl\",{\"1\":{\"784\":1}}],[\"cacheauthorizedttl\",{\"1\":{\"784\":1}}],[\"cachettl\",{\"1\":{\"784\":1}}],[\"cached\",{\"1\":{\"540\":1}}],[\"cache\",{\"1\":{\"41\":5}}],[\"ca=\",{\"1\":{\"734\":1,\"737\":1,\"740\":1,\"743\":1}}],[\"ca=true\",{\"1\":{\"729\":1}}],[\"ca目录下的证书拷贝到新节点上即可\",{\"1\":{\"726\":1}}],[\"ca\",{\"0\":{\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1},\"1\":{\"680\":1,\"718\":1,\"723\":3,\"726\":9,\"727\":1,\"729\":7,\"730\":5,\"731\":7,\"733\":2,\"734\":7,\"736\":2,\"737\":7,\"739\":2,\"740\":7,\"742\":2,\"743\":7,\"744\":8,\"746\":1,\"753\":10,\"755\":1,\"756\":4,\"761\":4,\"764\":14,\"771\":9,\"781\":2,\"783\":1,\"784\":2,\"785\":2,\"792\":4,\"806\":8,\"809\":7,\"813\":4}}],[\"caused\",{\"1\":{\"561\":1}}],[\"canal\",{\"1\":{\"805\":1}}],[\"canaddr\",{\"1\":{\"595\":1}}],[\"can\",{\"1\":{\"671\":1,\"699\":1}}],[\"canset\",{\"1\":{\"595\":1,\"598\":1,\"599\":1}}],[\"candidateuser\",{\"1\":{\"526\":2,\"527\":2,\"561\":1,\"579\":2,\"580\":3}}],[\"candidate\",{\"1\":{\"526\":1,\"541\":1,\"555\":1}}],[\"cannot\",{\"1\":{\"41\":1,\"72\":1,\"73\":2}}],[\"carp\",{\"1\":{\"468\":2}}],[\"cash\",{\"1\":{\"160\":1}}],[\"case\",{\"1\":{\"10\":3}}],[\"calco组件简介\",{\"0\":{\"802\":1}}],[\"calculation\",{\"1\":{\"10\":1}}],[\"calicoapiconfig\",{\"1\":{\"813\":1}}],[\"calicokube\",{\"1\":{\"806\":1}}],[\"calico将在node上创建一个名为tunl0的虚拟隧道\",{\"1\":{\"806\":1}}],[\"calico服务程序\",{\"1\":{\"806\":1}}],[\"calico的后端\",{\"1\":{\"806\":1}}],[\"calico的主要组件\",{\"1\":{\"803\":1}}],[\"calico使用etcd来保存网络拓扑和状态\",{\"1\":{\"806\":1}}],[\"calico使用的后端存储\",{\"1\":{\"803\":1}}],[\"calico命令行管理工具\",{\"1\":{\"803\":1}}],[\"calicoctl将在上查找配置文件\",{\"1\":{\"813\":1}}],[\"calicoctl\",{\"0\":{\"811\":1},\"1\":{\"803\":1,\"811\":4,\"812\":1,\"813\":4}}],[\"calico节点组网时可以直接利用数据中心的网络结构\",{\"1\":{\"802\":1}}],[\"calico保证所有容器之间的数据流量都是通过ip路由的方式完成互联互通的\",{\"1\":{\"802\":1}}],[\"calico在每个计算节点都利用linux\",{\"1\":{\"802\":1}}],[\"calico是一个基于bgp的纯三层的网络方案\",{\"1\":{\"802\":1}}],[\"calico\",{\"0\":{\"801\":1,\"803\":1,\"804\":1,\"805\":1,\"810\":1,\"811\":1},\"1\":{\"803\":1,\"804\":2,\"805\":2,\"806\":23,\"807\":2,\"809\":16,\"810\":3,\"812\":1,\"813\":6}}],[\"call\",{\"1\":{\"551\":1,\"596\":2,\"597\":1,\"715\":2}}],[\"cal\",{\"1\":{\"117\":14}}],[\"calends\",{\"1\":{\"117\":1}}],[\"calendar\",{\"0\":{\"116\":1},\"1\":{\"113\":1,\"116\":3,\"117\":15}}],[\"catalina\",{\"1\":{\"830\":1}}],[\"cattype\",{\"1\":{\"591\":3}}],[\"category\",{\"1\":{\"495\":2,\"534\":1,\"535\":1,\"537\":1,\"542\":1,\"557\":1}}],[\"cat类\",{\"1\":{\"103\":1}}],[\"cat\",{\"0\":{\"288\":1},\"1\":{\"52\":1,\"54\":7,\"58\":7,\"59\":2,\"60\":11,\"62\":13,\"103\":2,\"105\":2,\"107\":2,\"108\":1,\"288\":4,\"589\":3,\"591\":2,\"597\":5,\"683\":1,\"684\":1,\"699\":1,\"715\":2,\"752\":1,\"761\":1,\"783\":1,\"784\":1,\"786\":1,\"790\":1,\"791\":1,\"793\":1,\"806\":4,\"814\":1}}],[\"catch\",{\"1\":{\"41\":1,\"62\":1,\"134\":1,\"135\":8,\"221\":1,\"222\":3,\"225\":1,\"244\":1,\"248\":1,\"249\":1,\"252\":1,\"253\":1,\"670\":1,\"671\":3}}],[\"capacity\",{\"1\":{\"146\":2,\"147\":1}}],[\"capmem\",{\"1\":{\"10\":8}}],[\"cap应该都是8才对\",{\"1\":{\"10\":1}}],[\"cap\",{\"1\":{\"9\":4,\"10\":14}}],[\"以环境变量的方式注入到\",{\"1\":{\"820\":1}}],[\"以覆盖此选项\",{\"1\":{\"813\":1}}],[\"以特权模式运行\",{\"1\":{\"806\":1}}],[\"以对接kubernetes集群中为pod设置的network\",{\"1\":{\"804\":1}}],[\"以后在向集群中添加新节点时只要将\",{\"1\":{\"726\":1}}],[\"以便保证我们能够引入我们想要的\",{\"1\":{\"655\":1}}],[\"以此来提供通信效率\",{\"1\":{\"650\":1}}],[\"以此类推\",{\"1\":{\"442\":1}}],[\"以达到减少重复的代码\",{\"1\":{\"649\":1}}],[\"以规范准备接收附加责任的对象\",{\"1\":{\"476\":1}}],[\"以独立日志的方式记录每次写命令\",{\"1\":{\"453\":1}}],[\"以保证新数据的存入\",{\"1\":{\"427\":1,\"463\":1}}],[\"以下是一个yaml示例\",{\"1\":{\"813\":1}}],[\"以下是redis中关于aof的主要配置信息\",{\"1\":{\"455\":1}}],[\"以下内容转载自\",{\"1\":{\"799\":1}}],[\"以下pem证书文件以及\",{\"1\":{\"760\":1}}],[\"以下\",{\"1\":{\"564\":1,\"570\":1,\"577\":1}}],[\"以下设置方式为关闭rdb快照功能\",{\"1\":{\"451\":1}}],[\"以下命令适用于ubuntu\",{\"1\":{\"372\":1}}],[\"以下代码模拟买票过程\",{\"1\":{\"206\":1}}],[\"以下代码都使用该类演示\",{\"1\":{\"123\":1}}],[\"以字符为单位\",{\"1\":{\"344\":1}}],[\"以毫秒为单位\",{\"1\":{\"299\":1}}],[\"以上三项默认信息设置代表的意义是\",{\"1\":{\"451\":1}}],[\"以上的版本中\",{\"1\":{\"421\":1}}],[\"以上\",{\"1\":{\"274\":1}}],[\"以\",{\"1\":{\"256\":1,\"442\":1}}],[\"以解决多个线程同时操作一个集合的并发问题\",{\"1\":{\"198\":1}}],[\"以及证书位置\",{\"1\":{\"809\":1}}],[\"以及给用户赋权等操作命令\",{\"1\":{\"700\":1}}],[\"以及添加批注\",{\"0\":{\"505\":1}}],[\"以及怎样分配职责\",{\"1\":{\"469\":1}}],[\"以及适应的场景等\",{\"1\":{\"427\":1}}],[\"以及修改方案\",{\"1\":{\"421\":1}}],[\"以及已经熟悉的实体类型和集合\",{\"1\":{\"403\":1}}],[\"以及开机自启\",{\"1\":{\"375\":1}}],[\"以及成功\",{\"1\":{\"299\":1}}],[\"以及它的一些基础概念\",{\"1\":{\"267\":1}}],[\"以及它的一些概念的东西\",{\"1\":{\"265\":1,\"358\":1}}],[\"以及堆中的\",{\"1\":{\"155\":1}}],[\"以及常量池中的\",{\"1\":{\"155\":1}}],[\"以及以前的版本中\",{\"1\":{\"155\":1}}],[\"以及stringbuffer\",{\"1\":{\"136\":1}}],[\"以及对它的动态访问权限\",{\"1\":{\"124\":2}}],[\"以及\",{\"1\":{\"120\":1,\"351\":1,\"478\":2}}],[\"以及解决方案\",{\"1\":{\"3\":1}}],[\"以我之前的翻倍的理解\",{\"1\":{\"10\":1}}],[\"分发\",{\"1\":{\"781\":1}}],[\"分发证书\",{\"0\":{\"744\":1},\"1\":{\"744\":1}}],[\"分支下进行了修改\",{\"1\":{\"708\":1}}],[\"分支上修改代码\",{\"1\":{\"708\":1}}],[\"分支已经有一个项目了\",{\"1\":{\"705\":1}}],[\"分支功能管理多个项目\",{\"1\":{\"703\":1}}],[\"分摊到多个操作单元上进行运行\",{\"1\":{\"642\":1}}],[\"分布式配置中心\",{\"1\":{\"613\":1}}],[\"分布式配置管理\",{\"1\":{\"610\":1}}],[\"分布式调度服务\",{\"1\":{\"613\":1}}],[\"分布式任务调度\",{\"1\":{\"610\":1}}],[\"分布式事务\",{\"1\":{\"610\":1}}],[\"分布式事务解决方案\",{\"1\":{\"260\":1,\"613\":1}}],[\"分页参数\",{\"1\":{\"353\":1}}],[\"分页查询\",{\"0\":{\"353\":1}}],[\"分页\",{\"0\":{\"389\":1},\"1\":{\"348\":1}}],[\"分别指定不同的过期时间\",{\"1\":{\"729\":1}}],[\"分别是rdb和aof\",{\"1\":{\"427\":1,\"446\":1}}],[\"分别是\",{\"1\":{\"427\":1,\"437\":1,\"654\":1}}],[\"分别对应于high\",{\"1\":{\"337\":1}}],[\"分别为elasticsearchresttemplate和\",{\"1\":{\"337\":1}}],[\"分别在这两个配置文件\",{\"1\":{\"27\":1}}],[\"分隔开的能力\",{\"1\":{\"312\":1}}],[\"分词有明显的区别\",{\"1\":{\"321\":1}}],[\"分词使用\",{\"0\":{\"318\":1}}],[\"分词器请看\",{\"1\":{\"341\":1}}],[\"分词器的版本要和你安装的\",{\"1\":{\"317\":1}}],[\"分词器\",{\"0\":{\"317\":1},\"1\":{\"332\":1,\"341\":1}}],[\"分词\",{\"0\":{\"320\":1,\"321\":1},\"1\":{\"305\":1}}],[\"分片机制等\",{\"1\":{\"427\":1}}],[\"分片\",{\"1\":{\"276\":1}}],[\"分为两种类型的\",{\"1\":{\"654\":1}}],[\"分为\",{\"1\":{\"165\":1,\"240\":3}}],[\"分类\",{\"0\":{\"101\":1},\"1\":{\"534\":1}}],[\"分析\",{\"0\":{\"155\":1},\"1\":{\"155\":2}}],[\"分析图如下\",{\"1\":{\"48\":1}}],[\"分析源码\",{\"0\":{\"10\":1}}],[\"分配空间\",{\"1\":{\"48\":1}}],[\"分享生活的感悟\",{\"1\":{\"3\":1}}],[\"分享生活的乐子\",{\"1\":{\"0\":1}}],[\"分享技术贴\",{\"1\":{\"3\":1}}],[\"900\",{\"1\":{\"451\":1}}],[\"988135\",{\"1\":{\"401\":1}}],[\"99756\",{\"1\":{\"401\":1}}],[\"99171\",{\"1\":{\"400\":2,\"402\":3,\"403\":1}}],[\"9299\",{\"1\":{\"351\":1,\"356\":1}}],[\"9200\",{\"1\":{\"281\":2,\"282\":1,\"283\":1,\"296\":1,\"330\":2}}],[\"9750h\",{\"1\":{\"351\":1}}],[\"9英寸全面屏轻薄笔记本电脑\",{\"1\":{\"351\":1,\"353\":1}}],[\"9300\",{\"1\":{\"281\":2}}],[\"91\",{\"1\":{\"10\":1}}],[\"95\",{\"1\":{\"10\":1}}],[\"96f7\",{\"1\":{\"813\":1}}],[\"96\",{\"1\":{\"10\":1}}],[\"9\",{\"0\":{\"542\":1},\"1\":{\"9\":2,\"10\":1,\"125\":1,\"327\":1,\"351\":2,\"682\":1}}],[\"8443\",{\"1\":{\"818\":1}}],[\"838821ms\",{\"1\":{\"756\":1}}],[\"8rraa3\",{\"1\":{\"704\":1}}],[\"8的\",{\"1\":{\"657\":1}}],[\"8<\",{\"1\":{\"636\":3}}],[\"8128\",{\"1\":{\"356\":1}}],[\"8192\",{\"1\":{\"10\":10,\"251\":2}}],[\"8月2日\",{\"1\":{\"351\":1}}],[\"8月尊享好礼\",{\"1\":{\"351\":1}}],[\"8英寸麒麟980影音娱乐平板电脑4gb+64gb\",{\"1\":{\"351\":1}}],[\"8gb+128gb\",{\"1\":{\"351\":1}}],[\"8g\",{\"1\":{\"351\":2,\"353\":1}}],[\"8中可以定义default方法体\",{\"1\":{\"98\":1}}],[\"8开始\",{\"1\":{\"95\":1}}],[\"8cjh\",{\"1\":{\"26\":1}}],[\"82\",{\"1\":{\"10\":1}}],[\"8550u\",{\"1\":{\"351\":1,\"352\":1}}],[\"85\",{\"1\":{\"10\":1}}],[\"8080\",{\"1\":{\"771\":1,\"776\":1}}],[\"8082\",{\"1\":{\"641\":1}}],[\"8081\",{\"1\":{\"641\":1}}],[\"8091\",{\"1\":{\"638\":1,\"641\":2}}],[\"8001\",{\"1\":{\"513\":1}}],[\"80\",{\"1\":{\"10\":3,\"161\":1,\"689\":2}}],[\"8848\",{\"1\":{\"620\":1,\"627\":1,\"631\":2,\"638\":1,\"658\":1}}],[\"880\",{\"1\":{\"295\":1,\"299\":1}}],[\"8859\",{\"1\":{\"238\":1}}],[\"88\",{\"1\":{\"10\":1,\"656\":2,\"657\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1}}],[\"87600h\",{\"1\":{\"729\":3,\"730\":1}}],[\"87\",{\"1\":{\"10\":1}}],[\"8\",{\"0\":{\"541\":1,\"742\":1,\"743\":1},\"1\":{\"9\":2,\"10\":7,\"38\":1,\"111\":1,\"136\":1,\"148\":1,\"152\":1,\"163\":1,\"238\":1,\"299\":1,\"324\":1,\"327\":1,\"351\":2,\"364\":1,\"443\":2,\"444\":2,\"495\":2,\"699\":1,\"797\":1,\"825\":5,\"830\":1}}],[\"79048767\",{\"1\":{\"457\":1}}],[\"7999\",{\"1\":{\"351\":1}}],[\"7及之后版本\",{\"1\":{\"408\":1}}],[\"741404\",{\"1\":{\"401\":1}}],[\"7nm工艺5g旗舰芯片全面屏超大广角徕卡三摄8gb+256gb翡冷翠5g双模全网通手机\",{\"1\":{\"351\":1,\"353\":1}}],[\"72\",{\"1\":{\"10\":1,\"351\":1,\"352\":1}}],[\"734883758a7159caba1d9501c22f1408\",{\"1\":{\"746\":1}}],[\"73083\",{\"1\":{\"401\":1}}],[\"738868\",{\"1\":{\"400\":2,\"402\":3,\"403\":1}}],[\"73\",{\"1\":{\"10\":1,\"400\":2,\"401\":2,\"402\":3,\"403\":1}}],[\"755\",{\"1\":{\"811\":1}}],[\"75\",{\"1\":{\"10\":1}}],[\"7\",{\"0\":{\"109\":1,\"540\":1,\"739\":1,\"740\":1},\"1\":{\"9\":2,\"10\":1,\"41\":1,\"155\":2,\"158\":1,\"244\":1,\"248\":1,\"249\":1,\"252\":1,\"253\":1,\"274\":2,\"279\":3,\"281\":2,\"283\":2,\"284\":1,\"317\":3,\"327\":4,\"328\":1,\"341\":2,\"348\":1,\"351\":3,\"353\":1,\"408\":1,\"421\":1,\"444\":2,\"486\":1,\"560\":1,\"691\":1,\"692\":1,\"698\":1}}],[\"6m3s\",{\"1\":{\"788\":1}}],[\"6m22ns\",{\"1\":{\"355\":1}}],[\"6版本中新增角色访问控制机制\",{\"1\":{\"724\":1}}],[\"6hzqxx\",{\"1\":{\"585\":1}}],[\"6r\",{\"1\":{\"495\":2}}],[\"6<\",{\"1\":{\"495\":1}}],[\"6844903953092575246\",{\"1\":{\"465\":1}}],[\"6899\",{\"1\":{\"351\":1}}],[\"60959\",{\"1\":{\"812\":1}}],[\"60\",{\"1\":{\"451\":1}}],[\"60l\",{\"1\":{\"161\":2}}],[\"6379>\",{\"1\":{\"440\":18,\"441\":10,\"442\":9,\"443\":14,\"444\":5}}],[\"6及之前版本\",{\"1\":{\"408\":1}}],[\"6231201\",{\"1\":{\"352\":1}}],[\"6英寸游戏笔记本电脑\",{\"1\":{\"351\":1}}],[\"6英寸金属轻薄笔记本\",{\"1\":{\"351\":1,\"352\":1}}],[\"6gb+128gb全息幻彩蓝\",{\"1\":{\"351\":1,\"352\":1}}],[\"6199\",{\"1\":{\"351\":2}}],[\"6uwe6r\",{\"1\":{\"27\":1}}],[\"666666666667\",{\"1\":{\"356\":1}}],[\"66\",{\"1\":{\"10\":1}}],[\"65\",{\"1\":{\"10\":1}}],[\"6443\",{\"1\":{\"761\":1,\"785\":1,\"792\":1}}],[\"64mb\",{\"1\":{\"455\":1}}],[\"64g\",{\"1\":{\"351\":1}}],[\"64类型\",{\"1\":{\"10\":1}}],[\"64\",{\"1\":{\"10\":3,\"38\":2,\"364\":1,\"534\":1,\"535\":2,\"536\":3,\"537\":4,\"538\":2,\"539\":1,\"540\":6,\"541\":4,\"542\":6,\"543\":5,\"544\":5,\"545\":5,\"546\":5,\"547\":5,\"548\":5,\"549\":5,\"550\":5,\"551\":6,\"552\":4,\"553\":3,\"554\":6,\"555\":3,\"556\":4,\"557\":5,\"558\":5,\"681\":1}}],[\"64位\",{\"1\":{\"10\":1}}],[\"6\",{\"0\":{\"77\":1,\"106\":1,\"376\":1,\"539\":1,\"736\":1,\"737\":1,\"756\":1,\"768\":1,\"788\":1,\"814\":1},\"1\":{\"9\":2,\"10\":1,\"25\":1,\"27\":1,\"46\":1,\"155\":2,\"326\":1,\"327\":3,\"351\":3,\"356\":1,\"408\":1,\"440\":1,\"443\":3,\"444\":2,\"495\":1,\"698\":1,\"788\":1,\"797\":1,\"807\":2}}],[\"5ffbfd976d\",{\"1\":{\"822\":1}}],[\"57796\",{\"1\":{\"813\":1}}],[\"57344\",{\"1\":{\"10\":1}}],[\"5m0s\",{\"1\":{\"784\":1}}],[\"51\",{\"1\":{\"699\":1}}],[\"512gssd\",{\"1\":{\"351\":1,\"352\":1}}],[\"512g\",{\"1\":{\"351\":2,\"353\":1}}],[\"512\",{\"1\":{\"10\":1}}],[\"5432\",{\"1\":{\"689\":2}}],[\"5499\",{\"1\":{\"356\":1}}],[\"5p\",{\"1\":{\"495\":2}}],[\"5<\",{\"1\":{\"495\":1}}],[\"5g先驱\",{\"1\":{\"351\":1,\"353\":1}}],[\"5g双模\",{\"1\":{\"351\":1,\"353\":1}}],[\"5g\",{\"1\":{\"351\":1,\"353\":1}}],[\"5英寸\",{\"1\":{\"351\":1}}],[\"59\",{\"1\":{\"117\":2}}],[\"5601\",{\"1\":{\"283\":2}}],[\"56\",{\"1\":{\"10\":2,\"115\":2}}],[\"5299\",{\"1\":{\"351\":1}}],[\"52\",{\"1\":{\"10\":1}}],[\"5000\",{\"1\":{\"641\":2,\"651\":2}}],[\"500\",{\"1\":{\"387\":2,\"393\":1}}],[\"50\",{\"1\":{\"10\":2}}],[\"5\",{\"0\":{\"66\":1,\"76\":1,\"105\":1,\"375\":1,\"538\":1,\"592\":1,\"733\":1,\"734\":1,\"755\":1,\"767\":1,\"787\":1,\"794\":1,\"808\":1,\"809\":1,\"810\":1,\"811\":1,\"812\":1,\"813\":2},\"1\":{\"9\":2,\"10\":1,\"41\":1,\"161\":1,\"206\":2,\"219\":1,\"277\":3,\"304\":1,\"320\":1,\"321\":2,\"327\":12,\"328\":1,\"343\":1,\"348\":1,\"351\":2,\"355\":1,\"356\":1,\"365\":2,\"371\":2,\"372\":3,\"377\":1,\"378\":3,\"389\":2,\"408\":2,\"421\":1,\"443\":2,\"444\":2,\"477\":1,\"652\":1,\"653\":1,\"655\":2,\"691\":1,\"692\":1,\"756\":1,\"784\":1}}],[\"4d02\",{\"1\":{\"813\":1}}],[\"4d4h\",{\"1\":{\"807\":2}}],[\"451cp6\",{\"1\":{\"665\":1}}],[\"4554617c\",{\"1\":{\"52\":1}}],[\"4tturu\",{\"1\":{\"636\":1}}],[\"4<\",{\"1\":{\"495\":1}}],[\"41434612\",{\"1\":{\"457\":1}}],[\"40<\",{\"1\":{\"495\":1}}],[\"40dbc78711c8\",{\"1\":{\"436\":1}}],[\"40\",{\"1\":{\"400\":2,\"401\":2,\"402\":3,\"403\":1}}],[\"4000\",{\"1\":{\"535\":3,\"537\":1,\"542\":1,\"543\":2,\"544\":2,\"545\":2,\"546\":2,\"549\":2,\"551\":1,\"552\":2,\"553\":1,\"554\":2,\"556\":1,\"557\":2,\"558\":2}}],[\"4005952\",{\"1\":{\"341\":1}}],[\"400\",{\"1\":{\"41\":2}}],[\"4g+128g\",{\"1\":{\"351\":1}}],[\"4日\",{\"1\":{\"351\":1}}],[\"443\",{\"1\":{\"818\":1}}],[\"44z\",{\"1\":{\"813\":1}}],[\"44\",{\"1\":{\"10\":1}}],[\"4849\",{\"1\":{\"356\":1}}],[\"485091\",{\"1\":{\"352\":1}}],[\"4800万超广角三摄\",{\"1\":{\"351\":1,\"352\":1}}],[\"4800万超广角ai四摄\",{\"1\":{\"351\":1}}],[\"4800万全焦段ai四摄\",{\"1\":{\"351\":1}}],[\"4800万四摄\",{\"1\":{\"351\":1}}],[\"48\",{\"1\":{\"10\":1}}],[\"46\",{\"1\":{\"10\":1}}],[\"43\",{\"1\":{\"10\":1}}],[\"4\",{\"0\":{\"65\":1,\"75\":1,\"99\":1,\"104\":1,\"232\":1,\"374\":1,\"417\":1,\"537\":1,\"591\":1,\"685\":1,\"686\":1,\"698\":1,\"729\":1,\"730\":1,\"731\":1,\"754\":1,\"761\":1,\"766\":1,\"773\":1,\"778\":1,\"786\":1,\"793\":1,\"801\":1,\"802\":1,\"803\":1,\"804\":1,\"805\":2,\"806\":2,\"807\":2,\"812\":1},\"1\":{\"9\":2,\"10\":4,\"27\":1,\"48\":2,\"158\":1,\"206\":1,\"277\":4,\"321\":2,\"327\":8,\"328\":1,\"348\":1,\"351\":2,\"355\":1,\"356\":1,\"378\":2,\"441\":2,\"442\":5,\"443\":15,\"444\":4,\"456\":1,\"495\":1,\"502\":2,\"503\":2,\"535\":2,\"538\":1,\"540\":6,\"550\":1,\"595\":2,\"674\":1,\"697\":1,\"749\":1,\"751\":2,\"830\":1}}],[\"3e3b1506\",{\"1\":{\"813\":1}}],[\"38\",{\"1\":{\"813\":1}}],[\"39ef1e4f4220858a4f0d30fe91aad7e4c4ab0812\",{\"1\":{\"697\":1}}],[\"39225\",{\"1\":{\"295\":1,\"299\":1}}],[\"3306\",{\"1\":{\"692\":4}}],[\"3323d5d0b82e716609808090d3dc7cb3198b8c4b\",{\"1\":{\"27\":1}}],[\"3<\",{\"1\":{\"636\":1,\"655\":2}}],[\"3649\",{\"1\":{\"356\":1}}],[\"3k全面屏开启无界视野\",{\"1\":{\"351\":1}}],[\"3k\",{\"1\":{\"351\":1,\"353\":1}}],[\"3788\",{\"1\":{\"351\":1}}],[\"3l\",{\"1\":{\"222\":1}}],[\"30s\",{\"1\":{\"784\":1}}],[\"30c\",{\"1\":{\"495\":2}}],[\"300\",{\"1\":{\"451\":1,\"539\":1}}],[\"30001\",{\"1\":{\"818\":2}}],[\"3000l\",{\"1\":{\"669\":1}}],[\"3000\",{\"1\":{\"221\":1}}],[\"30\",{\"1\":{\"16\":1,\"41\":2,\"161\":1,\"309\":1,\"495\":2}}],[\"3199\",{\"1\":{\"351\":1}}],[\"31\",{\"1\":{\"10\":1}}],[\"32s\",{\"1\":{\"822\":1}}],[\"32767\",{\"1\":{\"764\":1}}],[\"32768\",{\"1\":{\"10\":2}}],[\"32\",{\"1\":{\"10\":4,\"38\":2,\"295\":1,\"299\":1,\"364\":1,\"366\":1}}],[\"3\",{\"0\":{\"24\":1,\"64\":1,\"74\":1,\"96\":1,\"103\":1,\"231\":1,\"373\":1,\"410\":1,\"416\":1,\"536\":1,\"590\":1,\"681\":1,\"682\":1,\"683\":1,\"684\":2,\"685\":1,\"697\":1,\"715\":1,\"721\":1,\"725\":1,\"731\":1,\"750\":1,\"753\":1,\"760\":1,\"765\":1,\"772\":1,\"777\":1,\"785\":1,\"790\":1,\"791\":1,\"792\":2,\"793\":1,\"794\":1,\"798\":1,\"799\":1,\"800\":1,\"804\":1,\"811\":1,\"822\":1},\"1\":{\"9\":2,\"10\":1,\"25\":1,\"27\":1,\"46\":3,\"47\":1,\"48\":4,\"122\":1,\"135\":1,\"206\":1,\"277\":1,\"293\":1,\"321\":2,\"327\":10,\"328\":2,\"348\":2,\"351\":4,\"353\":1,\"355\":9,\"356\":8,\"441\":1,\"442\":7,\"443\":11,\"444\":3,\"469\":1,\"477\":1,\"502\":1,\"503\":2,\"524\":1,\"534\":1,\"537\":2,\"540\":2,\"542\":3,\"543\":2,\"545\":1,\"546\":2,\"547\":1,\"548\":1,\"549\":1,\"550\":2,\"551\":2,\"552\":1,\"553\":1,\"554\":1,\"556\":2,\"557\":4,\"558\":2,\"601\":2,\"621\":1,\"636\":5,\"652\":4,\"655\":1,\"699\":1,\"783\":1}}],[\"bgp或ipip\",{\"1\":{\"806\":1}}],[\"bgp\",{\"1\":{\"803\":1,\"806\":1,\"812\":3}}],[\"bgsave流程图如下所示👇\",{\"1\":{\"449\":1}}],[\"bgsave命令\",{\"1\":{\"449\":1}}],[\"bgsave\",{\"1\":{\"449\":4,\"451\":1}}],[\"b上重新修改一遍代码\",{\"1\":{\"708\":1}}],[\"b9pmyelo\",{\"1\":{\"684\":1}}],[\"bvi3wp\",{\"1\":{\"532\":1}}],[\"b2qius\",{\"1\":{\"499\":1}}],[\"bpmnmodel\",{\"1\":{\"568\":1,\"569\":1}}],[\"bpmn或图片等\",{\"1\":{\"538\":1}}],[\"bpmnoutput\",{\"1\":{\"511\":2}}],[\"bpmninput\",{\"1\":{\"511\":2}}],[\"bpmn同级目录下\",{\"1\":{\"499\":1}}],[\"bpmn\",{\"1\":{\"495\":3,\"498\":1,\"499\":3,\"502\":4,\"511\":1,\"525\":1}}],[\"bpmn文件名称\",{\"1\":{\"535\":1}}],[\"bpmn文件本质上是xml格式\",{\"1\":{\"499\":1}}],[\"bpmn文件就是业务流程定义文件\",{\"1\":{\"488\":1}}],[\"bpmn文件\",{\"1\":{\"488\":1,\"489\":2}}],[\"bpmn2\",{\"1\":{\"486\":1}}],[\"blueberrytea\",{\"1\":{\"477\":3}}],[\"blocksize\",{\"1\":{\"813\":1}}],[\"blob\",{\"1\":{\"10\":2,\"327\":1,\"758\":1}}],[\"blog2\",{\"1\":{\"657\":1}}],[\"blog\",{\"1\":{\"1\":1,\"15\":1,\"457\":2,\"656\":5,\"657\":7,\"660\":3,\"661\":1,\"662\":1,\"663\":1}}],[\"bbb\",{\"1\":{\"444\":4}}],[\"bson\",{\"1\":{\"364\":1}}],[\"bk\",{\"1\":{\"355\":3}}],[\"b面康宁玻璃覆盖\",{\"1\":{\"351\":1,\"352\":1}}],[\"broadcasthost\",{\"1\":{\"831\":2}}],[\"brogan\",{\"1\":{\"295\":1,\"299\":1}}],[\"bridge\",{\"1\":{\"715\":4}}],[\"branch\",{\"1\":{\"705\":1,\"706\":1,\"708\":2,\"710\":1}}],[\"brands\",{\"1\":{\"355\":2,\"356\":2}}],[\"brand=华为\",{\"1\":{\"353\":2}}],[\"brand=小米\",{\"1\":{\"352\":2}}],[\"brand\",{\"1\":{\"351\":14,\"355\":1,\"356\":1}}],[\"brew\",{\"1\":{\"377\":5}}],[\"b>小吃\",{\"1\":{\"341\":2,\"343\":3}}],[\"b>的游客来说\",{\"1\":{\"341\":1,\"343\":2}}],[\"b>\",{\"1\":{\"341\":2,\"346\":1}}],[\"boston\",{\"1\":{\"699\":1}}],[\"bod\",{\"1\":{\"595\":1}}],[\"body\",{\"1\":{\"293\":2,\"298\":1,\"825\":1}}],[\"box\",{\"0\":{\"401\":1},\"1\":{\"398\":1,\"401\":4}}],[\"boolquerybuilder\",{\"1\":{\"350\":1}}],[\"bool\",{\"0\":{\"308\":1},\"1\":{\"308\":2,\"310\":1,\"350\":1,\"590\":3,\"594\":3,\"595\":4}}],[\"boolean\",{\"1\":{\"38\":1,\"41\":1,\"51\":1,\"56\":1,\"58\":1,\"60\":1,\"108\":1,\"176\":6,\"180\":6,\"184\":3,\"193\":5,\"198\":1,\"249\":1,\"257\":1,\"262\":1,\"333\":2,\"334\":2,\"364\":1,\"484\":4,\"514\":2,\"582\":1,\"604\":1,\"665\":3}}],[\"boot文档\",{\"1\":{\"631\":1}}],[\"bootstrapper\",{\"1\":{\"768\":1}}],[\"bootstrapping\",{\"0\":{\"745\":1,\"765\":1},\"1\":{\"814\":1}}],[\"bootstrap用户允许请求证书\",{\"0\":{\"768\":1}}],[\"bootstrap机制\",{\"1\":{\"764\":1}}],[\"bootstraping机制来自动颁发客户端证书\",{\"1\":{\"745\":1}}],[\"bootstraping\",{\"1\":{\"745\":2}}],[\"bootstrap<\",{\"1\":{\"675\":1}}],[\"bootstrap\",{\"0\":{\"673\":1},\"1\":{\"625\":1,\"627\":1,\"631\":1,\"674\":1,\"723\":1,\"746\":2,\"764\":3,\"768\":3,\"782\":1,\"783\":3,\"785\":3,\"788\":1}}],[\"boot<\",{\"1\":{\"329\":1,\"379\":1,\"655\":1}}],[\"boot\",{\"1\":{\"260\":1,\"327\":1,\"329\":1,\"378\":1,\"379\":1,\"496\":1,\"653\":1,\"655\":3,\"674\":1}}],[\"backend=bird\",{\"1\":{\"809\":1}}],[\"backend\",{\"1\":{\"800\":1,\"806\":2}}],[\"bare\",{\"1\":{\"731\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1}}],[\"balancing\",{\"1\":{\"643\":1,\"644\":1}}],[\"balance\",{\"1\":{\"295\":1,\"299\":1,\"304\":1,\"310\":2,\"314\":5,\"642\":1}}],[\"batchingdecorator\",{\"1\":{\"477\":3}}],[\"bat文件就可以了\",{\"1\":{\"325\":1}}],[\"base64\",{\"1\":{\"806\":4}}],[\"based\",{\"1\":{\"724\":1}}],[\"basepackages\",{\"1\":{\"331\":1,\"381\":1}}],[\"bash\",{\"1\":{\"284\":1,\"689\":1,\"695\":1}}],[\"banlances\",{\"1\":{\"314\":2}}],[\"bank\",{\"1\":{\"295\":1,\"296\":1,\"299\":3,\"300\":1,\"302\":2,\"303\":2,\"304\":1,\"305\":2,\"306\":1,\"307\":1,\"308\":1,\"313\":1,\"314\":2}}],[\"bankcard\",{\"1\":{\"160\":1}}],[\"but\",{\"1\":{\"699\":2}}],[\"business\",{\"1\":{\"540\":1,\"556\":1}}],[\"businesskey\",{\"0\":{\"513\":1},\"1\":{\"513\":5}}],[\"bucket\",{\"1\":{\"355\":1,\"356\":5}}],[\"bulk\",{\"0\":{\"293\":1},\"1\":{\"293\":1,\"296\":3}}],[\"buf\",{\"1\":{\"244\":3,\"248\":3,\"252\":3,\"257\":1,\"454\":2}}],[\"buffer\",{\"1\":{\"257\":1}}],[\"bufferedwriter\",{\"1\":{\"251\":1,\"253\":3,\"478\":1}}],[\"bufferedreader\",{\"1\":{\"251\":1,\"253\":3,\"478\":1}}],[\"bufferedoutputstream\",{\"1\":{\"251\":1,\"252\":3}}],[\"bufferedinputstream\",{\"1\":{\"251\":1,\"252\":3,\"257\":5}}],[\"buffout\",{\"1\":{\"252\":3,\"253\":4}}],[\"buffin\",{\"1\":{\"252\":2,\"253\":2}}],[\"buff\",{\"1\":{\"242\":2,\"243\":2,\"252\":1,\"253\":1}}],[\"builder\",{\"1\":{\"348\":3,\"352\":2,\"353\":4,\"354\":4,\"355\":3,\"356\":3,\"657\":2}}],[\"build\",{\"1\":{\"23\":2,\"348\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"636\":2,\"657\":1,\"689\":1,\"825\":1}}],[\"b线程强制执行\",{\"1\":{\"225\":1}}],[\"b类的实例\",{\"1\":{\"108\":1}}],[\"b有一个\",{\"1\":{\"91\":1}}],[\"beijing\",{\"1\":{\"730\":2,\"733\":1,\"736\":1,\"739\":2,\"742\":2}}],[\"beta1<\",{\"1\":{\"495\":7}}],[\"between\",{\"0\":{\"393\":1},\"1\":{\"41\":2,\"393\":1}}],[\"bean>\",{\"1\":{\"495\":2}}],[\"beans>\",{\"1\":{\"495\":1}}],[\"beans\",{\"1\":{\"495\":4,\"669\":1}}],[\"beanid\",{\"1\":{\"484\":2}}],[\"beaninfo\",{\"1\":{\"133\":3,\"134\":5,\"135\":9}}],[\"bean\",{\"1\":{\"135\":1,\"606\":1,\"645\":2,\"647\":1,\"657\":2}}],[\"bean2mapreflect\",{\"1\":{\"135\":1}}],[\"bean2map\",{\"1\":{\"135\":1}}],[\"beanutil\",{\"1\":{\"135\":2}}],[\"beandescriptor\",{\"1\":{\"133\":1}}],[\"beanclass\",{\"1\":{\"133\":1,\"134\":1}}],[\"before\",{\"1\":{\"114\":1}}],[\"be\",{\"1\":{\"41\":3,\"72\":1,\"73\":2,\"495\":2,\"671\":2,\"699\":1}}],[\"bird\",{\"1\":{\"806\":1,\"812\":1}}],[\"bip=172\",{\"1\":{\"799\":1}}],[\"bigint\",{\"1\":{\"544\":1,\"550\":1,\"551\":1,\"554\":1,\"556\":1,\"557\":1,\"558\":1}}],[\"bionic\",{\"1\":{\"372\":1,\"680\":1}}],[\"bit\",{\"1\":{\"38\":1}}],[\"binary\",{\"1\":{\"296\":1,\"364\":1,\"699\":1}}],[\"binarysearch\",{\"1\":{\"197\":1}}],[\"bindaddress\",{\"1\":{\"791\":1}}],[\"bind\",{\"1\":{\"262\":2,\"764\":2,\"771\":1,\"776\":1}}],[\"bin\",{\"1\":{\"27\":3,\"284\":1,\"317\":3,\"680\":2,\"682\":1,\"683\":2,\"689\":1,\"695\":1,\"726\":2,\"751\":2,\"753\":1,\"756\":1,\"759\":4,\"766\":1,\"772\":1,\"777\":1,\"781\":4,\"783\":3,\"785\":2,\"786\":1,\"793\":1,\"796\":2,\"797\":2,\"806\":3,\"809\":2,\"811\":1}}],[\"b因为是int\",{\"1\":{\"10\":1}}],[\"by中出现\",{\"1\":{\"421\":1}}],[\"by聚合操作\",{\"1\":{\"421\":1,\"424\":1}}],[\"by问题\",{\"0\":{\"421\":1}}],[\"by\",{\"1\":{\"10\":1,\"41\":1,\"312\":1,\"313\":1,\"406\":2,\"409\":1,\"420\":1,\"421\":2,\"422\":4,\"423\":2,\"424\":3,\"561\":1,\"698\":1,\"699\":1}}],[\"bytearray表统一部署下的png资源id\",{\"1\":{\"537\":1}}],[\"bytearray表统一部署下的bpmn资源id\",{\"1\":{\"537\":1}}],[\"bytearray\",{\"0\":{\"538\":1},\"1\":{\"502\":1,\"533\":1,\"544\":1,\"554\":1,\"558\":1}}],[\"bytearrayinputstream\",{\"1\":{\"256\":1}}],[\"bytes值\",{\"1\":{\"595\":1}}],[\"bytes\",{\"1\":{\"10\":2,\"538\":1,\"594\":3}}],[\"byte\",{\"1\":{\"9\":1,\"38\":1,\"41\":1,\"239\":3,\"240\":1,\"242\":1,\"243\":2,\"244\":2,\"252\":2,\"257\":3,\"595\":2}}],[\"b\",{\"1\":{\"9\":5,\"10\":1,\"48\":1,\"108\":1,\"222\":8,\"225\":2,\"243\":1,\"257\":5,\"596\":2,\"601\":2,\"708\":1,\"710\":1}}],[\"=list\",{\"1\":{\"511\":1}}],[\"=>\",{\"1\":{\"10\":5,\"206\":1,\"218\":2,\"219\":2,\"225\":1}}],[\"==================\",{\"1\":{\"715\":1}}],[\"===================\",{\"1\":{\"513\":1}}],[\"===========================\",{\"1\":{\"715\":1}}],[\"====================\",{\"1\":{\"509\":1}}],[\"==>\",{\"1\":{\"23\":1}}],[\"==\",{\"0\":{\"57\":1},\"1\":{\"10\":4,\"41\":3,\"56\":2,\"57\":3,\"58\":2,\"60\":2,\"122\":2,\"140\":2,\"149\":1,\"155\":6,\"225\":1,\"575\":1,\"598\":2,\"601\":6,\"604\":1,\"671\":1}}],[\"=\",{\"1\":{\"9\":6,\"10\":30,\"41\":18,\"46\":4,\"47\":3,\"48\":4,\"54\":2,\"58\":3,\"60\":6,\"62\":4,\"72\":4,\"74\":2,\"75\":3,\"78\":1,\"82\":1,\"83\":1,\"84\":1,\"89\":2,\"103\":4,\"104\":3,\"107\":4,\"108\":2,\"115\":4,\"117\":2,\"122\":4,\"123\":3,\"127\":6,\"128\":7,\"129\":5,\"134\":5,\"135\":15,\"140\":3,\"149\":1,\"150\":1,\"151\":3,\"154\":1,\"155\":13,\"161\":3,\"172\":2,\"177\":1,\"185\":1,\"190\":1,\"198\":1,\"206\":6,\"218\":3,\"219\":4,\"222\":1,\"224\":1,\"225\":2,\"226\":2,\"233\":4,\"244\":7,\"248\":7,\"249\":2,\"252\":9,\"253\":8,\"254\":7,\"257\":2,\"262\":4,\"331\":1,\"332\":16,\"336\":1,\"348\":7,\"351\":16,\"352\":4,\"353\":7,\"354\":2,\"355\":4,\"356\":6,\"381\":1,\"385\":2,\"386\":2,\"387\":2,\"388\":2,\"389\":4,\"393\":1,\"394\":1,\"399\":4,\"400\":4,\"401\":2,\"402\":6,\"403\":3,\"408\":1,\"410\":1,\"411\":3,\"477\":6,\"484\":4,\"495\":1,\"497\":1,\"502\":8,\"503\":7,\"504\":4,\"505\":4,\"506\":7,\"509\":3,\"510\":3,\"511\":8,\"513\":13,\"514\":10,\"523\":6,\"527\":8,\"528\":4,\"565\":3,\"568\":3,\"569\":6,\"575\":1,\"582\":1,\"589\":2,\"591\":5,\"592\":2,\"594\":4,\"595\":4,\"596\":3,\"597\":3,\"598\":9,\"599\":11,\"601\":6,\"603\":2,\"604\":2,\"631\":1,\"633\":3,\"639\":2,\"647\":1,\"648\":2,\"665\":4,\"669\":1,\"670\":15,\"671\":9,\"698\":3,\"715\":3,\"756\":1}}],[\"aws\",{\"1\":{\"799\":1,\"802\":1}}],[\"awk\",{\"1\":{\"788\":1}}],[\"ajecjb\",{\"1\":{\"695\":1}}],[\"aq\",{\"1\":{\"689\":2}}],[\"azk8s\",{\"1\":{\"686\":1}}],[\"azure镜像\",{\"1\":{\"686\":1}}],[\"azure\",{\"1\":{\"680\":2}}],[\"attachment\",{\"0\":{\"552\":1},\"1\":{\"533\":1}}],[\"auditstatusboolean\",{\"1\":{\"582\":2}}],[\"audit为history的默认值\",{\"1\":{\"496\":1}}],[\"audit\",{\"1\":{\"496\":2,\"764\":6}}],[\"auth=true\",{\"1\":{\"764\":1}}],[\"authority=\",{\"1\":{\"761\":1,\"785\":1,\"792\":1}}],[\"authorization\",{\"1\":{\"282\":1,\"764\":2,\"784\":1,\"814\":5}}],[\"authors\",{\"1\":{\"699\":1}}],[\"authglobalfilter\",{\"1\":{\"666\":1}}],[\"authentication\",{\"1\":{\"408\":1,\"411\":1,\"697\":2,\"784\":1}}],[\"auth\",{\"1\":{\"282\":1,\"723\":1,\"729\":4,\"764\":3,\"765\":1}}],[\"autoupdate\",{\"1\":{\"814\":1}}],[\"autodetection\",{\"1\":{\"806\":2}}],[\"autodetect\",{\"1\":{\"806\":1}}],[\"autowired\",{\"1\":{\"336\":1,\"337\":1,\"348\":1,\"484\":2,\"639\":1,\"640\":1,\"670\":3}}],[\"auto\",{\"1\":{\"334\":1,\"424\":2,\"455\":2,\"806\":1}}],[\"autocloseable\",{\"1\":{\"244\":1,\"248\":1,\"249\":1,\"252\":1,\"253\":1}}],[\"automake\",{\"1\":{\"23\":1}}],[\"automatically\",{\"1\":{\"23\":1}}],[\"autumn\",{\"1\":{\"160\":1}}],[\"axis\",{\"1\":{\"495\":1}}],[\"a20avk\",{\"1\":{\"453\":1}}],[\"a2108\",{\"1\":{\"351\":1}}],[\"aof重写期间是否同步\",{\"1\":{\"455\":1}}],[\"aof文件的保存位置和rdb文件的位置相同\",{\"1\":{\"455\":1}}],[\"aof文件在了解其结构的情况下可以手动修改或者补全\",{\"1\":{\"452\":1}}],[\"aof日志记录redis的每个写命令\",{\"1\":{\"454\":1}}],[\"aof的主要作用是解决了数据持久化的实时性\",{\"1\":{\"453\":1}}],[\"aof持久化的文件名\",{\"1\":{\"455\":1}}],[\"aof持久化\",{\"1\":{\"450\":1,\"452\":1}}],[\"aof\",{\"0\":{\"453\":1,\"454\":1},\"1\":{\"447\":1,\"453\":2,\"454\":2,\"455\":6,\"456\":6,\"457\":1}}],[\"aof等持久化方式\",{\"1\":{\"431\":1}}],[\"aaa\",{\"1\":{\"444\":5,\"707\":2}}],[\"amd64\",{\"1\":{\"726\":6,\"751\":2,\"759\":1,\"783\":1,\"797\":1,\"800\":2}}],[\"amp\",{\"1\":{\"495\":2}}],[\"amount\",{\"1\":{\"440\":2}}],[\"amberduke\",{\"1\":{\"295\":1,\"299\":1}}],[\"amber\",{\"1\":{\"295\":1,\"299\":1}}],[\"affiliates\",{\"1\":{\"699\":1}}],[\"affected\",{\"1\":{\"411\":2}}],[\"after=docker\",{\"1\":{\"786\":1,\"809\":1}}],[\"after=network\",{\"1\":{\"683\":1,\"753\":2,\"766\":1,\"793\":1}}],[\"after\",{\"1\":{\"114\":1}}],[\"aio\",{\"1\":{\"818\":1}}],[\"ains\",{\"1\":{\"592\":3}}],[\"ai语音控制\",{\"1\":{\"351\":1}}],[\"air\",{\"1\":{\"351\":1}}],[\"a12芯片\",{\"1\":{\"351\":1}}],[\"a12仿生芯片\",{\"1\":{\"351\":1}}],[\"a9erdl\",{\"1\":{\"314\":1}}],[\"aggregate\",{\"1\":{\"468\":1}}],[\"aggregation>\",{\"1\":{\"356\":1}}],[\"aggregations\",{\"1\":{\"355\":3,\"356\":3}}],[\"aggregationbuilders\",{\"1\":{\"355\":2,\"356\":2}}],[\"aggregation\",{\"0\":{\"312\":1}}],[\"agg\",{\"1\":{\"314\":2}}],[\"aggs\",{\"1\":{\"313\":1,\"314\":5}}],[\"agent\",{\"1\":{\"803\":1}}],[\"age=int\",{\"1\":{\"134\":1}}],[\"age\",{\"1\":{\"58\":1,\"72\":3,\"73\":2,\"75\":1,\"89\":7,\"123\":6,\"254\":1,\"289\":2,\"290\":1,\"291\":3,\"293\":2,\"295\":1,\"299\":1,\"304\":1,\"309\":1,\"311\":1,\"314\":4,\"441\":4,\"595\":2,\"788\":2,\"807\":1,\"822\":1}}],[\"act\",{\"0\":{\"534\":1,\"535\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"549\":1,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1},\"1\":{\"495\":1,\"502\":3,\"503\":6,\"513\":1,\"533\":25,\"540\":1,\"551\":3,\"554\":1,\"556\":2}}],[\"active\",{\"1\":{\"540\":1,\"631\":3}}],[\"activateprocessinstancebyid\",{\"1\":{\"514\":1}}],[\"activateprocessdefinitionbyid\",{\"1\":{\"514\":1}}],[\"activitytype\",{\"1\":{\"506\":1,\"576\":2}}],[\"activity\",{\"1\":{\"488\":1,\"496\":2,\"548\":1}}],[\"activiti自带定时作业功能\",{\"1\":{\"540\":1}}],[\"activiti获取\",{\"1\":{\"522\":1}}],[\"activiti会对数据库中所有表进行更新操作\",{\"1\":{\"496\":1}}],[\"activiti在启动时\",{\"1\":{\"496\":1}}],[\"activiti可以绘制流程的的依赖\",{\"1\":{\"496\":1}}],[\"activiti单独运行的processengine配置\",{\"1\":{\"495\":1}}],[\"activiti数据库表处理策略\",{\"1\":{\"495\":1}}],[\"activiti<\",{\"1\":{\"495\":6,\"496\":2}}],[\"activiti\",{\"1\":{\"486\":4,\"489\":2,\"491\":1,\"495\":5,\"496\":3,\"500\":5,\"517\":1,\"518\":1,\"561\":1}}],[\"activiti7默认没有开启数据库历史记录\",{\"1\":{\"496\":1}}],[\"activiti7\",{\"0\":{\"485\":1,\"486\":1,\"487\":1,\"494\":1,\"501\":1,\"507\":1,\"533\":1,\"559\":1,\"563\":1},\"1\":{\"486\":1,\"494\":2,\"495\":1,\"496\":1,\"497\":1,\"500\":1,\"527\":2,\"533\":1,\"559\":1,\"560\":2,\"561\":2}}],[\"actinst里\",{\"1\":{\"540\":1}}],[\"actinst\",{\"0\":{\"551\":1},\"1\":{\"503\":1,\"533\":1}}],[\"actibpm\",{\"1\":{\"488\":1,\"499\":1}}],[\"action\",{\"1\":{\"293\":2,\"553\":1}}],[\"accounts\",{\"1\":{\"296\":3}}],[\"account\",{\"1\":{\"295\":1,\"299\":1,\"300\":1,\"723\":4,\"764\":1,\"771\":1}}],[\"accessibleobject\",{\"0\":{\"126\":1},\"1\":{\"126\":1}}],[\"access\",{\"1\":{\"62\":1,\"724\":1,\"825\":1}}],[\"avg\",{\"1\":{\"314\":8,\"356\":3}}],[\"avjxzy\",{\"1\":{\"264\":1}}],[\"available\",{\"1\":{\"257\":2,\"784\":3}}],[\"asn38w\",{\"1\":{\"516\":1}}],[\"assignment\",{\"1\":{\"518\":1}}],[\"assignee\",{\"1\":{\"504\":2,\"505\":2,\"513\":1,\"522\":5,\"525\":1,\"528\":2,\"542\":1,\"551\":1,\"557\":1}}],[\"assert\",{\"1\":{\"41\":1}}],[\"as\",{\"1\":{\"424\":1,\"699\":2}}],[\"asmap\",{\"1\":{\"356\":1}}],[\"asc\",{\"1\":{\"299\":1,\"348\":1,\"371\":2,\"388\":1,\"389\":1}}],[\"asciidoc\",{\"1\":{\"327\":1}}],[\"ascii\",{\"1\":{\"238\":1}}],[\"aslist\",{\"1\":{\"197\":1,\"665\":1}}],[\"abc\",{\"1\":{\"140\":3,\"154\":2,\"190\":1}}],[\"abstractgatewayfilterfactory<timegatewayfilterfactory\",{\"1\":{\"665\":1}}],[\"abstractautohandler<list<long>\",{\"1\":{\"484\":3}}],[\"abstractautohandler<s\",{\"1\":{\"484\":1}}],[\"abstractautohandler\",{\"1\":{\"484\":3}}],[\"abstractstringbuilder\",{\"1\":{\"149\":1}}],[\"abstract方法\",{\"1\":{\"94\":1}}],[\"abstract\",{\"1\":{\"73\":1,\"84\":2,\"92\":1,\"94\":1,\"95\":1,\"98\":1,\"256\":2,\"477\":2,\"484\":3}}],[\"advertise\",{\"1\":{\"752\":4,\"755\":2,\"764\":2}}],[\"advanced\",{\"1\":{\"134\":4}}],[\"admissioncontrol\",{\"1\":{\"725\":1}}],[\"admission\",{\"1\":{\"722\":1,\"764\":2}}],[\"admin\",{\"0\":{\"738\":1,\"739\":1},\"1\":{\"408\":2,\"409\":1,\"410\":1,\"411\":1,\"495\":1,\"698\":2,\"726\":4,\"739\":4,\"740\":6,\"744\":1,\"761\":5}}],[\"adoc\",{\"1\":{\"327\":1}}],[\"additional\",{\"1\":{\"699\":1}}],[\"addr\",{\"1\":{\"595\":1,\"627\":1,\"631\":2,\"638\":1,\"658\":1}}],[\"address=127\",{\"1\":{\"771\":1,\"776\":1}}],[\"address=192\",{\"1\":{\"764\":2}}],[\"addresses\",{\"1\":{\"715\":2}}],[\"address\",{\"1\":{\"295\":1,\"299\":1,\"306\":2,\"307\":2,\"308\":4,\"310\":3,\"764\":2,\"784\":1,\"806\":1,\"812\":1}}],[\"addgrouplink\",{\"1\":{\"553\":1}}],[\"addzipinputstream\",{\"1\":{\"502\":1}}],[\"addcandidateuser\",{\"1\":{\"526\":1,\"579\":2}}],[\"addcomment\",{\"1\":{\"505\":1,\"506\":1,\"553\":1,\"582\":1}}],[\"addclasspathresource\",{\"1\":{\"502\":2}}],[\"addcriteria\",{\"1\":{\"385\":1,\"386\":1,\"387\":1}}],[\"addargumentresolvers\",{\"1\":{\"606\":1}}],[\"addattachment\",{\"1\":{\"553\":1}}],[\"addaggregation\",{\"1\":{\"355\":1,\"356\":1}}],[\"addall\",{\"1\":{\"176\":1}}],[\"addlast\",{\"1\":{\"180\":1}}],[\"addfirst\",{\"1\":{\"180\":1}}],[\"add\",{\"1\":{\"60\":2,\"117\":2,\"176\":2,\"180\":1,\"184\":1,\"190\":3,\"262\":1,\"371\":2,\"596\":2,\"606\":1,\"670\":3,\"680\":2,\"705\":1}}],[\"apache\",{\"1\":{\"495\":5}}],[\"apt\",{\"0\":{\"824\":1},\"1\":{\"371\":3,\"372\":3,\"373\":1,\"374\":2,\"376\":1,\"680\":8,\"715\":1,\"822\":1,\"824\":2,\"825\":1}}],[\"apigroup\",{\"1\":{\"814\":2}}],[\"apigroups\",{\"1\":{\"814\":1}}],[\"apiversion\",{\"1\":{\"784\":1,\"791\":1,\"806\":2,\"813\":2,\"814\":2,\"818\":1}}],[\"api接口\",{\"1\":{\"763\":1}}],[\"api=3\",{\"1\":{\"756\":1}}],[\"api的请求过程中\",{\"1\":{\"725\":1}}],[\"apiserver服务的启动参数\",{\"1\":{\"804\":1}}],[\"apiserver的service配置文件\",{\"0\":{\"766\":1}}],[\"apiserver的配置文件\",{\"0\":{\"764\":1}}],[\"apiserver访问kubelet客户端证书\",{\"1\":{\"764\":1}}],[\"apiserver是kubernetes最重要的核心组件之一\",{\"1\":{\"763\":1}}],[\"apiserver进行通信\",{\"1\":{\"745\":1}}],[\"apiserver启用tls认证后\",{\"1\":{\"745\":1}}],[\"apiserver这个组件进行的\",{\"1\":{\"722\":1}}],[\"apiserver\",{\"0\":{\"737\":1},\"1\":{\"714\":1,\"722\":1,\"723\":1,\"726\":1,\"730\":2,\"736\":1,\"742\":1,\"744\":1,\"757\":2,\"759\":1,\"764\":4,\"766\":6,\"767\":3,\"775\":1,\"788\":1,\"814\":5}}],[\"api网关gateway\",{\"1\":{\"611\":1}}],[\"api<\",{\"1\":{\"495\":2}}],[\"api一致\",{\"1\":{\"147\":1}}],[\"api\",{\"0\":{\"124\":1,\"176\":1,\"180\":1,\"184\":1,\"193\":1,\"287\":1,\"293\":1,\"384\":1,\"500\":1,\"501\":1,\"563\":1,\"564\":1,\"570\":1,\"577\":1,\"735\":1,\"736\":1,\"762\":1},\"1\":{\"122\":1,\"123\":1,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"147\":1,\"198\":1,\"252\":1,\"265\":1,\"268\":1,\"274\":2,\"285\":1,\"286\":1,\"287\":1,\"289\":1,\"293\":1,\"294\":1,\"296\":1,\"312\":1,\"349\":1,\"427\":1,\"491\":1,\"492\":1,\"500\":1,\"506\":2,\"526\":1,\"527\":1,\"561\":2,\"563\":1,\"564\":1,\"565\":1,\"569\":2,\"570\":1,\"577\":1,\"612\":1,\"645\":3,\"653\":1,\"656\":1,\"658\":3,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"665\":2,\"723\":1,\"736\":1,\"742\":2,\"752\":1,\"766\":1,\"782\":1}}],[\"apr\",{\"1\":{\"115\":1}}],[\"approve\",{\"1\":{\"788\":1}}],[\"approvehandler\",{\"1\":{\"484\":2}}],[\"apply\",{\"1\":{\"665\":1,\"715\":1,\"800\":1,\"807\":1,\"814\":1,\"818\":1,\"822\":2}}],[\"applicationeventpublisher\",{\"1\":{\"671\":5}}],[\"applicationeventpublisheraware\",{\"1\":{\"671\":1}}],[\"application\",{\"1\":{\"296\":1,\"627\":3,\"631\":3,\"638\":1,\"650\":2,\"656\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"665\":2,\"668\":1,\"683\":1}}],[\"applecare\",{\"1\":{\"351\":2}}],[\"apple\",{\"1\":{\"190\":1,\"351\":6,\"355\":1,\"356\":1}}],[\"app\",{\"1\":{\"23\":1,\"451\":1,\"818\":2}}],[\"append=true\",{\"1\":{\"495\":1}}],[\"appender\",{\"1\":{\"495\":11}}],[\"appendfsync\",{\"1\":{\"455\":5}}],[\"appendfilename\",{\"1\":{\"455\":2}}],[\"appendonly\",{\"1\":{\"455\":3}}],[\"appendonly参数开启aof持久化\",{\"1\":{\"455\":1}}],[\"appendnull\",{\"1\":{\"149\":1}}],[\"append单个元素\",{\"1\":{\"11\":1}}],[\"append\",{\"0\":{\"149\":1},\"1\":{\"9\":2,\"147\":2,\"148\":3,\"149\":1,\"161\":3,\"249\":1,\"453\":1,\"454\":1,\"665\":1}}],[\"a对象是否是\",{\"1\":{\"108\":1}}],[\"a的对象是否能够直接调用c方法\",{\"1\":{\"91\":1}}],[\"a是b的子类\",{\"1\":{\"91\":1}}],[\"article\",{\"1\":{\"457\":2}}],[\"artifactid>\",{\"1\":{\"329\":1,\"379\":1,\"495\":14,\"496\":3,\"626\":1,\"630\":1,\"635\":1,\"636\":5,\"655\":3,\"658\":3,\"675\":1,\"676\":1}}],[\"arm64\",{\"1\":{\"372\":1}}],[\"arch=amd64\",{\"1\":{\"372\":1,\"680\":1}}],[\"argument\",{\"1\":{\"303\":4}}],[\"args\",{\"1\":{\"54\":1,\"60\":1,\"62\":1,\"72\":1,\"74\":1,\"75\":1,\"84\":1,\"103\":1,\"104\":1,\"115\":1,\"127\":2,\"128\":4,\"129\":2,\"134\":1,\"155\":2,\"190\":1,\"206\":1,\"218\":1,\"219\":1,\"222\":1,\"224\":1,\"225\":1,\"226\":1,\"233\":1,\"244\":1,\"248\":1,\"252\":1,\"253\":1,\"254\":2,\"477\":1,\"497\":2,\"637\":2,\"648\":2,\"670\":1}}],[\"area\",{\"1\":{\"43\":1,\"121\":2}}],[\"arraycopy\",{\"1\":{\"197\":1}}],[\"arraylist<>\",{\"1\":{\"670\":1}}],[\"arraylist\",{\"0\":{\"177\":1},\"1\":{\"172\":1,\"173\":2,\"175\":2,\"177\":4,\"178\":1}}],[\"arrays类是数组的工具类\",{\"1\":{\"197\":1}}],[\"arrays\",{\"0\":{\"197\":1},\"1\":{\"150\":2,\"197\":4,\"399\":1,\"665\":1}}],[\"array\",{\"0\":{\"167\":1},\"1\":{\"41\":1,\"46\":6,\"47\":2,\"48\":11,\"151\":3,\"152\":1,\"165\":1,\"167\":1,\"364\":1,\"670\":1}}],[\"algo\",{\"1\":{\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"along\",{\"1\":{\"699\":1}}],[\"also\",{\"1\":{\"699\":1}}],[\"alwaysdeny\",{\"1\":{\"725\":1}}],[\"alwaysadmit\",{\"1\":{\"725\":1}}],[\"always\",{\"1\":{\"454\":1,\"455\":1,\"806\":2}}],[\"aliyuncs\",{\"1\":{\"684\":1,\"783\":1,\"800\":1}}],[\"aliverouteidset\",{\"1\":{\"671\":4}}],[\"aliveroutemap\",{\"1\":{\"671\":14}}],[\"alibaba和spring\",{\"0\":{\"613\":1}}],[\"alibaba\",{\"0\":{\"608\":1,\"615\":1,\"616\":1},\"1\":{\"495\":1,\"608\":2,\"609\":2,\"610\":1,\"612\":4,\"613\":2,\"618\":1,\"621\":3,\"625\":1,\"626\":2,\"629\":1,\"630\":2,\"636\":9,\"658\":5,\"676\":1}}],[\"aliasfor\",{\"1\":{\"334\":2}}],[\"alipay\",{\"1\":{\"160\":1}}],[\"allocate\",{\"1\":{\"771\":1}}],[\"allow\",{\"1\":{\"23\":1,\"282\":3,\"764\":2,\"804\":1}}],[\"allkeys\",{\"1\":{\"464\":3}}],[\"all时不适用\",{\"1\":{\"299\":1}}],[\"all\",{\"1\":{\"41\":1,\"300\":1,\"302\":2,\"303\":1,\"304\":1,\"314\":2,\"416\":2,\"417\":2,\"418\":1,\"420\":1,\"518\":1,\"813\":1}}],[\"alter\",{\"0\":{\"409\":1},\"1\":{\"409\":1,\"415\":1,\"417\":5,\"698\":1}}],[\"alt\",{\"1\":{\"23\":1}}],[\"a因为是byte类型\",{\"1\":{\"10\":1}}],[\"annotations\",{\"1\":{\"814\":1}}],[\"annotation\",{\"1\":{\"669\":2}}],[\"anonymous\",{\"1\":{\"590\":1,\"784\":1}}],[\"analysis\",{\"1\":{\"317\":4}}],[\"analyze\",{\"1\":{\"319\":1,\"320\":1,\"321\":1}}],[\"analyzer等分词器\",{\"1\":{\"315\":1}}],[\"analyzer\",{\"1\":{\"315\":2,\"316\":7,\"319\":1,\"320\":1,\"321\":1,\"324\":1,\"326\":1,\"332\":3,\"334\":1,\"335\":3,\"341\":3,\"351\":4}}],[\"analyzed\",{\"1\":{\"311\":1}}],[\"ansi\",{\"1\":{\"238\":1,\"424\":1}}],[\"animaldemo\",{\"1\":{\"103\":1}}],[\"animal类\",{\"1\":{\"103\":1}}],[\"animal\",{\"1\":{\"84\":2,\"103\":10,\"104\":1,\"105\":2,\"107\":2,\"108\":2}}],[\"any\",{\"1\":{\"10\":1,\"699\":1}}],[\"an\",{\"1\":{\"10\":1,\"41\":1,\"699\":1,\"746\":1}}],[\"and\",{\"0\":{\"392\":1},\"1\":{\"1\":1,\"10\":1,\"41\":3,\"336\":1,\"411\":1,\"495\":2,\"643\":1,\"670\":1,\"698\":1,\"699\":3}}],[\"a\",{\"1\":{\"9\":5,\"10\":4,\"48\":2,\"72\":1,\"73\":2,\"107\":4,\"108\":4,\"222\":9,\"316\":1,\"351\":2,\"457\":1,\"495\":4,\"592\":2,\"594\":2,\"596\":2,\"601\":2,\"699\":3,\"708\":1,\"715\":1,\"806\":1}}],[\"mv\",{\"1\":{\"682\":1,\"726\":2,\"751\":1,\"785\":1,\"792\":1,\"811\":1}}],[\"m8f7ep\",{\"1\":{\"668\":1}}],[\"m2\",{\"1\":{\"601\":4}}],[\"m1\",{\"1\":{\"601\":4}}],[\"mget\",{\"1\":{\"440\":2}}],[\"ms\",{\"1\":{\"665\":1,\"670\":1}}],[\"mset\",{\"1\":{\"440\":2}}],[\"msi\",{\"1\":{\"367\":1}}],[\"msg\",{\"1\":{\"123\":2,\"543\":1,\"545\":1,\"546\":1,\"549\":1,\"553\":1}}],[\"mx250\",{\"1\":{\"351\":2,\"352\":1}}],[\"m5青春版指定爆款型号优惠100元\",{\"1\":{\"351\":1}}],[\"m6\",{\"1\":{\"351\":1}}],[\"mount\",{\"1\":{\"723\":1}}],[\"more\",{\"1\":{\"699\":1}}],[\"module\",{\"1\":{\"825\":3}}],[\"modules\",{\"1\":{\"809\":2}}],[\"modify\",{\"1\":{\"699\":1}}],[\"modelandviewcontainer\",{\"1\":{\"604\":2}}],[\"model\",{\"0\":{\"537\":1},\"1\":{\"533\":1,\"537\":1,\"568\":2,\"569\":3}}],[\"model<\",{\"1\":{\"495\":1}}],[\"mode常用值\",{\"0\":{\"424\":1}}],[\"mode=rbac\",{\"1\":{\"764\":1}}],[\"mode=\",{\"1\":{\"423\":2}}],[\"mode\",{\"0\":{\"422\":1},\"1\":{\"421\":1,\"422\":2,\"764\":1,\"784\":1}}],[\"moore\",{\"1\":{\"327\":1}}],[\"mono\",{\"1\":{\"665\":1,\"671\":4}}],[\"mono<void>\",{\"1\":{\"665\":1,\"666\":1}}],[\"monogo\",{\"1\":{\"358\":1}}],[\"mongooperations提供了geonear\",{\"1\":{\"403\":1}}],[\"mongotemplate\",{\"0\":{\"384\":1},\"1\":{\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1,\"403\":2}}],[\"mongos=5\",{\"1\":{\"374\":1}}],[\"mongod\",{\"1\":{\"369\":1,\"375\":9,\"376\":1,\"377\":1}}],[\"mongodb支持在数据库中查询地理位置并同时计算与给定原点的距离\",{\"1\":{\"403\":1}}],[\"mongodb通过使用$near\",{\"1\":{\"398\":1}}],[\"mongodb里也可以使用\",{\"1\":{\"390\":1}}],[\"mongodb来访问mongodb数据库的几种方法\",{\"1\":{\"384\":1}}],[\"mongodb<\",{\"1\":{\"379\":1}}],[\"mongodb的安装过程是很简单的\",{\"1\":{\"368\":1}}],[\"mongodb的预编译二进制包的下载地址为\",{\"1\":{\"366\":1}}],[\"mongodb提供了可用于32位系统和64位系统的预编译二进制包\",{\"1\":{\"366\":1}}],[\"mongodb集合中的记录基本上称为文档\",{\"1\":{\"363\":1}}],[\"mongodb服务器可以存储多个数据库\",{\"1\":{\"363\":1}}],[\"mongodb将自动创建该字段\",{\"1\":{\"363\":1}}],[\"mongodb自动将\",{\"1\":{\"362\":1}}],[\"mongodb不支持\",{\"1\":{\"362\":1}}],[\"mongodb术语\",{\"1\":{\"362\":1}}],[\"mongodb与rdbms区别\",{\"0\":{\"362\":1}}],[\"mongodb入门教程\",{\"1\":{\"359\":1}}],[\"mongodb菜鸟教程\",{\"1\":{\"359\":1}}],[\"mongodb\",{\"0\":{\"366\":1,\"369\":1,\"372\":1,\"374\":1,\"375\":1,\"376\":1},\"1\":{\"357\":1,\"358\":1,\"360\":1,\"364\":1,\"365\":2,\"366\":2,\"367\":2,\"369\":3,\"370\":3,\"371\":2,\"372\":4,\"374\":10,\"375\":3,\"376\":5,\"377\":5,\"378\":2,\"380\":2,\"384\":1,\"404\":1}}],[\"mongo\",{\"0\":{\"357\":1,\"360\":1,\"361\":1,\"363\":1,\"364\":1,\"365\":1,\"378\":1,\"398\":1},\"1\":{\"358\":9,\"359\":1,\"361\":2,\"368\":1,\"379\":1}}],[\"monday\",{\"1\":{\"160\":1}}],[\"month\",{\"1\":{\"117\":1}}],[\"mon\",{\"1\":{\"115\":1}}],[\"mkwekh\",{\"1\":{\"314\":1}}],[\"mkdirs\",{\"1\":{\"236\":1}}],[\"mkdir\",{\"1\":{\"236\":1,\"684\":1,\"727\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1,\"751\":1,\"759\":1,\"781\":1,\"797\":1,\"825\":1}}],[\"md\",{\"1\":{\"266\":1,\"278\":1,\"286\":1,\"436\":1,\"445\":1,\"457\":1,\"758\":1}}],[\"m\",{\"1\":{\"193\":2,\"295\":1,\"299\":1,\"308\":2,\"314\":1,\"450\":1,\"495\":2,\"598\":2,\"619\":2,\"680\":1}}],[\"mm\",{\"1\":{\"115\":8}}],[\"muul2ch\",{\"1\":{\"351\":1}}],[\"muhn2ch\",{\"1\":{\"351\":1}}],[\"multiverse\",{\"1\":{\"372\":1}}],[\"multimatchquery\",{\"1\":{\"348\":1}}],[\"multimatchquerybuilder\",{\"1\":{\"348\":3}}],[\"multi\",{\"0\":{\"307\":1},\"1\":{\"307\":1,\"341\":1,\"431\":1}}],[\"multiplication\",{\"1\":{\"10\":2}}],[\"must\",{\"1\":{\"41\":1,\"308\":6,\"310\":1,\"598\":1,\"599\":1}}],[\"mirror=https\",{\"1\":{\"687\":1}}],[\"mirror参数\",{\"1\":{\"687\":1}}],[\"mirrors的配置\",{\"1\":{\"687\":1}}],[\"mirrors\",{\"1\":{\"684\":2,\"686\":1,\"687\":1}}],[\"mirror\",{\"1\":{\"680\":2,\"684\":1,\"686\":1,\"687\":2}}],[\"mime\",{\"1\":{\"650\":1}}],[\"mimi\",{\"1\":{\"591\":1}}],[\"milktea\",{\"1\":{\"477\":24}}],[\"miles\",{\"1\":{\"403\":1}}],[\"millis\",{\"1\":{\"334\":1}}],[\"millisec\",{\"1\":{\"221\":2}}],[\"mill\",{\"1\":{\"306\":2,\"307\":2,\"308\":2,\"310\":2}}],[\"mi\",{\"1\":{\"351\":1,\"352\":1,\"540\":1}}],[\"mindistance\",{\"1\":{\"402\":1}}],[\"minprice\",{\"1\":{\"393\":1}}],[\"mincapacity\",{\"1\":{\"151\":9}}],[\"minimumcapacity\",{\"1\":{\"150\":4}}],[\"minute\",{\"1\":{\"117\":2}}],[\"min\",{\"1\":{\"41\":1,\"198\":2,\"226\":1,\"364\":1,\"444\":1,\"455\":1,\"650\":1}}],[\"misc\",{\"1\":{\"41\":1}}],[\"mister\",{\"1\":{\"17\":2}}],[\"mr\",{\"1\":{\"17\":2}}],[\"mesh\",{\"1\":{\"812\":1}}],[\"message\",{\"1\":{\"553\":1,\"779\":1}}],[\"memory\",{\"1\":{\"784\":1}}],[\"member1\",{\"1\":{\"444\":2}}],[\"member\",{\"1\":{\"443\":3,\"658\":4,\"752\":1,\"755\":1}}],[\"merchantability\",{\"1\":{\"699\":1}}],[\"merge更新路由\",{\"1\":{\"671\":1}}],[\"medcl\",{\"1\":{\"317\":2}}],[\"media\",{\"1\":{\"15\":1}}],[\"meta\",{\"1\":{\"537\":1}}],[\"metadata\",{\"1\":{\"293\":2,\"806\":2,\"813\":3,\"814\":2,\"818\":1}}],[\"metricsbindaddress\",{\"1\":{\"791\":1}}],[\"metrics\",{\"1\":{\"403\":1,\"610\":1,\"814\":1}}],[\"method=get\",{\"1\":{\"663\":1}}],[\"methodparameter\",{\"1\":{\"604\":6}}],[\"methodbyname\",{\"1\":{\"597\":2}}],[\"methoddescriptor\",{\"1\":{\"133\":2}}],[\"methods\",{\"1\":{\"128\":2}}],[\"method\",{\"0\":{\"128\":1},\"1\":{\"43\":2,\"121\":2,\"124\":1,\"126\":2,\"128\":12,\"133\":4,\"134\":2,\"597\":1,\"633\":1,\"806\":2}}],[\"me\",{\"1\":{\"16\":1}}],[\"ma\",{\"1\":{\"699\":1}}],[\"mall\",{\"1\":{\"627\":1,\"631\":1,\"658\":1}}],[\"make\",{\"1\":{\"599\":1,\"825\":2}}],[\"maguanyue\",{\"1\":{\"465\":1}}],[\"mate20\",{\"1\":{\"351\":1,\"353\":1}}],[\"matebook\",{\"1\":{\"351\":1,\"353\":1}}],[\"matched\",{\"1\":{\"411\":1}}],[\"matchquery\",{\"1\":{\"352\":1,\"353\":1,\"354\":1}}],[\"matchquerybuilder\",{\"1\":{\"350\":1,\"352\":3}}],[\"match\",{\"0\":{\"305\":1,\"306\":1,\"307\":1},\"1\":{\"300\":1,\"302\":2,\"303\":3,\"304\":1,\"305\":3,\"306\":1,\"307\":1,\"308\":4,\"310\":2,\"311\":2,\"314\":2,\"341\":1,\"350\":1}}],[\"math\",{\"1\":{\"41\":2}}],[\"manager在kubernetes启用cloud\",{\"1\":{\"770\":1}}],[\"manager由一系列的控制器组成\",{\"1\":{\"770\":1}}],[\"manager由kube\",{\"1\":{\"770\":1}}],[\"manager组成\",{\"1\":{\"770\":1}}],[\"manager和cloud\",{\"1\":{\"770\":1}}],[\"manager进程\",{\"1\":{\"757\":1,\"770\":1}}],[\"manager\",{\"0\":{\"769\":1},\"1\":{\"714\":1,\"726\":1,\"735\":1,\"757\":2,\"759\":1,\"770\":1,\"771\":4,\"772\":7,\"773\":3,\"779\":1,\"782\":1}}],[\"managementservice\",{\"1\":{\"500\":1}}],[\"managementwebsecurityautoconfiguration\",{\"1\":{\"497\":1}}],[\"manual\",{\"1\":{\"370\":1}}],[\"man\",{\"1\":{\"160\":1}}],[\"map2struct\",{\"1\":{\"598\":1}}],[\"map2bean\",{\"1\":{\"135\":1}}],[\"map<string\",{\"1\":{\"356\":1,\"503\":1,\"513\":1,\"523\":1,\"670\":1,\"671\":5}}],[\"map<object\",{\"1\":{\"135\":5,\"670\":1}}],[\"mappings\",{\"1\":{\"335\":1,\"341\":1,\"351\":1}}],[\"mapping\",{\"1\":{\"321\":2,\"335\":1,\"351\":2,\"654\":1}}],[\"map中存储的\",{\"1\":{\"194\":1}}],[\"map提供了一种映射关系\",{\"1\":{\"191\":1}}],[\"map数据\",{\"1\":{\"135\":1}}],[\"map\",{\"0\":{\"135\":1,\"191\":1,\"598\":1,\"599\":1},\"1\":{\"135\":14,\"172\":2,\"173\":3,\"185\":2,\"191\":3,\"193\":1,\"198\":1,\"353\":1,\"575\":1,\"598\":2,\"599\":3,\"601\":3,\"670\":2,\"671\":1}}],[\"marksupported\",{\"1\":{\"257\":2}}],[\"mark\",{\"1\":{\"69\":1,\"105\":1,\"115\":1,\"121\":1,\"140\":1,\"155\":3,\"168\":2,\"186\":1,\"188\":1,\"241\":1,\"245\":1,\"250\":1,\"254\":1,\"257\":2,\"476\":1}}],[\"may\",{\"1\":{\"41\":1}}],[\"macos\",{\"1\":{\"830\":1}}],[\"mac安装jdk8启动项目慢解决方案\",{\"0\":{\"830\":1}}],[\"macbook\",{\"1\":{\"351\":1,\"831\":3}}],[\"machine\",{\"1\":{\"37\":1}}],[\"mac等系统是不能直接运行的\",{\"1\":{\"35\":1}}],[\"mac程序\",{\"1\":{\"33\":1}}],[\"mac\",{\"0\":{\"377\":1},\"1\":{\"33\":1,\"377\":1,\"619\":2,\"830\":1}}],[\"maven\",{\"0\":{\"495\":1},\"1\":{\"24\":2}}],[\"maxopenfiles\",{\"1\":{\"784\":1}}],[\"maxsize=100\",{\"1\":{\"764\":1}}],[\"maxbackup=3\",{\"1\":{\"764\":1}}],[\"maxage=30\",{\"1\":{\"764\":1}}],[\"maxalloc\",{\"1\":{\"10\":2}}],[\"maxmemory\",{\"0\":{\"464\":1},\"1\":{\"463\":2}}],[\"maxdistance\",{\"1\":{\"402\":3,\"403\":1}}],[\"maxpods\",{\"1\":{\"784\":1}}],[\"maxprice\",{\"1\":{\"393\":1}}],[\"maxpermsize\",{\"1\":{\"43\":1}}],[\"maxf6y\",{\"1\":{\"308\":1}}],[\"maximum\",{\"1\":{\"41\":1}}],[\"max\",{\"0\":{\"321\":1},\"1\":{\"10\":1,\"41\":3,\"151\":4,\"152\":3,\"198\":2,\"226\":2,\"299\":2,\"318\":1,\"321\":1,\"332\":6,\"335\":3,\"341\":3,\"351\":6,\"364\":1,\"444\":1}}],[\"master=127\",{\"1\":{\"771\":1,\"776\":1}}],[\"masters\",{\"1\":{\"739\":1}}],[\"master\",{\"0\":{\"757\":1},\"1\":{\"10\":2,\"282\":1,\"288\":1,\"704\":1,\"705\":2,\"745\":1,\"757\":1,\"758\":1,\"771\":1,\"776\":1,\"780\":1,\"785\":1,\"796\":1,\"800\":1}}],[\"main\",{\"1\":{\"9\":1,\"54\":1,\"60\":1,\"62\":1,\"72\":1,\"74\":1,\"75\":1,\"84\":1,\"103\":1,\"104\":1,\"115\":1,\"134\":1,\"155\":2,\"190\":1,\"206\":1,\"218\":2,\"219\":2,\"221\":1,\"222\":1,\"224\":1,\"225\":2,\"226\":1,\"233\":1,\"244\":1,\"248\":1,\"252\":1,\"253\":1,\"254\":2,\"327\":2,\"477\":1,\"497\":1,\"589\":2,\"591\":2,\"592\":1,\"594\":1,\"595\":1,\"596\":2,\"597\":2,\"601\":1,\"637\":1,\"648\":1}}],[\"myint\",{\"1\":{\"588\":3,\"589\":3}}],[\"mytasklistener\",{\"1\":{\"518\":1}}],[\"mythread\",{\"1\":{\"218\":6}}],[\"mybatis版本会有冲突\",{\"1\":{\"496\":1}}],[\"mybatis\",{\"1\":{\"496\":1}}],[\"mybatis<\",{\"1\":{\"495\":1,\"496\":1}}],[\"mysql做持久化层\",{\"1\":{\"440\":1}}],[\"mysql8\",{\"1\":{\"424\":1}}],[\"mysql数据库不允许插入零日期\",{\"1\":{\"424\":1}}],[\"mysql>\",{\"1\":{\"411\":2,\"412\":1,\"697\":1,\"699\":2}}],[\"mysqld\",{\"1\":{\"411\":2,\"423\":1,\"699\":1}}],[\"mysql从5\",{\"1\":{\"408\":1,\"698\":1}}],[\"mysql\",{\"0\":{\"405\":1,\"421\":1,\"422\":1,\"691\":1,\"692\":1,\"694\":1,\"695\":1,\"696\":1},\"1\":{\"273\":2,\"275\":1,\"277\":2,\"407\":1,\"408\":4,\"411\":4,\"413\":1,\"416\":1,\"418\":1,\"420\":1,\"421\":2,\"422\":1,\"423\":1,\"495\":2,\"690\":4,\"691\":3,\"692\":13,\"693\":1,\"695\":1,\"696\":1,\"697\":6,\"699\":12,\"700\":2}}],[\"myrunnable\",{\"1\":{\"219\":6,\"224\":1}}],[\"my\",{\"0\":{\"423\":1},\"1\":{\"1\":1,\"423\":1,\"699\":2}}],[\"felix\",{\"1\":{\"803\":1,\"806\":2,\"809\":5}}],[\"feigin配置类\",{\"1\":{\"649\":1}}],[\"feignexception\",{\"1\":{\"649\":1}}],[\"feignclient标记的接口\",{\"1\":{\"649\":1}}],[\"feignclient注解\",{\"0\":{\"649\":1}}],[\"feignclient\",{\"1\":{\"639\":3,\"649\":1}}],[\"feign\",{\"0\":{\"677\":1},\"1\":{\"611\":1,\"612\":1,\"634\":2,\"635\":1,\"636\":1,\"650\":1,\"651\":2}}],[\"fescar\",{\"1\":{\"612\":1}}],[\"fdgdqz\",{\"1\":{\"530\":1}}],[\"fhd\",{\"1\":{\"351\":1}}],[\"fstab\",{\"1\":{\"715\":1}}],[\"fssl\",{\"1\":{\"680\":1}}],[\"fsync\",{\"1\":{\"455\":1}}],[\"fs\",{\"1\":{\"333\":1}}],[\"f\",{\"1\":{\"314\":1,\"657\":2,\"754\":1,\"767\":1,\"773\":1,\"778\":1,\"787\":1,\"794\":1,\"800\":1,\"807\":1,\"809\":1,\"810\":1,\"814\":1,\"818\":1,\"822\":3}}],[\"foundation\",{\"1\":{\"699\":2}}],[\"found\",{\"1\":{\"290\":2,\"375\":1,\"812\":1}}],[\"forward\",{\"1\":{\"715\":1}}],[\"forget\",{\"0\":{\"677\":1},\"1\":{\"635\":1}}],[\"form\",{\"1\":{\"535\":1,\"542\":1,\"557\":1}}],[\"format\",{\"1\":{\"115\":2,\"334\":1}}],[\"fork\",{\"1\":{\"456\":1}}],[\"fork子进程属于重量级操作\",{\"1\":{\"452\":1}}],[\"fork操作完成后主进程即可执行其他操作\",{\"1\":{\"449\":1}}],[\"fork过程是阻塞的\",{\"1\":{\"449\":1}}],[\"foreach\",{\"1\":{\"352\":1,\"353\":1,\"354\":1,\"671\":3}}],[\"forname\",{\"1\":{\"122\":1}}],[\"for\",{\"0\":{\"677\":1},\"1\":{\"10\":5,\"41\":1,\"127\":2,\"128\":2,\"129\":1,\"134\":1,\"135\":3,\"138\":1,\"161\":1,\"172\":3,\"206\":1,\"218\":2,\"219\":2,\"225\":1,\"233\":1,\"348\":1,\"355\":1,\"356\":1,\"410\":1,\"412\":4,\"422\":1,\"423\":2,\"424\":1,\"504\":1,\"505\":1,\"506\":1,\"509\":1,\"513\":1,\"527\":1,\"569\":1,\"591\":1,\"598\":2,\"599\":1,\"635\":1,\"670\":1,\"671\":1,\"699\":2,\"806\":1}}],[\"fastcgi\",{\"1\":{\"825\":3}}],[\"failswapon\",{\"1\":{\"784\":1}}],[\"failure\",{\"1\":{\"683\":1,\"753\":1,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1}}],[\"fail\",{\"1\":{\"670\":1,\"671\":2}}],[\"failed\",{\"1\":{\"289\":1,\"291\":1,\"299\":1,\"375\":1}}],[\"factory\",{\"1\":{\"669\":1}}],[\"fall\",{\"1\":{\"806\":1}}],[\"fallbackfactory\",{\"1\":{\"649\":1}}],[\"fallback执行的类必须实现\",{\"1\":{\"649\":1}}],[\"fallback\",{\"1\":{\"649\":1}}],[\"false\",{\"1\":{\"41\":3,\"49\":1,\"58\":1,\"60\":1,\"108\":1,\"126\":1,\"128\":1,\"129\":2,\"135\":1,\"140\":1,\"155\":8,\"299\":1,\"332\":1,\"333\":1,\"334\":1,\"335\":2,\"348\":1,\"351\":3,\"495\":1,\"496\":2,\"590\":1,\"604\":1,\"658\":1,\"715\":1,\"784\":2}}],[\"fatal\",{\"1\":{\"495\":2}}],[\"full\",{\"1\":{\"311\":1,\"421\":1,\"422\":2,\"424\":1,\"496\":3,\"553\":1}}],[\"fulfilled\",{\"1\":{\"160\":1}}],[\"fun\",{\"1\":{\"232\":1}}],[\"function\",{\"1\":{\"671\":1}}],[\"funcvalue\",{\"1\":{\"596\":2}}],[\"func\",{\"1\":{\"9\":1,\"229\":1,\"230\":1,\"231\":1,\"233\":3,\"589\":1,\"591\":1,\"592\":1,\"594\":1,\"595\":1,\"596\":2,\"597\":2,\"598\":2,\"599\":1,\"601\":1}}],[\"flanneld启动参数加上\",{\"1\":{\"800\":1}}],[\"flanneld进程下连docker0和物理网络\",{\"1\":{\"799\":1}}],[\"flanneld进程上连etcd\",{\"1\":{\"799\":1}}],[\"flannel模型默认采用了udp作为底层传输协议\",{\"1\":{\"799\":1}}],[\"flannel完美地实现了对kubernetes网络的支持\",{\"1\":{\"799\":1}}],[\"flannel就控制了每个node上的docker0地址段的地址\",{\"1\":{\"799\":1}}],[\"flannel通过修改docker的启动参数将分配给它的地址段传递进去\",{\"1\":{\"799\":1}}],[\"flannel每次分配的地址段都在同一个公共区域获取\",{\"1\":{\"799\":1}}],[\"flannel之间的底层通信协议的可选技术包括udp\",{\"1\":{\"799\":1}}],[\"flannel之所以可以搭建kubernetes依赖的底层网络\",{\"1\":{\"799\":1}}],[\"flannel0\",{\"1\":{\"799\":1}}],[\"flannel首先创建了一个名为\",{\"1\":{\"799\":1}}],[\"flannel介绍\",{\"0\":{\"799\":1}}],[\"flannel\",{\"0\":{\"798\":1},\"1\":{\"799\":1,\"800\":9}}],[\"flase\",{\"1\":{\"496\":1}}],[\"floor\",{\"1\":{\"699\":1}}],[\"flowelement\",{\"1\":{\"569\":1}}],[\"flowelements\",{\"1\":{\"569\":2}}],[\"flow\",{\"1\":{\"547\":1}}],[\"float32\",{\"1\":{\"594\":1,\"595\":1}}],[\"float64\",{\"1\":{\"594\":3,\"595\":3}}],[\"float\",{\"1\":{\"38\":1,\"594\":1}}],[\"flush\",{\"1\":{\"243\":1,\"244\":1,\"247\":1,\"248\":1,\"252\":1,\"253\":1,\"254\":1,\"409\":1,\"410\":1,\"411\":1,\"420\":1,\"698\":1}}],[\"fly\",{\"1\":{\"84\":3}}],[\"free\",{\"1\":{\"699\":3}}],[\"frequently\",{\"1\":{\"463\":1}}],[\"frequency\",{\"1\":{\"198\":1}}],[\"franklin\",{\"1\":{\"699\":1}}],[\"fragment\",{\"0\":{\"344\":1},\"1\":{\"341\":1,\"343\":1,\"344\":1}}],[\"fragments\",{\"0\":{\"343\":1},\"1\":{\"341\":1,\"343\":2}}],[\"framework\",{\"1\":{\"327\":1}}],[\"frame\",{\"1\":{\"43\":1}}],[\"fromrunnable\",{\"1\":{\"665\":1}}],[\"from+size限定\",{\"1\":{\"303\":1}}],[\"from\",{\"1\":{\"72\":1,\"73\":2,\"277\":1,\"304\":1,\"418\":2,\"633\":1,\"639\":1,\"641\":2,\"655\":1,\"697\":1}}],[\"frlmbz\",{\"1\":{\"22\":1}}],[\"fifth\",{\"1\":{\"699\":1}}],[\"fitness\",{\"1\":{\"699\":1}}],[\"finished\",{\"1\":{\"506\":1,\"576\":2,\"584\":2}}],[\"findproduct\",{\"1\":{\"640\":1}}],[\"findusertasknode\",{\"1\":{\"569\":1}}],[\"findentrybyregexptitle\",{\"1\":{\"397\":1}}],[\"findentrybytitle\",{\"1\":{\"396\":1}}],[\"findbypid\",{\"1\":{\"639\":3,\"640\":1}}],[\"findbypricebetween\",{\"1\":{\"393\":2}}],[\"findby\",{\"0\":{\"396\":1}}],[\"findbytitlelikeorderbypriceasc\",{\"1\":{\"394\":1}}],[\"findbytitleendingwith\",{\"1\":{\"392\":1}}],[\"findbytitlestartingwith\",{\"1\":{\"392\":1}}],[\"findbytitle\",{\"1\":{\"391\":1}}],[\"findbyx\",{\"0\":{\"391\":1}}],[\"find\",{\"1\":{\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1,\"400\":2,\"401\":1,\"402\":3}}],[\"finally\",{\"1\":{\"233\":1}}],[\"final等修饰会报编译错误\",{\"1\":{\"94\":1}}],[\"final变量\",{\"1\":{\"94\":1}}],[\"final修饰的引用数据类型\",{\"1\":{\"78\":1}}],[\"final修饰的变量只能初始化一次\",{\"1\":{\"78\":1}}],[\"finalexample\",{\"1\":{\"78\":1}}],[\"finalize\",{\"1\":{\"51\":1}}],[\"final\",{\"0\":{\"78\":1},\"1\":{\"41\":3,\"51\":4,\"78\":11,\"94\":1,\"98\":1,\"138\":2,\"222\":1,\"254\":1,\"262\":1,\"633\":1,\"665\":1}}],[\"filterdefinition\",{\"1\":{\"670\":1}}],[\"filterdefinitions\",{\"1\":{\"670\":2}}],[\"filtertostringcreator\",{\"1\":{\"665\":1}}],[\"filter的生命周期只有两个\",{\"1\":{\"664\":1}}],[\"filterstrlist\",{\"1\":{\"670\":3}}],[\"filters\",{\"1\":{\"657\":2,\"658\":1,\"665\":2,\"670\":1}}],[\"filterwriter\",{\"1\":{\"478\":1}}],[\"filterreader\",{\"1\":{\"478\":1}}],[\"filteroutputstream\",{\"1\":{\"478\":1}}],[\"filtering\",{\"1\":{\"310\":2}}],[\"filterinputstream\",{\"1\":{\"256\":1,\"257\":6,\"478\":1}}],[\"filter\",{\"0\":{\"310\":1,\"664\":1},\"1\":{\"308\":1,\"310\":1,\"654\":7,\"664\":1,\"665\":4,\"666\":2,\"671\":3}}],[\"filltargetrouteorder\",{\"1\":{\"671\":2}}],[\"fill\",{\"1\":{\"257\":1}}],[\"file选项来开启\",{\"1\":{\"723\":1}}],[\"files\",{\"1\":{\"707\":1}}],[\"filesystem\",{\"1\":{\"699\":1}}],[\"file=\",{\"1\":{\"495\":1,\"753\":6,\"764\":5,\"771\":4,\"809\":3}}],[\"fileappender\",{\"1\":{\"495\":1}}],[\"file后面跟的是插件在本地的地址\",{\"1\":{\"317\":1}}],[\"filename\",{\"1\":{\"249\":1}}],[\"filewriter\",{\"1\":{\"248\":3,\"249\":1,\"253\":2}}],[\"filereader\",{\"1\":{\"248\":3,\"253\":2}}],[\"fileoutputstream\",{\"1\":{\"244\":3,\"249\":2,\"252\":2,\"254\":2,\"511\":4}}],[\"fileinputstream\",{\"1\":{\"244\":3,\"249\":2,\"252\":2,\"254\":2,\"256\":2,\"257\":1}}],[\"file\",{\"0\":{\"236\":1},\"1\":{\"236\":5,\"240\":2,\"244\":4,\"248\":4,\"252\":4,\"253\":4,\"317\":1,\"453\":1,\"495\":1,\"631\":5,\"699\":1,\"764\":2,\"765\":1,\"771\":2,\"806\":1,\"809\":1}}],[\"firewalld\",{\"1\":{\"683\":1}}],[\"firday\",{\"1\":{\"160\":1}}],[\"firstname\",{\"1\":{\"295\":1,\"299\":1}}],[\"first\",{\"1\":{\"1\":1,\"670\":1}}],[\"fiele\",{\"1\":{\"124\":1}}],[\"fieldval\",{\"1\":{\"598\":3}}],[\"fieldname\",{\"1\":{\"598\":4}}],[\"fieldbyindex中的返回的索引值\",{\"1\":{\"590\":1}}],[\"fieldbyindex\",{\"1\":{\"590\":1}}],[\"fieldbyname\",{\"1\":{\"590\":1,\"591\":1,\"595\":2}}],[\"fieldtype\",{\"1\":{\"332\":4,\"334\":2,\"351\":5,\"591\":3}}],[\"fieldsort\",{\"1\":{\"354\":1}}],[\"fields\",{\"1\":{\"129\":2,\"135\":2,\"307\":1,\"341\":2,\"348\":3}}],[\"field\",{\"0\":{\"129\":1,\"334\":1},\"1\":{\"72\":1,\"73\":1,\"126\":2,\"129\":9,\"135\":7,\"303\":1,\"313\":1,\"314\":6,\"332\":5,\"334\":1,\"348\":3,\"351\":5,\"355\":1,\"356\":2,\"362\":1,\"382\":4,\"534\":1,\"535\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"549\":1,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"590\":1,\"591\":1,\"598\":5,\"599\":2}}],[\"fishdemo\",{\"1\":{\"104\":1}}],[\"fish\",{\"1\":{\"104\":6}}],[\"fish类\",{\"1\":{\"104\":1}}],[\"fmt\",{\"1\":{\"9\":2,\"589\":3,\"591\":3,\"592\":1,\"594\":1,\"595\":1,\"596\":2,\"597\":2,\"598\":1,\"601\":4}}],[\"1=https\",{\"1\":{\"752\":1,\"755\":1}}],[\"1=>\",{\"1\":{\"206\":1}}],[\"1相互兼容\",{\"1\":{\"644\":1}}],[\"1<\",{\"1\":{\"636\":1}}],[\"1是0否\",{\"1\":{\"540\":2}}],[\"1为activiti生成\",{\"1\":{\"538\":1}}],[\"1激活\",{\"1\":{\"535\":1,\"540\":1,\"542\":1}}],[\"1t\",{\"1\":{\"351\":1}}],[\"1英寸全高清大屏\",{\"1\":{\"351\":1}}],[\"1英寸全高清屏影音平板电脑\",{\"1\":{\"351\":1}}],[\"1英寸全面屏轻薄性能笔记本电脑\",{\"1\":{\"351\":1}}],[\"1英寸无界全面屏金属轻薄本\",{\"1\":{\"351\":1}}],[\"1英寸视网膜显示屏\",{\"1\":{\"351\":1}}],[\"1s\",{\"1\":{\"333\":1}}],[\"18g\",{\"1\":{\"351\":1}}],[\"18\",{\"0\":{\"551\":1},\"1\":{\"289\":2,\"290\":1,\"291\":3,\"293\":2,\"370\":2,\"372\":2,\"477\":1,\"758\":1,\"788\":1,\"799\":1,\"807\":2}}],[\"1秒\",{\"1\":{\"222\":1}}],[\"1l\",{\"1\":{\"222\":2,\"254\":1,\"336\":1}}],[\"179\",{\"1\":{\"812\":2}}],[\"172\",{\"1\":{\"800\":1,\"805\":2,\"806\":1,\"813\":1}}],[\"178\",{\"1\":{\"444\":1}}],[\"17\",{\"0\":{\"550\":1},\"1\":{\"115\":4,\"799\":1,\"825\":5}}],[\"170\",{\"1\":{\"10\":1}}],[\"14t10\",{\"1\":{\"813\":1}}],[\"14180036\",{\"1\":{\"457\":1}}],[\"14157568\",{\"1\":{\"457\":1}}],[\"145\",{\"1\":{\"444\":3}}],[\"140\",{\"1\":{\"444\":2}}],[\"14小时长续航\",{\"1\":{\"351\":1}}],[\"14\",{\"0\":{\"547\":1},\"1\":{\"91\":1,\"279\":3,\"281\":2,\"283\":2,\"317\":4,\"328\":1,\"348\":1,\"621\":1,\"652\":1,\"805\":1,\"806\":1,\"809\":1}}],[\"144hz电竞屏窄边框\",{\"1\":{\"351\":1}}],[\"144hz\",{\"1\":{\"351\":1}}],[\"144\",{\"1\":{\"10\":1}}],[\"12558767\",{\"1\":{\"799\":1}}],[\"12<\",{\"1\":{\"495\":2}}],[\"12090414\",{\"1\":{\"465\":1}}],[\"123456的用户\",{\"1\":{\"406\":1}}],[\"123456\",{\"1\":{\"254\":1,\"406\":1,\"420\":1}}],[\"127\",{\"1\":{\"41\":7,\"282\":1,\"369\":1,\"380\":1,\"440\":18,\"441\":10,\"442\":9,\"443\":14,\"444\":5,\"620\":1,\"627\":1,\"631\":2,\"658\":1,\"733\":1,\"736\":1,\"831\":2}}],[\"12\",{\"0\":{\"545\":1},\"1\":{\"10\":1,\"16\":1,\"115\":12,\"117\":1,\"158\":1,\"327\":4,\"351\":2,\"440\":2,\"441\":2,\"765\":1,\"800\":1}}],[\"128gb\",{\"1\":{\"351\":1}}],[\"128\",{\"1\":{\"10\":3,\"41\":5}}],[\"110\",{\"1\":{\"784\":1}}],[\"11065461\",{\"1\":{\"445\":1}}],[\"1190000015983518\",{\"1\":{\"457\":1}}],[\"11\",{\"0\":{\"544\":1},\"1\":{\"10\":2,\"155\":11,\"351\":2,\"352\":1,\"440\":2,\"535\":3,\"536\":1,\"537\":2,\"538\":1,\"539\":1,\"540\":11,\"541\":1,\"542\":3,\"543\":2,\"544\":1,\"545\":2,\"546\":2,\"548\":1,\"549\":1,\"552\":1,\"554\":1,\"557\":1,\"558\":1}}],[\"112\",{\"1\":{\"10\":1}}],[\"13109\",{\"1\":{\"813\":1}}],[\"1301\",{\"1\":{\"699\":1}}],[\"132\",{\"1\":{\"444\":3}}],[\"13\",{\"0\":{\"546\":1},\"1\":{\"10\":1,\"327\":2,\"351\":2,\"353\":1,\"812\":3,\"820\":1}}],[\"15t\",{\"1\":{\"495\":2}}],[\"150\",{\"1\":{\"444\":5}}],[\"1549\",{\"1\":{\"351\":1}}],[\"15299\",{\"1\":{\"351\":1}}],[\"15\",{\"0\":{\"548\":1},\"1\":{\"10\":1,\"351\":2,\"352\":1,\"495\":2,\"784\":1,\"830\":1}}],[\"192\",{\"1\":{\"714\":4,\"715\":6,\"733\":1,\"736\":3,\"752\":5,\"755\":6,\"756\":2,\"761\":1,\"764\":1,\"781\":4,\"785\":2,\"791\":1,\"792\":1,\"805\":1,\"806\":2,\"807\":2,\"809\":1,\"812\":3,\"813\":1}}],[\"1970年01月01日\",{\"1\":{\"112\":1}}],[\"19\",{\"0\":{\"552\":1},\"1\":{\"10\":1,\"115\":2,\"327\":1,\"682\":1}}],[\"168\",{\"1\":{\"714\":4,\"715\":6,\"733\":1,\"736\":3,\"752\":5,\"755\":6,\"756\":2,\"761\":1,\"764\":3,\"781\":4,\"785\":2,\"791\":1,\"792\":1,\"805\":1,\"806\":2,\"807\":2,\"809\":2,\"812\":3,\"813\":1}}],[\"163\",{\"1\":{\"686\":1}}],[\"16g双通道大内存\",{\"1\":{\"351\":1,\"352\":1}}],[\"16g\",{\"1\":{\"351\":2,\"352\":1}}],[\"16这个就不对了\",{\"1\":{\"10\":1}}],[\"16\",{\"0\":{\"549\":1},\"1\":{\"10\":6,\"38\":2,\"146\":1,\"351\":2,\"441\":1,\"746\":1,\"771\":1,\"800\":2,\"805\":3,\"806\":2,\"809\":1,\"813\":1}}],[\"103\",{\"1\":{\"714\":2,\"715\":2,\"736\":1,\"781\":2,\"812\":1}}],[\"101\",{\"1\":{\"714\":2,\"715\":1,\"736\":1,\"755\":5,\"781\":2,\"785\":1,\"791\":1,\"807\":1,\"809\":1,\"812\":1}}],[\"108791437\",{\"1\":{\"457\":1}}],[\"100f\",{\"1\":{\"787\":1,\"794\":1}}],[\"100mi\",{\"1\":{\"784\":1}}],[\"100\",{\"1\":{\"314\":2,\"344\":1,\"351\":1,\"387\":2,\"393\":1,\"402\":1,\"455\":1,\"558\":1,\"591\":1}}],[\"10001\",{\"1\":{\"510\":1,\"746\":1}}],[\"1000000\",{\"1\":{\"784\":1}}],[\"10000\",{\"1\":{\"310\":2,\"451\":1}}],[\"1000\",{\"1\":{\"299\":1,\"314\":3,\"641\":2}}],[\"10255\",{\"1\":{\"784\":1}}],[\"10250\",{\"1\":{\"784\":1}}],[\"102\",{\"1\":{\"10\":1,\"714\":2,\"715\":1,\"733\":1,\"736\":1,\"752\":5,\"755\":1,\"756\":2,\"761\":1,\"764\":3,\"785\":1,\"792\":1,\"806\":1,\"807\":1,\"809\":1,\"812\":1,\"813\":1}}],[\"10249\",{\"1\":{\"791\":1}}],[\"1024\",{\"1\":{\"10\":2,\"244\":1,\"248\":1,\"252\":1,\"594\":1}}],[\"10也就说得通了\",{\"1\":{\"10\":1}}],[\"10\",{\"0\":{\"543\":1,\"746\":1},\"1\":{\"9\":2,\"10\":8,\"78\":1,\"206\":1,\"218\":2,\"219\":1,\"225\":1,\"233\":1,\"299\":1,\"341\":1,\"348\":1,\"351\":6,\"352\":1,\"403\":1,\"440\":3,\"444\":1,\"451\":1,\"477\":1,\"596\":1,\"651\":1,\"714\":4,\"715\":6,\"733\":1,\"736\":5,\"749\":1,\"751\":2,\"752\":5,\"755\":6,\"756\":2,\"761\":1,\"764\":3,\"765\":1,\"781\":4,\"784\":2,\"785\":2,\"791\":2,\"792\":1,\"806\":1,\"807\":2,\"809\":2,\"812\":3,\"813\":1,\"822\":1,\"830\":1}}],[\"1\",{\"0\":{\"22\":1,\"34\":1,\"62\":1,\"72\":1,\"92\":1,\"101\":1,\"140\":1,\"143\":1,\"208\":1,\"229\":1,\"371\":1,\"408\":1,\"414\":1,\"495\":1,\"534\":1,\"588\":1,\"594\":1,\"679\":1,\"682\":1,\"695\":1,\"713\":2,\"714\":1,\"715\":1,\"719\":2,\"720\":1,\"721\":1,\"723\":1,\"729\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1,\"746\":1,\"748\":1,\"751\":1,\"758\":1,\"763\":1,\"770\":1,\"775\":1,\"783\":1,\"790\":1,\"796\":1,\"799\":1,\"802\":1,\"806\":1,\"809\":1,\"817\":2,\"818\":1,\"820\":1},\"1\":{\"9\":3,\"10\":6,\"11\":1,\"38\":1,\"41\":3,\"46\":4,\"47\":1,\"48\":3,\"98\":1,\"111\":1,\"113\":2,\"117\":1,\"122\":1,\"135\":1,\"136\":1,\"148\":1,\"151\":3,\"155\":19,\"163\":1,\"168\":2,\"206\":1,\"238\":2,\"242\":2,\"244\":2,\"246\":2,\"248\":2,\"249\":1,\"252\":2,\"253\":1,\"257\":1,\"277\":3,\"278\":1,\"282\":3,\"289\":7,\"290\":4,\"291\":7,\"292\":1,\"295\":2,\"299\":6,\"320\":3,\"321\":3,\"324\":1,\"327\":7,\"333\":2,\"351\":2,\"355\":2,\"356\":2,\"369\":1,\"380\":1,\"411\":3,\"412\":1,\"422\":1,\"440\":24,\"441\":17,\"442\":21,\"443\":28,\"444\":12,\"451\":1,\"495\":2,\"502\":1,\"503\":2,\"518\":1,\"524\":1,\"543\":1,\"545\":1,\"546\":1,\"549\":1,\"591\":1,\"601\":2,\"620\":1,\"621\":1,\"627\":1,\"631\":2,\"636\":1,\"641\":2,\"652\":2,\"656\":4,\"657\":3,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"671\":1,\"680\":2,\"709\":1,\"715\":5,\"733\":1,\"736\":3,\"752\":1,\"758\":1,\"765\":1,\"771\":2,\"776\":2,\"799\":1,\"820\":1,\"822\":2,\"825\":5,\"830\":1,\"831\":4}}],[\"292\",{\"1\":{\"830\":1}}],[\"29680\",{\"1\":{\"812\":1}}],[\"29665317\",{\"1\":{\"436\":1}}],[\"2ceb63ade2ea\",{\"1\":{\"813\":1}}],[\"2m23s\",{\"1\":{\"788\":1}}],[\"2m0s\",{\"1\":{\"784\":1}}],[\"2=https\",{\"1\":{\"755\":1}}],[\"2=>\",{\"1\":{\"206\":1}}],[\"2并不与ribbon\",{\"1\":{\"644\":1}}],[\"2pc\",{\"1\":{\"613\":1}}],[\"2201\",{\"1\":{\"689\":1}}],[\"22\",{\"0\":{\"555\":1},\"1\":{\"689\":1}}],[\"2299\",{\"1\":{\"351\":1}}],[\"2挂起\",{\"1\":{\"535\":1,\"540\":1,\"542\":1}}],[\"2而不包含组件包\",{\"1\":{\"374\":1}}],[\"27017\",{\"1\":{\"369\":1,\"380\":1}}],[\"2799\",{\"1\":{\"351\":1}}],[\"2g独显\",{\"1\":{\"351\":1,\"352\":1}}],[\"2英寸全景巨屏\",{\"1\":{\"351\":1,\"353\":1}}],[\"26\",{\"1\":{\"311\":1,\"813\":1}}],[\"244\",{\"1\":{\"771\":1}}],[\"24\",{\"0\":{\"557\":1},\"1\":{\"117\":1,\"715\":1,\"764\":1,\"771\":1,\"791\":1,\"799\":1}}],[\"21uts0\",{\"1\":{\"654\":1}}],[\"21\",{\"0\":{\"554\":1}}],[\"2147483647\",{\"1\":{\"152\":1}}],[\"212\",{\"1\":{\"111\":1,\"136\":1,\"163\":1}}],[\"2100\",{\"1\":{\"25\":1}}],[\"2048\",{\"1\":{\"650\":1,\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"2016\",{\"1\":{\"699\":1}}],[\"2019英特尔酷睿i7\",{\"1\":{\"351\":1}}],[\"2019年新款平板电脑\",{\"1\":{\"351\":1}}],[\"2019款\",{\"1\":{\"351\":3,\"352\":1,\"353\":1}}],[\"2014\",{\"1\":{\"311\":1}}],[\"2018\",{\"1\":{\"25\":1,\"27\":1}}],[\"2001\",{\"1\":{\"495\":1}}],[\"20000\",{\"1\":{\"310\":2}}],[\"2009年4月20日\",{\"1\":{\"32\":1}}],[\"20时12分12秒\",{\"1\":{\"115\":1}}],[\"20\",{\"0\":{\"553\":1},\"1\":{\"41\":6,\"115\":3,\"129\":1,\"254\":1,\"309\":1,\"477\":1,\"544\":1,\"550\":1,\"551\":1,\"554\":1,\"556\":1,\"557\":1,\"558\":1,\"596\":1,\"800\":2,\"805\":2,\"806\":1,\"809\":1,\"813\":1}}],[\"2020版本\",{\"0\":{\"676\":1}}],[\"2020年12月12日\",{\"1\":{\"115\":1}}],[\"2020年了\",{\"1\":{\"2\":1}}],[\"2020\",{\"0\":{\"634\":1,\"635\":1,\"673\":1},\"1\":{\"115\":3,\"327\":1,\"621\":1,\"625\":1,\"634\":1,\"635\":2,\"636\":1,\"652\":1,\"658\":1,\"676\":1,\"765\":1,\"813\":1}}],[\"2021\",{\"1\":{\"91\":1,\"115\":2,\"277\":1,\"327\":2,\"621\":1,\"636\":1,\"652\":1,\"658\":1,\"676\":1,\"699\":1}}],[\"2021年3月22日~\",{\"1\":{\"25\":1}}],[\"2022\",{\"1\":{\"16\":1}}],[\"28672\",{\"1\":{\"10\":1}}],[\"2379\",{\"1\":{\"752\":3,\"755\":2,\"756\":2,\"764\":1,\"806\":1,\"809\":1,\"813\":1}}],[\"2380\",{\"1\":{\"752\":4,\"755\":4}}],[\"23\",{\"0\":{\"469\":1,\"556\":1},\"1\":{\"10\":1,\"117\":1,\"680\":1}}],[\"2\",{\"0\":{\"23\":1,\"35\":1,\"63\":1,\"73\":1,\"93\":1,\"102\":1,\"141\":1,\"144\":1,\"230\":1,\"372\":1,\"409\":1,\"415\":1,\"496\":1,\"535\":1,\"589\":1,\"595\":1,\"680\":1,\"683\":1,\"696\":1,\"714\":1,\"720\":1,\"723\":1,\"724\":2,\"725\":1,\"730\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1,\"749\":1,\"752\":1,\"759\":1,\"764\":1,\"771\":1,\"776\":1,\"783\":1,\"784\":2,\"785\":1,\"786\":1,\"787\":1,\"788\":1,\"791\":1,\"797\":1,\"800\":1,\"803\":1,\"807\":1,\"810\":1,\"818\":1,\"820\":1,\"821\":2,\"822\":1},\"1\":{\"9\":2,\"10\":3,\"27\":1,\"46\":3,\"48\":3,\"60\":1,\"122\":1,\"135\":1,\"151\":2,\"168\":2,\"206\":1,\"225\":1,\"277\":2,\"289\":1,\"291\":2,\"293\":2,\"320\":3,\"321\":4,\"327\":20,\"328\":2,\"341\":2,\"343\":1,\"348\":2,\"351\":2,\"353\":4,\"355\":3,\"356\":2,\"365\":2,\"366\":2,\"374\":6,\"378\":3,\"440\":5,\"441\":3,\"442\":8,\"443\":14,\"444\":3,\"495\":1,\"502\":1,\"503\":2,\"518\":1,\"523\":1,\"524\":1,\"601\":2,\"621\":1,\"652\":1,\"653\":1,\"655\":1,\"657\":1,\"662\":1,\"674\":1,\"699\":2,\"715\":1,\"726\":2,\"755\":2,\"784\":1,\"806\":1,\"809\":1,\"822\":1}}],[\"255\",{\"1\":{\"534\":5,\"535\":5,\"537\":4,\"538\":1,\"540\":5,\"541\":3,\"542\":7,\"543\":5,\"544\":2,\"545\":4,\"546\":5,\"548\":4,\"549\":4,\"550\":2,\"551\":5,\"552\":3,\"553\":3,\"554\":3,\"555\":3,\"556\":6,\"557\":7,\"558\":1,\"831\":8}}],[\"2505\",{\"1\":{\"528\":1}}],[\"2501\",{\"1\":{\"506\":1,\"514\":1}}],[\"256g\",{\"1\":{\"351\":1}}],[\"256\",{\"1\":{\"10\":1}}],[\"25倍扩容\",{\"1\":{\"11\":1}}],[\"25倍\",{\"1\":{\"9\":1}}],[\"25\",{\"0\":{\"558\":1},\"1\":{\"9\":1,\"128\":1,\"327\":1}}],[\"0izcpm\",{\"1\":{\"803\":1}}],[\"08\",{\"1\":{\"765\":1,\"813\":1}}],[\"02110\",{\"1\":{\"699\":1}}],[\"03\",{\"1\":{\"682\":1}}],[\"0为用户生成\",{\"1\":{\"538\":1}}],[\"0为不限制\",{\"1\":{\"427\":1,\"463\":1}}],[\"0否1是\",{\"1\":{\"535\":1}}],[\"0以后已经被删除\",{\"1\":{\"424\":1}}],[\"0以后被弃用\",{\"1\":{\"327\":1}}],[\"01\",{\"1\":{\"311\":1,\"400\":1,\"402\":2,\"411\":1,\"699\":1}}],[\"09\",{\"1\":{\"311\":1}}],[\"0xff\",{\"1\":{\"257\":1}}],[\"0=>\",{\"1\":{\"206\":3}}],[\"003712240453784\",{\"1\":{\"400\":1,\"402\":1}}],[\"00prb5\",{\"1\":{\"297\":1}}],[\"000\",{\"1\":{\"112\":1}}],[\"00\",{\"1\":{\"112\":3,\"411\":1,\"412\":1,\"422\":1,\"697\":1,\"699\":1}}],[\"04\",{\"0\":{\"678\":1,\"823\":1},\"1\":{\"91\":1,\"115\":1,\"370\":2,\"372\":2,\"714\":3}}],[\"07\",{\"1\":{\"10\":1}}],[\"0\",{\"1\":{\"9\":1,\"10\":10,\"41\":1,\"46\":3,\"47\":1,\"48\":2,\"49\":3,\"111\":1,\"136\":1,\"149\":1,\"150\":3,\"151\":4,\"163\":1,\"189\":1,\"206\":3,\"218\":2,\"219\":2,\"225\":1,\"233\":1,\"244\":1,\"248\":1,\"252\":1,\"257\":3,\"274\":4,\"279\":3,\"281\":2,\"282\":6,\"283\":2,\"289\":4,\"290\":2,\"291\":4,\"293\":2,\"299\":4,\"304\":1,\"313\":1,\"317\":4,\"320\":2,\"321\":2,\"324\":1,\"326\":2,\"327\":9,\"328\":1,\"343\":3,\"348\":3,\"353\":2,\"355\":1,\"356\":5,\"365\":2,\"369\":2,\"371\":2,\"372\":3,\"374\":7,\"377\":1,\"378\":1,\"380\":2,\"389\":1,\"396\":1,\"397\":1,\"400\":2,\"402\":3,\"411\":5,\"412\":1,\"422\":1,\"440\":36,\"441\":20,\"442\":22,\"443\":29,\"444\":14,\"456\":1,\"477\":8,\"486\":3,\"495\":15,\"496\":4,\"506\":1,\"511\":1,\"560\":2,\"565\":2,\"591\":1,\"596\":1,\"598\":1,\"599\":1,\"620\":2,\"621\":1,\"627\":2,\"631\":4,\"636\":4,\"641\":2,\"652\":2,\"653\":2,\"654\":1,\"655\":1,\"658\":2,\"661\":1,\"662\":1,\"663\":1,\"670\":1,\"671\":1,\"697\":1,\"699\":4,\"733\":2,\"736\":6,\"764\":3,\"771\":9,\"776\":4,\"779\":1,\"783\":1,\"784\":6,\"791\":11,\"800\":5,\"805\":6,\"806\":8,\"809\":2,\"812\":2,\"813\":2,\"818\":2,\"822\":3,\"830\":1,\"831\":4}}],[\"gzip\",{\"1\":{\"825\":1}}],[\"gz\",{\"1\":{\"751\":1,\"759\":1,\"825\":3}}],[\"gnu\",{\"1\":{\"699\":3}}],[\"gnupg使用以下命令安装及其所需的库\",{\"1\":{\"371\":1}}],[\"gnupg\",{\"1\":{\"371\":2}}],[\"gpg\",{\"1\":{\"680\":1}}],[\"gateway4\",{\"1\":{\"715\":1}}],[\"gateway接入nacos动态路由刷新\",{\"1\":{\"667\":1}}],[\"gateway内部也是通过一系列的内置全局过滤器对整个路由转发进行处理如下\",{\"1\":{\"666\":1}}],[\"gatewaytostringstyler\",{\"1\":{\"665\":1}}],[\"gateway中内置了很多不同类型的网关路由过滤器\",{\"1\":{\"665\":1}}],[\"gatewayfilterchain\",{\"1\":{\"665\":1,\"666\":1}}],[\"gatewayfilter\",{\"1\":{\"664\":1,\"665\":2}}],[\"gatewayconfiguration\",{\"1\":{\"657\":1}}],[\"gateway是一个netty+webflux\",{\"1\":{\"655\":1}}],[\"gateway<\",{\"1\":{\"655\":1}}],[\"gateway版本\",{\"1\":{\"655\":1}}],[\"gateway\",{\"0\":{\"652\":1,\"653\":1,\"655\":1,\"659\":1,\"667\":1,\"676\":1},\"1\":{\"612\":1,\"613\":1,\"652\":2,\"653\":4,\"654\":7,\"655\":3,\"656\":2,\"657\":1,\"658\":4,\"659\":3,\"660\":2,\"661\":2,\"662\":2,\"663\":3,\"664\":2,\"665\":5,\"667\":1,\"668\":2,\"669\":2}}],[\"globalfilter\",{\"1\":{\"664\":1,\"666\":2}}],[\"global变量\",{\"1\":{\"521\":1}}],[\"global\",{\"1\":{\"422\":2,\"654\":1}}],[\"globaltransactional\",{\"1\":{\"261\":1,\"610\":1}}],[\"grep\",{\"1\":{\"707\":1}}],[\"grants\",{\"1\":{\"412\":4}}],[\"grant\",{\"0\":{\"413\":1,\"417\":1},\"1\":{\"411\":3,\"412\":1,\"413\":1,\"414\":5,\"415\":3,\"416\":2,\"418\":1,\"420\":1,\"699\":1}}],[\"graphical\",{\"1\":{\"535\":1}}],[\"graph\",{\"1\":{\"165\":1}}],[\"group=nginx\",{\"1\":{\"825\":1}}],[\"group=kubelet\",{\"1\":{\"768\":1}}],[\"groupid\",{\"1\":{\"669\":1}}],[\"groupid>\",{\"1\":{\"329\":1,\"379\":1,\"495\":14,\"496\":3,\"626\":1,\"630\":1,\"635\":1,\"636\":5,\"655\":3,\"658\":3,\"675\":1,\"676\":1}}],[\"group\",{\"1\":{\"312\":1,\"313\":1,\"421\":2,\"422\":3,\"424\":2,\"541\":1,\"555\":1,\"632\":2,\"668\":2,\"669\":1,\"730\":1}}],[\"gtx1660ti电竞级独显\",{\"1\":{\"351\":1}}],[\"gtx1660ti\",{\"1\":{\"351\":1}}],[\"gt游戏加速\",{\"1\":{\"351\":1}}],[\"gt\",{\"1\":{\"309\":1,\"387\":2}}],[\"gte\",{\"1\":{\"309\":2,\"310\":1}}],[\"gb18030\",{\"1\":{\"238\":1}}],[\"gbk\",{\"1\":{\"238\":2}}],[\"gb2312\",{\"1\":{\"238\":1}}],[\"g\",{\"1\":{\"173\":1,\"204\":1,\"240\":1,\"800\":1,\"805\":1}}],[\"gce等云平台都能够良好地集成\",{\"1\":{\"802\":1}}],[\"gcr\",{\"1\":{\"800\":1}}],[\"gc\",{\"1\":{\"43\":1}}],[\"ge\",{\"0\":{\"538\":1,\"539\":1},\"1\":{\"502\":1,\"533\":2,\"537\":2}}],[\"georesults<venue>\",{\"1\":{\"403\":1}}],[\"geonear\",{\"1\":{\"403\":2}}],[\"geowithin和$nearsphere等运算符支持地理空间查询\",{\"1\":{\"398\":1}}],[\"gencert\",{\"1\":{\"731\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1}}],[\"general\",{\"1\":{\"699\":6}}],[\"generate\",{\"1\":{\"765\":1}}],[\"generatediagram\",{\"1\":{\"568\":2}}],[\"generated\",{\"1\":{\"538\":1}}],[\"generator\",{\"1\":{\"568\":2}}],[\"generator<\",{\"1\":{\"496\":1}}],[\"genericbeaninfo\",{\"1\":{\"133\":1}}],[\"genehandler\",{\"1\":{\"484\":3}}],[\"gender\",{\"1\":{\"295\":1,\"299\":1,\"308\":2,\"314\":2}}],[\"gentlemen\",{\"1\":{\"1\":1}}],[\"get安装nginx\",{\"0\":{\"824\":1}}],[\"get的方式\",{\"1\":{\"823\":1}}],[\"getorder\",{\"1\":{\"671\":1}}],[\"getgroupid\",{\"1\":{\"670\":1}}],[\"geturi\",{\"1\":{\"657\":1}}],[\"getmapname\",{\"1\":{\"598\":2}}],[\"getmainprocess\",{\"1\":{\"569\":1}}],[\"getmethoddescriptors\",{\"1\":{\"133\":1}}],[\"getmethod\",{\"1\":{\"128\":2}}],[\"getmethods\",{\"1\":{\"128\":2}}],[\"getversion\",{\"1\":{\"509\":1}}],[\"getvalue\",{\"1\":{\"356\":1}}],[\"getkey\",{\"1\":{\"509\":1}}],[\"getkeyasstring\",{\"1\":{\"355\":1,\"356\":1}}],[\"getflowelements\",{\"1\":{\"569\":1}}],[\"getfullmessage\",{\"1\":{\"506\":1,\"575\":1}}],[\"getfirst\",{\"1\":{\"180\":1}}],[\"getfield\",{\"1\":{\"129\":1}}],[\"getfields\",{\"1\":{\"129\":1}}],[\"gethistoricprocessinstancebyid\",{\"1\":{\"574\":1}}],[\"gethistoryservice\",{\"1\":{\"506\":1}}],[\"getheader\",{\"1\":{\"262\":1,\"603\":1,\"604\":1}}],[\"getroutedefinitions\",{\"1\":{\"671\":1}}],[\"getroutedefinitionsbyyaml\",{\"1\":{\"670\":2}}],[\"getruntimeservice\",{\"1\":{\"503\":2,\"513\":1,\"514\":1,\"523\":1}}],[\"getrequest\",{\"1\":{\"657\":1}}],[\"getresourcename\",{\"1\":{\"511\":1}}],[\"getresourceasstream\",{\"1\":{\"502\":1,\"511\":2,\"567\":2}}],[\"getrepositoryservice\",{\"1\":{\"502\":2,\"509\":1,\"510\":1,\"511\":1,\"514\":1}}],[\"getreadmethod\",{\"1\":{\"133\":1,\"134\":1,\"135\":1}}],[\"getid\",{\"1\":{\"502\":2,\"503\":2,\"504\":1,\"505\":2,\"509\":1,\"513\":2,\"514\":1,\"523\":1,\"527\":1,\"569\":1,\"582\":1,\"671\":12}}],[\"getinstance\",{\"1\":{\"116\":1,\"117\":3}}],[\"getdataid\",{\"1\":{\"670\":1}}],[\"getdiagramresourcename\",{\"1\":{\"511\":1}}],[\"getdurationinmillis\",{\"1\":{\"506\":1}}],[\"getdeploymentid\",{\"1\":{\"509\":1,\"511\":1}}],[\"getdefaultprocessengine\",{\"1\":{\"495\":1,\"502\":2,\"503\":2,\"504\":1,\"505\":1,\"506\":1,\"509\":1,\"510\":1,\"511\":1,\"513\":1,\"514\":2,\"523\":1,\"527\":1,\"528\":1}}],[\"getdeclaredfield\",{\"1\":{\"129\":2}}],[\"getdeclaredfields\",{\"1\":{\"129\":3,\"135\":1}}],[\"getdeclaredmethod\",{\"1\":{\"128\":3}}],[\"getdeclaredmethods\",{\"1\":{\"128\":2}}],[\"getdeclaredconstructor\",{\"1\":{\"127\":2}}],[\"getdeclaredconstructors\",{\"1\":{\"127\":2}}],[\"getdoccount\",{\"1\":{\"355\":1,\"356\":1}}],[\"getnativerequest\",{\"1\":{\"604\":1}}],[\"getname\",{\"1\":{\"53\":1,\"89\":1,\"129\":2,\"134\":2,\"135\":3,\"206\":1,\"236\":1,\"399\":1,\"502\":2,\"504\":1,\"505\":1,\"509\":1,\"513\":1,\"518\":2,\"527\":1}}],[\"getnumber\",{\"1\":{\"353\":1}}],[\"getstarttime\",{\"1\":{\"506\":1}}],[\"getsize\",{\"1\":{\"353\":1}}],[\"getsavedproperty\",{\"1\":{\"41\":1}}],[\"getlazyprovider\",{\"1\":{\"647\":1}}],[\"getlast\",{\"1\":{\"180\":1}}],[\"getlocation\",{\"1\":{\"399\":1}}],[\"getlogger\",{\"1\":{\"262\":1,\"633\":1}}],[\"getxid\",{\"1\":{\"262\":2}}],[\"getbpmnmodel\",{\"1\":{\"568\":1,\"569\":1}}],[\"getbusinesskey\",{\"1\":{\"513\":1}}],[\"getbuckets\",{\"1\":{\"355\":2,\"356\":2}}],[\"getbufifopen\",{\"1\":{\"257\":1}}],[\"getbeandescriptor\",{\"1\":{\"133\":1}}],[\"getbeaninfo\",{\"1\":{\"133\":1,\"134\":2,\"135\":2}}],[\"getaliveroutemap\",{\"1\":{\"671\":2}}],[\"getattributes\",{\"1\":{\"665\":2}}],[\"geta2\",{\"1\":{\"594\":2}}],[\"geta\",{\"1\":{\"594\":2}}],[\"getactiveactivityids\",{\"1\":{\"573\":2}}],[\"getactivityname\",{\"1\":{\"506\":1}}],[\"getactivityid\",{\"1\":{\"503\":2}}],[\"getassignee\",{\"1\":{\"504\":1,\"569\":1}}],[\"getaggregations\",{\"1\":{\"355\":1,\"356\":2}}],[\"getage\",{\"1\":{\"89\":1,\"134\":1}}],[\"getabsolutefile\",{\"1\":{\"236\":1}}],[\"getabsolutepath\",{\"1\":{\"236\":1}}],[\"getpath\",{\"1\":{\"657\":1}}],[\"getparts\",{\"1\":{\"665\":2}}],[\"getparametertype\",{\"1\":{\"604\":1}}],[\"getparentfile\",{\"1\":{\"236\":1}}],[\"getparent\",{\"1\":{\"236\":1}}],[\"getpname\",{\"1\":{\"639\":1}}],[\"getproperties\",{\"1\":{\"539\":1}}],[\"getproperty\",{\"1\":{\"647\":1}}],[\"getpropertytype\",{\"1\":{\"133\":1,\"134\":1}}],[\"getpropertydescriptors\",{\"1\":{\"133\":1,\"134\":1,\"135\":2}}],[\"getprocessinstancebyid\",{\"1\":{\"571\":1}}],[\"getprocessinstanceid\",{\"1\":{\"504\":1,\"505\":1,\"513\":2,\"527\":1,\"582\":1}}],[\"getprocessimage\",{\"1\":{\"568\":1}}],[\"getprocessdefinitionid\",{\"1\":{\"503\":2,\"513\":2,\"523\":1,\"527\":1}}],[\"getprice\",{\"1\":{\"477\":8}}],[\"getwritemethod\",{\"1\":{\"133\":1,\"134\":1,\"135\":1}}],[\"getexecutor\",{\"1\":{\"670\":1}}],[\"getendtime\",{\"1\":{\"506\":1}}],[\"geteventsetdescriptors\",{\"1\":{\"133\":1}}],[\"geter\",{\"1\":{\"123\":1}}],[\"getcurrentuser\",{\"1\":{\"603\":1,\"604\":1}}],[\"getcandidateusers\",{\"1\":{\"569\":1}}],[\"getconfigandsignlistener\",{\"1\":{\"670\":1}}],[\"getconfigservice\",{\"1\":{\"670\":1}}],[\"getcontent\",{\"1\":{\"353\":1}}],[\"getconstructor\",{\"1\":{\"127\":3}}],[\"getconstructors\",{\"1\":{\"127\":2}}],[\"getchars\",{\"1\":{\"149\":1}}],[\"getclassloader\",{\"1\":{\"502\":1}}],[\"getclass\",{\"1\":{\"51\":1,\"53\":2,\"58\":2,\"60\":2,\"122\":2,\"129\":1,\"135\":2,\"502\":1}}],[\"getting\",{\"1\":{\"805\":1,\"813\":1}}],[\"gettimeout\",{\"1\":{\"670\":1}}],[\"gettime\",{\"1\":{\"114\":1,\"117\":2}}],[\"gettaskdefinitionkey\",{\"1\":{\"582\":1}}],[\"gettaskbytaskid\",{\"1\":{\"581\":1}}],[\"gettaskbyinstanceid\",{\"1\":{\"578\":1}}],[\"gettaskid\",{\"1\":{\"506\":1}}],[\"gettaskcomments\",{\"1\":{\"506\":1,\"575\":2}}],[\"gettaskservice\",{\"1\":{\"504\":1,\"505\":1,\"506\":1,\"527\":1,\"528\":1}}],[\"gettotalpages\",{\"1\":{\"353\":1}}],[\"gettotalelements\",{\"1\":{\"353\":1}}],[\"gettotalhits\",{\"1\":{\"353\":1}}],[\"getter\",{\"1\":{\"89\":1,\"133\":2,\"161\":1}}],[\"get\",{\"1\":{\"89\":1,\"117\":8,\"129\":2,\"135\":2,\"176\":1,\"193\":1,\"254\":1,\"287\":1,\"288\":4,\"290\":1,\"299\":2,\"300\":1,\"302\":2,\"303\":1,\"304\":1,\"305\":2,\"306\":1,\"307\":1,\"308\":1,\"313\":1,\"314\":2,\"319\":1,\"320\":1,\"321\":1,\"355\":1,\"356\":2,\"371\":1,\"373\":1,\"374\":2,\"376\":1,\"440\":9,\"506\":1,\"511\":1,\"565\":1,\"591\":2,\"633\":2,\"640\":1,\"641\":2,\"663\":1,\"665\":1,\"670\":6,\"671\":1,\"779\":1,\"788\":3,\"800\":2,\"807\":2,\"813\":1,\"818\":1,\"822\":1,\"824\":2,\"825\":1}}],[\"guid\",{\"1\":{\"20\":2}}],[\"git也不会关心\",{\"1\":{\"707\":1}}],[\"git\",{\"0\":{\"702\":1,\"703\":1,\"707\":1,\"708\":1,\"711\":1},\"1\":{\"702\":1,\"703\":2,\"704\":2,\"705\":6,\"706\":5,\"707\":4,\"708\":1,\"709\":5,\"710\":4,\"821\":2}}],[\"githubusercontent\",{\"1\":{\"800\":1,\"818\":1}}],[\"github\",{\"1\":{\"10\":2,\"264\":1,\"271\":1,\"317\":3,\"327\":1,\"618\":1,\"680\":1,\"704\":1,\"705\":1,\"713\":1,\"749\":1,\"758\":1,\"766\":1,\"772\":1,\"777\":1,\"797\":1,\"800\":1,\"811\":1,\"821\":1}}],[\"gif\",{\"1\":{\"17\":1}}],[\"google\",{\"1\":{\"783\":1}}],[\"golang基础\",{\"0\":{\"585\":1,\"602\":1}}],[\"golang\",{\"0\":{\"586\":1},\"1\":{\"10\":2,\"586\":1}}],[\"go内存管理\",{\"1\":{\"8\":1,\"10\":1}}],[\"go\",{\"1\":{\"8\":1,\"10\":4,\"585\":2}}],[\"↗\",{\"1\":{\"4\":1}}],[\"￣\",{\"1\":{\"4\":2}}],[\"￣▽￣\",{\"1\":{\"2\":1}}],[\"◡\",{\"1\":{\"4\":1}}],[\"✿◡\",{\"1\":{\"4\":1}}],[\"摁\",{\"1\":{\"4\":1}}],[\"吐槽这操蛋的\",{\"1\":{\"3\":1}}],[\"阅读书本记录等\",{\"1\":{\"3\":1}}],[\"札记\",{\"1\":{\"3\":1}}],[\"学习曲线低\",{\"1\":{\"615\":1}}],[\"学习资料\",{\"0\":{\"359\":1,\"428\":1}}],[\"学习准备\",{\"0\":{\"294\":1}}],[\"学习面向对象时\",{\"1\":{\"121\":1}}],[\"学习笔记\",{\"1\":{\"3\":1}}],[\"学习\",{\"1\":{\"3\":1,\"265\":1,\"358\":2}}],[\"呸\",{\"1\":{\"3\":1}}],[\"梦想是星辰大海\",{\"1\":{\"3\":1}}],[\"技术\",{\"0\":{\"612\":1},\"1\":{\"3\":1}}],[\"记录一些\",{\"1\":{\"702\":1}}],[\"记录一下常用的\",{\"1\":{\"563\":1}}],[\"记录一下\",{\"1\":{\"25\":1,\"407\":1,\"608\":1,\"690\":1}}],[\"记录一下插件配置步骤\",{\"1\":{\"18\":1}}],[\"记录调试信息等\",{\"1\":{\"664\":1}}],[\"记录历史和正在进行的任务\",{\"1\":{\"557\":1}}],[\"记录历史等级\",{\"1\":{\"496\":1}}],[\"记录流程流转过的所有节点信息\",{\"1\":{\"551\":1}}],[\"记录activiti引擎级别的事件日志\",{\"1\":{\"550\":1}}],[\"记录文档修改或添加的具体时间\",{\"1\":{\"364\":1}}],[\"记录和日志分析\",{\"1\":{\"271\":1}}],[\"记录工作中遇到到\",{\"1\":{\"259\":1}}],[\"记录工作中遇到的问题\",{\"1\":{\"3\":1}}],[\"记录go中slice扩容源码分析\",{\"0\":{\"8\":1}}],[\"记录\",{\"1\":{\"3\":1,\"277\":1,\"290\":1}}],[\"不使用ipip模式时\",{\"1\":{\"806\":1}}],[\"不过更多是资源管理方面的作用\",{\"1\":{\"722\":1}}],[\"不启用情况\",{\"1\":{\"665\":1}}],[\"不保存任何的历史数据\",{\"1\":{\"496\":1}}],[\"不需要额外的nat\",{\"1\":{\"802\":1}}],[\"不需要生成证书和私钥\",{\"1\":{\"735\":2}}],[\"不需要手动关闭引擎\",{\"1\":{\"496\":1}}],[\"不需要记录所有操作了\",{\"1\":{\"456\":1}}],[\"不多多次编写\",{\"1\":{\"467\":1}}],[\"不好意思\",{\"1\":{\"463\":1}}],[\"不用再去查询数据库或调用远程接口\",{\"1\":{\"458\":1}}],[\"不推荐\",{\"1\":{\"454\":1}}],[\"不推荐使用\",{\"1\":{\"216\":1}}],[\"不做操作\",{\"1\":{\"440\":1}}],[\"不设置此值时\",{\"1\":{\"424\":1}}],[\"不允许日期和月份为零\",{\"1\":{\"424\":1}}],[\"不允许存储\",{\"1\":{\"188\":1}}],[\"不勾选\",{\"1\":{\"367\":1}}],[\"不然总觉得这趟旅行不完整\",{\"1\":{\"341\":1,\"343\":1}}],[\"不然容易扯裆\",{\"1\":{\"3\":1}}],[\"不转小写\",{\"1\":{\"316\":1}}],[\"不分词\",{\"1\":{\"306\":1,\"316\":1}}],[\"不按相关性得分排序时\",{\"1\":{\"299\":1}}],[\"不带\",{\"1\":{\"291\":1}}],[\"不增加\",{\"1\":{\"291\":1}}],[\"不指定\",{\"1\":{\"289\":1}}],[\"不序列化\",{\"1\":{\"254\":1}}],[\"不属于程序中不可或缺的部分\",{\"1\":{\"224\":1}}],[\"不可重复\",{\"1\":{\"191\":2}}],[\"不可变\",{\"1\":{\"143\":1,\"144\":1}}],[\"不可变特性\",{\"1\":{\"141\":1}}],[\"不可变的好处\",{\"0\":{\"139\":1}}],[\"不会阻塞当前的写操作\",{\"1\":{\"453\":1}}],[\"不会抛出异常👇\",{\"1\":{\"180\":2}}],[\"不会自动帮你分配无参构造器\",{\"1\":{\"89\":1}}],[\"不是吧\",{\"1\":{\"719\":1}}],[\"不是真正意义上的线程\",{\"1\":{\"217\":1}}],[\"不是线程安全的容器\",{\"1\":{\"177\":1}}],[\"不是线程安全\",{\"1\":{\"177\":1}}],[\"不是子类的对象\",{\"1\":{\"91\":1}}],[\"不继承于\",{\"1\":{\"173\":1}}],[\"不内省\",{\"1\":{\"134\":1}}],[\"不常用\",{\"1\":{\"129\":1}}],[\"不取消权限控制会抛出异常\",{\"1\":{\"126\":1}}],[\"不再需要反射\",{\"1\":{\"122\":1}}],[\"不存在于目标id集合判定为删除\",{\"1\":{\"671\":1}}],[\"不存在与当前存活集合\",{\"1\":{\"671\":1}}],[\"不存在时或者过期时\",{\"1\":{\"440\":1}}],[\"不存在\",{\"1\":{\"105\":1}}],[\"不存在就直接\",{\"1\":{\"41\":1}}],[\"不同的奶茶配不同的材料\",{\"1\":{\"477\":1}}],[\"不同的是每个元素都会关联一个\",{\"1\":{\"444\":1}}],[\"不同的算法会有不同的效率\",{\"1\":{\"164\":1}}],[\"不同的数据结构\",{\"1\":{\"164\":1}}],[\"不同点\",{\"0\":{\"98\":1}}],[\"不同包其他类\",{\"1\":{\"91\":1}}],[\"不同包子类\",{\"1\":{\"91\":1}}],[\"不能保证请求一定被接收\",{\"1\":{\"481\":1}}],[\"不能保证元素的有序\",{\"1\":{\"185\":1}}],[\"不能依赖于具体实现\",{\"1\":{\"468\":1}}],[\"不能用双引号来引用字符串\",{\"1\":{\"424\":1}}],[\"不能出现在匹配的文档中\",{\"1\":{\"308\":1}}],[\"不能进行反序列化\",{\"1\":{\"254\":1}}],[\"不能表示汉字\",{\"1\":{\"238\":2}}],[\"不能设置和获取文件里面的内容\",{\"1\":{\"236\":1}}],[\"不能响应点击相机的操作\",{\"1\":{\"204\":1}}],[\"不能包含重复的\",{\"1\":{\"173\":1}}],[\"不能操作中间的数据\",{\"1\":{\"169\":1}}],[\"不能有方法的实现\",{\"1\":{\"98\":1}}],[\"不能改变引用地址\",{\"1\":{\"78\":1}}],[\"不能改变\",{\"1\":{\"78\":1}}],[\"不能被修改\",{\"1\":{\"78\":1}}],[\"不能访问非静态变量和方法\",{\"1\":{\"75\":1}}],[\"不依靠外部类\",{\"1\":{\"75\":1}}],[\"不足1024\",{\"1\":{\"11\":1}}],[\"不错~写了这么多字\",{\"1\":{\"4\":1}}],[\"不知前路在何方\",{\"1\":{\"2\":1}}],[\"博客数据\",{\"1\":{\"274\":1}}],[\"博客是有了但是怎么写\",{\"1\":{\"3\":1}}],[\"博客内容\",{\"0\":{\"3\":1}}],[\"于是国内也有一些提供镜像的网站\",{\"1\":{\"679\":1}}],[\"于是经常会在很多地方出现获取用户信息的代码\",{\"1\":{\"603\":1}}],[\"于是将所有请求的处理者通过前一对象记住其下一个对象的引用而连成一条链\",{\"1\":{\"480\":1}}],[\"于是在网上尝试了很多解决方法\",{\"1\":{\"422\":1}}],[\"于是人们发明了进程\",{\"1\":{\"202\":1}}],[\"于是出于好奇去看了关于slice扩容的源代码https\",{\"1\":{\"10\":1}}],[\"于是少年立马去谷歌搜索🔍一波\",{\"1\":{\"3\":1}}],[\"于是这么一个博客就诞生了\",{\"1\":{\"2\":1}}],[\"于是立马\",{\"1\":{\"2\":1}}],[\"l2或者l3\",{\"1\":{\"802\":1}}],[\"ls\",{\"1\":{\"707\":1,\"731\":1,\"734\":1,\"737\":1,\"740\":1,\"743\":1,\"744\":1}}],[\"lsp\",{\"1\":{\"468\":2}}],[\"l\",{\"1\":{\"680\":1,\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"lb\",{\"1\":{\"658\":3,\"665\":2}}],[\"lkp\",{\"1\":{\"468\":1}}],[\"lfu是least\",{\"1\":{\"463\":1}}],[\"lfu\",{\"1\":{\"463\":1,\"464\":2}}],[\"lru是least\",{\"1\":{\"463\":1}}],[\"lru\",{\"1\":{\"463\":1,\"464\":2}}],[\"lrange\",{\"1\":{\"442\":5}}],[\"lzf算法\",{\"1\":{\"451\":1}}],[\"llen\",{\"1\":{\"442\":3}}],[\"lll￢ω￢\",{\"1\":{\"2\":1}}],[\"lpop\",{\"1\":{\"442\":2}}],[\"lpush+brpop=message\",{\"1\":{\"442\":1}}],[\"lpush+ltrim=capped\",{\"1\":{\"442\":1}}],[\"lpush+lpop=stack\",{\"1\":{\"442\":1}}],[\"lpush+rpop=queue\",{\"1\":{\"442\":1}}],[\"lpush\",{\"1\":{\"442\":2}}],[\"legcount\",{\"1\":{\"595\":2}}],[\"leader\",{\"1\":{\"771\":2,\"776\":2}}],[\"leavecandidateprocess\",{\"1\":{\"527\":1}}],[\"leavevariablesprocess\",{\"1\":{\"523\":1}}],[\"leaveprocess\",{\"1\":{\"503\":2,\"504\":1,\"505\":1,\"509\":1,\"511\":1,\"513\":2,\"514\":1}}],[\"leave\",{\"1\":{\"499\":2,\"502\":2,\"511\":2}}],[\"least\",{\"1\":{\"468\":1}}],[\"left\",{\"1\":{\"401\":1}}],[\"level\",{\"1\":{\"337\":1,\"496\":2}}],[\"lenovo\",{\"1\":{\"351\":1}}],[\"length\",{\"1\":{\"41\":1,\"46\":2,\"48\":2,\"149\":1,\"150\":3,\"151\":1,\"190\":1,\"197\":1,\"247\":1,\"257\":1,\"282\":1}}],[\"lenmem\",{\"1\":{\"10\":2}}],[\"len\",{\"1\":{\"10\":3,\"149\":4,\"150\":1,\"243\":2,\"244\":3,\"247\":2,\"248\":3,\"252\":3,\"257\":2}}],[\"l6vgdd\",{\"1\":{\"323\":1}}],[\"ltrim\",{\"1\":{\"442\":3}}],[\"lt和gt\",{\"0\":{\"387\":1}}],[\"lte\",{\"1\":{\"309\":1,\"310\":1}}],[\"lt\",{\"1\":{\"309\":2,\"387\":2}}],[\"lucene\",{\"1\":{\"268\":4,\"287\":1,\"301\":1}}],[\"labels\",{\"1\":{\"814\":1,\"818\":1}}],[\"label0\",{\"1\":{\"799\":1}}],[\"last\",{\"1\":{\"537\":1,\"558\":1}}],[\"lastname\",{\"1\":{\"295\":1,\"299\":1}}],[\"layout\",{\"1\":{\"495\":2}}],[\"layout=org\",{\"1\":{\"495\":2}}],[\"layout<\",{\"1\":{\"495\":1}}],[\"law\",{\"1\":{\"468\":1}}],[\"latafc\",{\"1\":{\"454\":1}}],[\"lane\",{\"1\":{\"295\":1,\"299\":1,\"306\":1,\"308\":2,\"310\":2}}],[\"language\",{\"1\":{\"316\":1,\"517\":1}}],[\"lang\",{\"1\":{\"41\":1,\"50\":1,\"62\":2,\"121\":1,\"134\":3,\"189\":1}}],[\"lambda\",{\"1\":{\"190\":1}}],[\"ladies\",{\"1\":{\"1\":1}}],[\"licensed\",{\"1\":{\"699\":2}}],[\"license\",{\"1\":{\"699\":4}}],[\"limitranger\",{\"1\":{\"725\":1,\"764\":1}}],[\"limited\",{\"1\":{\"699\":1}}],[\"limitcore=infinity\",{\"1\":{\"683\":1}}],[\"limitnofile=65536\",{\"1\":{\"753\":1,\"766\":1,\"786\":1,\"793\":1}}],[\"limitnofile=infinity\",{\"1\":{\"683\":1}}],[\"limitnproc=infinity\",{\"1\":{\"683\":1}}],[\"liskov\",{\"1\":{\"468\":1}}],[\"listen\",{\"1\":{\"752\":6,\"755\":2}}],[\"listener\",{\"1\":{\"670\":3}}],[\"listpage\",{\"1\":{\"580\":1}}],[\"list的另一个应用就是消息队列\",{\"1\":{\"442\":1}}],[\"list列表\",{\"1\":{\"438\":1}}],[\"lists\",{\"1\":{\"431\":1}}],[\"list<filterdefinition>\",{\"1\":{\"670\":1}}],[\"list<predicatedefinition>\",{\"1\":{\"670\":1}}],[\"list<processdefinition>\",{\"1\":{\"509\":1,\"511\":1,\"565\":1}}],[\"list<product>\",{\"1\":{\"353\":1}}],[\"list<map<string\",{\"1\":{\"670\":2}}],[\"list<routedefinition>\",{\"1\":{\"670\":3,\"671\":8}}],[\"list<handlermethodargumentresolver>\",{\"1\":{\"606\":1}}],[\"list<historictaskinstance>\",{\"1\":{\"584\":1}}],[\"list<historicactivityinstance>\",{\"1\":{\"506\":1,\"576\":1}}],[\"list<string>\",{\"1\":{\"568\":2,\"569\":1,\"573\":1,\"665\":1,\"670\":4,\"671\":4}}],[\"list<comment>\",{\"1\":{\"506\":1,\"575\":1}}],[\"list<task>\",{\"1\":{\"504\":1,\"505\":1,\"513\":1,\"527\":1,\"578\":1,\"580\":1}}],[\"list<long>\",{\"1\":{\"484\":6}}],[\"list<long>>\",{\"1\":{\"484\":3}}],[\"list<venue>\",{\"1\":{\"400\":2,\"401\":1,\"402\":3}}],[\"list<entry>\",{\"1\":{\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1,\"391\":1,\"392\":2,\"393\":2,\"394\":1,\"396\":1,\"397\":1}}],[\"list<object>\",{\"1\":{\"172\":1}}],[\"listfiles\",{\"1\":{\"236\":1}}],[\"list1\",{\"1\":{\"198\":1,\"442\":7}}],[\"list接口是\",{\"1\":{\"174\":1}}],[\"list\",{\"0\":{\"174\":1,\"442\":1},\"1\":{\"60\":4,\"172\":2,\"173\":3,\"174\":1,\"177\":3,\"179\":1,\"197\":1,\"198\":17,\"236\":1,\"317\":1,\"353\":2,\"372\":4,\"427\":1,\"430\":1,\"437\":1,\"442\":1,\"484\":3,\"504\":3,\"505\":1,\"506\":3,\"509\":1,\"511\":2,\"513\":1,\"527\":1,\"565\":1,\"576\":1,\"578\":1,\"584\":1,\"709\":1}}],[\"liupeifeng3514\",{\"1\":{\"457\":1}}],[\"liubing\",{\"1\":{\"16\":1}}],[\"liang24\",{\"1\":{\"457\":1}}],[\"libssl\",{\"1\":{\"825\":1}}],[\"libpcre3\",{\"1\":{\"825\":2}}],[\"libtool\",{\"1\":{\"825\":1}}],[\"libnetwork\",{\"1\":{\"809\":1}}],[\"lib\",{\"1\":{\"376\":1,\"683\":1,\"692\":2,\"752\":1,\"753\":2,\"755\":3,\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1,\"809\":3}}],[\"like和orderby\",{\"0\":{\"394\":1}}],[\"like\",{\"1\":{\"277\":1,\"699\":2}}],[\"lifo\",{\"1\":{\"170\":1}}],[\"lindex\",{\"1\":{\"442\":2}}],[\"line\",{\"1\":{\"253\":3}}],[\"linux下的默认配置文件是\",{\"1\":{\"687\":1}}],[\"linux\",{\"0\":{\"370\":1},\"1\":{\"33\":2,\"35\":1,\"370\":1,\"619\":2,\"680\":2,\"681\":1,\"690\":1,\"726\":6,\"751\":2,\"759\":1,\"797\":1}}],[\"linkedlist之所以有这么多方法\",{\"1\":{\"180\":1}}],[\"linkedlist\",{\"0\":{\"179\":1},\"1\":{\"173\":1,\"175\":1,\"179\":2}}],[\"linked\",{\"0\":{\"168\":1},\"1\":{\"165\":1,\"168\":1}}],[\"link\",{\"1\":{\"15\":1,\"16\":3,\"17\":2,\"382\":1,\"540\":1,\"699\":1}}],[\"lombok\",{\"1\":{\"669\":1}}],[\"lookup\",{\"1\":{\"655\":1}}],[\"loop\",{\"1\":{\"10\":1}}],[\"lod\",{\"1\":{\"468\":2}}],[\"loadbalanced\",{\"1\":{\"645\":1}}],[\"loadbalance\",{\"1\":{\"644\":1}}],[\"loadbalancerclients\",{\"1\":{\"648\":1}}],[\"loadbalancerclient\",{\"0\":{\"648\":1},\"1\":{\"648\":2}}],[\"loadbalancerclientfactory\",{\"1\":{\"647\":4}}],[\"loadbalancer代替ribbon\",{\"1\":{\"643\":1}}],[\"loadbalancer<\",{\"1\":{\"635\":1,\"636\":1,\"658\":1,\"676\":1}}],[\"loadbalancer\",{\"0\":{\"644\":1,\"677\":1},\"1\":{\"635\":4,\"636\":2,\"643\":1,\"644\":3,\"645\":1,\"648\":1,\"658\":1,\"676\":1,\"677\":1}}],[\"loadbalancing\",{\"0\":{\"677\":1},\"1\":{\"635\":1}}],[\"loaduserbyusername\",{\"1\":{\"561\":1,\"562\":2}}],[\"load\",{\"1\":{\"455\":1,\"643\":1,\"644\":1,\"670\":1}}],[\"lovelace\",{\"1\":{\"327\":1}}],[\"locator\",{\"1\":{\"658\":2}}],[\"location=\",{\"1\":{\"399\":1}}],[\"location\",{\"1\":{\"399\":7,\"400\":2,\"401\":1,\"402\":3,\"403\":2}}],[\"location<\",{\"1\":{\"324\":2}}],[\"local\",{\"1\":{\"680\":2,\"726\":2,\"736\":1,\"759\":1,\"784\":1,\"785\":2,\"811\":1,\"825\":13,\"827\":4,\"828\":1,\"831\":3}}],[\"local变量\",{\"1\":{\"521\":1}}],[\"localhost表示本机使用\",{\"1\":{\"697\":1}}],[\"localhost\",{\"1\":{\"296\":1,\"330\":2,\"406\":1,\"638\":1,\"641\":2,\"656\":1,\"657\":1,\"697\":3,\"698\":1,\"831\":4}}],[\"locale\",{\"1\":{\"284\":1}}],[\"locks\",{\"1\":{\"825\":1}}],[\"lockexample\",{\"1\":{\"233\":6}}],[\"lock\",{\"1\":{\"222\":7,\"233\":5,\"417\":2,\"540\":1,\"543\":2,\"546\":2,\"550\":2,\"825\":2}}],[\"logging=true\",{\"1\":{\"809\":1}}],[\"logger=zap\",{\"1\":{\"753\":1}}],[\"loggerfactory\",{\"1\":{\"262\":1,\"633\":1}}],[\"logger\",{\"1\":{\"262\":1,\"495\":2,\"633\":3}}],[\"logtostderr\",{\"1\":{\"764\":1}}],[\"logtostderr=false\",{\"1\":{\"764\":1,\"771\":1,\"776\":1,\"783\":1,\"790\":1}}],[\"logseverityscreen=info\",{\"1\":{\"809\":1}}],[\"logseverityscreen\",{\"1\":{\"806\":1}}],[\"logs\",{\"1\":{\"692\":4,\"693\":1,\"759\":1,\"764\":2,\"771\":1,\"776\":1,\"781\":1,\"783\":1,\"787\":1,\"790\":1,\"794\":1}}],[\"logstash采集数据\",{\"1\":{\"271\":1}}],[\"loglevel\",{\"1\":{\"649\":1}}],[\"logfile=org\",{\"1\":{\"495\":1}}],[\"logfile\",{\"1\":{\"495\":6}}],[\"log4j12<\",{\"1\":{\"495\":1}}],[\"log4j\",{\"1\":{\"495\":18}}],[\"log文件夹\",{\"1\":{\"368\":1}}],[\"log\",{\"0\":{\"550\":1},\"1\":{\"262\":5,\"368\":1,\"376\":1,\"495\":3,\"533\":1,\"550\":1,\"670\":2,\"671\":7,\"764\":8,\"771\":1,\"776\":1,\"783\":1,\"790\":1,\"809\":2,\"814\":2,\"824\":1,\"825\":4}}],[\"login\",{\"1\":{\"161\":2}}],[\"logo\",{\"1\":{\"15\":1,\"16\":1,\"17\":1}}],[\"lower\",{\"1\":{\"401\":1}}],[\"low\",{\"1\":{\"41\":6}}],[\"long类型对应的值\",{\"1\":{\"544\":1}}],[\"longblob\",{\"1\":{\"538\":1,\"550\":1,\"553\":1}}],[\"long>\",{\"1\":{\"335\":1,\"351\":1}}],[\"long\",{\"1\":{\"38\":1,\"116\":1,\"161\":2,\"222\":1,\"254\":1,\"257\":2,\"332\":2,\"351\":2,\"544\":1,\"554\":1,\"558\":1,\"639\":2,\"640\":1,\"665\":3,\"669\":1,\"670\":2}}],[\"零零碎碎弄了一个多月\",{\"1\":{\"2\":1}}],[\"掌握着诸多高级技能\",{\"1\":{\"2\":1}}],[\"od\",{\"1\":{\"746\":1}}],[\"ou\",{\"1\":{\"730\":1,\"733\":1,\"736\":1,\"739\":1,\"742\":1}}],[\"outputencoding>\",{\"1\":{\"636\":1}}],[\"outputencoding>utf\",{\"1\":{\"636\":1}}],[\"outputstream\",{\"0\":{\"243\":1},\"1\":{\"240\":2,\"243\":1,\"478\":1}}],[\"outer\",{\"1\":{\"80\":1}}],[\"outofmemoryerror\",{\"1\":{\"43\":3,\"151\":1,\"152\":1}}],[\"out\",{\"1\":{\"41\":3,\"48\":2,\"54\":1,\"60\":1,\"73\":3,\"74\":1,\"75\":1,\"78\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":2,\"95\":2,\"103\":3,\"104\":3,\"108\":3,\"115\":2,\"122\":2,\"123\":3,\"127\":2,\"128\":2,\"129\":1,\"134\":4,\"140\":2,\"155\":4,\"172\":1,\"190\":1,\"206\":1,\"218\":2,\"219\":2,\"222\":7,\"225\":1,\"226\":3,\"233\":1,\"244\":3,\"248\":3,\"249\":1,\"252\":2,\"253\":2,\"254\":3,\"299\":2,\"352\":1,\"353\":5,\"354\":1,\"355\":2,\"356\":2,\"477\":1,\"495\":1,\"502\":4,\"503\":6,\"504\":4,\"506\":5,\"509\":6,\"513\":8,\"514\":6,\"523\":2,\"527\":4,\"607\":1,\"651\":1,\"665\":1}}],[\"owner\",{\"1\":{\"541\":1,\"542\":1,\"543\":1,\"546\":1,\"550\":1,\"555\":1,\"557\":1}}],[\"omlsh0\",{\"1\":{\"499\":1}}],[\"osjcwe\",{\"1\":{\"498\":1}}],[\"ocp\",{\"1\":{\"468\":2}}],[\"ockham\",{\"1\":{\"327\":1}}],[\"ok\",{\"1\":{\"411\":2,\"440\":3,\"442\":1,\"591\":2,\"779\":2}}],[\"online\",{\"1\":{\"683\":2,\"753\":2}}],[\"only\",{\"1\":{\"421\":1,\"422\":2,\"424\":1,\"453\":1,\"495\":2,\"726\":1}}],[\"one\",{\"1\":{\"601\":2}}],[\"on\",{\"1\":{\"370\":1,\"412\":1,\"413\":1,\"414\":5,\"415\":3,\"416\":2,\"418\":1,\"420\":1,\"424\":1,\"451\":1,\"455\":1}}],[\"opaque\",{\"1\":{\"806\":1}}],[\"openfegin\",{\"1\":{\"637\":1}}],[\"openfeign支持对请求和响应进行gzip压缩\",{\"1\":{\"650\":1}}],[\"openfeign支持多种的对象的序列化\",{\"1\":{\"634\":1}}],[\"openfeign<\",{\"1\":{\"636\":1}}],[\"openfeign是两个技术\",{\"1\":{\"634\":1}}],[\"openfeign是声明式的http客户端\",{\"1\":{\"634\":1}}],[\"openfeign\",{\"0\":{\"634\":1,\"639\":1,\"646\":1,\"650\":1,\"651\":1},\"1\":{\"610\":2,\"612\":1,\"634\":3,\"635\":1,\"636\":2,\"638\":1,\"639\":1,\"641\":2,\"645\":1,\"646\":1,\"651\":3}}],[\"open\",{\"1\":{\"468\":1,\"636\":1,\"651\":1,\"799\":1}}],[\"openssl\",{\"1\":{\"699\":1}}],[\"opens\",{\"1\":{\"269\":1,\"408\":1}}],[\"opts\",{\"1\":{\"766\":1,\"772\":1,\"777\":1,\"786\":1,\"793\":1}}],[\"opts=\",{\"1\":{\"764\":1,\"771\":1,\"776\":1,\"783\":1,\"790\":1}}],[\"optional\",{\"1\":{\"334\":1}}],[\"optimize\",{\"1\":{\"10\":1}}],[\"opt\",{\"1\":{\"284\":1,\"783\":1,\"796\":1,\"797\":2,\"806\":3}}],[\"ois\",{\"1\":{\"254\":3}}],[\"oos\",{\"1\":{\"254\":4}}],[\"o流\",{\"0\":{\"250\":1}}],[\"o流基础\",{\"0\":{\"235\":1}}],[\"o设备等资源\",{\"1\":{\"214\":1}}],[\"o2\",{\"1\":{\"190\":1}}],[\"o1\",{\"1\":{\"190\":1}}],[\"obstruct\",{\"1\":{\"160\":1}}],[\"objectoutputstream\",{\"1\":{\"254\":2}}],[\"objectoutoutstream\",{\"1\":{\"254\":1}}],[\"objectinputstream\",{\"1\":{\"254\":3}}],[\"object>>\",{\"1\":{\"670\":2}}],[\"object>\",{\"1\":{\"135\":5,\"185\":1,\"503\":2,\"513\":2,\"523\":2,\"670\":2}}],[\"object中的\",{\"1\":{\"63\":1}}],[\"object\",{\"0\":{\"50\":1},\"1\":{\"50\":2,\"51\":4,\"53\":2,\"56\":2,\"57\":2,\"58\":1,\"60\":1,\"62\":2,\"91\":2,\"113\":1,\"124\":3,\"128\":3,\"134\":2,\"135\":7,\"172\":1,\"176\":6,\"177\":2,\"180\":21,\"184\":3,\"193\":8,\"197\":2,\"198\":7,\"222\":3,\"262\":1,\"364\":2,\"583\":1,\"604\":1,\"670\":1}}],[\"objects\",{\"1\":{\"10\":1,\"58\":2,\"60\":1,\"670\":2}}],[\"obj\",{\"1\":{\"10\":2,\"51\":1,\"56\":2,\"128\":3,\"135\":8,\"172\":1,\"598\":3,\"599\":2}}],[\"overlay\",{\"1\":{\"799\":1}}],[\"overview\",{\"0\":{\"466\":1},\"1\":{\"813\":1}}],[\"override=server01\",{\"1\":{\"783\":1}}],[\"override\",{\"1\":{\"58\":2,\"60\":1,\"62\":2,\"84\":2,\"206\":1,\"218\":1,\"219\":1,\"262\":1,\"399\":1,\"477\":4,\"484\":6,\"518\":1,\"562\":1,\"604\":2,\"606\":1,\"666\":1,\"670\":3,\"671\":1,\"783\":2}}],[\"overflowed\",{\"1\":{\"10\":1}}],[\"overflow\",{\"1\":{\"10\":3,\"150\":1,\"151\":2,\"264\":1}}],[\"orphan\",{\"1\":{\"706\":2}}],[\"or\",{\"1\":{\"699\":5}}],[\"oroperator\",{\"1\":{\"386\":1}}],[\"order++\",{\"1\":{\"671\":1}}],[\"orderobj\",{\"1\":{\"670\":3}}],[\"ordercontroller\",{\"1\":{\"640\":1}}],[\"orderserver\",{\"1\":{\"637\":2,\"648\":2}}],[\"orderbyhistorictaskinstanceendtime\",{\"1\":{\"584\":1}}],[\"orderbyhistoricactivityinstancestarttime\",{\"1\":{\"576\":1}}],[\"orderbytaskcreatetime\",{\"1\":{\"580\":1}}],[\"orderbyprocessdefinitionversion\",{\"1\":{\"511\":1,\"565\":1}}],[\"ordered\",{\"1\":{\"431\":1}}],[\"order控制了返回对象中\",{\"1\":{\"347\":1}}],[\"order\",{\"0\":{\"347\":1},\"1\":{\"300\":1,\"314\":1,\"354\":1,\"627\":1,\"631\":1,\"633\":2,\"636\":1,\"638\":1,\"661\":1,\"662\":1,\"663\":1,\"670\":3,\"671\":2}}],[\"origin\",{\"1\":{\"282\":1,\"705\":1,\"706\":1}}],[\"original\",{\"1\":{\"197\":1}}],[\"oracle\",{\"1\":{\"32\":1,\"699\":1}}],[\"organization\",{\"1\":{\"730\":1}}],[\"org=5\",{\"1\":{\"374\":2}}],[\"org\",{\"1\":{\"16\":2,\"371\":2,\"372\":4,\"374\":6,\"376\":1,\"486\":1,\"495\":6,\"561\":1,\"669\":2,\"726\":2,\"805\":1,\"813\":3,\"825\":1}}],[\"off\",{\"1\":{\"243\":2,\"247\":2,\"257\":2,\"806\":1}}],[\"offerlast\",{\"1\":{\"180\":1}}],[\"offerfirst\",{\"1\":{\"180\":1}}],[\"offer\",{\"1\":{\"180\":1}}],[\"offset\",{\"1\":{\"147\":1,\"320\":6,\"321\":10,\"326\":2,\"590\":1}}],[\"offline\",{\"1\":{\"22\":2}}],[\"of\",{\"0\":{\"343\":1},\"1\":{\"10\":2,\"117\":2,\"338\":1,\"341\":1,\"343\":2,\"348\":2,\"353\":3,\"354\":1,\"468\":1,\"480\":1,\"699\":4}}],[\"oldval\",{\"1\":{\"198\":1}}],[\"old\",{\"1\":{\"10\":4,\"671\":1}}],[\"o\",{\"0\":{\"255\":1},\"1\":{\"2\":2,\"58\":5,\"60\":5,\"176\":2,\"189\":2,\"215\":1,\"235\":1,\"443\":1,\"478\":3,\"680\":1,\"730\":2,\"733\":1,\"736\":1,\"739\":1,\"742\":1,\"813\":1}}],[\"~\",{\"1\":{\"2\":1,\"387\":1,\"411\":1,\"761\":1}}],[\"嗯\",{\"1\":{\"2\":1}}],[\"从master节点拷贝\",{\"1\":{\"781\":1}}],[\"从map中删除指定key的键值对\",{\"1\":{\"193\":1}}],[\"从github下载二进制文件\",{\"0\":{\"749\":1,\"758\":1}}],[\"从证书中提取该字段作为请求用户所属的组\",{\"1\":{\"730\":1}}],[\"从证书中提取该字段作为请求的用户名\",{\"1\":{\"730\":1}}],[\"从流量控制\",{\"1\":{\"612\":1}}],[\"从流程实例对象中获取businesskey\",{\"1\":{\"513\":1}}],[\"从tag中取出需要的tag\",{\"1\":{\"591\":1}}],[\"从而保障了所有pod的ip地址在同一个水平网络中且不产生冲突\",{\"1\":{\"799\":1}}],[\"从而实现不同node上的pod分配的ip不产生冲突\",{\"1\":{\"799\":1}}],[\"从而完成pod到pod之间的直接地址通信\",{\"1\":{\"799\":1}}],[\"从而加上了负载均衡器的特性\",{\"1\":{\"645\":1}}],[\"从而协同完成工作任务\",{\"1\":{\"642\":1}}],[\"从而提高系统的健壮性\",{\"1\":{\"486\":1}}],[\"从而避免发生死锁\",{\"1\":{\"233\":1}}],[\"从节点要从主节点进行全量复制时也会触发bgsave操作\",{\"1\":{\"450\":1}}],[\"从列表的左端弹出一个值\",{\"1\":{\"442\":1}}],[\"从列表的右端弹出一个值\",{\"1\":{\"442\":1}}],[\"从列表中移除指定\",{\"1\":{\"176\":1}}],[\"从介绍中可以看出\",{\"1\":{\"363\":1}}],[\"从结果中取出名为brands的那个聚合\",{\"1\":{\"356\":1}}],[\"从springboot\",{\"1\":{\"327\":1}}],[\"从本地安装\",{\"1\":{\"317\":1}}],[\"从6\",{\"1\":{\"274\":1}}],[\"从输入流中读取多个字节数据\",{\"1\":{\"242\":1,\"246\":1}}],[\"从输入流中读取一个字节数据并返回该字节数据\",{\"1\":{\"242\":1,\"246\":1}}],[\"从小到大\",{\"1\":{\"188\":1,\"195\":1}}],[\"从此列表所表示的栈处弹出一个元素\",{\"1\":{\"180\":1}}],[\"从此列表中移除第一次出现的指定元素\",{\"1\":{\"176\":1}}],[\"从上图可以看出\",{\"1\":{\"172\":1}}],[\"从一\",{\"1\":{\"170\":1}}],[\"从队列头部删除\",{\"1\":{\"169\":1}}],[\"从\",{\"1\":{\"156\":1,\"360\":1,\"674\":1,\"796\":1,\"820\":1}}],[\"从图中我们可以清晰的看出\",{\"1\":{\"155\":1}}],[\"从java1\",{\"1\":{\"95\":1}}],[\"从哪里开始改变呢\",{\"1\":{\"2\":1}}],[\"从学校毕业到公司上班已经有一年半了\",{\"1\":{\"2\":1}}],[\"我这里下载的版本是\",{\"1\":{\"749\":1}}],[\"我这里只部署一台所以就写一个☝️\",{\"1\":{\"733\":1}}],[\"我这里的目录是\",{\"1\":{\"296\":1}}],[\"我使用了\",{\"1\":{\"655\":1}}],[\"我使用的版本是\",{\"1\":{\"317\":1}}],[\"我写了一篇文章专门记录\",{\"1\":{\"635\":1}}],[\"我内存现在不够了\",{\"1\":{\"463\":1}}],[\"我的是\",{\"1\":{\"783\":1}}],[\"我的配置文件如下\",{\"1\":{\"423\":1}}],[\"我的博客之旅从这里出发\",{\"1\":{\"4\":1}}],[\"我\",{\"1\":{\"277\":1,\"320\":1,\"321\":1}}],[\"我会飞\",{\"1\":{\"84\":1}}],[\"我是中国人\",{\"1\":{\"277\":2,\"319\":1,\"320\":1,\"321\":1}}],[\"我是\",{\"1\":{\"78\":1}}],[\"我是静态语句块\",{\"1\":{\"74\":2}}],[\"我们直接用\",{\"1\":{\"822\":1}}],[\"我们直接一直\",{\"1\":{\"367\":1}}],[\"我们这里让kubelet使用引导token的方式认证\",{\"1\":{\"782\":1}}],[\"我们这里以学习为主就只在主节点部署一个实例\",{\"1\":{\"748\":1}}],[\"我们前面讲到的kubernetes的各种调度策略就是它实现的\",{\"1\":{\"775\":1}}],[\"我们现在没有用到\",{\"1\":{\"763\":1}}],[\"我们最终要的是kube\",{\"1\":{\"743\":1}}],[\"我们最终要的是admin\",{\"1\":{\"740\":1}}],[\"我们最终要的是server\",{\"1\":{\"737\":1}}],[\"我们最终要的是etcd\",{\"1\":{\"734\":1}}],[\"我们最终想要的就是ca\",{\"1\":{\"731\":1}}],[\"我们用它来生成证书和秘钥文件\",{\"1\":{\"726\":1}}],[\"我们得从认证解决什么问题\",{\"1\":{\"719\":1}}],[\"我们得知\",{\"1\":{\"122\":1}}],[\"我们不想提交任何内容\",{\"1\":{\"706\":1}}],[\"我们可利用这种过滤器实现身份验证\",{\"1\":{\"664\":1}}],[\"我们可以把它们当做一个整体来看\",{\"1\":{\"757\":1,\"770\":1}}],[\"我们可以自定义\",{\"1\":{\"657\":1}}],[\"我们可以根据自己的业务场景适当得调一下超时时间\",{\"1\":{\"651\":1}}],[\"我们可以通过加入reactorloadbalancerexchangefilterfunction会加入负载均衡器的特性\",{\"1\":{\"645\":1}}],[\"我们可以访问\",{\"1\":{\"620\":1}}],[\"我们可以再部署之前\",{\"1\":{\"499\":1}}],[\"我们可以轻松地实现最新消息排队功能\",{\"1\":{\"442\":1}}],[\"我们可以看到新创建的用户的默认权限是\",{\"1\":{\"412\":1}}],[\"我们可以指定一个原始查询\",{\"1\":{\"395\":1}}],[\"我们可以使用如下命令查看\",{\"1\":{\"707\":1}}],[\"我们可以使用批量操作的\",{\"1\":{\"296\":1}}],[\"我们可以使用匿名内部类\",{\"1\":{\"190\":1}}],[\"我们可以简写\",{\"1\":{\"190\":1}}],[\"我们可以提供一个\",{\"1\":{\"190\":1}}],[\"我们可以得知\",{\"1\":{\"187\":1}}],[\"我们的配置文件可以放到容器中的\",{\"1\":{\"699\":1}}],[\"我们的配置文件内容需要如下设置👇\",{\"1\":{\"658\":1}}],[\"我们的流程资源文件已经上传到数据库了\",{\"1\":{\"511\":1}}],[\"我们注释掉\",{\"1\":{\"657\":1}}],[\"我们自定义的路由\",{\"1\":{\"656\":1}}],[\"我们会发现多刷新几次\",{\"1\":{\"641\":1}}],[\"我们会通过\",{\"1\":{\"638\":1}}],[\"我们通过\",{\"1\":{\"625\":1,\"629\":1}}],[\"我们通常把多个事物\",{\"1\":{\"121\":1}}],[\"我们再将自定义的参数解析器配置到\",{\"1\":{\"606\":1}}],[\"我们在\",{\"1\":{\"639\":1}}],[\"我们在复制结构体的时候\",{\"1\":{\"601\":1}}],[\"我们在谈基础数据结构时\",{\"1\":{\"437\":1}}],[\"我们就可以了解一下ssl\",{\"1\":{\"720\":1}}],[\"我们就可以通过activiti把这个png文件读取出来\",{\"1\":{\"499\":1}}],[\"我们就可以用\",{\"1\":{\"338\":1}}],[\"我们打开看到的是图片格式是因为我们在idea中安装了\",{\"1\":{\"499\":1}}],[\"我们打开浏览器\",{\"1\":{\"369\":1}}],[\"我们去奶茶店买一杯蓝莓奶茶\",{\"1\":{\"477\":1}}],[\"我们一起来探讨一下\",{\"1\":{\"459\":1}}],[\"我们一般都用来做修改\",{\"1\":{\"289\":1}}],[\"我们一般也要重写\",{\"1\":{\"57\":1}}],[\"我们也可以直接通过\",{\"1\":{\"408\":1}}],[\"我们也可以传递其它的参数以改变查询结果\",{\"1\":{\"303\":1}}],[\"我们也将按\",{\"1\":{\"394\":1}}],[\"我们将要查找\",{\"1\":{\"394\":1}}],[\"我们正在寻找\",{\"1\":{\"385\":1,\"386\":1}}],[\"我们看下页面的查询的json结果与java类的对照关系\",{\"1\":{\"355\":1}}],[\"我们按照品牌brand进行分组\",{\"1\":{\"355\":1}}],[\"我们已经学习了\",{\"1\":{\"349\":1}}],[\"我们想要在\",{\"1\":{\"329\":1,\"379\":1}}],[\"我们使用admin命名\",{\"1\":{\"739\":1}}],[\"我们使用cfssl来制作证书\",{\"1\":{\"726\":1}}],[\"我们使用log4j日志包\",{\"1\":{\"495\":1}}],[\"我们使用\",{\"1\":{\"297\":1,\"370\":1,\"636\":1}}],[\"我们平时存储数据用的\",{\"1\":{\"277\":1}}],[\"我们需要在\",{\"1\":{\"706\":1}}],[\"我们需要指定\",{\"1\":{\"655\":1}}],[\"我们需要大量的二次开发和定制\",{\"1\":{\"614\":1}}],[\"我们需要使用深度比较\",{\"1\":{\"601\":1}}],[\"我们需要先领取再完成\",{\"1\":{\"528\":1}}],[\"我们需要先了解\",{\"1\":{\"265\":1,\"358\":1}}],[\"我们需要了解一下什么是elasticsearch\",{\"1\":{\"267\":1}}],[\"我们选用\",{\"1\":{\"265\":1}}],[\"我们主要看常用的\",{\"1\":{\"257\":1}}],[\"我们称这些子类为\",{\"1\":{\"256\":1}}],[\"我们又可以根据其数据结构特性\",{\"1\":{\"165\":1}}],[\"我们执行一下命令就可以安装完成\",{\"1\":{\"377\":1}}],[\"我们执行\",{\"1\":{\"155\":1}}],[\"我们先来实现该接口\",{\"1\":{\"604\":1}}],[\"我们先看\",{\"1\":{\"155\":1}}],[\"我们先了解一下\",{\"1\":{\"31\":1}}],[\"我们应该使用\",{\"1\":{\"113\":1}}],[\"我们必须重写\",{\"1\":{\"62\":1}}],[\"我们希望在pod内部访问api\",{\"1\":{\"723\":1}}],[\"我们希望\",{\"1\":{\"59\":1}}],[\"我们把解决问题的步骤告诉计算机一步一步去做\",{\"1\":{\"31\":1}}],[\"我好改进\",{\"1\":{\"29\":1}}],[\"我用的是window\",{\"1\":{\"10\":1}}],[\"我想步子不要跨太大\",{\"1\":{\"3\":1}}],[\"我意识到是时候做出一些改变了\",{\"1\":{\"2\":1}}],[\"我就乐意这样活\",{\"1\":{\"0\":1}}],[\"堕落一阵后又开始奋斗\",{\"1\":{\"2\":1}}],[\"慢慢变成一个对未来生活充满迷茫的少年\",{\"1\":{\"2\":1}}],[\"慢慢消退的激情\",{\"1\":{\"2\":1}}],[\"少年定下的学习\",{\"1\":{\"2\":1}}],[\"少年也曾立下过改变现状的豪言壮志\",{\"1\":{\"2\":1}}],[\"少年我从一个对生活充满热情的人\",{\"1\":{\"2\":1}}],[\"少年的第一篇博客\",{\"0\":{\"1\":1}}],[\"勉强算是入冬了吧\",{\"1\":{\"2\":1}}],[\"气温18°\",{\"1\":{\"2\":1}}],[\"^s\",{\"1\":{\"707\":1}}],[\"^\",{\"1\":{\"1\":2}}],[\"欢迎阅读无聊少年的第一篇博客\",{\"1\":{\"1\":1}}],[\"鬼知道上哪里翻译的\",{\"1\":{\"1\":1}}],[\"啥事儿不往心里搁\",{\"1\":{\"0\":1}}],[\"今天的事儿能拖就拖\",{\"1\":{\"0\":1}}],[\"大家应该都知道这个文件是做什么的\",{\"1\":{\"831\":1}}],[\"大法\",{\"1\":{\"665\":1}}],[\"大功告成\",{\"1\":{\"377\":1}}],[\"大于等于\",{\"1\":{\"309\":1,\"310\":1}}],[\"大于数组最大长度\",{\"1\":{\"152\":1}}],[\"大于\",{\"1\":{\"150\":2,\"309\":1,\"387\":1}}],[\"大于1024时就是添加\",{\"1\":{\"9\":1}}],[\"大小位8字节\",{\"1\":{\"10\":1}}],[\"大刀阔斧\",{\"1\":{\"2\":1}}],[\"大不了我就上吊\",{\"1\":{\"0\":1}}],[\"大难临头不知道\",{\"1\":{\"0\":1}}],[\"房子着火我拍照\",{\"1\":{\"0\":1}}],[\"荒腔走板\",{\"0\":{\"0\":1},\"1\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
