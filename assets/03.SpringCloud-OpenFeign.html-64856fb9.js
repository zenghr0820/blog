import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,d as n,e as a,b as t,a as e}from"./app-9c495acb.js";const i={},u=e('<h1 id="openfeign-2020-最新教程" tabindex="-1"><a class="header-anchor" href="#openfeign-2020-最新教程" aria-hidden="true">#</a> OpenFeign 2020 最新教程</h1><p>OpenFeign是声明式的Http客户端，通过OpenFeign发送Http请求非常的简单</p><ul><li>注解式开发，接口+注解的方式</li><li>OpenFeign支持多种的对象的序列化 和 反序列化的工具</li><li>OpenFeign <s>默认集成了Ribbon</s>(2020 版本弃用)，可以直接进行负载均衡</li></ul><p>Feign 和 OpenFeign 的区别</p><blockquote><p>Feign 和 OpenFeign是两个技术，都是作为服务调用存在的，OpenFeign 是SpringCloud在Feign的基础上进行封装得到的，支持SpringMvc的注解</p></blockquote><h2 id="_2020-版本说明以及坑" tabindex="-1"><a class="header-anchor" href="#_2020-版本说明以及坑" aria-hidden="true">#</a> 2020 版本说明以及坑</h2><p>由于 <strong>SpringCloud 2020</strong> 弃用了 Ribbon，所以如果你使用的是 2020 版本，且使用了 OpenFeign 组件，那么在启动时会报错</p><blockquote><p>No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</p></blockquote>',8),r={href:"https://spring.io/guides/gs/spring-cloud-loadbalancer/",target:"_blank",rel:"noopener noreferrer"},d=e(`<p>所以导入 <em>Spring Cloud LoadBalancer</em> 的依赖就解决了</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--loadbalancer--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),k={href:"https://blog.zenghr.cn/passages/2021-07-27-spring-cloud-error.html",target:"_blank",rel:"noopener noreferrer"},g=e('<h2 id="演示环境说明" tabindex="-1"><a class="header-anchor" href="#演示环境说明" aria-hidden="true">#</a> 演示环境说明</h2><table><thead><tr><th>框架</th><th>版本</th></tr></thead><tbody><tr><td><strong>OpenFeign</strong></td><td><em>3.0.3</em></td></tr><tr><td><strong>Loadbalancer</strong></td><td><em>3.0.3</em></td></tr><tr><td><strong>Spring Cloud</strong></td><td><em>2020.0.3</em></td></tr><tr><td><strong>Spring Cloud Alibaba</strong></td><td><em>2021.1</em></td></tr></tbody></table><p>我们使用 nacos + OpenFeign 来模拟微服务之间的远程调用场景</p><p>首先创建 <em>订单服务(order-server)</em> 、<em>商品服务(product-server)</em> 将这两个服务注册到 nacos 中，其中商品服务部署多个，方便后面演示 负载均衡的操作</p>',4),v={class:"hint-container tip"},m=n("p",{class:"hint-container-title"},"提示",-1),b={href:"https://blog.zenghr.cn/passages/2021-07-27-spring-cloud-alibaba-nacos.html",target:"_blank",rel:"noopener noreferrer"},h=e(`<figure><img src="https://media.zenghr.cn/blog/img/20210902/4tTurU.png" alt="4tTurU" tabindex="0" loading="lazy"><figcaption>4tTurU</figcaption></figure><p><strong>父项目 pom 文件</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--依赖版本的锁定--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>2020.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud-alibaba.version</span><span class="token punctuation">&gt;</span></span>2021.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud-alibaba.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${spring-cloud.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${spring-cloud-alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>订单、商品的 pom 文件</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--nacos discovery--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--open feign--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--loadbalancer--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动类" tabindex="-1"><a class="header-anchor" href="#启动类" aria-hidden="true">#</a> 启动类</h2><p>在启动类上添加 OpenFegin 的扫描注解，注意扫描路径(默认扫描当前包及其子包)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token annotation punctuation">@EnableFeignClients</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServer</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">OrderServer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8091</span>
<span class="token comment"># 指定当前服务的名称，会注册到注册中心</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> order<span class="token punctuation">-</span>server
  <span class="token comment"># nacos 注册中心</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过以上步骤我们就拥有了一个最初步的项目，接下来，我们会通过 <strong>接口+注解</strong> 的方式开发 OpenFeign 的服务调用</p><h2 id="openfeign-接口的开发" tabindex="-1"><a class="header-anchor" href="#openfeign-接口的开发" aria-hidden="true">#</a> OpenFeign 接口的开发</h2><p>我们在 订单服务中 新增接口 <em>ProductServer</em> ，使用 <strong>@FeignClient</strong> 注解标注该类是 OpenFeign 远程调用的类</p><blockquote><p><strong>@FeignClient</strong> 的 name 参数就是你要调用的服务名称</p><p>接口中的方法就是调用服务的 Controller 接口，<strong>注意：</strong> 接口的地址以及参数要和调用服务的 controller 一致</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 参数是要请求服务的服务名称</span>
<span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;product-server&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductServer</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/product&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">Product</span> <span class="token function">findByPid</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;pid&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> pid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>商品服务中的 Controller</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">IProductService</span> productService<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/product&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Product</span> <span class="token function">findByPid</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;pid&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> pid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Product</span> product <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">findByPid</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setPname</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getPname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; from: &quot;</span> <span class="token operator">+</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> product<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="调用openfeign-的接口" tabindex="-1"><a class="header-anchor" href="#调用openfeign-的接口" aria-hidden="true">#</a> 调用OpenFeign 的接口</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">ProductServer</span> productServer<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/get&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Product</span> <span class="token function">findProduct</span><span class="token punctuation">(</span><span class="token class-name">Long</span> pid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> productServer<span class="token punctuation">.</span><span class="token function">findByPid</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>`,20),f={href:"http://localhost:8091/get?pid=1",target:"_blank",rel:"noopener noreferrer"},y=e(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// http://localhost:8091/get?pid=1</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;pid&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米 from: 8081&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pprice&quot;</span><span class="token operator">:</span> <span class="token number">1000.0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;stock&quot;</span><span class="token operator">:</span> <span class="token number">5000</span>
<span class="token punctuation">}</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;pid&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米 from: 8082&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;pprice&quot;</span><span class="token operator">:</span> <span class="token number">1000.0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;stock&quot;</span><span class="token operator">:</span> <span class="token number">5000</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们会发现多刷新几次，出现的端口不一致，这就是 OpenFeign 的负载均衡导致的，OpenFeign 默认的负载均衡策略是 <strong>轮询策略</strong></p><h2 id="负载均衡" tabindex="-1"><a class="header-anchor" href="#负载均衡" aria-hidden="true">#</a> 负载均衡</h2><p>负载均衡，英文名称为<code>Load Balance</code>，其含义就是指将工作任务（负载）进行平衡、分摊到多个操作单元上进行运行，从而协同完成工作任务</p><h3 id="ribbon-已弃用" tabindex="-1"><a class="header-anchor" href="#ribbon-已弃用" aria-hidden="true">#</a> Ribbon(已弃用)</h3><p><code>Spring Cloud Ribbon</code> 是一个基于 <code>HTTP</code> 和 <code>TCP</code> 的客户端负载均衡工具，它基于 <code>Netflix Ribbon</code> 实现。通过 <code>Spring Cloud</code> 的封装，可以让我们轻松地将面向服务的 <code>REST</code> 模版请求自动转换成客户端负载均衡的服务调用</p><p><strong>Ribbon 已弃用</strong></p><p>自<code>2016</code>年以来，<code>Ribbon</code>就进入维护状态，官方建议使用<code>Spring Cloud LoadBalancer</code>代替<code>Ribbon</code></p>`,8),C={href:"https://spring.io/guides/gs/client-side-load-balancing/",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"Spring Cloud Netflix Ribbon is now deprecated",-1),x={href:"https://spring.io/guides/gs/spring-cloud-loadbalancer/",target:"_blank",rel:"noopener noreferrer"},F=n("h3",{id:"spring-cloud-loadbalancer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spring-cloud-loadbalancer","aria-hidden":"true"},"#"),a(" Spring Cloud LoadBalancer")],-1),S=n("strong",null,"官方文档：",-1),q={href:"https://spring.io/guides/gs/spring-cloud-loadbalancer/",target:"_blank",rel:"noopener noreferrer"},w=e(`<p>Spring Cloud LoadBalance r是一个客户端负载均衡器，类似于Ribbon，但是由于Ribbon已经进入维护模式，并且Ribbon 2并不与Ribbon 1相互兼容</p><p>所以Spring Cloud全家桶在Spring Cloud Commons项目中，添加了 <em>Spring cloud Loadbalancer</em> 作为新的负载均衡器，并且做了向前兼容，就算你的项目中继续用 Spring Cloud Netflix 套装（包括Ribbon，Eureka，Zuul，Hystrix等等）让你的项目中有这些依赖，你也可以通过简单的配置，把 ribbon 替换成 Spring Cloud LoadBalancer</p><h2 id="负载均衡器在哪里使用" tabindex="-1"><a class="header-anchor" href="#负载均衡器在哪里使用" aria-hidden="true">#</a> 负载均衡器在哪里使用？</h2><p>Spring Cloud 中内部微服务调用默认是 http 请求，主要通过下面三种 API：</p><ul><li>RestTemplate：同步 http API</li><li>WebClient：异步响应式 http API</li><li>三方客户端封装，例如 openfeign</li></ul><p>如果项目中加入了 spring-cloud-loadbalancer 的依赖并且配置启用了，那么会自动在相关的 Bean 中加入负载均衡器的特性。</p><ul><li>对于 RestTemplate，会自动对所有 <code>@LoadBalanced</code> 注解修饰的 RestTemplate Bean 增加 Interceptor 从而加上了负载均衡器的特性。</li><li>对于 WebClient，会自动创建 <code>ReactorLoadBalancerExchangeFilterFunction</code>，我们可以通过加入<code>ReactorLoadBalancerExchangeFilterFunction</code>会加入负载均衡器的特性。</li><li>对于三方客户端，一般不需要我们额外配置什么</li></ul><h2 id="openfeign-负载均衡策略" tabindex="-1"><a class="header-anchor" href="#openfeign-负载均衡策略" aria-hidden="true">#</a> OpenFeign 负载均衡策略</h2><p>OpenFeign 默认的策略是轮询策略，如果我们想要使用随机策略，根据官方的例子</p><h3 id="编写配置类" tabindex="-1"><a class="header-anchor" href="#编写配置类" aria-hidden="true">#</a> 编写配置类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomLoadbalancerConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ReactorLoadBalancer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServiceInstance</span><span class="token punctuation">&gt;</span></span> <span class="token function">randomLoadBalancer</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">,</span>
                                                                                   <span class="token class-name">LoadBalancerClientFactory</span> loadBalancerClientFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">LoadBalancerClientFactory</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RandomLoadBalancer</span><span class="token punctuation">(</span>
                loadBalancerClientFactory<span class="token punctuation">.</span><span class="token function">getLazyProvider</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token class-name">ServiceInstanceListSupplier</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-loadbalancerclient" tabindex="-1"><a class="header-anchor" href="#使用-loadbalancerclient" aria-hidden="true">#</a> 使用 @LoadBalancerClient</h3><p>在启动类，使用 @LoadBalancerClient 或者 @LoadBalancerClients 注解，加载自己的配置类，由此切换 loadBalancer 默认的负载均衡策略</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token annotation punctuation">@EnableFeignClients</span>
<span class="token annotation punctuation">@LoadBalancerClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;product-server&quot;</span><span class="token punctuation">,</span> configuration <span class="token operator">=</span> <span class="token class-name">RandomLoadbalancerConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServer</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">OrderServer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后达到随机负载均衡的效果</p><h2 id="feignclient注解" tabindex="-1"><a class="header-anchor" href="#feignclient注解" aria-hidden="true">#</a> @FeignClient注解</h2><ul><li>name：执行FeignClient的名称，如果项目中使用Ribbon，name属性会作为微服务的名称，用作服务发现。</li><li>url：url一般用于调试，可以手动指定 @FeignClient 调用的地址</li><li>decode404：当发生404错误时，如果该字段为true，会调用decoder进行解码，否则抛出 FeignException。</li><li>configuration：Feigin配置类，可自定义Feign的Encode，Decode，LogLevel，Contract。</li><li>fallback：定义容错的类，当远程调用的接口失败或者超时的时候，会调用对应接口的容错罗杰，fallback执行的类必须实现@FeignClient标记的接口。在OpenFeign的依赖中可以发现，集成Hystrix。</li><li>fallbackFactory：工厂类，用于生成fallback类实例，通过此属性可以实现每个接口通用的容错逻辑，以达到减少重复的代码。</li><li>path：定义当前FeignClient的统一前缀</li></ul><h2 id="openfeign-开始gzip压缩" tabindex="-1"><a class="header-anchor" href="#openfeign-开始gzip压缩" aria-hidden="true">#</a> OpenFeign 开始GZIP压缩</h2><p>OpenFeign支持对请求和响应进行GZIP压缩，以此来提供通信效率。只需在配置文件中配置即可，比较简单</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token comment"># 压缩配置</span>
  <span class="token key atrule">compression</span><span class="token punctuation">:</span>
    <span class="token key atrule">request</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token comment"># 配置压缩支持的MIME TYPE</span>
      <span class="token key atrule">mime-types</span><span class="token punctuation">:</span> text/xml<span class="token punctuation">,</span>application/xml<span class="token punctuation">,</span>application/json
      <span class="token key atrule">min-request-size</span><span class="token punctuation">:</span> <span class="token number">2048</span>  <span class="token comment"># 配置压缩数据大小的下限</span>
    <span class="token key atrule">response</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 配置响应GZIP压缩</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="openfeign-超时配置" tabindex="-1"><a class="header-anchor" href="#openfeign-超时配置" aria-hidden="true">#</a> OpenFeign 超时配置</h2><p>如果使用 OpenFeign 调用接口时，该接口耗时比较长，那么 OpenFeign 会报错异常 <strong><code>Read timed out</code></strong></p><p>OpenFeign 默认超时是 10 秒，我们可以根据自己的业务场景适当得调一下超时时间</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># open-feign 超时配置</span>
<span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token key atrule">client</span><span class="token punctuation">:</span>
    <span class="token key atrule">config</span><span class="token punctuation">:</span>
      <span class="token key atrule">default</span><span class="token punctuation">:</span>
        <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span> <span class="token comment"># 连接超时配置</span>
        <span class="token key atrule">readTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span> <span class="token comment"># 读取超时配置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function B(I,R){const s=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[a("官方建议我们使用 "),n("a",r,[a("Spring Cloud LoadBalancer"),t(s)]),a(" 来代替 Ribbon")]),d,n("blockquote",null,[n("p",null,[a("我写了一篇文章专门记录 SpringCloud 相应的报错或者填坑 → "),n("a",k,[a("Spring Cloud 趟坑记录"),t(s)])])]),g,n("div",v,[m,n("p",null,[a("nacos 相关的一些操作这里不详细赘述，请看上一篇有关 nacos 的文章➡️ "),n("a",b,[a("SpringCloud Alibaba Nacos 教程"),t(s)])])]),h,n("p",null,[a("运行启动类之后，在浏览器或者 PostMan 之类的工具访问 "),n("a",f,[a("http://localhost:8091/get?pid=1"),t(s)])]),y,n("p",null,[n("a",C,[a("Client Side Load Balancing with Ribbon and Spring Cloud"),t(s)]),a(" 中提到"),_,a("，建议使用 "),n("a",x,[a("Spring Cloud LoadBalancer"),t(s)])]),F,n("p",null,[S,a(),n("a",q,[a("Client-Side Load-Balancing with Spring Cloud LoadBalancer"),t(s)])]),w])}const P=p(i,[["render",B],["__file","03.SpringCloud-OpenFeign.html.vue"]]);export{P as default};
