const t=JSON.parse('{"key":"v-2f09e41a","path":"/tool/git/04.git%20stash%E6%8F%90%E4%BA%A4%E5%BD%93%E5%89%8D%E4%BF%AE%E6%94%B9%E5%88%B0%E5%85%B6%E4%BB%96%E5%88%86%E6%94%AF.html","title":"git stash 提交当前修改到其他分支","lang":"zh-CN","frontmatter":{"title":"git stash 提交当前修改到其他分支","date":"2022-02-23T11:00:00.000Z","re":"2022-02-23-git-stash-note","description":"需要在 branch B 分支上修改代码， 发现不小心在 branch A 分支下进行了修改， 又不想在branch B上重新修改一遍代码，那么就可以用到 git stash(暂存) 命令了 命令相关的操作 指定stash ID （如：stash@{1} ）即可操作指定的数据 具体操作步骤 git stash 原理就是 把当前工作区恢复到上次提交的内容...","head":[["meta",{"property":"og:url","content":"https://blog.zenghr.cn/tool/git/2022-02-23-git-stash-note.html"}],["meta",{"property":"og:site_name","content":"Zenghr"}],["meta",{"property":"og:title","content":"git stash 提交当前修改到其他分支"}],["meta",{"property":"og:description","content":"需要在 branch B 分支上修改代码， 发现不小心在 branch A 分支下进行了修改， 又不想在branch B上重新修改一遍代码，那么就可以用到 git stash(暂存) 命令了 命令相关的操作 指定stash ID （如：stash@{1} ）即可操作指定的数据 具体操作步骤 git stash 原理就是 把当前工作区恢复到上次提交的内容..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Zenghr"}],["meta",{"property":"article:published_time","content":"2022-02-23T11:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git stash 提交当前修改到其他分支\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-23T11:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zenghr\\"}]}"]]},"headers":[{"level":2,"title":"命令相关的操作","slug":"命令相关的操作","link":"#命令相关的操作","children":[]},{"level":2,"title":"具体操作步骤","slug":"具体操作步骤","link":"#具体操作步骤","children":[]}],"git":{},"readingTime":{"minutes":0.84,"words":253},"filePathRelative":"tool/git/04.git stash提交当前修改到其他分支.md","localizedDate":"2022年2月23日","autoDesc":true}');export{t as data};
