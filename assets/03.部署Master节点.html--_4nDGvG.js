import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as e,d as i,i as a,b as h,w as k,r,o as p}from"./app-Dho6D0p5.js";const d={},c={class:"hint-container tip"};function g(o,s){const n=r("RouteLink");return p(),t("div",null,[s[8]||(s[8]=e(`<h1 id="部署-master-节点" tabindex="-1"><a class="header-anchor" href="#部署-master-节点"><span>部署 Master 节点</span></a></h1><p>kubernetes master 节点包含的组件：</p><ul><li><strong>kube-apiserver</strong></li><li><strong>kube-controller-manager</strong></li><li><strong>kube-scheduler</strong></li></ul><p><code>apiserver</code> 、<code>controller-manager</code> 和 <code>scheduler</code> 三者的功能紧密相关，一般运行在同一个机器上，我们可以把它们当做一个整体来看，所以保证了apiserver的高可用即是保证了三个模块的高可用。也可以同时启动多个controller-manager进程，但只有一个会被选举为leader提供服务。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>docker 安装方式请看<a href="/passages/2020-02-24-docker-install">ubuntu安装docker</a></p></div><h3 id="_1-从github下载二进制文件" tabindex="-1"><a class="header-anchor" href="#_1-从github下载二进制文件"><span>1. 从Github下载二进制文件</span></a></h3><p>下载地址：https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.18.md#v1183</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>注：打开链接你会发现里面有很多包，下载一个server包就够了，包含了Master和Worker Node二进制文件。</p></div><h3 id="_2-解压二进制包" tabindex="-1"><a class="header-anchor" href="#_2-解压二进制包"><span>2. 解压二进制包</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建工作目录</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /etc/kubernetes/server/{bin,cfg,logs}</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解压缩</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> zxvf</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kubernetes-server-linux-amd64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 移动 二进制文件</span></span>
<span class="line"><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kubernetes/server/bin</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-apiserver</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-scheduler</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-controller-manager</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /etc/kubernetes/server/bin</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /usr/local/bin/</span></span></code></pre></div><h3 id="_3-tls-证书文件" tabindex="-1"><a class="header-anchor" href="#_3-tls-证书文件"><span>3. TLS 证书文件</span></a></h3>`,11)),i("div",c,[s[7]||(s[7]=i("p",{class:"hint-container-title"},"提示",-1)),i("p",null,[s[1]||(s[1]=a("以下")),s[2]||(s[2]=i("code",null,"pem",-1)),s[3]||(s[3]=a("证书文件以及 ")),s[4]||(s[4]=i("code",null,"token.csv",-1)),s[5]||(s[5]=a("我们在 ")),h(n,{to:"/passages/2020-08-12-kubernetes-generate-tls.html"},{default:k(()=>s[0]||(s[0]=[a("创建 TLS 证书和秘钥")])),_:1}),s[6]||(s[6]=a(" 这一步中已经创建过了。"))])]),s[9]||(s[9]=e(`<h3 id="_4-创建-kubectl-kubeconfig-文件" tabindex="-1"><a class="header-anchor" href="#_4-创建-kubectl-kubeconfig-文件"><span>4. 创建 kubectl kubeconfig 文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定apiserver的地址和证书位置（ip自行修改）</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> set-cluster</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kubernetes</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">        --certificate-authority=/etc/kubernetes/ca/ca.pem</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">        --embed-certs=true</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">        --server=https://192.168.10.102:6443</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置客户端认证参数，指定admin证书和秘钥</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> set-credentials</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> admin</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">        --client-certificate=/etc/kubernetes/ca/admin/admin.pem</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">        --embed-certs=true</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">        --client-key=/etc/kubernetes/ca/admin/admin-key.pem</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关联用户和集群</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> set-context</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kubernetes</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">        --cluster=kubernetes</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> --user=admin</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置当前上下文</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> use-context</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kubernetes</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置结果就是一个配置文件，可以看看内容</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> ~/.kube/config</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一、部署-api-server-组件" tabindex="-1"><a class="header-anchor" href="#一、部署-api-server-组件"><span>一、部署 Api-server 组件</span></a></h2><h3 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1 简介</span></a></h3><p><code>kube-apiserver</code>是Kubernetes最重要的核心组件之一，主要提供以下的功能</p><ul><li>提供集群管理的REST API接口，包括认证授权（我们现在没有用到）数据校验以及集群状态变更等</li><li>提供其他模块之间的数据交互和通信的枢纽（其他模块通过API Server查询或修改数据，只有API Server才直接操作etcd）</li></ul><blockquote><p>生产环境为了保证apiserver的高可用一般会部署2+个节点，在上层做一个lb做负载均衡，比如haproxy。由于单节点和多节点在apiserver这一层说来没什么区别，所以我就部署一个节点就足够</p></blockquote><h3 id="_2-创建kube-apiserver的配置文件" tabindex="-1"><a class="header-anchor" href="#_2-创建kube-apiserver的配置文件"><span>2. 创建kube-apiserver的配置文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建 apiserver 文件</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /etc/kubernetes/server/cfg/kube-apiserver.conf</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 内容如下</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">KUBE_APISERVER_OPTS</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;--logtostderr=false </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--v=2 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--log-dir=/etc/kubernetes/server/logs </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--etcd-servers=https://192.168.10.102:2379 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--bind-address=192.168.10.102 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--secure-port=6443 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--advertise-address=192.168.10.102 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--allow-privileged=true </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--service-cluster-ip-range=10.0.0.0/24 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,NodeRestriction </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--authorization-mode=RBAC,Node </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--enable-bootstrap-token-auth=true </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--token-auth-file=/etc/kubernetes/ca/server/token.csv </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--service-node-port-range=30000-32767 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--kubelet-client-certificate=/etc/kubernetes/ca/server/server.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--kubelet-client-key=/etc/kubernetes/ca/server/server-key.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--tls-cert-file=/etc/kubernetes/ca/server/server.pem  </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--tls-private-key-file=/etc/kubernetes/ca/server/server-key.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--client-ca-file=/etc/kubernetes/ca/ca.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--service-account-key-file=/etc/kubernetes/ca/ca-key.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--etcd-cafile=/etc/kubernetes/ca/ca.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--etcd-certfile=/etc/kubernetes/ca/server/server.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--etcd-keyfile=/etc/kubernetes/ca/server/server-key.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--audit-log-maxage=30 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--audit-log-maxbackup=3 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--audit-log-maxsize=100 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--audit-log-path=/etc/kubernetes/server/logs/k8s-audit.log&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字段描述:</p><ul><li>--logtostderr：启用日志</li><li>---v：日志等级</li><li>--log-dir：日志目录</li><li>--etcd-servers：etcd集群地址</li><li>--bind-address：监听地址</li><li>--secure-port：https安全端口</li><li>--advertise-address：集群通告地址</li><li>--allow-privileged：启用授权</li><li>--service-cluster-ip-range：Service虚拟IP地址段</li><li>--enable-admission-plugins：准入控制模块</li><li>--authorization-mode：认证授权，启用RBAC授权和节点自管理</li><li>--enable-bootstrap-token-auth：启用TLS bootstrap机制</li><li>--token-auth-file：bootstrap token文件</li><li>--service-node-port-range：Service nodeport类型默认分配端口范围</li><li>--kubelet-client-xxx：apiserver访问kubelet客户端证书</li><li>--tls-xxx-file：apiserver https证书</li><li>--etcd-xxxfile：连接Etcd集群证书</li><li>--audit-log-xxx：审计日志</li></ul><h3 id="_3-tls-bootstrapping-机制" tabindex="-1"><a class="header-anchor" href="#_3-tls-bootstrapping-机制"><span>3. TLS Bootstrapping 机制</span></a></h3><blockquote><p>token-auth-file 需要的 token 文件请查看 [创建 TLS 证书和秘钥](/passages/2020-08-12-kubernetes-generate-tls.html#10.1 生成token认证文件)</p></blockquote><h3 id="_4-创建-kube-apiserver的service配置文件" tabindex="-1"><a class="header-anchor" href="#_4-创建-kube-apiserver的service配置文件"><span>4. 创建 kube-apiserver的service配置文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建 kube-apiserver.service 文件</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /lib/systemd/system/kube-apiserver.service</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kube-apiserver.service 内容如下</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Description</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">Kubernetes</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> API</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> Service</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Documentation</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">https://github.com/kubernetes/kubernetes</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">After</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">network.target</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">EnvironmentFile</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/server/cfg/kube-apiserver.conf</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">ExecStart</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/server/bin/kube-apiserver</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> $KUBE_APISERVER_OPTS</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Restart</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">on-failure</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Type</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">notify</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">RestartSec</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">5</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">LimitNOFILE</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">65536</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">WantedBy</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">multi-user.target</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-启动并设置开机启动" tabindex="-1"><a class="header-anchor" href="#_5-启动并设置开机启动"><span>5. 启动并设置开机启动</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-apiserver</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-apiserver</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看日志是否启动异常</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">journalctl</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-apiserver</span></span></code></pre></div><h3 id="_6-授权kubelet-bootstrap用户允许请求证书" tabindex="-1"><a class="header-anchor" href="#_6-授权kubelet-bootstrap用户允许请求证书"><span>6. 授权kubelet-bootstrap用户允许请求证书</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> clusterrolebinding</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kubelet-bootstrap</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">--clusterrole=system:node-bootstrapper </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">--user=kubelet-bootstrap </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">--group=kubelet-bootstrap</span></span></code></pre></div><h2 id="二、部署-kube-controller-manager-组件" tabindex="-1"><a class="header-anchor" href="#二、部署-kube-controller-manager-组件"><span>二、部署 kube-controller-manager 组件</span></a></h2><h3 id="_1-简介-1" tabindex="-1"><a class="header-anchor" href="#_1-简介-1"><span>1. 简介</span></a></h3><p><code>Controller Manager</code>由<code>kube-controller-manager</code>和<code>cloud-controller-manager</code>组成，是Kubernetes的大脑，它通过apiserver监控整个集群的状态，并确保集群处于预期的工作状态。 kube-controller-manager由一系列的控制器组成，像Replication Controller控制副本，Node Controller节点控制，Deployment Controller管理deployment等等 cloud-controller-manager在Kubernetes启用Cloud Provider的时候才需要，用来配合云服务提供商的控制</p><blockquote><p>controller-manager、scheduler和apiserver 三者的功能紧密相关，一般运行在同一个机器上，我们可以把它们当做一个整体来看，所以保证了apiserver的高可用即是保证了三个模块的高可用。也可以同时启动多个controller-manager进程，但只有一个会被选举为<code>leader</code>提供服务。</p></blockquote><h3 id="_2-创建kube-controller的配置文件" tabindex="-1"><a class="header-anchor" href="#_2-创建kube-controller的配置文件"><span>2. 创建kube-controller的配置文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建kube-controller-manager.conf配置文件</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /etc/kubernetes/server/cfg/kube-controller-manager.conf</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kube-controller-manager.conf 内容如下:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">KUBE_CONTROLLER_MANAGER_OPTS</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;--logtostderr=false </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--v=2 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--log-dir=/etc/kubernetes/server/logs </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--leader-elect=true </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--master=127.0.0.1:8080 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--bind-address=127.0.0.1 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--allocate-node-cidrs=true </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--cluster-cidr=10.244.0.0/16 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--service-cluster-ip-range=10.0.0.0/24 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--cluster-signing-cert-file=/etc/kubernetes/ca/ca.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--cluster-signing-key-file=/etc/kubernetes/ca/ca-key.pem  </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--root-ca-file=/etc/kubernetes/ca/ca.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--service-account-private-key-file=/etc/kubernetes/ca/ca-key.pem </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--experimental-cluster-signing-duration=87600h0m0s&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字段描述：</p><ul><li>--master：通过本地非安全本地端口8080连接apiserver。</li><li>--leader-elect：当该组件启动多个时，自动选举（HA）</li><li>--cluster-signing-cert-file/--cluster-signing-key-file：自动为kubelet颁发证书的CA，与apiserver保持一致</li></ul><h3 id="_3-创建-kube-controller的service配置文件" tabindex="-1"><a class="header-anchor" href="#_3-创建-kube-controller的service配置文件"><span>3. 创建 kube-controller的service配置文件</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建kube-controller-manager.service文件</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /lib/systemd/system/kube-controller-manager.service</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kube-controller-manager.service 内容如下:</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Description</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">Kubernetes</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> Controller</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> Manager</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Documentation</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">https://github.com/kubernetes/kubernetes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">EnvironmentFile</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/server/cfg/kube-controller-manager.conf</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">ExecStart</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/server/bin/kube-controller-manager</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> $KUBE_CONTROLLER_MANAGER_OPTS</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Restart</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">on-failure</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">RestartSec</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">5</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">WantedBy</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">multi-user.target</span></span></code></pre></div><h3 id="_4-启动并设置开机启动" tabindex="-1"><a class="header-anchor" href="#_4-启动并设置开机启动"><span>4. 启动并设置开机启动</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-controller-manager</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-controller-manager</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看日志是否启动异常</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">journalctl</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-controller-manager</span></span></code></pre></div><h2 id="三、部署-kube-scheduler-组件" tabindex="-1"><a class="header-anchor" href="#三、部署-kube-scheduler-组件"><span>三、部署 kube-scheduler 组件</span></a></h2><h3 id="_1-简介-2" tabindex="-1"><a class="header-anchor" href="#_1-简介-2"><span>1. 简介</span></a></h3><p><code>kube-scheduler</code> 负责分配调度Pod到集群内的节点上，它监听kube-apiserver，查询还未分配Node的Pod，然后根据调度策略为这些Pod分配节点。我们前面讲到的kubernetes的各种调度策略就是它实现的。</p><h3 id="_2-创建kube-scheduler的配置文件" tabindex="-1"><a class="header-anchor" href="#_2-创建kube-scheduler的配置文件"><span>2. 创建kube-scheduler的配置文件</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建kube-scheduler.conf配置文件</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /etc/kubernetes/server/cfg/kube-scheduler.conf</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kube-scheduler.conf 内容如下:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">KUBE_SCHEDULER_OPTS</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;--logtostderr=false </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--v=2 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--log-dir=/etc/kubernetes/server/logs </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--leader-elect </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--master=127.0.0.1:8080 </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">--bind-address=127.0.0.1&quot;</span></span></code></pre></div><p>字段描述：</p><ul><li>--master：通过本地非安全本地端口8080连接apiserver。</li><li>--leader-elect：当该组件启动多个时，自动选举（HA）</li></ul><h3 id="_3-创建-kube-controller的service配置文件-1" tabindex="-1"><a class="header-anchor" href="#_3-创建-kube-controller的service配置文件-1"><span>3. 创建 kube-controller的service配置文件</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建kube-scheduler.service文件</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /lib/systemd/system/kube-scheduler.service</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kube-scheduler.service 内容如下:</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Description</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">Kubernetes</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> Scheduler</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Documentation</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">https://github.com/kubernetes/kubernetes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">EnvironmentFile</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/server/cfg/kube-scheduler.conf</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">ExecStart</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/server/bin/kube-scheduler</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> $KUBE_SCHEDULER_OPTS</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Restart</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">on-failure</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">WantedBy</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">multi-user.target</span></span></code></pre></div><h3 id="_4-启动并设置开机启动-1" tabindex="-1"><a class="header-anchor" href="#_4-启动并设置开机启动-1"><span>4. 启动并设置开机启动</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-scheduler</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-scheduler</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看日志是否启动异常</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">journalctl</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-scheduler</span></span></code></pre></div><h2 id="四、查看集群状态" tabindex="-1"><a class="header-anchor" href="#四、查看集群状态"><span>四、查看集群状态</span></a></h2><p>所有组件都已经启动成功，通过kubectl工具查看当前集群组件状态：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> cs</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">NAME</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">                 STATUS</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    MESSAGE</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">             ERROR</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">scheduler</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">            Healthy</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   ok</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">                  </span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">controller-manager</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   Healthy</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   ok</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">                    </span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">etcd-0</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">               Healthy</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   {&quot;health&quot;:&quot;true&quot;}</span></span></code></pre></div><p>如上输出说明Master节点组件运行正常。</p>`,46))])}const y=l(d,[["render",g]]),u=JSON.parse('{"path":"/tool/kubernetes/03.%E9%83%A8%E7%BD%B2Master%E8%8A%82%E7%82%B9.html","title":"部署 Master 节点","lang":"zh-CN","frontmatter":{"title":"部署 Master 节点","date":"2020-08-12T19:50:50.000Z","re":"2020-08-12-kubernetes-deploy-master","category":["kubernetes"],"description":"部署 Master 节点 kubernetes master 节点包含的组件： kube-apiserver kube-controller-manager kube-scheduler apiserver 、controller-manager 和 scheduler 三者的功能紧密相关，一般运行在同一个机器上，我们可以把它们当做一个整体来看，所以保...","permalink":"/passages/2020-08-12-kubernetes-deploy-master.html","head":[["meta",{"property":"og:url","content":"https://blog.zenghr.cn/passages/2020-08-12-kubernetes-deploy-master.html"}],["meta",{"property":"og:site_name","content":"Zenghr"}],["meta",{"property":"og:title","content":"部署 Master 节点"}],["meta",{"property":"og:description","content":"部署 Master 节点 kubernetes master 节点包含的组件： kube-apiserver kube-controller-manager kube-scheduler apiserver 、controller-manager 和 scheduler 三者的功能紧密相关，一般运行在同一个机器上，我们可以把它们当做一个整体来看，所以保..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-07T20:50:33.000Z"}],["meta",{"property":"article:published_time","content":"2020-08-12T19:50:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-07T20:50:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署 Master 节点\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-12T19:50:50.000Z\\",\\"dateModified\\":\\"2025-04-07T20:50:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zenghr\\"}]}"]]},"git":{"createdTime":1744059033000,"updatedTime":1744059033000,"contributors":[{"name":"zenghr","username":"zenghr","email":"zenghr","commits":1,"url":"https://github.com/zenghr"}]},"readingTime":{"minutes":6.09,"words":1826},"filePathRelative":"tool/kubernetes/03.部署Master节点.md","localizedDate":"2020年8月12日","excerpt":"\\n<p>kubernetes master 节点包含的组件：</p>\\n<ul>\\n<li><strong>kube-apiserver</strong></li>\\n<li><strong>kube-controller-manager</strong></li>\\n<li><strong>kube-scheduler</strong></li>\\n</ul>\\n<p><code>apiserver</code> 、<code>controller-manager</code> 和 <code>scheduler</code> 三者的功能紧密相关，一般运行在同一个机器上，我们可以把它们当做一个整体来看，所以保证了apiserver的高可用即是保证了三个模块的高可用。也可以同时启动多个controller-manager进程，但只有一个会被选举为leader提供服务。</p>","autoDesc":true}');export{y as comp,u as data};
