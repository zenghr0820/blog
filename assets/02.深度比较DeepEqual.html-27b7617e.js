const e=JSON.parse('{"key":"v-d708c00a","path":"/golang/basic/02.%E6%B7%B1%E5%BA%A6%E6%AF%94%E8%BE%83DeepEqual.html","title":"深度比较-DeepEqual","lang":"zh-CN","frontmatter":{"title":"深度比较-DeepEqual","date":"2022-03-10T15:14:14.000Z","re":"2022-03-10-golang-reflect-deepEqual","category":["golang"],"description":"深度比较-DeepEqual 当我们复杂一个对象时，这个对象可以是内建数据类型，数组，结构体，map……我们在复制结构体的时候，当我们需要比较两个结构体中的数据是否相同时，我们需要使用深度比较，而不是只是简单地做浅度比较。这里需要使用到反射 reflect.DeepEqual() ，下面是几个示例","head":[["meta",{"property":"og:url","content":"https://blog.zenghr.cn/golang/basic/2022-03-10-golang-reflect-deepEqual.html"}],["meta",{"property":"og:site_name","content":"Zenghr"}],["meta",{"property":"og:title","content":"深度比较-DeepEqual"}],["meta",{"property":"og:description","content":"深度比较-DeepEqual 当我们复杂一个对象时，这个对象可以是内建数据类型，数组，结构体，map……我们在复制结构体的时候，当我们需要比较两个结构体中的数据是否相同时，我们需要使用深度比较，而不是只是简单地做浅度比较。这里需要使用到反射 reflect.DeepEqual() ，下面是几个示例"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Zenghr"}],["meta",{"property":"article:published_time","content":"2022-03-10T15:14:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深度比较-DeepEqual\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-10T15:14:14.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zenghr\\"}]}"]]},"headers":[{"level":2,"title":"深度比较-DeepEqual","slug":"深度比较-deepequal","link":"#深度比较-deepequal","children":[]}],"git":{},"readingTime":{"minutes":0.66,"words":197},"filePathRelative":"golang/basic/02.深度比较DeepEqual.md","localizedDate":"2022年3月10日","autoDesc":true,"excerpt":""}');export{e as data};
