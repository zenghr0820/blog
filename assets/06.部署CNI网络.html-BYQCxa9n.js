import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,a as t,b as i,d as n,w as l,r as p,o as r,i as e}from"./app-D4-DlK40.js";const d={},c={class:"table-of-contents"};function o(g,s){const a=p("router-link");return r(),k("div",null,[s[17]||(s[17]=t('<h1 id="部署cni网络" tabindex="-1"><a class="header-anchor" href="#部署cni网络"><span>部署CNI网络</span></a></h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1.简介</span></a></h2><blockquote><p>kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通</p></blockquote><p>通过给 Kubelet 传递 <code>--network-plugin=cni</code> 命令行选项来选择 CNI 插件。 Kubelet 从 <code>--cni-conf-dir</code> （默认是 <code>/etc/cni/net.d</code>） 读取文件并使用该文件中的 CNI 配置来设置每个 pod 的网络。 CNI 配置文件必须与 <a href="https://github.com/containernetworking/cni/blob/master/SPEC.md#network-configuration" target="_blank" rel="noopener noreferrer">CNI 规约</a>匹配，并且配置引用的任何所需的 CNI 插件都必须存在于 <code>--cni-bin-dir</code>（默认是 <code>/opt/cni/bin</code>）</p>',4)),i("nav",c,[i("ul",null,[i("li",null,[n(a,{to:"#_1-简介"},{default:l(()=>s[0]||(s[0]=[e("1.简介")])),_:1})]),i("li",null,[n(a,{to:"#_2-下载-cni"},{default:l(()=>s[1]||(s[1]=[e("2. 下载 CNI")])),_:1})]),i("li",null,[n(a,{to:"#_3-flannel-插件"},{default:l(()=>s[2]||(s[2]=[e("3. flannel 插件")])),_:1}),i("ul",null,[i("li",null,[n(a,{to:"#_3-1-flannel介绍"},{default:l(()=>s[3]||(s[3]=[e("3.1 Flannel介绍")])),_:1})]),i("li",null,[n(a,{to:"#_3-2-部署flannel"},{default:l(()=>s[4]||(s[4]=[e("3.2 部署flannel")])),_:1})])])]),i("li",null,[n(a,{to:"#_4-calico-插件"},{default:l(()=>s[5]||(s[5]=[e("4. Calico 插件")])),_:1}),i("ul",null,[i("li",null,[n(a,{to:"#_4-1-calco组件简介"},{default:l(()=>s[6]||(s[6]=[e("4.1 Calco组件简介")])),_:1})]),i("li",null,[n(a,{to:"#_4-2-calico-架构"},{default:l(()=>s[7]||(s[7]=[e("4.2 Calico 架构")])),_:1})]),i("li",null,[n(a,{to:"#_4-3-calico-部署步骤过程"},{default:l(()=>s[8]||(s[8]=[e("4.3 Calico 部署步骤过程")])),_:1})]),i("li",null,[n(a,{to:"#_4-4-部署-calico"},{default:l(()=>s[9]||(s[9]=[e("4.4 部署 calico")])),_:1})])])]),i("li",null,[n(a,{to:"#_5-通过系统服务-docker方式部署"},{default:l(()=>s[10]||(s[10]=[e("5. 通过系统服务+Docker方式部署")])),_:1}),i("ul",null,[i("li",null,[n(a,{to:"#_5-1-配置-service-文件"},{default:l(()=>s[11]||(s[11]=[e("5.1 配置 service 文件")])),_:1})]),i("li",null,[n(a,{to:"#_5-2-启动-kube-calico-服务"},{default:l(()=>s[12]||(s[12]=[e("5.2 启动 kube-calico 服务")])),_:1})]),i("li",null,[n(a,{to:"#_5-3-calico-客户端工具-calicoctl"},{default:l(()=>s[13]||(s[13]=[e("5.3 calico 客户端工具 calicoctl")])),_:1})]),i("li",null,[n(a,{to:"#_5-4-查看节点运行情况"},{default:l(()=>s[14]||(s[14]=[e("5.4 查看节点运行情况")])),_:1})]),i("li",null,[n(a,{to:"#_5-5-配置-ip-pool"},{default:l(()=>s[15]||(s[15]=[e("5.5 配置 IP Pool")])),_:1})])])]),i("li",null,[n(a,{to:"#_6-授权apiserver访问kubelet"},{default:l(()=>s[16]||(s[16]=[e("6. 授权Apiserver访问kubelet")])),_:1})])])]),s[18]||(s[18]=t(`<h2 id="_2-下载-cni" tabindex="-1"><a class="header-anchor" href="#_2-下载-cni"><span>2. 下载 CNI</span></a></h2><p>准备二进制文件</p><p>下载地址：<a href="https://github.com/containernetworking/plugins/releases" target="_blank" rel="noopener noreferrer">https://github.com/containernetworking/plugins/releases</a></p><p>解压二进制包并移动到默认工作目录：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /opt/cni/bin</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> zxvf</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> cni-plugins-linux-amd64-v0.8.6.tgz</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /opt/cni/bin</span></span></code></pre></div><h2 id="_3-flannel-插件" tabindex="-1"><a class="header-anchor" href="#_3-flannel-插件"><span>3. flannel 插件</span></a></h2><h3 id="_3-1-flannel介绍" tabindex="-1"><a class="header-anchor" href="#_3-1-flannel介绍"><span>3.1 Flannel介绍</span></a></h3><blockquote><p>以下内容转载自：<a href="https://www.cnblogs.com/itzgr/p/12558767.html#_label0" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/itzgr/p/12558767.html#_label0</a></p></blockquote><p>Kubernetes的网络模型假定了所有Pod都在一个可以直接连通的扁平网络空间中。若需要实现这个网络假设，需要实现不同节点上的Docker容器之间的互相访问，然后运行Kubernetes。目前已经有多个开源组件支持容器网络模型。如Flannel、Open vSwitch、直接路由和Calico。</p><p>Flannel之所以可以搭建Kubernetes依赖的底层网络，是因为它能实现以下两点。</p><ol><li>它能协助Kubernetes，给每一个Node上的Docker容器都分配互相不冲突的IP地址。</li><li>它能在这些IP地址之间建立一个覆盖网络（Overlay Network），通过这个覆盖网络，将数据包原封不动地传递到目标容器内。</li></ol><p><strong>Flannel 架构图：</strong></p><img src="https://media.zenghr.cn/blog/img/Flannel架构图.png" alt="Flannel架构图" style="zoom:75%;"><p>如上图所示，Flannel首先创建了一个名为 <code>flannel0</code> 的网桥，而且这个网桥的一端连接 <code>docker0</code> 网桥，另一端连接一个叫作flanneld的服务进程。</p><p>flanneld进程上连etcd，利用etcd来管理可分配的IP地址段资源，同时监控etcd中每个Pod的实际地址，并在内存中建立了一个Pod节点路由表；</p><p>​ flanneld进程下连docker0和物理网络，使用内存中的Pod节点路由表，将docker0发给它的数据包包装起来，利用物理网络的连接将数据包投递到目标flanneld上，从而完成Pod到Pod之间的直接地址通信。</p><p>​ Flannel之间的底层通信协议的可选技术包括UDP、VxLan、AWS VPC等多种方式。通过源flanneld封包、目标flanneld解包，最终docker0收到的就是原始的数据，对容器应用来说是透明的，感觉不到中间Flannel的存在。</p><p>​ Flannel每次分配的地址段都在同一个公共区域获取，从而实现不同Node上的Pod分配的IP不产生冲突。而且在Flannel分配好地址段后，其余操作由Docker完成的，Flannel通过修改Docker的启动参数将分配给它的地址段传递进去：</p><p>--bip=172.17.18.1/24</p><p>通过如上方式，Flannel就控制了每个Node上的docker0地址段的地址，从而保障了所有Pod的IP地址在同一个水平网络中且不产生冲突。</p><p>​ Flannel完美地实现了对Kubernetes网络的支持，但是它引入了多个网络组件，在网络通信时需要转到flannel0网络接口，再转到用户态的flanneld程序，到对端后还需要走这个过程的反过程，所以也会引入一些网络的时延损耗。</p><p>另外，Flannel模型默认采用了UDP作为底层传输协议，UDP本身是非可靠协议，虽然两端的TCP实现了可靠传输，但在大流量、高并发的应用场景下还建议多次测试。</p><h3 id="_3-2-部署flannel" tabindex="-1"><a class="header-anchor" href="#_3-2-部署flannel"><span>3.2 部署flannel</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># github 上的文件，可能会下载失败，可以本地下载上传至虚拟机</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 替换 docker 源</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;s#quay.io/coreos/flannel:.*-amd64#registry.cn-shanghai.aliyuncs.com/gcr-k8s/flannel:v0.12.0-amd64#g&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-flannel.yml</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改ip配置要与 kube-controller 配置中的 cluster-cidr=172.20.0.0/16 一样</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">net-conf.json:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">	&quot;Network&quot;</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;172.20.0.0/16&quot;,</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">	&quot;Backend&quot;</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">		&quot;Type&quot;</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;vxlan&quot;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> apply</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-flannel.yml</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> pods</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> --namespace</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-system</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> svc</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> --namespace</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-system</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>注：如果Node有多个网卡的话，参考 <a href="https://github.com/kubernetes/kubernetes/issues/39701" target="_blank" rel="noopener noreferrer">flannel issues39701</a>， 目前需要在kube-flannel.yml中使用--iface参数指定集群主机内网网卡的名称， 否则可能会出现dns无法解析。容器无法通信的情况，需要将kube-flannel.yml下载到本地， flanneld启动参数加上--iface=iface-name</p></div><h2 id="_4-calico-插件" tabindex="-1"><a class="header-anchor" href="#_4-calico-插件"><span>4. Calico 插件</span></a></h2><h3 id="_4-1-calco组件简介" tabindex="-1"><a class="header-anchor" href="#_4-1-calco组件简介"><span>4.1 Calco组件简介</span></a></h3><p>​ Calico是一个基于BGP的纯三层的网络方案，与OpenStack、Kubernetes、AWS、GCE等云平台都能够良好地集成。Calico在每个计算节点都利用Linux Kernel实现了一个高效的vRouter来负责数据转发。每个vRouter都通过BGP1协议把在本节点上运行的容器的路由信息向整个Calico网络广播，并自动设置到达其他节点的路由转发规则。</p><p>​ Calico保证所有容器之间的数据流量都是通过IP路由的方式完成互联互通的。Calico节点组网时可以直接利用数据中心的网络结构（L2或者L3），不需要额外的NAT、隧道或者Overlay Network，没有额外的封包解包，能够节约CPU运算，提高网络效率。</p><p><img src="https://media.zenghr.cn/blog/img/20200813/qUxtPP.png" alt="qUxtPP"></p><h3 id="_4-2-calico-架构" tabindex="-1"><a class="header-anchor" href="#_4-2-calico-架构"><span>4.2 Calico 架构</span></a></h3><p><img src="https://media.zenghr.cn/blog/img/20200813/0IZcpm.png" alt="0IZcpm"></p><p>Calico的主要组件：</p><ul><li>Felix：Calico Agent，运行在每个Node上，负责为容器设置网络资源（IP地址、路由规则、iptables规则等），保证跨主机容器网络互通。</li><li>etcd：Calico使用的后端存储。</li><li>BGP Client：负责把Felix在各Node上设置的路由信息通过BGP协议广播到Calico网络。</li><li>Route Reflector：通过一个或者多个BGP Route Reflector来完成大规模集群的分级路由分发。</li><li>CalicoCtl：Calico命令行管理工具。</li></ul><h3 id="_4-3-calico-部署步骤过程" tabindex="-1"><a class="header-anchor" href="#_4-3-calico-部署步骤过程"><span>4.3 Calico 部署步骤过程</span></a></h3><p>在Kubernetes中部署Calico的主要步骤如下：</p><ol><li>修改Kubernetes服务的启动参数，并重启服务。</li></ol><ul><li><ol><li>设置Master上kube-apiserver服务的启动参数：<code>--allow-privileged=true</code>（因为calico-node需要以特权模式运行在各Node上）。</li><li>设置各Node上kubelet服务的启动参数：<code>--networkplugin=cni</code>（使用CNI网络插件）。</li></ol></li></ul><ol><li>创建Calico服务，主要包括calico-node和calico policy controller。需要创建的资源对象如下：</li></ol><ul><li><ol><li>创建ConfigMap calico-config，包含Calico所需的配置参数。</li><li>创建Secret calico-etcd-secrets，用于使用TLS方式连接etcd。</li><li>在每个Node上都运行calico/node容器，部署为DaemonSet。</li><li>在每个Node上都安装Calico CNI二进制文件和网络配置参数（由install-cni容器完成）。</li><li>部署一个名为calico/kube-policy-controller的Deployment，以对接Kubernetes集群中为Pod设置的Network Policy。</li></ol></li></ul><h3 id="_4-4-部署-calico" tabindex="-1"><a class="header-anchor" href="#_4-4-部署-calico"><span>4.4 部署 calico</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下载 yaml 文件</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> https://docs.projectcalico.org/v3.14/getting-started/kubernetes/installation/hosted/calico.yaml</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改 - name: CALICO_IPV4POOL_CIDR value: 172.20.0.0/16</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;s?192.168.0.0/16?172.20.0.0/16?g&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> canal.yaml</span></span></code></pre></div><h4 id="_4-4-1-需要修改如下几处配置" tabindex="-1"><a class="header-anchor" href="#_4-4-1-需要修改如下几处配置"><span>4.4.1 需要修改如下几处配置：</span></a></h4><p><strong>ConfigMap 配置修改</strong></p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">ConfigMap</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">v1</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">calico-config</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  namespace</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">kube-system</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcd_endpoints</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;http://192.168.10.102:2379&quot;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcd_ca</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/calico-secrets/etcd-ca&quot;</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # &quot;/calico-secrets/etcd-ca&quot;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcd_cert</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;calico-secrets/etcd-cert&quot;</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # &quot;/calico-secrets/etcd-cert&quot;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcd_key</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;/calico-secrets/etcd-key&quot;</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # &quot;/calico-secrets/etcd-key&quot;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  typha_service_name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;none&quot;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  calico_backend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;bird&quot;</span></span></code></pre></div><p>对主要参数说明如下：</p><ul><li>etcd_endpoints：Calico使用etcd来保存网络拓扑和状态，该参数指定etcd服务的地址，可手动设置。</li><li>calico_backend：Calico的后端，默认为bird。</li><li>cni_network_config：符合CNI规范的网络配置。其中 <code>type=calico</code> 表示kubelet将从 <code>/opt/cni/bin</code> 目录下搜索名为calico的可执行文件，并调用它来完成容器网络的设置。ipam中的 <code>type=calico-ipam</code> 表示kubelet将在 <code>/opt/cni/bin</code> 目录下搜索名为calico-ipam的可执行文件，用于完成容器IP地址的分配。</li></ul><p><strong>修改 Pods 使用的 <code>IP 网段</code> , 配置文件默认使用 <code>192.168.0.0/16</code> 网段</strong></p><p><strong>Secret 配置修改</strong></p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">v1</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">Secret</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">Opaque</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">calico-etcd-secrets</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  namespace</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">kube-system</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Example command for encoding a file contents: cat &lt;file&gt; | base64 -w 0</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 如果配置了TLS ，则需要设置相应的证书和密钥文件路径</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcd-key</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">(cat /etc/kubernetes/ca/server/server-key.pem | base64 -w 0)</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 将输出结果填写在这</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcd-cert</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">(cat /etc/kubernetes/ca/server/server.pem | base64 -w 0)</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 将输出结果填写在这</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcd-ca</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">(cat /etc/kubernetes/ca/ca.pem | base64 -w 0)</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 将输出结果填写在这</span></span></code></pre></div><p><strong>DaemonSet 配置修改</strong> 添加网卡发现规则</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">containers</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">calico-node</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">calico/node:v3.14.2</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    env</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # .../</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # Auto-detect the BGP IP address.</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">IP</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">        value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;autodetect&quot;</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # Calico 模式设置</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">CALICO_IPV4POOL_IPIP</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">        value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Always&quot;</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 定义ipv4自动发现网卡规则 </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">IP_AUTODETECTION_METHOD</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">        value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;interface=enp.*&quot;</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # no effect. This should fall within \`--cluster-cidr\`.</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 需要修改此处，打开注释替换 pod ip</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">CALICO_IPV4POOL_CIDR</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">        value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;172.20.0.0/16&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在该Pod中包括如下两个容器：</p><ul><li>install-cni：在Node上安装CNI二进制文件到 <code>/opt/cni/bin</code> 目录下，并安装相应的网络配置文件到 <code>/etc/cni/net.d</code> 目录下，设置为initContainers并在运行完成后退出。</li><li>calico-node：Calico服务程序，用于设置Pod的网络资源，保证Pod的网络与各Node互联互通。它还需要以hostNetwork模式运行，直接使用宿主机网络。</li></ul><p>calico-node服务的主要参数如下。</p><ul><li>CALICO_IPV4POOL_CIDR：Calico IPAM的IP地址池，Pod的IP地址将从该池中进行分配。</li><li>CALICO_IPV4POOL_IPIP：是否启用IPIP模式。启用IPIP模式时，Calico将在Node上创建一个名为tunl0的虚拟隧道。</li><li><code>IP_AUTODETECTION_METHOD</code>：获取Node IP地址的方式，默认使用第1个网络接口的IP地址，对于安装了多块网卡的Node，可以使用正则表达式选择正确的网卡，例如&quot;interface=eth.*&quot;表示选择名称以<code>eth</code>开头的网卡的IP地址。</li><li>FELIX_IPV6SUPPORT：是否启用IPv6。</li><li>FELIX_LOGSEVERITYSCREEN：日志级别。</li><li>securityContext.privileged=true：以特权模式运行。</li></ul><p>另外，如果启用RBAC权限控制，则可以设置ServiceAccount。</p><p>IP Pool可以使用两种模式：BGP或IPIP。使用IPIP模式时，设置 <code>CALICO_IPV4POOL_IPIP=&quot;always&quot;</code> ，不使用IPIP模式时，设置<code>CALICO_IPV4POOL_IPIP=&quot;off&quot;</code> ，此时将使用BGP模式。</p><p><strong>calico-kube-controllers解析配置</strong></p><p>calico-kube-controllers容器，用于对接Kubernetes集群中为Pod设置的Network Policy</p><p>如果启用RBAC权限控制，则可以设置ServiceAccount。用户在Kubernetes集群中设置了Pod的Network Policy之后，calicokube-controllers就会自动通知各Node上的calico-node服务，在宿主机上设置相应的iptables规则，完成Pod间网络访问策略的设置。</p><h4 id="_4-4-2-修改完-yaml-文件-执行部署" tabindex="-1"><a class="header-anchor" href="#_4-4-2-修改完-yaml-文件-执行部署"><span>4.4.2 修改完 yaml 文件，执行部署</span></a></h4><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 部署</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> apply</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> calico.yaml</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看 calico pods</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  get</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> pods</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-system</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看 node 是否正常，现在 node 服务正常了</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">NAME</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">       			 STATUS</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   ROLES</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    AGE</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    VERSION</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">192.168.10.101</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   Ready</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">non</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">e&gt;   </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">4d4h</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   v1.18.6</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">192.168.10.102</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   Ready</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">non</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">e&gt;   </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">4d4h</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">   v1.18.6</span></span></code></pre></div><h2 id="_5-通过系统服务-docker方式部署" tabindex="-1"><a class="header-anchor" href="#_5-通过系统服务-docker方式部署"><span>5. 通过系统服务+Docker方式部署</span></a></h2><h3 id="_5-1-配置-service-文件" tabindex="-1"><a class="header-anchor" href="#_5-1-配置-service-文件"><span>5.1 配置 service 文件</span></a></h3><p><strong>vim /lib/systemd/system/kube-calico.service</strong></p><blockquote><p>注意修改 IP 以及证书位置</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Description</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">calico</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> node</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">After</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">docker.service</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Requires</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">docker.service</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">User</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">root</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">PermissionsStartOnly</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">true</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">ExecStart</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/usr/bin/docker</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> run</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> --net=host</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> --privileged</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> --name=calico-node</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> ETCD_ENDPOINTS=https://192.168.10.102:2379</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> ETCD_CA_CERT_FILE=/etc/kubernetes/ca/ca.pem</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> ETCD_CERT_FILE=/etc/kubernetes/ca/calico/calico.pem</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> ETCD_KEY_FILE=/etc/kubernetes/ca/calico/calico-key.pem</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> CALICO_LIBNETWORK_ENABLED=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> CALICO_NETWORKING_BACKEND=bird</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> CALICO_DISABLE_FILE_LOGGING=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> CALICO_IPV4POOL_CIDR=172.20.0.0/16</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> CALICO_IPV4POOL_IPIP=off</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> FELIX_DEFAULTENDPOINTTOHOSTACTION=ACCEPT</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> FELIX_IPV6SUPPORT=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> FELIX_LOGSEVERITYSCREEN=info</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> FELIX_IPINIPMTU=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1440</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> FELIX_HEALTHENABLED=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> IP=</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">192.168.10.101</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /etc/kubernetes/ca:/etc/kubernetes/ca</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /var/run/calico:/var/run/calico</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /lib/modules:/lib/modules</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /run/docker/plugins:/run/docker/plugins</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /var/run/docker.sock:/var/run/docker.sock</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /var/log/calico:/var/log/calico</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  calico/node:v3.14.2</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">ExecStop</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/usr/bin/docker</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;"> rm</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> calico-node</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">Restart</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">always</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">RestartSec</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">10</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">WantedBy</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">multi-user.target</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-启动-kube-calico-服务" tabindex="-1"><a class="header-anchor" href="#_5-2-启动-kube-calico-服务"><span>5.2 启动 kube-calico 服务</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> daemon-reload</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 修改配置重启的时候用</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-calico.service</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">service</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-calico</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> start</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看日志</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">journalctl</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> kube-calico</span></span></code></pre></div><h3 id="_5-3-calico-客户端工具-calicoctl" tabindex="-1"><a class="header-anchor" href="#_5-3-calico-客户端工具-calicoctl"><span>5.3 calico 客户端工具 calicoctl</span></a></h3><p><strong>下载 calicoctl 二进制文件, 下载地址：<a href="https://github.com/projectcalico/calicoctl/releases" target="_blank" rel="noopener noreferrer">https://github.com/projectcalico/calicoctl/releases</a></strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 755</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> calicoctl</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> calicoctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> /usr/local/bin/</span></span></code></pre></div><h3 id="_5-4-查看节点运行情况" tabindex="-1"><a class="header-anchor" href="#_5-4-查看节点运行情况"><span>5.4 查看节点运行情况</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">calicoctl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> node</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> status</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">Calico</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> process</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> running.</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">IPv4</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> BGP</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> status</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">+---------------+-------------------+-------+----------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">PEER</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> ADDRESS</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  |     </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">PEER</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> TYPE</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">STATE</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> |  </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">SINCE</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">   |    </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">INFO</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">     |</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">+---------------+-------------------+-------+----------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">192.168.10.101</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">node-to-node</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> mesh</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">up</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">13:13:13</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">Established</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">+---------------+-------------------+-------+----------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">IPv6</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> BGP</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> status</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">No</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> IPv6</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> peers</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> found.</span></span></code></pre></div><p><strong>查看端口BGP 协议是通过TCP 连接来建立邻居的，因此可以用netstat 命令验证 BGP Peer</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -natp</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> ESTABLISHED</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 179</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">tcp</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">      0</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> 192.168.10.102:60959</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">     192.168.10.103:179</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">       ESTABLISHED</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> 29680/bird</span></span></code></pre></div><h3 id="_5-5-配置-ip-pool" tabindex="-1"><a class="header-anchor" href="#_5-5-配置-ip-pool"><span>5.5 配置 IP Pool</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>注：请看官方配置文件：<a href="https://docs.projectcalico.org/getting-started/clis/calicoctl/configure/overview" target="_blank" rel="noopener noreferrer">https://docs.projectcalico.org/getting-started/clis/calicoctl/configure/overview</a></p></div><p>默认情况下，<code>calicoctl</code>将在上查找配置文件<code>/etc/calico/calicoctl.cfg</code>。您可以将该<code>--config</code>选项与需要数据存储访问的命令一起使用，以覆盖此选项。该文件可以是YAML或JSON格式。它必须有效并且可由读取<code>calicoctl</code>。以下是一个YAML示例：</p><p><strong>vim /etc/calico/calicoctl.cfg</strong></p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">projectcalico.org/v3</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">CalicoAPIConfig</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">spec</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcdEndpoints</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">https://192.168.10.102:2379</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcdKeyFile</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/ca/calico/calico-key.pem</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcdCertFile</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/ca/calico/calico.pem</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  etcdCACertFile</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/ca/ca.pem</span></span></code></pre></div><p><strong>查看集群ippool情况</strong></p><p><strong>calicoctl get ipPool -o yaml</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出内容如下</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">projectcalico.org/v3</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  kind</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">IPPool</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  metadata</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    creationTimestamp</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;2020-08-14T10:38:44Z&quot;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">default-ipv4-ippool</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    resourceVersion</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;13109&quot;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    uid</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">3e3b1506-e9a8-4d02-96f7-2ceb63ade2ea</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  spec</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    blockSize</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">26</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    cidr</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">172.20.0.0/16</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    ipipMode</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">Never</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    natOutgoing</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    nodeSelector</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">all()</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">    vxlanMode</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">Never</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">IPPoolList</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  resourceVersion</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;57796&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-授权apiserver访问kubelet" tabindex="-1"><a class="header-anchor" href="#_6-授权apiserver访问kubelet"><span>6. 授权Apiserver访问kubelet</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">/etc/kubernetes/server/cfg/apiserver-to-kubelet-rbac.yaml</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">apiVersion: rbac.authorization.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">kind: ClusterRole</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  annotations:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    rbac.authorization.kubernetes.io/autoupdate: &quot;true&quot;</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  labels:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    kubernetes.io/bootstrapping: rbac-defaults</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  name: system:kube-apiserver-to-kubelet</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">rules:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  - apiGroups:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">      - &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    resources:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">      - nodes/proxy</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">      - nodes/stats</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">      - nodes/log</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">      - nodes/spec</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">      - nodes/metrics</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">      - pods/log</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    verbs:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">      - &quot;*&quot;</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">---</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">apiVersion: rbac.authorization.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">kind: ClusterRoleBinding</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  name: system:kube-apiserver</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  namespace: &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">roleRef:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  apiGroup: rbac.authorization.k8s.io</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  kind: ClusterRole</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  name: system:kube-apiserver-to-kubelet</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">subjects:</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  - apiGroup: rbac.authorization.k8s.io</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    kind: User</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    name: kubernetes</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#  启动</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> apply</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> apiserver-to-kubelet-rbac.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,87))])}const B=h(d,[["render",o]]),u=JSON.parse('{"path":"/tool/kubernetes/06.%E9%83%A8%E7%BD%B2CNI%E7%BD%91%E7%BB%9C.html","title":"部署CNI网络","lang":"zh-CN","frontmatter":{"title":"部署CNI网络","date":"2020-08-13T07:12:12.000Z","re":"2020-08-13-kubernetes-deploy-cni","category":["kubernetes"],"description":"部署CNI网络 1.简介 kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通 通过给 Kubelet 传递 --network-plugin=cni 命令行选项来选择 CNI 插件。 Kubelet 从 --cni-conf-dir （默认是 /etc/cni/net.d） 读取文件并使用该文件中的 CNI ...","permalink":"/passages/2020-08-13-kubernetes-deploy-cni.html","head":[["meta",{"property":"og:url","content":"https://blog.zenghr.cn/passages/2020-08-13-kubernetes-deploy-cni.html"}],["meta",{"property":"og:site_name","content":"Zenghr"}],["meta",{"property":"og:title","content":"部署CNI网络"}],["meta",{"property":"og:description","content":"部署CNI网络 1.简介 kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通 通过给 Kubelet 传递 --network-plugin=cni 命令行选项来选择 CNI 插件。 Kubelet 从 --cni-conf-dir （默认是 /etc/cni/net.d） 读取文件并使用该文件中的 CNI ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://media.zenghr.cn/blog/img/20200813/qUxtPP.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-07T16:48:18.000Z"}],["meta",{"property":"article:published_time","content":"2020-08-13T07:12:12.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-07T16:48:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署CNI网络\\",\\"image\\":[\\"https://media.zenghr.cn/blog/img/20200813/qUxtPP.png\\",\\"https://media.zenghr.cn/blog/img/20200813/0IZcpm.png\\"],\\"datePublished\\":\\"2020-08-13T07:12:12.000Z\\",\\"dateModified\\":\\"2025-04-07T16:48:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zenghr\\"}]}"]]},"git":{"createdTime":1744044498000,"updatedTime":1744044498000,"contributors":[{"name":"zenghr","username":"zenghr","email":"zenghr","commits":1,"url":"https://github.com/zenghr"}]},"readingTime":{"minutes":10.64,"words":3191},"filePathRelative":"tool/kubernetes/06.部署CNI网络.md","localizedDate":"2020年8月13日","excerpt":"\\n<h2>1.简介</h2>\\n<blockquote>\\n<p>kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通</p>\\n</blockquote>\\n<p>通过给 Kubelet 传递 <code>--network-plugin=cni</code> 命令行选项来选择 CNI 插件。 Kubelet 从 <code>--cni-conf-dir</code> （默认是 <code>/etc/cni/net.d</code>） 读取文件并使用该文件中的 CNI 配置来设置每个 pod 的网络。 CNI 配置文件必须与 <a href=\\"https://github.com/containernetworking/cni/blob/master/SPEC.md#network-configuration\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">CNI 规约</a>匹配，并且配置引用的任何所需的 CNI 插件都必须存在于 <code>--cni-bin-dir</code>（默认是 <code>/opt/cni/bin</code>）</p>","autoDesc":true}');export{B as comp,u as data};
