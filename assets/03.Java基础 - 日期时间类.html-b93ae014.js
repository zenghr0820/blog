import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-e1f53b71.js";const p={},e=t(`<h1 id="java-日期时间类" tabindex="-1"><a class="header-anchor" href="#java-日期时间类" aria-hidden="true">#</a> Java 日期时间类</h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>本文记录学习 Java 日期时间的相关类，运行环境：<em>jdk 1.8.0_212</em></p></div><h2 id="时间戳-timestamp-概念" tabindex="-1"><a class="header-anchor" href="#时间戳-timestamp-概念" aria-hidden="true">#</a> 时间戳(timestamp)概念</h2><p>具体时间（特定的瞬间）距离历元(1970年01月01日 00:00:00:000) 经过的毫秒数，用long类型存储，计算机是使用时间戳存储表示时间</p><h2 id="date-类" tabindex="-1"><a class="header-anchor" href="#date-类" aria-hidden="true">#</a> Date 类</h2><p><strong>Date 类</strong> 位于 <em>Java.util</em> 包中，直接继承于 <strong>Object</strong>，但是从 <em><strong>JDK 1.1 开始</strong></em> Date类中关于 日期时间操作、格式化和解析字符串时间的 相应方法已经废除，我们应该使用 <strong>Calendar</strong> 类来实现日期和时间的转换操作等，使用 <strong>DateFormat</strong> 类来格式化和解析字符串</p><h3 id="常用方法" tabindex="-1"><a class="header-anchor" href="#常用方法" aria-hidden="true">#</a> 常用方法</h3><ul><li><strong>Date()：</strong> 构造方法</li><li><strong>getTime()：</strong> 获取时间戳</li><li><strong>after()：</strong> 测试此日期是否在指定日期之后</li><li><strong>before()：</strong> 测试此日期是否在指定日期之前</li></ul><h2 id="simpledateformat-类" tabindex="-1"><a class="header-anchor" href="#simpledateformat-类" aria-hidden="true">#</a> SimpleDateFormat 类</h2><p><strong>SimpleDateFormat 类</strong> 就是用于解析和格式化时间的类，所以该类主要包含这两个功能的方法：</p><ul><li><strong>格式化(format)：</strong> Date类型的数据 根据相应的模板 格式化成 String 字符串</li><li><strong>解析(parse)：</strong> String 类型的时间转 根据相应的模板 解析成 Date类型</li></ul><p>无论是格式化还是解析都需要设置日期时间的格式：</p><figure><img src="https://media.zenghr.cn/blog/img/20210419/yvUcGNvtRT1b.png?imageslim" alt="mark" tabindex="0" loading="lazy"><figcaption>mark</figcaption></figure><p>例子👇</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd					如 <span class="token number">2020</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">12</span>
<span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss 					如 <span class="token number">20</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">12</span>
yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss 		如 <span class="token number">2020</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">12</span> <span class="token number">20</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">12</span>
yyyy<span class="token operator">/</span><span class="token constant">MM</span><span class="token operator">/</span>dd <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss 		如 <span class="token number">2020</span><span class="token operator">/</span><span class="token number">12</span><span class="token operator">/</span><span class="token number">12</span> <span class="token number">20</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">12</span>
yyyy年<span class="token constant">MM</span>月dd日 <span class="token constant">HH</span>时mm分ss秒 	如 <span class="token number">2020</span>年<span class="token number">12</span>月<span class="token number">12</span>日 <span class="token number">20</span>时<span class="token number">12</span>分<span class="token number">12</span>秒
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码如下👇</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleDateForMatExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ParseException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 定义 Date 时间</span>
        <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// date to String</span>
        <span class="token class-name">SimpleDateFormat</span> df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> dateStr <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 输出：2021-04-19 17:17:56</span>

        <span class="token comment">// String to date</span>
        <span class="token comment">// 注：解析 parse 会抛出异常，需要捕获或者抛出</span>
        <span class="token class-name">Date</span> date1 <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 输出：Mon Apr 19 17:17:56 CST 2021</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="calendar-类" tabindex="-1"><a class="header-anchor" href="#calendar-类" aria-hidden="true">#</a> Calendar 类</h2><p><strong>Calendar 类</strong> 也叫日历类，其内部封装了一个 long time 表示时间戳，其内部提供了方法通过对 <strong>time</strong> 计算出<br> 年月日时分秒...等日历字段，这些字段都被存储到一个数组中，通过get(字段)可以去数组中提取对于字<br> 段的值</p><p><strong>Calendar</strong> 还提供了用来对日期做相加减，重新设置日期时间功能。<br><strong>Calendar</strong> 本身是一个抽象类，通过 <strong>getInstance</strong> 方法获取对象，其底层创建的是<strong>Calendar</strong>的子类对<br> 象。</p><h3 id="常用方法-1" tabindex="-1"><a class="header-anchor" href="#常用方法-1" aria-hidden="true">#</a> 常用方法</h3><ul><li><strong>Calendar.getInstance()：</strong> 用于快速构建一个 Calends 对象</li><li><strong>get()：</strong> 方法 获取 年月日 时分秒等</li><li><strong>set()：</strong> 方法 修改 年月日 时分秒等</li><li><strong>setTime()：</strong> 方法 将日历设置成想要的时间</li><li><strong>add()：</strong> 方法 对日期进行 增减操作</li><li><strong>getTime()：</strong> 返回 Date 实例对象</li></ul><p>代码案例👇</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 通过 getInstance 方法，快速创建对象</span>
<span class="token class-name">Calendar</span> cal <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 年月日</span>
cal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MONTH</span><span class="token punctuation">)</span>
cal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">DATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 时分秒</span>
cal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">HOUR</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12 小时制</span>
cal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">HOUR_OF_DAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 24 小时制</span>
cal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MINUTE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">SECOND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 增减时间</span>
cal<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 使用 Calendar 设置时间</span>
cal<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>targetDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置时间</span>
cal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">HOUR_OF_DAY</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MINUTE</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">SECOND</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 返回 Date 对象</span>
<span class="token class-name">Date</span> date <span class="token operator">=</span> cal<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","03.Java基础 - 日期时间类.html.vue"]]);export{k as default};
