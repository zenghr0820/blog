import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c,d as n,e as s,b as i,w as l,a}from"./app-84ddd078.js";const u={},k=a(`<h1 id="activiti7-进阶" tabindex="-1"><a class="header-anchor" href="#activiti7-进阶" aria-hidden="true">#</a> Activiti7 进阶</h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>涉及 流程定义相关、流程实例相关、任务分配、流程变量、任务候选人、网关等操作</p></div><h2 id="流程定义相关" tabindex="-1"><a class="header-anchor" href="#流程定义相关" aria-hidden="true">#</a> 流程定义相关</h2><blockquote><p>涉及流程定义信息查询、删除以及对应的资源查询下载等操作</p></blockquote><h3 id="查询流程定义" tabindex="-1"><a class="header-anchor" href="#查询流程定义" aria-hidden="true">#</a> 查询流程定义</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDefinitionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取仓库服务</span>
    <span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取流程定义集合</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessDefinition</span><span class="token punctuation">&gt;</span></span> processDefinitionList <span class="token operator">=</span> repositoryService
            <span class="token punctuation">.</span><span class="token function">createProcessDefinitionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;leaveProcess&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//遍历集合</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ProcessDefinition</span> definition<span class="token operator">:</span>processDefinitionList<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义ID:&quot;</span><span class="token operator">+</span>definition<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义名称:&quot;</span><span class="token operator">+</span>definition<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义key:&quot;</span><span class="token operator">+</span>definition<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义版本:&quot;</span><span class="token operator">+</span>definition<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程部署ID:&quot;</span><span class="token operator">+</span>definition<span class="token punctuation">.</span><span class="token function">getDeploymentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除流程定义" tabindex="-1"><a class="header-anchor" href="#删除流程定义" aria-hidden="true">#</a> 删除流程定义</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDeleteDeploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//流程部署Id</span>
    <span class="token class-name">String</span> deploymentId <span class="token operator">=</span> <span class="token string">&quot;10001&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取仓库服务</span>
    <span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//删除流程定义，如果该流程定义已有流程实例启动则删除时出错</span>
    repositoryService<span class="token punctuation">.</span><span class="token function">deleteDeployment</span><span class="token punctuation">(</span>deploymentId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置true 级联删除流程定义，即使该流程有流程实例启动也可以删除，设置为false非级别删除方式，如果流程</span>
    <span class="token comment">//repositoryService.deleteDeployment(deploymentId,true);</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><ol><li><p>如果该流程定义下没有正在运行的流程，则可以用普通删除</p></li><li><p>如果该流程定义下存在已经运行的流程，使用普通删除报错，可用级联删除方法将流程及相关记录全部删除。</p></li><li><p>项目开发中级联删除操作一般只开放给超级管理员使用.</p></li></ol><h3 id="流程资源下载" tabindex="-1"><a class="header-anchor" href="#流程资源下载" aria-hidden="true">#</a> 流程资源下载</h3><blockquote><p>我们的流程资源文件已经上传到数据库了，如果其他用户想要查看这些资源文件，可以从数据库中把资源文件下载到本地</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDownloadResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取仓库服务</span>
    <span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取流程定义集合</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessDefinition</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> repositoryService
            <span class="token punctuation">.</span><span class="token function">createProcessDefinitionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;leaveProcess&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orderByProcessDefinitionVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//按照版本排序</span>
            <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//降序</span>
            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取最新那个</span>
    <span class="token class-name">ProcessDefinition</span> definition <span class="token operator">=</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取部署ID</span>
    <span class="token class-name">String</span> deploymentId <span class="token operator">=</span> definition<span class="token punctuation">.</span><span class="token function">getDeploymentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取bpmn的输入流</span>
    <span class="token class-name">InputStream</span> bpmnInput <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>
                                        deploymentId<span class="token punctuation">,</span>
                                        definition<span class="token punctuation">.</span><span class="token function">getResourceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取png的输入流</span>
    <span class="token class-name">InputStream</span> pngInput <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>
                                        deploymentId<span class="token punctuation">,</span>
                                        definition<span class="token punctuation">.</span><span class="token function">getDiagramResourceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置bpmn输入</span>
    <span class="token class-name">FileOutputStream</span> bpmnOutPut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;D:/leave.bpmn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置png输入</span>
    <span class="token class-name">FileOutputStream</span> pngOutPut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;D:/leave.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>bpmnInput<span class="token punctuation">,</span>bpmnOutPut<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>pngInput<span class="token punctuation">,</span>pngOutPut<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="流程实例相关" tabindex="-1"><a class="header-anchor" href="#流程实例相关" aria-hidden="true">#</a> 流程实例相关</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>流程发起之后，目前设定的部门审批人都是李四，李四在审批之前需要看到申请人申请的时间和申请的理由，才能决定是否同意</p><p>那么申请人的请假信息【请假时间、请假理由】是如何绑定到流程中的呢?</p><p>此时就需要使用到<code>BusinessKey</code></p></div><h3 id="业务标识-businesskey" tabindex="-1"><a class="header-anchor" href="#业务标识-businesskey" aria-hidden="true">#</a> 业务标识（BusinessKey）</h3><ul><li>启动流程实例时，指定的 <strong>businessKey</strong> 就会在 <strong>act_run_execution</strong> 表中存储 businessKey。</li><li><strong>BusinessKey</strong>：业务标识，通常为业务表的主键，业务标识和流程实例一一对应。业务标识来源于业务系统。存储业务标识就是根据业务标识来关联查询业务系统的数据。</li><li>比如：请假流程启动一个流程实例，就可以将请假单的id作为业务标识存储到Activiti中，将来查询Activiti的流程实例信息就可以获取请假单的id从而关联查询业务系统数据库得到请假单信息，如下图所示👇</li></ul><img src="https://media.zenghr.cn/blog/img/20210722/hTmP6C.png" alt="hTmP6C"><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testStartProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">String</span> businessKey <span class="token operator">=</span> <span class="token string">&quot;8001&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取RuntimeService对象</span>
    <span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置对应的参数</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置部门审核人</span>
    variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;deptLeader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//根据流程定义的key启动流程实例,这个key是在定义bpmn的时候设置的</span>
    <span class="token comment">//在启动流程的时候将业务key加入进去</span>
    <span class="token class-name">ProcessInstance</span> instance <span class="token operator">=</span> runtimeService
            <span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;leaveProcess&quot;</span><span class="token punctuation">,</span> businessKey<span class="token punctuation">,</span> variables<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取流程实例的相关信息</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义的id = &quot;</span> <span class="token operator">+</span> instance<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例的id = &quot;</span> <span class="token operator">+</span> instance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>获取<code>BusinessKey</code>并关联对应的业务信息</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//获取任务集合</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> taskList <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;leaveProcess&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//遍历任务列表</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Task</span> task<span class="token operator">:</span>taskList<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义id = &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例id = &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务id = &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务名称 = &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//根据任务上的流程实例Id查询出对应的流程实例对象，从流程实例对象中获取BusinessKey</span>
  <span class="token class-name">ProcessInstance</span> instance <span class="token operator">=</span> runtimeService
    <span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;业务key:&quot;</span><span class="token operator">+</span>instance<span class="token punctuation">.</span><span class="token function">getBusinessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;===================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流程挂起、激活" tabindex="-1"><a class="header-anchor" href="#流程挂起、激活" aria-hidden="true">#</a> 流程挂起、激活</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSuspendAllProcessInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取RepositoryService</span>
    <span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取流程定义对象</span>
    <span class="token class-name">ProcessDefinition</span> processDefinition <span class="token operator">=</span> repositoryService
            <span class="token punctuation">.</span><span class="token function">createProcessDefinitionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;leaveProcess&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> suspended <span class="token operator">=</span> processDefinition<span class="token punctuation">.</span><span class="token function">isSuspended</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//输出流程定义状态</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义状态:&quot;</span><span class="token operator">+</span><span class="token punctuation">(</span>suspended <span class="token operator">?</span><span class="token string">&quot;已挂起&quot;</span><span class="token operator">:</span><span class="token string">&quot;已激活&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> processDefinitionId <span class="token operator">=</span> processDefinition<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>suspended<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//如果是挂起，可以执行激活操作 ,参数1 ：流程定义id ，参数2：是否激活流程实例，参数3：激活时间</span>
        repositoryService<span class="token punctuation">.</span><span class="token function">activateProcessDefinitionById</span><span class="token punctuation">(</span>processDefinitionId<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程ID:&quot;</span><span class="token operator">+</span>processDefinitionId<span class="token operator">+</span><span class="token string">&quot;,已激活&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token comment">//如果是激活，可以执行挂起操作 ,参数1 ：流程定义id ，参数2：是否暂停流程实例，参数3：激活时间</span>
        repositoryService<span class="token punctuation">.</span><span class="token function">suspendProcessDefinitionById</span><span class="token punctuation">(</span>processDefinitionId<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程ID:&quot;</span><span class="token operator">+</span>processDefinitionId<span class="token operator">+</span><span class="token string">&quot;,已挂起&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>操作流程定义为挂起状态，该操作定义下面的所有的流程实例将全部暂停</li><li>流程定义为挂起状态，该流程定义下将不允许启动新的流程实例，同时该流程定义下的所有流程实例将全部挂起暂停执行</li></ul><p><strong>流程实例挂起、激活</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSuspendSingleProcessInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//流程实例Id</span>
    <span class="token class-name">String</span> processInstanceId <span class="token operator">=</span> <span class="token string">&quot;2501&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取RepositoryService</span>
    <span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//根据流程实例Id获取流程实例对象</span>
    <span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService
            <span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//状态</span>
    <span class="token keyword">boolean</span> suspended <span class="token operator">=</span> processInstance<span class="token punctuation">.</span><span class="token function">isSuspended</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID:&quot;</span><span class="token operator">+</span>processInstanceId<span class="token operator">+</span><span class="token string">&quot;,状态:&quot;</span><span class="token operator">+</span> <span class="token punctuation">(</span>suspended<span class="token operator">?</span><span class="token string">&quot;已挂起&quot;</span><span class="token operator">:</span><span class="token string">&quot;已激活&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>suspended<span class="token punctuation">)</span><span class="token punctuation">{</span>
        runtimeService<span class="token punctuation">.</span><span class="token function">activateProcessInstanceById</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID:&quot;</span><span class="token operator">+</span>processInstanceId<span class="token operator">+</span><span class="token string">&quot;,状态修改为已激活&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        runtimeService<span class="token punctuation">.</span><span class="token function">suspendProcessInstanceById</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID:&quot;</span><span class="token operator">+</span>processInstanceId<span class="token operator">+</span><span class="token string">&quot;,状态修改为已挂起&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="任务分配负责人" tabindex="-1"><a class="header-anchor" href="#任务分配负责人" aria-hidden="true">#</a> 任务分配负责人</h2><h3 id="固定分配" tabindex="-1"><a class="header-anchor" href="#固定分配" aria-hidden="true">#</a> 固定分配</h3><p>在进行业务流程建模的时候指定固定的任务负责人</p><figure><img src="https://media.zenghr.cn/blog/img/20210722/ASn38W.png" alt="ASn38W" tabindex="0" loading="lazy"><figcaption>ASn38W</figcaption></figure><h3 id="uel-表达式分配" tabindex="-1"><a class="header-anchor" href="#uel-表达式分配" aria-hidden="true">#</a> UEL 表达式分配</h3><p>Activiti 使用 UEL 表达式， UEL 是 java EE6 规范的一部分， UEL（Unified Expression Language）即 统一表达式语言</p><figure><img src="https://media.zenghr.cn/blog/img/20210722/posPxS.png" alt="posPxS" tabindex="0" loading="lazy"><figcaption>posPxS</figcaption></figure><h3 id="监听器分配-使用麻烦-极少使用" tabindex="-1"><a class="header-anchor" href="#监听器分配-使用麻烦-极少使用" aria-hidden="true">#</a> 监听器分配(使用麻烦,极少使用)</h3><ul><li>任务监听器是发生对应的任务相关事件时执行自定义的Java逻辑或表达式</li><li>任务相关事件包括： <ul><li><strong>Event：</strong><ul><li>Create：任务创建后触发。</li><li>Assignment：任务分配后触发。</li><li>Delete：任务完成后触发。</li><li>All：所有事件发生都触发。</li></ul></li></ul></li></ul><p><strong>1. 自定义一个任务监听器类，然后此类必须实现org.activiti.engine.delegate.TaskListener接口</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTaskListener</span> <span class="token keyword">implements</span> <span class="token class-name">TaskListener</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notify</span><span class="token punctuation">(</span><span class="token class-name">DelegateTask</span> delegateTask<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//这里指定任务负责人</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>delegateTask<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;部门经理审批&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      delegateTask<span class="token punctuation">.</span><span class="token function">setAssignee</span><span class="token punctuation">(</span><span class="token string">&quot;赵六&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegateTask<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;部门经理审批&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      delegateTask<span class="token punctuation">.</span><span class="token function">setAssignee</span><span class="token punctuation">(</span><span class="token string">&quot;孙七&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 在bpmn文件中配置监听器</strong></p><figure><img src="https://media.zenghr.cn/blog/img/20210722/upZLYx.png" alt="upZLYx" tabindex="0" loading="lazy"><figcaption>upZLYx</figcaption></figure><h2 id="流程变量" tabindex="-1"><a class="header-anchor" href="#流程变量" aria-hidden="true">#</a> 流程变量</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>流程变量在Activiti中是一个非常重要的角色，流程运转有时需要靠流程变量，业务系统和Activiti结合时少不了流程变量，流程变量就是Activiti在管理工作流时根据管理需要而设置的变量</p><p>比如在请假流程流转时如果 <strong>请假天数&gt;3</strong> 天则有总经理审批，否则由人事直接审批，请假天数就可以设置流程变量，在流程流转时使用</p></div><h3 id="流程变量类型" tabindex="-1"><a class="header-anchor" href="#流程变量类型" aria-hidden="true">#</a> 流程变量类型</h3><figure><img src="https://media.zenghr.cn/blog/img/20210722/JdYxvc.png" alt="JdYxvc" tabindex="0" loading="lazy"><figcaption>JdYxvc</figcaption></figure><blockquote><p>注意：如果将POJO存储到流程变量中，必须实现序列化接口Serializable，为了防止由于新增字段无法反序列化</p></blockquote><h3 id="流程变量的作用域" tabindex="-1"><a class="header-anchor" href="#流程变量的作用域" aria-hidden="true">#</a> 流程变量的作用域</h3><p>流程变量的作用域范围可以是一个流程实例（ProcessInstance）、一个任务（Task）或一个执行实例（Execution）</p><ul><li><strong>global变量</strong> : 流程变量的作用域范围的默认值是流程实例，作用域范围最大。</li><li><strong>local变量</strong> : 流程变量的作用域范围如果仅仅针对一个任务或一个执行实例，那么作用域范围没有流程实例大</li></ul><blockquote><p>实际开发中一般不用local变量，了解即可</p></blockquote><h3 id="流程变量的使用方法" tabindex="-1"><a class="header-anchor" href="#流程变量的使用方法" aria-hidden="true">#</a> 流程变量的使用方法</h3><ul><li><p><strong>在属性上使用UEL表达式</strong></p><p>可以在 assignee 处设置 UEL 表达式，表达式的值为任务的负责人，比如： <code>\${assignee}， assignee</code> 就是一个流程变量名称。</p><p>Activiti获取 UEL表达式 的值，即流程变量 assignee 的值 ，将 assignee 的值作为任务的负责人进行任务分配</p></li><li><p><strong>在连线上使用UEL表达式</strong></p><p>可以在连线上设置UEL表达式，决定流程走向。</p><p>比如：<code>\${price&lt;10000}</code> price就是一个流程变量名称，uel表达式结果类型为布尔类型。</p><p>如果UEL表达式是true，要决定 流程执行走向</p></li></ul><h3 id="使用global变量控制流程" tabindex="-1"><a class="header-anchor" href="#使用global变量控制流程" aria-hidden="true">#</a> 使用global变量控制流程</h3><p>在连线处添加判断条件</p><figure><img src="https://media.zenghr.cn/blog/img/20210722/eI0vjg.png" alt="eI0vjg" tabindex="0" loading="lazy"><figcaption>eI0vjg</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testStartProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取RuntimeService对象</span>
    <span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;day&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//根据流程定义的key启动流程实例,这个key是在定义bpmn的时候设置的</span>
    <span class="token class-name">ProcessInstance</span> instance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;leaveVariablesProcess&quot;</span><span class="token punctuation">,</span>variables<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取流程实例的相关信息</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义的id = &quot;</span> <span class="token operator">+</span> instance<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例的id = &quot;</span> <span class="token operator">+</span> instance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行task-设置流程变量" tabindex="-1"><a class="header-anchor" href="#执行task-设置流程变量" aria-hidden="true">#</a> 执行task 设置流程变量</h3><p><strong><code>taskService.setVariable(taskId,variableName,variableValue)</code></strong></p><ul><li><strong>taskId</strong> - 任务 ID</li><li><strong>variableName</strong> - 变量名称</li><li><strong>variableValue</strong> - 变量实际的值</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>1.如果UEL表达式中流程变量名不存在则报错。<br> 2.如果如果UEL表达式都不符合条件,流程报错。<br> 3.如果连接不设置条件/条件都满足,每个连线都会走</p></div><h2 id="任务候选人" tabindex="-1"><a class="header-anchor" href="#任务候选人" aria-hidden="true">#</a> 任务候选人</h2><p>在流程定义中在任务结点的 assignee 固定设置任务负责人，在流程定义时将参与者固定设置在.bpmn 文件中，如果临时任务负责人变更则需要修改流程定义，系统可扩展性差。</p><p>针对这种情况可以给任务设置多个候选人，可以从候选人中选择参与者来完成任务</p><h3 id="设置任务候选人" tabindex="-1"><a class="header-anchor" href="#设置任务候选人" aria-hidden="true">#</a> 设置任务候选人</h3><p>在流程图中任务节点的配置中设置 candidate-users(候选人)，多个候选人之间用逗号分开</p><figure><img src="https://media.zenghr.cn/blog/img/20210722/YywESD.png" alt="YywESD" tabindex="0" loading="lazy"><figcaption>YywESD</figcaption></figure><p><strong>使用 Api 设置候选人</strong></p><p><strong><code>taskService.addCandidateUser(taskId,candidateUser)</code></strong></p><ul><li><strong>taskId：</strong> 任务 Id</li><li><strong>candidateUser:</strong> 候选人</li></ul><h3 id="查询候选人任务" tabindex="-1"><a class="header-anchor" href="#查询候选人任务" aria-hidden="true">#</a> 查询候选人任务</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//查询候选任务</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectCandidateTaskList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//任务负责人</span>
    <span class="token class-name">String</span> candidateUser <span class="token operator">=</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取TaskService</span>
    <span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取任务集合</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> taskList <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;leaveCandidateProcess&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">taskCandidateUser</span><span class="token punctuation">(</span>candidateUser<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//遍历任务列表</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Task</span> task<span class="token operator">:</span>taskList<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义id = &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例id = &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务id = &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务名称 = &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,69),r={class:"hint-container warning"},d=n("p",{class:"hint-container-title"},"注意",-1),v=a(`<h3 id="领取、完成候选人任务" tabindex="-1"><a class="header-anchor" href="#领取、完成候选人任务" aria-hidden="true">#</a> 领取、完成候选人任务</h3><blockquote><p>如果候选任务没有进行领取就直接完成的话，那么在历史记录中就不会记录是哪个用户执行了这个任务</p><p>所以对于这种候选人的任务，我们需要先领取再完成</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testClaimTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//任务ID</span>
    <span class="token class-name">String</span> taskId <span class="token operator">=</span> <span class="token string">&quot;2505&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//创建ProcessEngine对象</span>
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取TaskService</span>
    <span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//领取任务</span>
    taskService<span class="token punctuation">.</span><span class="token function">claim</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span>assignee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 完成任务</span>
  	taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网关相关" tabindex="-1"><a class="header-anchor" href="#网关相关" aria-hidden="true">#</a> 网关相关</h2><h3 id="排他网关" tabindex="-1"><a class="header-anchor" href="#排他网关" aria-hidden="true">#</a> 排他网关</h3><p>排他网关(ExclusiveGateway)（异或网关或基于数据的排他网关），用来在流程中实现决策。当流程执行到这个网关的时候，所有分支都会判断条件是否为true，如果为true则执行该分支</p><figure><img src="https://media.zenghr.cn/blog/img/20210722/fdgdQz.png" alt="fdgdQz" tabindex="0" loading="lazy"><figcaption>fdgdQz</figcaption></figure><h3 id="并行网关" tabindex="-1"><a class="header-anchor" href="#并行网关" aria-hidden="true">#</a> 并行网关</h3><p>并行网关(InclusiveGateway)允许将流程分成多条分支，也可以把多条分支汇聚到一起，并行网关的功能是基于进入和外出的顺序流的</p><blockquote><p>并行网关不会解析条件。即使顺序流中定义了条件，也会被忽略</p></blockquote><figure><img src="https://media.zenghr.cn/blog/img/20210722/J4KD0z.png" alt="J4KD0z" tabindex="0" loading="lazy"><figcaption>J4KD0z</figcaption></figure><h3 id="包含网关" tabindex="-1"><a class="header-anchor" href="#包含网关" aria-hidden="true">#</a> 包含网关</h3><p>包含网关可以看做是排他网关和并行网关的结合体</p><figure><img src="https://media.zenghr.cn/blog/img/20210722/bVI3wP.png" alt="bVI3wP" tabindex="0" loading="lazy"><figcaption>bVI3wP</figcaption></figure>`,14);function m(g,b){const t=e("RouterLink");return o(),c("div",null,[k,n("div",r,[d,n("p",null,[s("注意：在 SpringBoot 集成 Activiti7 中，使用该 Api 查询候选人时会抛出异常，异常详细以及解决方案请看 "),i(t,{to:"/passages/2021-07-22-activiti7-error-note.html"},{default:l(()=>[s("Activiti7 填坑笔记")]),_:1})])]),v])}const y=p(u,[["render",m],["__file","02.Activiti7-进阶笔记.html.vue"]]);export{y as default};
