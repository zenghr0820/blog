import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-e9a8a6b3.js";const p={},o=t(`<h1 id="elasticsearch-复杂查询" tabindex="-1"><a class="header-anchor" href="#elasticsearch-复杂查询" aria-hidden="true">#</a> Elasticsearch 复杂查询</h1><p>前面，我们已经学习了 Elasticsearch 的基本 API 的操作，也在 SpringBoot 中集成了 Elasticsearch，使用 Repository 接口实现简单的 Crud 操作</p><p>因为 <em>旧版本的 Repository 中的 search</em> 方法被废弃了，所以我们要实现 <strong>复杂查询</strong> 只能使用 <em>ElasticsearchRestTemplate</em></p><h2 id="查询条件对象" tabindex="-1"><a class="header-anchor" href="#查询条件对象" aria-hidden="true">#</a> 查询条件对象</h2><table><thead><tr><th>对象</th><th>描述</th></tr></thead><tbody><tr><td><strong>NativeSearchQueryBuilder</strong></td><td>Spring提供的一个查询条件构建器，帮助构建json格式的请求体</td></tr><tr><td><strong>QueryBuilders</strong></td><td>提供了大量的静态方法，用于生成各种不同类型的查询对象，例如：词条、模糊、通配符等QueryBuilder对象</td></tr><tr><td><strong>BoolQueryBuilder</strong></td><td>多条件查询对象，对应 Elasticsearch 中的 <strong>bool</strong></td></tr><tr><td><strong>MatchQueryBuilder</strong></td><td>构建分词查询条件对象，对应 Elasticsearch 中的 <strong>match</strong></td></tr><tr><td><strong>PageRequest</strong></td><td>用于构建分页请求</td></tr><tr><td><strong>IndexCoordinate</strong></td><td>索引对象，通常在查询使用</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="数据准备" tabindex="-1"><a class="header-anchor" href="#数据准备" aria-hidden="true">#</a> 数据准备</h2><p>首先我们先准备接下来查询的 mapping 结构以及基本数据</p><p><strong>mapping 结构</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;_doc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;_class&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span><span class="token punctuation">,</span>
          <span class="token string">&quot;index&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token string">&quot;doc_values&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;brand&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span><span class="token punctuation">,</span>
          <span class="token string">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;intro&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token string">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token string">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;price&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;integer&quot;</span><span class="token punctuation">,</span>
          <span class="token string">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;title&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token string">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token string">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量导入数据</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;Apple iPhone XR (A2108) 128GB 白色 移动联通电信4G手机 双卡双待&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">5299</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;【iPhoneXR限时特惠！】6.1英寸视网膜显示屏，A12仿生芯片，面容识别，无线充电，支持双卡！选【换修无忧版】获 AppleCare 原厂服务，享只换不修！更有快速换机、保值换新、轻松月付！&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;Apple&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;Apple 2019款 Macbook Pro 13.3【带触控栏】八代i7 18G 256G RP645显卡 深空灰 苹果笔记本电脑 轻薄本 MUHN2CH/A&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">15299</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;【八月精选】Pro2019年新品上市送三重好礼，现在购买领满8000减400元优惠神劵，劵后更优惠！&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;Apple&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;Apple iPad Air 3 2019年新款平板电脑 10.5英寸（64G WLAN版/A12芯片/Retina显示屏/MUUL2CH/A）金色&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">3788</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;8月尊享好礼！买iPad即送蓝牙耳机！领券立减！多款产品支持手写笔！【新一代iPad，总有一款适合你】选【换修无忧版】获 AppleCare 原厂服务，享只换不修！更有快速换机、保值换新、轻松月付！&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;Apple&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为HUAWEI MateBook X Pro 2019款 英特尔酷睿i5 13.9英寸全面屏轻薄笔记本电脑(i5 8G 512G 3K 触控) 灰&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">7999</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;3K全面屏开启无界视野;轻薄设计灵动有型，HuaweiShare一碰传&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为 HUAWEI Mate20 X (5G) 7nm工艺5G旗舰芯片全面屏超大广角徕卡三摄8GB+256GB翡冷翠5G双模全网通手机&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">6199</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;【5G双模，支持SA/NSA网络，7.2英寸全景巨屏，石墨烯液冷散热】5G先驱，极速体验。&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为平板 M6 10.8英寸麒麟980影音娱乐平板电脑4GB+64GB WiFi（香槟金）&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">2299</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;【华为暑期购】8月2日-4日，M5青春版指定爆款型号优惠100元，AI语音控制&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;荣耀20 PRO DXOMARK全球第二高分 4800万四摄 双光学防抖 麒麟980 全网通4G 8GB+128GB 蓝水翡翠 拍照手机&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">3199</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;白条6期免息！麒麟980，4800万全焦段AI四摄！荣耀20系列2699起，4800万超广角AI四摄！&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;荣耀&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;荣耀MagicBook Pro 16.1英寸全面屏轻薄性能笔记本电脑（酷睿i7 8G 512G MX250 IPS FHD 指纹解锁）冰河银&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">6199</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;16.1英寸无界全面屏金属轻薄本，100%sRGB色域，全高清IPS防眩光护眼屏，14小时长续航，指纹一健开机登录，魔法一碰传高速传输。&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;荣耀&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;荣耀平板5 麒麟8核芯片 GT游戏加速 4G+128G 10.1英寸全高清屏影音平板电脑 WiFi版 冰川蓝&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">1549</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;【爆款平板推荐】哈曼卡顿专业调音，10.1英寸全高清大屏，双喇叭立体环绕音，配置多重护眼，值得拥有！&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;荣耀&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米9 4800万超广角三摄 6GB+128GB全息幻彩蓝 骁龙855 全网通4G 双卡双待 水滴全面屏拍照智能游戏手机&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">2799</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;限时优惠200，成交价2799！索尼4800万广角微距三摄，屏下指纹解锁！&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米(MI)Pro 2019款 15.6英寸金属轻薄笔记本(第八代英特尔酷睿i7-8550U 16G 512GSSD MX250 2G独显) 深空灰&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">6899</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;【PCIE固态硬盘、72%NTSC高色域全高清屏】B面康宁玻璃覆盖、16G双通道大内存、第八代酷睿I7处理器、专业级调校MX150&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;create&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;联想(Lenovo)拯救者Y7000P 2019英特尔酷睿i7 15.6英寸游戏笔记本电脑(i7 9750H 16G 1T SSD GTX1660Ti 144Hz)&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">9299</span><span class="token punctuation">,</span><span class="token property">&quot;intro&quot;</span><span class="token operator">:</span><span class="token string">&quot;超大1T固态，升级双通道16G内存一步到位，GTX1660Ti电竞级独显，英特尔9代i7H高性能处理器，144Hz电竞屏窄边框！&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;brand&quot;</span><span class="token operator">:</span><span class="token string">&quot;联想&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写 domain 以及 Repository 接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Document</span><span class="token punctuation">(</span>indexName <span class="token operator">=</span> <span class="token string">&quot;product&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Long</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>analyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> searchAnalyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Text</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Integer</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> price<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>analyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> searchAnalyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Text</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> intro<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Keyword</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> brand<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Repository 接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Repository</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductRepository</span> <span class="token keyword">extends</span> <span class="token class-name">ElasticsearchRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本分词查询" tabindex="-1"><a class="header-anchor" href="#基本分词查询" aria-hidden="true">#</a> 基本分词查询</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 构建查询条件</span>
    <span class="token class-name">NativeSearchQueryBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativeSearchQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 添加基本的分词查询</span>
    <span class="token class-name">MatchQueryBuilder</span> matchQueryBuilder <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 生成查询对象 Query</span>
    <span class="token class-name">NativeSearchQuery</span> queryBuilder <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">withQuery</span><span class="token punctuation">(</span>matchQueryBuilder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 发起请求</span>
    <span class="token class-name">SearchHits</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> hits <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>queryBuilder<span class="token punctuation">,</span> <span class="token class-name">Product</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    hits<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询结果如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SearchHit</span><span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token char">&#39;10&#39;</span><span class="token punctuation">,</span> score<span class="token operator">=</span><span class="token number">1.6231201</span><span class="token punctuation">,</span> sortValues<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> content<span class="token operator">=</span><span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> title<span class="token operator">=</span>小米<span class="token number">9</span> <span class="token number">4800</span>万超广角三摄 <span class="token number">6</span><span class="token constant">GB</span><span class="token operator">+</span><span class="token number">128</span><span class="token constant">GB</span>全息幻彩蓝 骁龙<span class="token number">855</span> 全网通<span class="token number">4</span>G 双卡双待 水滴全面屏拍照智能游戏手机<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">2799</span><span class="token punctuation">,</span> intro<span class="token operator">=</span>限时优惠<span class="token number">200</span>，成交价<span class="token number">2799</span>！索尼<span class="token number">4800</span>万广角微距三摄，屏下指纹解锁！<span class="token punctuation">,</span> brand<span class="token operator">=</span>小米<span class="token punctuation">)</span><span class="token punctuation">,</span> highlightFields<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token class-name">SearchHit</span><span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token char">&#39;11&#39;</span><span class="token punctuation">,</span> score<span class="token operator">=</span><span class="token number">1.485091</span><span class="token punctuation">,</span> sortValues<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> content<span class="token operator">=</span><span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">,</span> title<span class="token operator">=</span>小米<span class="token punctuation">(</span><span class="token constant">MI</span><span class="token punctuation">)</span><span class="token class-name">Pro</span> <span class="token number">2019</span>款 <span class="token number">15.6</span>英寸金属轻薄笔记本<span class="token punctuation">(</span>第八代英特尔酷睿i7<span class="token operator">-</span><span class="token number">8550</span>U <span class="token number">16</span>G <span class="token number">512</span><span class="token constant">GSSD</span> <span class="token constant">MX250</span> <span class="token number">2</span>G独显<span class="token punctuation">)</span> 深空灰<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">6899</span><span class="token punctuation">,</span> intro<span class="token operator">=</span>【<span class="token constant">PCIE</span>固态硬盘、<span class="token number">72</span><span class="token operator">%</span><span class="token constant">NTSC</span>高色域全高清屏】<span class="token class-name">B</span>面康宁玻璃覆盖、<span class="token number">16</span>G双通道大内存、第八代酷睿<span class="token constant">I7</span>处理器、专业级调校<span class="token constant">MX150</span><span class="token punctuation">,</span> brand<span class="token operator">=</span>小米<span class="token punctuation">)</span><span class="token punctuation">,</span> highlightFields<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>NativeSearchQueryBuilder</code> ：Spring提供的一个查询条件构建器，帮助构建json格式的请求体</p><p><code>NativeSearchQuery</code> ：NativeSearchQueryBuilder 构建具体的查询对象，实现 <strong>Query</strong> 接口，search方法中的 query 参数</p><p><strong>QueryBuilders</strong> ：用于生成各种不同类型的查询对象</p><h2 id="分页查询" tabindex="-1"><a class="header-anchor" href="#分页查询" aria-hidden="true">#</a> 分页查询</h2><p>利用<code>NativeSearchQueryBuilder</code>可以方便的实现分页:</p><p><em>需求 - 查询商品中带 华为 关键字的所有商品，每页显示 2 条，根据价格排序</em></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testNativeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 构建查询条件</span>
    <span class="token class-name">NativeSearchQueryBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativeSearchQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 添加基本的分词查询</span>
    builder<span class="token punctuation">.</span><span class="token function">withQuery</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;华为&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 初始化分页参数</span>
    <span class="token keyword">int</span> page <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置分页参数</span>
    <span class="token class-name">PageRequest</span> pageable <span class="token operator">=</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token class-name">Sort<span class="token punctuation">.</span>Direction</span><span class="token punctuation">.</span><span class="token constant">DESC</span><span class="token punctuation">,</span> <span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">withPageable</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 执行搜索，获取结果</span>
    <span class="token class-name">SearchHits</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> products <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Product</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">IndexCoordinates</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;product&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> products<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">SearchHit</span><span class="token operator">::</span><span class="token function">getContent</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 构建分页</span>
    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> productPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> pageable<span class="token punctuation">,</span> products<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 打印总条数</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>productPage<span class="token punctuation">.</span><span class="token function">getTotalElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 打印总页数</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>productPage<span class="token punctuation">.</span><span class="token function">getTotalPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 每页大小</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>productPage<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 当前页</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>productPage<span class="token punctuation">.</span><span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    productPage<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询结果如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">3</span>
<span class="token number">2</span>
<span class="token number">2</span>
<span class="token number">0</span>
<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> title<span class="token operator">=</span>华为<span class="token constant">HUAWEI</span> <span class="token class-name">MateBook</span> <span class="token class-name">X</span> <span class="token class-name">Pro</span> <span class="token number">2019</span>款 英特尔酷睿i5 <span class="token number">13.9</span>英寸全面屏轻薄笔记本电脑<span class="token punctuation">(</span>i5 <span class="token number">8</span>G <span class="token number">512</span>G <span class="token number">3</span>K 触控<span class="token punctuation">)</span> 灰<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">7999</span><span class="token punctuation">,</span> intro<span class="token operator">=</span><span class="token number">3</span>K全面屏开启无界视野<span class="token punctuation">;</span>轻薄设计灵动有型，<span class="token class-name">HuaweiShare</span>一碰传<span class="token punctuation">,</span> brand<span class="token operator">=</span>华为<span class="token punctuation">)</span>
<span class="token class-name">Product</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> title<span class="token operator">=</span>华为 <span class="token constant">HUAWEI</span> <span class="token class-name">Mate20</span> <span class="token class-name">X</span> <span class="token punctuation">(</span><span class="token number">5</span>G<span class="token punctuation">)</span> <span class="token number">7</span>nm工艺<span class="token number">5</span>G旗舰芯片全面屏超大广角徕卡三摄<span class="token number">8</span><span class="token constant">GB</span><span class="token operator">+</span><span class="token number">256</span><span class="token constant">GB</span>翡冷翠<span class="token number">5</span>G双模全网通手机<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">6199</span><span class="token punctuation">,</span> intro<span class="token operator">=</span>【<span class="token number">5</span>G双模，支持<span class="token constant">SA</span><span class="token operator">/</span><span class="token constant">NSA</span>网络，<span class="token number">7.2</span>英寸全景巨屏，石墨烯液冷散热】<span class="token number">5</span>G先驱，极速体验。<span class="token punctuation">,</span> brand<span class="token operator">=</span>华为<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以发现，<strong>Elasticsearch中的分页是从第0页开始</strong></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>IndexCoordinates.of</strong> - 可以看到使用 search 方法中有个 IndexCoordinates 参数，这个参数是指定 查询的所有名称</p><p><strong>PageRequest</strong> - 是用于构建分页请求，可以设置 分页参数、排序字段</p></div><h2 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h2><p>排序也可以通过<code>NativeSearchQueryBuilder</code>完成：</p><p><em>需求 - 根据价格排序</em></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 构建查询条件</span>
    <span class="token class-name">NativeSearchQueryBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativeSearchQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 添加基本的分词查询</span>
    builder<span class="token punctuation">.</span><span class="token function">withQuery</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;华为&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 排序</span>
    builder<span class="token punctuation">.</span><span class="token function">withSort</span><span class="token punctuation">(</span><span class="token class-name">SortBuilders</span><span class="token punctuation">.</span><span class="token function">fieldSort</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token class-name">SortOrder</span><span class="token punctuation">.</span><span class="token constant">DESC</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">SearchHits</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> products <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Product</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">IndexCoordinates</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;product&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    products<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SortBuilders</strong> - 构建排序请求</p><h2 id="聚合" tabindex="-1"><a class="header-anchor" href="#聚合" aria-hidden="true">#</a> 聚合</h2><p><em>需求 - 我们按照品牌brand进行分组：</em></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAgg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">NativeSearchQueryBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativeSearchQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 1、添加一个新的聚合，聚合类型为terms，聚合名称为brands，聚合字段为brand</span>
    builder<span class="token punctuation">.</span><span class="token function">addAggregation</span><span class="token punctuation">(</span>
        <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;brands&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;brand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 2、查询</span>
    <span class="token class-name">SearchHits</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> products <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Product</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 3、解析</span>
    <span class="token class-name">Aggregations</span> aggregations <span class="token operator">=</span> products<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Terms</span> terms <span class="token operator">=</span> aggregations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;brands&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3.2、获取桶</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>terms<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 3.3、遍历</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Terms<span class="token punctuation">.</span>Bucket</span> bk <span class="token operator">:</span> terms<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 3.4、获取桶中的key，即品牌名称</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bk<span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.5、获取桶中的文档数量</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bk<span class="token punctuation">.</span><span class="token function">getDocCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apple
3
华为
3
荣耀
3
小米
2
联想
1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关键API：</strong></p><ul><li><code>AggregationBuilders</code> ：聚合的构建工厂类。所有聚合都由这个类来构建，可以看看他的静态方法</li></ul><p>我们看下页面的查询的JSON结果与Java类的对照关系：</p><figure><img src="https://media.zenghr.cn/blog/img/20210819/6M22ns.png" alt="6M22ns" tabindex="0" loading="lazy"><figcaption>6M22ns</figcaption></figure><h2 id="嵌套聚合-求平均值" tabindex="-1"><a class="header-anchor" href="#嵌套聚合-求平均值" aria-hidden="true">#</a> 嵌套聚合，求平均值</h2><blockquote><p>需求：根据品牌分组，并且计算它的平均售价</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSubAgg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">NativeSearchQueryBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativeSearchQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 1、添加一个新的聚合，聚合类型为terms，聚合名称为brands，聚合字段为brand</span>
    builder<span class="token punctuation">.</span><span class="token function">addAggregation</span><span class="token punctuation">(</span>
        <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;brands&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;brand&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subAggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">avg</span><span class="token punctuation">(</span><span class="token string">&quot;priceAvg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 在品牌聚合桶内进行嵌套聚合，求平均值</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 2、查询</span>
    <span class="token class-name">SearchHits</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> products <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Product</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3、解析</span>
    <span class="token comment">// 3.1、从结果中取出名为brands的那个聚合，</span>
    <span class="token class-name">Aggregations</span> aggregations <span class="token operator">=</span> products<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Terms</span> terms <span class="token operator">=</span> aggregations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;brands&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3.2、获取桶</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>terms<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 3.3、遍历</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Terms<span class="token punctuation">.</span>Bucket</span> bucket <span class="token operator">:</span> terms<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 3.4、获取桶中的key，即品牌名称  3.5、获取桶中的文档数量</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;，共&quot;</span> <span class="token operator">+</span> bucket<span class="token punctuation">.</span><span class="token function">getDocCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;台&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 3.6.获取子聚合结果：</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Aggregation</span><span class="token punctuation">&gt;</span></span> subMaps <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ParsedAvg</span> avg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ParsedAvg</span><span class="token punctuation">)</span> subMaps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;priceAvg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;平均售价：&quot;</span> <span class="token operator">+</span> avg<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apple，共3台
平均售价：8128.666666666667
华为，共3台
平均售价：5499.0
荣耀，共3台
平均售价：3649.0
小米，共2台
平均售价：4849.0
联想，共1台
平均售价：9299.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),e=[o];function c(u,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","08.Elasticsearch-复杂查询.html.vue"]]);export{k as default};
