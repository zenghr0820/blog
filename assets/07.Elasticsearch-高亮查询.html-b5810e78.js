import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as u,d as n,e as s,b as a,w as o,a as t}from"./app-1b7382bc.js";const r={},d=t('<h1 id="elasticsearch-高亮查询" tabindex="-1"><a class="header-anchor" href="#elasticsearch-高亮查询" aria-hidden="true">#</a> Elasticsearch 高亮查询</h1><p>日常生活中我们使用搜索工具尝试查询一些信息的时候，常常可以看到返回的结果集中和我们查询条件相符合的字段被特殊的颜色所标记，这就是结果高亮显示。通过高亮显示用户可以明显的发现查询匹配的位置，Elasticsearch 使用 <code>highlight</code> 来实现搜索结果中一个或多个字段突出显示</p><h2 id="例子🌰" tabindex="-1"><a class="header-anchor" href="#例子🌰" aria-hidden="true">#</a> 例子🌰</h2><p>举个🌰 - <em>查询 攻略中带上海的数据 - 多字段匹配</em></p><h3 id="映射结构" tabindex="-1"><a class="header-anchor" href="#映射结构" aria-hidden="true">#</a> 映射结构</h3><p>下面是例子所使用的映射结构</p>',6),k=n("code",null,"IK",-1),v=t(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;_doc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;subTitle&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;summary&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行如下请求之后会得到返回内容，在 <code>hits</code> 中除了常规数据外，还会有 <strong><code>highlight</code></strong> 对象</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;multi_match&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token string">&quot;上海&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;subTitle&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;summary&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;highlight&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;pre_tags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;b&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;post_tags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;/b&gt;&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;subTitle&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;summary&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;pre_tags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;b&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;post_tags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;/b&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;number_of_fragments&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fragment_size&quot;</span><span class="token operator">:</span> <span class="token number">10</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回的结果里面每个 hit 多了一个类似这样部分：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;hits&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;hits&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;strategy_es&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_type&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_score&quot;</span> <span class="token operator">:</span> <span class="token number">2.4005952</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_source&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;id&quot;</span> <span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
          <span class="token property">&quot;title&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;懒人吃货指南 | 轻松吃遍地道上海小吃&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;subTitle&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;轻松吃遍地道上海小吃&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;summary&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;去一个地方旅行当然要尝尝当地的特色美食，不然总觉得这趟旅行不完整。但是对于不熟悉上海的游客来说，“哪些是老上海小吃？去哪里能吃到地道的？”这些都是头疼的问题。这篇攻略将会给大家介绍老上海小吃，推荐一些老字号，并附上周边游玩小Tips&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;highlight&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;summary&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;但是对于不熟悉&lt;b&gt;上海&lt;/b&gt;的游客来说&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;，“哪些是老&lt;b&gt;上海&lt;/b&gt;小吃？&quot;</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;subTitle&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;轻松吃遍地道&lt;em&gt;上海&lt;/em&gt;小吃&quot;</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token property">&quot;title&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;懒人吃货指南 | 轻松吃遍地道&lt;b&gt;上海&lt;/b&gt;小吃&quot;</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="高亮设置" tabindex="-1"><a class="header-anchor" href="#高亮设置" aria-hidden="true">#</a> 高亮设置</h2><p>可以看到我们预设了 高亮关键字 的HTML标签进行包裹，下面我们来了解一下高亮 <strong>highlight</strong> 的参数定义，下面的参数可以设置在 <code>highlight</code> 的下一级此时为 <strong>全局设置</strong>，也可以设置在字段的下一级，此时为 <strong>字段设置</strong></p><blockquote><p>单个字段的设置优先级高于全局设置</p></blockquote><h3 id="number-of-fragments" tabindex="-1"><a class="header-anchor" href="#number-of-fragments" aria-hidden="true">#</a> number_of_fragments</h3><p>要返回的最大片段数，如果片段数设置为 0，则不返回任何片段，<strong>而是突出显示并返回整个字段内容</strong>。</p><p>当您需要突出显示标题或地址等短文本时，这会很方便，但不需要分段。如果<code>number_of_fragments</code> 为 0，<code>fragment_size</code>则忽略。默认为 5</p><p>例如上面👆我们设置了 <em>number_of_fragments: 2</em> ，那么 summary 字段返回了两段数据</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;summary&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;但是对于不熟悉&lt;b&gt;上海&lt;/b&gt;的游客来说&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;，“哪些是老&lt;b&gt;上海&lt;/b&gt;小吃？&quot;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果设置成 0 ，就返回原本数据</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;summary&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;去一个地方旅行当然要尝尝当地的特色美食，不然总觉得这趟旅行不完整。但是对于不熟悉&lt;b&gt;上海&lt;/b&gt;的游客来说，“哪些是老&lt;b&gt;上海&lt;/b&gt;小吃？去哪里能吃到地道的？”这些都是头疼的问题。这篇攻略将会给大家介绍老&lt;b&gt;上海&lt;/b&gt;小吃，推荐一些老字号，并附上周边游玩小Tips&quot;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fragment-size" tabindex="-1"><a class="header-anchor" href="#fragment-size" aria-hidden="true">#</a> fragment_size</h3><p>一段 fragment 包含多少个字符（以字符为单位）默认为 100</p><h3 id="pre-tags" tabindex="-1"><a class="header-anchor" href="#pre-tags" aria-hidden="true">#</a> pre_tags</h3><p>标记 highlight 的开始标签，例如上面的 <code>&lt;b&gt;</code> 标签</p><h3 id="post-tags" tabindex="-1"><a class="header-anchor" href="#post-tags" aria-hidden="true">#</a> post_tags</h3><p>标记 highlight 的结束标签，例如上面的 <code>&lt;/b&gt;</code> 标签</p><blockquote><p>系统预设的标签为 <code>&lt;em&gt;</code></p></blockquote><h3 id="order" tabindex="-1"><a class="header-anchor" href="#order" aria-hidden="true">#</a> order</h3><p>order控制了返回对象中 <code>highlight</code> 片段的排序。下面例子中返回的高亮片段将会根据分数顺序输出。假如设置了none则是按照顺序输出</p>`,24),m={class:"hint-container tip"},b=n("p",{class:"hint-container-title"},"提示",-1),g={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-highlighting.html#highlighting-settings",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"java-代码实现高亮查询",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#java-代码实现高亮查询","aria-hidden":"true"},"#"),s(" Java 代码实现高亮查询")],-1),q={class:"hint-container tip"},y=n("p",{class:"hint-container-title"},"提示",-1),_=t(`<table><thead><tr><th>框架</th><th>版本</th></tr></thead><tbody><tr><td>SpringBoot</td><td>2.5.3</td></tr><tr><td>Elasticsearch</td><td>7.14.0</td></tr><tr><td>Spring Data Elasticsearch</td><td>4.2.3</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">ElasticsearchRestTemplate</span> restTemplate<span class="token punctuation">;</span>
<span class="token comment">// ----------------------------------------------</span>
<span class="token comment">// 构建查询对象</span>
<span class="token class-name">NativeSearchQueryBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativeSearchQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取字段</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;subTitle&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;summary&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 多字段匹配</span>
<span class="token class-name">MultiMatchQueryBuilder</span> multiMatchQueryBuilder <span class="token operator">=</span>
    <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">multiMatchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;上海&quot;</span><span class="token punctuation">,</span> fields<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置高亮</span>
<span class="token class-name">HighlightBuilder</span> highlightBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HighlightBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> field <span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    highlightBuilder<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

highlightBuilder<span class="token punctuation">.</span><span class="token function">requireFieldMatch</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如果要多个字段高亮,这项要为false</span>
highlightBuilder<span class="token punctuation">.</span><span class="token function">preTags</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;span style=&#39;color:red&#39;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 高亮设置</span>
highlightBuilder<span class="token punctuation">.</span><span class="token function">postTags</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/span&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
highlightBuilder<span class="token punctuation">.</span><span class="token function">numOfFragments</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回结果最多可以包含几段不连续的文字。默认是5, 这里不分段显示</span>

<span class="token comment">// 分页</span>
<span class="token class-name">Pageable</span> pageable <span class="token operator">=</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span>
                                   <span class="token class-name">Sort<span class="token punctuation">.</span>Direction</span><span class="token punctuation">.</span><span class="token constant">ASC</span><span class="token punctuation">,</span> <span class="token string">&quot;_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置分页参数</span>

<span class="token comment">// 封装查询</span>
builder<span class="token punctuation">.</span><span class="token function">withQuery</span><span class="token punctuation">(</span>multiMatchQueryBuilder<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">withPageable</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span> <span class="token comment">// 封装分页</span>
    <span class="token punctuation">.</span><span class="token function">withHighlightBuilder</span><span class="token punctuation">(</span>highlightBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">NativeSearchQuery</span> searchQuery <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 发起检索请求</span>
<span class="token comment">// 参数：查询条件对象，返回泛型，索引名称</span>
<span class="token class-name">SearchHits</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Strategy</span><span class="token punctuation">&gt;</span></span> searchHits <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>searchQuery<span class="token punctuation">,</span> <span class="token class-name">Strategy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">IndexCoordinates</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;strategy_es&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ... 输出高亮内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function f(x,w){const e=p("RouterLink"),c=p("ExternalLinkIcon");return l(),u("div",null,[d,n("blockquote",null,[n("p",null,[s("注意：这里使用了 "),k,s(" 分词器，如需了解 IK 分词器请看 "),a(e,{to:"/passages/2021-08-16-elasticsearch-ik.html"},{default:o(()=>[s("Elasticsearch 中文分词器")]),_:1})])]),v,n("div",m,[b,n("p",null,[s("最准确的文档还是官网，更多的参数请参考"),n("a",g,[s("官方文档"),a(c)]),s("。")])]),h,n("div",q,[y,n("p",null,[s("在这里我们就不介绍 Elasticsearch 和 SpringBoot 的集成，如果不会请看上一篇文章 "),a(e,{to:"/passages/2021-08-18-elasticsearch-integrate-springboot.html"},{default:o(()=>[s("SpringBoot 集成 Elasticsearch")]),_:1})])]),_])}const S=i(r,[["render",f],["__file","07.Elasticsearch-高亮查询.html.vue"]]);export{S as default};
