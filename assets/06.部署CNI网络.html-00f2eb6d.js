const e=JSON.parse('{"key":"v-1ca2bdd4","path":"/tool/kubernetes/06.%E9%83%A8%E7%BD%B2CNI%E7%BD%91%E7%BB%9C.html","title":"部署CNI网络","lang":"zh-CN","frontmatter":{"title":"部署CNI网络","date":"2020-08-13T07:12:12.000Z","re":"2020-08-13-kubernetes-deploy-cni","category":["kubernetes"],"description":"部署CNI网络 1.简介 kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通 通过给 Kubelet 传递 --network-plugin=cni 命令行选项来选择 CNI 插件。 Kubelet 从 --cni-conf-dir （默认是 /etc/cni/net.d） 读取文件并使用该文件中的 CNI 配置来设置每个 pod 的网络。 CNI 配置文件必须与 CNI 规约匹配，并且配置引用的任何所需的 CNI 插件都必须存在于 --cni-bin-dir（默认是 /opt/cni/bin）","permalink":"/passages/2020-08-13-kubernetes-deploy-cni.html","head":[["meta",{"property":"og:url","content":"https://blog.zenghr.cn/passages/2020-08-13-kubernetes-deploy-cni.html"}],["meta",{"property":"og:site_name","content":"Zenghr"}],["meta",{"property":"og:title","content":"部署CNI网络"}],["meta",{"property":"og:description","content":"部署CNI网络 1.简介 kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通 通过给 Kubelet 传递 --network-plugin=cni 命令行选项来选择 CNI 插件。 Kubelet 从 --cni-conf-dir （默认是 /etc/cni/net.d） 读取文件并使用该文件中的 CNI 配置来设置每个 pod 的网络。 CNI 配置文件必须与 CNI 规约匹配，并且配置引用的任何所需的 CNI 插件都必须存在于 --cni-bin-dir（默认是 /opt/cni/bin）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Zenghr"}],["meta",{"property":"article:published_time","content":"2020-08-13T07:12:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署CNI网络\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-13T07:12:12.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zenghr\\"}]}"]]},"headers":[{"level":2,"title":"1.简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. 下载 CNI","slug":"_2-下载-cni","link":"#_2-下载-cni","children":[]},{"level":2,"title":"3. flannel 插件","slug":"_3-flannel-插件","link":"#_3-flannel-插件","children":[{"level":3,"title":"3.1 Flannel介绍","slug":"_3-1-flannel介绍","link":"#_3-1-flannel介绍","children":[]},{"level":3,"title":"3.2 部署flannel","slug":"_3-2-部署flannel","link":"#_3-2-部署flannel","children":[]}]},{"level":2,"title":"4. Calico 插件","slug":"_4-calico-插件","link":"#_4-calico-插件","children":[{"level":3,"title":"4.1 Calco组件简介","slug":"_4-1-calco组件简介","link":"#_4-1-calco组件简介","children":[]},{"level":3,"title":"4.2 Calico 架构","slug":"_4-2-calico-架构","link":"#_4-2-calico-架构","children":[]},{"level":3,"title":"4.3 Calico 部署步骤过程","slug":"_4-3-calico-部署步骤过程","link":"#_4-3-calico-部署步骤过程","children":[]},{"level":3,"title":"4.4 部署 calico","slug":"_4-4-部署-calico","link":"#_4-4-部署-calico","children":[]}]},{"level":2,"title":"5. 通过系统服务+Docker方式部署","slug":"_5-通过系统服务-docker方式部署","link":"#_5-通过系统服务-docker方式部署","children":[{"level":3,"title":"5.1 配置 service 文件","slug":"_5-1-配置-service-文件","link":"#_5-1-配置-service-文件","children":[]},{"level":3,"title":"5.2 启动 kube-calico 服务","slug":"_5-2-启动-kube-calico-服务","link":"#_5-2-启动-kube-calico-服务","children":[]},{"level":3,"title":"5.3 calico 客户端工具 calicoctl","slug":"_5-3-calico-客户端工具-calicoctl","link":"#_5-3-calico-客户端工具-calicoctl","children":[]},{"level":3,"title":"5.4 查看节点运行情况","slug":"_5-4-查看节点运行情况","link":"#_5-4-查看节点运行情况","children":[]},{"level":3,"title":"5.5 配置 IP Pool","slug":"_5-5-配置-ip-pool","link":"#_5-5-配置-ip-pool","children":[]}]},{"level":2,"title":"6. 授权Apiserver访问kubelet","slug":"_6-授权apiserver访问kubelet","link":"#_6-授权apiserver访问kubelet","children":[]}],"git":{},"readingTime":{"minutes":10.64,"words":3191},"filePathRelative":"tool/kubernetes/06.部署CNI网络.md","localizedDate":"2020年8月13日","excerpt":"<h1> 部署CNI网络</h1>\\n<h2> 1.简介</h2>\\n<blockquote>\\n<p>kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通</p>\\n</blockquote>\\n<p>通过给 Kubelet 传递 <code>--network-plugin=cni</code> 命令行选项来选择 CNI 插件。 Kubelet 从 <code>--cni-conf-dir</code> （默认是 <code>/etc/cni/net.d</code>） 读取文件并使用该文件中的 CNI 配置来设置每个 pod 的网络。 CNI 配置文件必须与 <a href=\\"https://github.com/containernetworking/cni/blob/master/SPEC.md#network-configuration\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">CNI 规约</a>匹配，并且配置引用的任何所需的 CNI 插件都必须存在于 <code>--cni-bin-dir</code>（默认是 <code>/opt/cni/bin</code>）</p>","autoDesc":true}');export{e as data};
