import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as r,c as o,d as s,e as a,b as t,a as l}from"./app-d467fdcd.js";const i={},d=l(`<h1 id="redis入门-五种数据类型" tabindex="-1"><a class="header-anchor" href="#redis入门-五种数据类型" aria-hidden="true">#</a> Redis入门 - 五种数据类型</h1><blockquote><p>Redis所有的key（键）都是字符串。我们在谈基础数据结构时，讨论的是存储值的数据类型，主要包括常见的5种数据类型，分别是：字符串类型(String)、散列类型(Hash)、列表类型(List)、集合类型(Set)、有序集合类型(Zset)</p></blockquote><h2 id="redis-数据结构简介" tabindex="-1"><a class="header-anchor" href="#redis-数据结构简介" aria-hidden="true">#</a> Redis 数据结构简介</h2><figure><img src="https://media.zenghr.cn/blog/img/20210802/u4eAB3.jpeg" alt="u4eAB3" tabindex="0" loading="lazy"><figcaption>u4eAB3</figcaption></figure><table><thead><tr><th>结构类型</th><th>结构存储的值</th><th>结构的读写能力</th></tr></thead><tbody><tr><td><strong>String字符串</strong></td><td>可以是字符串、整数或浮点数</td><td>对整个字符串或字符串的一部分进行操作；对整数或浮点数进行自增或自减操作；</td></tr><tr><td><strong>List列表</strong></td><td>一个链表，链表上的每个节点都包含一个字符串</td><td>对链表的两端进行push和pop操作，读取单个或多个元素；根据值查找或删除元素；</td></tr><tr><td><strong>Set集合</strong></td><td>包含字符串的无序集合</td><td>字符串的集合，包含基础的方法有看是否存在添加、获取、删除；还包含计算交集、并集、差集等</td></tr><tr><td><strong>Hash散列</strong></td><td>包含键值对的无序散列表</td><td>包含方法有添加、获取、删除单个元素</td></tr><tr><td><strong>Zset有序集合</strong></td><td>和散列一样，用于存储键值对</td><td>字符串成员与浮点数分数之间的有序映射；元素的排列顺序由分数的大小决定；包含方法有添加、获取、删除单个元素以及根据分值范围或成员来获取元素</td></tr></tbody></table><h2 id="基础数据结构详解" tabindex="-1"><a class="header-anchor" href="#基础数据结构详解" aria-hidden="true">#</a> 基础数据结构详解</h2><h3 id="字符串类型-string" tabindex="-1"><a class="header-anchor" href="#字符串类型-string" aria-hidden="true">#</a> 字符串类型(String)</h3><blockquote><p>String是redis中最基本的数据类型，一个key对应一个value</p></blockquote><p>String类型是二进制安全的，意思是 redis 的 string 可以包含任何数据。如数字，字符串，jpg图片或者序列化的对象</p><ul><li><strong>命令使用</strong></li></ul><table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td>get</td><td>获取存储在给定键中的值</td><td>get name</td></tr><tr><td>set</td><td>设置存储在给定键中的值</td><td>set name value</td></tr><tr><td>setex</td><td>存入键值对,timeout表示失效时间,单位s</td><td>setex key timeout value</td></tr><tr><td>setnx</td><td>如果key已经存在,不做操作, 如果key不存在,直接添加</td><td>setnx key value</td></tr><tr><td>del</td><td>删除存储在给定键中的值</td><td>del name</td></tr><tr><td>incr</td><td>将键存储的值加1</td><td>incr key</td></tr><tr><td>decr</td><td>将键存储的值减1</td><td>decr key</td></tr><tr><td>incrby</td><td>将键存储的值加上整数</td><td>incrby key amount</td></tr><tr><td>decrby</td><td>将键存储的值减去整数</td><td>decrby key amount</td></tr><tr><td>ttl</td><td>可以查询出当前的key还剩余多长时间过期</td><td>ttl key</td></tr><tr><td>mset</td><td>批量存入键值对</td><td>mset k1 v1 k2 v2</td></tr><tr><td>mget</td><td>批量取出键值</td><td>mget k1 k2</td></tr></tbody></table><blockquote><p><strong>ttl 命令说明：</strong> 当查询 key 不存在时或者过期时，返回 <strong>-2</strong> ，当 key 没有设置过期时间时，返回 <strong>-1</strong></p></blockquote><ul><li><strong>命令执行</strong></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> hello world
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get hello
<span class="token string">&quot;world&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> del hello
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get hello
<span class="token punctuation">(</span>nil<span class="token punctuation">)</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> counter <span class="token number">1</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get counter
<span class="token string">&quot;1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> incr counter
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get counter
<span class="token string">&quot;2&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> incrby counter <span class="token number">10</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">12</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get counter
<span class="token string">&quot;12&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> decr counter
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">11</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get counter
<span class="token string">&quot;11&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> decrby counter <span class="token number">10</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get counter
<span class="token string">&quot;1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> setex <span class="token builtin class-name">test</span> <span class="token number">10</span> <span class="token builtin class-name">test</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ttl <span class="token builtin class-name">test</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ttl <span class="token builtin class-name">test</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ttl <span class="token builtin class-name">test</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token parameter variable">-2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>实战场景 <ul><li><strong>缓存</strong>： 经典使用场景，把常用信息，字符串，图片或者视频等信息放到redis中，redis作为缓存层，mysql做持久化层，降低mysql的读写压力。</li><li><strong>计数器</strong>：redis是单线程模型，一个命令执行完才会执行下一个，同时数据可以一步落地到其他的数据源。</li><li><strong>session</strong>：常见方案spring session + redis实现session共享</li></ul></li></ul><h3 id="散列类型-hash" tabindex="-1"><a class="header-anchor" href="#散列类型-hash" aria-hidden="true">#</a> 散列类型(Hash)</h3><blockquote><p>Hash类型是String类型的field和value的映射表，或者说是一个String集合</p><p>它特别适合存储对象,相比较而言，将一个对象存储在Hash类型里要比存储在String类型里占用更少的内存空间，并方便存储整个对象</p></blockquote><ul><li><strong>命令使用</strong></li></ul><table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td><strong>hset</strong></td><td>添加键值对</td><td>hset key sub-key1 value1</td></tr><tr><td><strong>hget</strong></td><td>获取指定散列键的值</td><td>hget key key1</td></tr><tr><td><strong>hgetall</strong></td><td>获取散列中包含的所有键值对</td><td>hgetall key</td></tr><tr><td><strong>hdel</strong></td><td>如果给定键存在于散列中，那么就移除这个键</td><td>hdel key sub-key1</td></tr><tr><td><strong>hexists</strong></td><td>判断hash对象是含有某个键</td><td>hexists key hashkey</td></tr><tr><td>hincrby</td><td>递增hashkey对应的值</td><td>hincrby key hashkey 递增值</td></tr><tr><td>hlen</td><td>获取hash对象键的数量</td><td>hlen key</td></tr><tr><td>hkeys</td><td>获取hash对象的所有键</td><td>hkeys key</td></tr><tr><td>hvals</td><td>获取hash对象的所有值</td><td>hvals key</td></tr></tbody></table><ul><li><strong>命令执行</strong></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hset has1 name zs age <span class="token number">12</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hget has1 name
<span class="token string">&quot;zs&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hgetall has1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;zs&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;12&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hincrby has1 age <span class="token number">4</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">16</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hdel has1 age
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hgetall has1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;zs&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hexists has1 name
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hlen has1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hkeys has1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hvals has1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;zs&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>实战场景</strong><ul><li><strong>缓存</strong>： 能直观，相比string更节省空间，的维护缓存信息，如用户信息，视频信息等</li></ul></li></ul><h3 id="列表类型-list" tabindex="-1"><a class="header-anchor" href="#列表类型-list" aria-hidden="true">#</a> 列表类型(List)</h3><blockquote><p>Redis中的List其实就是链表（Redis用双端链表实现List）按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）</p></blockquote><p>Redis中的List类似Java中的queue,也可以当做List来用</p><p>使用 List 结构，我们可以轻松地实现最新消息排队功能（比如新浪微博的TimeLine），List的另一个应用就是消息队列，可以利用List的 PUSH 操作，将任务存放在List中，然后工作线程再用 POP 操作将任务取出进行执行</p><ul><li><strong>命令使用</strong></li></ul><table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td>rpush</td><td>将给定值推入到列表右端</td><td>rpush key value</td></tr><tr><td><strong>lpush</strong></td><td>将给定值推入到列表左端</td><td>lpush key value</td></tr><tr><td>rpop</td><td>从列表的右端弹出一个值，并返回被弹出的值</td><td>rpop key</td></tr><tr><td>lpop</td><td>从列表的左端弹出一个值，并返回被弹出的值</td><td>lpop key</td></tr><tr><td>llen</td><td>获取列表长度</td><td>llen key</td></tr><tr><td>lrange</td><td>获取列表在给定范围上的所有值</td><td>lrange key 0 -1</td></tr><tr><td>ltrim</td><td>对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素</td><td>ltrim key start end</td></tr><tr><td>lindex</td><td>通过索引获取列表中的元素。你也可以使用负数下标，以 -1 表示列表的最后一个元素,以此类推。</td><td>lindex key index</td></tr></tbody></table><ul><li><p>使用列表的技巧</p><ul><li>lpush+lpop=Stack(栈)</li><li>lpush+rpop=Queue（队列）</li><li>lpush+ltrim=Capped Collection（有限集合）</li><li>lpush+brpop=Message Queue（消息队列）</li></ul></li><li><p><strong>命令执行</strong></p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> rpush list1 <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange list1 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> rpop list1
<span class="token string">&quot;4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange list1 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> llen list1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ltrim list1 <span class="token number">1</span> <span class="token number">2</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange list1 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>实战场景 <ul><li><strong>微博TimeLine</strong>: 有人发布微博，用lpush加入时间轴，展示新的列表信息。</li><li><strong>消息队列</strong></li></ul></li></ul><h3 id="集合类型-set" tabindex="-1"><a class="header-anchor" href="#集合类型-set" aria-hidden="true">#</a> 集合类型(Set)</h3><blockquote><p>Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据</p><p>Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)</p></blockquote><ul><li><strong>命令使用</strong></li></ul><table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td>sadd</td><td>向集合添加一个或多个成员</td><td>sadd key value</td></tr><tr><td>scard</td><td>获取集合的成员数</td><td>scard key</td></tr><tr><td>smembers</td><td>返回集合中的所有成员</td><td>smembers key member</td></tr><tr><td>sismember</td><td>判断 member 元素是否是集合 key 的成员</td><td>sismember key member</td></tr><tr><td>srem</td><td>删除set集合中的元素</td><td>srem key value</td></tr><tr><td>spop</td><td>随机弹出集合中的元素</td><td>spop key count</td></tr><tr><td>srandmember</td><td>随机获取set集合中元素</td><td>srandmember key count</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sadd set1 <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">4</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> scard set1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers set1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sismember set1 <span class="token number">5</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sismember set1 <span class="token number">4</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> spop set1
<span class="token string">&quot;1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers set1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> srem set1 <span class="token number">3</span> <span class="token number">4</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers set1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>集合我们可以取交集,并集,差集</strong></li></ul><table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td><strong>sdiff</strong></td><td>返回key1中特有元素(差集)</td><td>sdiff key1 key2</td></tr><tr><td>sdiffstore</td><td>返回key1中特有元素存入另一个set集合</td><td>sdiffstore var key1 key2</td></tr><tr><td><strong>sinter</strong></td><td>返回两个set集合的交集</td><td>sinter key1 key2</td></tr><tr><td>sinterstore</td><td>返回两个set集合的交集存入另一个set集合</td><td>sinterstore var key1 key2</td></tr><tr><td><strong>sunion</strong></td><td>返回两个set集合的并集</td><td>sunion key1 key2</td></tr><tr><td>sunionstore</td><td>返回两个set集合的并集存入另一个set集合</td><td>sunionstore var key1 key2</td></tr><tr><td>smove</td><td>把key1中的某元素移入key2中</td><td>smove key1 key2 value</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sadd key1 <span class="token number">4</span> <span class="token number">3</span> <span class="token number">2</span> <span class="token number">1</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sadd key2 <span class="token number">8</span> <span class="token number">6</span> <span class="token number">4</span> <span class="token number">2</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token function">sdiff</span> key1 key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sinter key1 key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sunion key1 key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;4&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;6&quot;</span>
<span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">&quot;8&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>实战场景 <ul><li><strong>标签</strong>（tag）,给用户添加标签，或者用户给消息添加标签，这样有同一标签或者类似标签的可以给推荐关注的事或者关注的人。</li><li><strong>点赞，或点踩，收藏等</strong>，可以放到set中实现</li></ul></li></ul><h3 id="有序集合类型-zset" tabindex="-1"><a class="header-anchor" href="#有序集合类型-zset" aria-hidden="true">#</a> 有序集合类型(Zset)</h3><blockquote><p>Redis 有序集合和集合一样也是 string 类型元素的集合,且不允许重复的成员。不同的是每个元素都会关联一个 double 类型的分数。redis 正是通过分数来为集合中的成员进行从小到大的排序</p></blockquote><ul><li><strong>命令使用</strong></li></ul><table><thead><tr><th>命令</th><th>简述</th><th>使用</th></tr></thead><tbody><tr><td>zadd</td><td>将一个带有给定分值的成员添加到哦有序集合里面</td><td>zadd zset-key 178 member1</td></tr><tr><td>zrem</td><td>如果给定元素成员存在于有序集合中，那么就移除这个元素</td><td>zrem zset-key member1</td></tr><tr><td>zincrby</td><td>追加名称对应的分数</td><td>zincrby key score column</td></tr><tr><td>zcount</td><td>按照分数范围统计个数</td><td>zcount key min max</td></tr><tr><td>zrange</td><td>按照分数升序输出名称</td><td>zrange zset-key 0-1 withscores</td></tr><tr><td>zrevrange</td><td>按照分数降序输出名称</td><td>zrevrange key start end</td></tr><tr><td>zrank</td><td>升序返回排名</td><td>zrank key name</td></tr><tr><td>zrevrank</td><td>降序返回排名</td><td>zrevrank key name</td></tr></tbody></table><ul><li><strong>命令执行</strong></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zadd key4 <span class="token number">140</span> aaa <span class="token number">150</span> bbb <span class="token number">145</span> ccc <span class="token number">132</span> ddd
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrange key4 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;ddd&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;aaa&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;ccc&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;bbb&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrange key4 <span class="token number">0</span> <span class="token parameter variable">-1</span> withscores
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;ddd&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;132&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;aaa&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;140&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;ccc&quot;</span>
<span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">&quot;145&quot;</span>
<span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">&quot;bbb&quot;</span>
<span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">&quot;150&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zincrby key4 <span class="token number">10</span> aaa
<span class="token string">&quot;150&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrange key4 <span class="token number">0</span> <span class="token parameter variable">-1</span> withscores
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;ddd&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;132&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;ccc&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;145&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;aaa&quot;</span>
<span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">&quot;150&quot;</span>
<span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">&quot;bbb&quot;</span>
<span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">&quot;150&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>实战场景</strong><ul><li><strong>排行榜</strong>：有序集合经典使用场景。例如小说视频等网站需要对用户上传的小说视频做排行榜，榜单可以按照用户关注数，更新时间，字数等打分，做排行</li></ul></li></ul><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,48),c={href:"https://www.pdai.tech/md/db/nosql-redis/db-redis-data-types.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.cnblogs.com/haoprogrammer/p/11065461.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.runoob.com/redis/redis-sorted-sets.html",target:"_blank",rel:"noopener noreferrer"};function m(b,v){const n=p("ExternalLinkIcon");return r(),o("div",null,[d,s("ul",null,[s("li",null,[s("a",c,[a("https://www.pdai.tech/md/db/nosql-redis/db-redis-data-types.html"),t(n)])]),s("li",null,[s("a",u,[a("https://www.cnblogs.com/haoprogrammer/p/11065461.html"),t(n)])]),s("li",null,[s("a",k,[a("菜鸟教程 - redis"),t(n)])])])])}const q=e(i,[["render",m],["__file","02.Redis入门-五种数据类型.html.vue"]]);export{q as default};
