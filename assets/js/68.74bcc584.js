(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{416:function(a,e,s){"use strict";s.r(e);var t=s(2),r=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"部署dashboard和coredns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署dashboard和coredns"}},[a._v("#")]),a._v(" 部署Dashboard和CoreDNS")]),a._v(" "),e("h2",{attrs:{id:"一、部署dashboard"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、部署dashboard"}},[a._v("#")]),a._v(" 一、部署Dashboard")]),a._v(" "),e("h3",{attrs:{id:"_1-1-dashboard简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-dashboard简介"}},[a._v("#")]),a._v(" 1.1 Dashboard简介")]),a._v(" "),e("p",[a._v("Dashboard 是基于网页的 Kubernetes 用户界面。您可以使用 Dashboard 将容器应用部署到 Kubernetes 集群中，也可以对容器应用排错，还能管理集群资源。您可以使用 Dashboard 获取运行在集群中的应用的概览信息，也可以创建或者修改 Kubernetes 资源（如 Deployment，Job，DaemonSet 等等）。例如，您可以对 Deployment 实现弹性伸缩、发起滚动升级、重启 Pod 或者使用向导创建新的应用。")]),a._v(" "),e("p",[a._v("Dashboard 同时展示了 Kubernetes 集群中的资源状态信息和所有报错信息。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://media.zenghr.cn/blog/img/ui-dashboard.png",alt:"ui-dashboard"}})]),a._v(" "),e("h3",{attrs:{id:"_1-2-下载-yaml-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-下载-yaml-文件"}},[a._v("#")]),a._v(" 1.2 下载 YAML 文件")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 默认Dashboard只能集群内部访问，修改Service为NodePort类型，暴露到外部：")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" recommended.yaml\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改如下")]),a._v("\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kubernetes-dashboard\nspec:\n  ports:\n    - port: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v("\n      targetPort: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8443")]),a._v("\n      nodePort: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("30001")]),a._v("\n  type: NodePort\n  selector:\n    k8s-app: kubernetes-dashboard\n    \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动服务")]),a._v("\nkubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" recommended.yaml\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看")]),a._v("\nkubectl get pods,svc "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kubernetes-dashboard\n")])])]),e("p",[a._v("访问地址："),e("a",{attrs:{href:"https://nodeip:30001/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://NodeIP:30001"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"二、部署-dns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、部署-dns"}},[a._v("#")]),a._v(" 二、部署 DNS")]),a._v(" "),e("h3",{attrs:{id:"_2-1-coredns简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-coredns简介"}},[a._v("#")]),a._v(" 2.1 coreDNS简介")]),a._v(" "),e("p",[a._v("服务发现是 K8s 的一项很重要的功能。K8s 的服务发现有两种方式，一种是将 svc 的 ClusterIP 以环境变量的方式注入到 pod 中；一种就是 DNS，从 1.13 版本开始，coreDNS 就取代了 kube dns 成为了内置的 DNS 服务器。")]),a._v(" "),e("h3",{attrs:{id:"_2-2-下载部署脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-下载部署脚本"}},[a._v("#")]),a._v(" 2.2 下载部署脚本")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/coredns/deployment.git\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" deployment/kubernetes\n")])])]),e("h3",{attrs:{id:"_2-3-部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-部署"}},[a._v("#")]),a._v(" 2.3 部署")]),a._v(" "),e("p",[a._v("总体流程是我们使用 "),e("code",[a._v("deploy.sh")]),a._v(" 生成 yaml 并保存成 "),e("code",[a._v("coredns.yaml")]),a._v(" 文件并执行 "),e("code",[a._v("kubectl apply -f coredns.yaml")]),a._v(" 进行部署 ，如果要卸载，执行 "),e("code",[a._v("kubectl delete -f coredns.yaml")])]),a._v(" "),e("p",[e("code",[a._v("deploy.sh")]),a._v(" 脚本依赖 "),e("code",[a._v("jq")]),a._v(" 命令，所以先确保 "),e("code",[a._v("jq")]),a._v(" 已安装: "),e("strong",[e("code",[a._v("apt install -y jq")])])]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[a._v("如果集群中没有 kube-dns 或低版本 coredns，我们直接用 "),e("code",[a._v("-i")]),a._v(" 参数指定集群 DNS 的 CLUSTER IP，这个 IP 是安装集群时就确定好的，可以在 "),e("code",[a._v("kubelet")]),a._v(" 的 "),e("code",[a._v("clusterDNS")]),a._v(" 配置设置，示例:")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("./deploy.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.0")]),a._v(".0.2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" coredns.yaml\nkubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" coredns.yaml\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看是否部署成功")]),a._v("\nkubectl get pods "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kube-system \n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\nNAME                          READY   STATUS    RESTARTS   AGE\ncoredns-5ffbfd976d-j6shb      "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          32s\n\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);