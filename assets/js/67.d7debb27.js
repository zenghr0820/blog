(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{414:function(a,t,s){"use strict";s.r(t);var e=s(2),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"部署cni网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署cni网络"}},[a._v("#")]),a._v(" 部署CNI网络")]),a._v(" "),t("h2",{attrs:{id:"_1-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[a._v("#")]),a._v(" 1.简介")]),a._v(" "),t("blockquote",[t("p",[a._v("kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通")])]),a._v(" "),t("p",[a._v("通过给 Kubelet 传递 "),t("code",[a._v("--network-plugin=cni")]),a._v(" 命令行选项来选择 CNI 插件。 Kubelet 从 "),t("code",[a._v("--cni-conf-dir")]),a._v(" （默认是 "),t("code",[a._v("/etc/cni/net.d")]),a._v("） 读取文件并使用该文件中的 CNI 配置来设置每个 pod 的网络。 CNI 配置文件必须与 "),t("a",{attrs:{href:"https://github.com/containernetworking/cni/blob/master/SPEC.md#network-configuration",target:"_blank",rel:"noopener noreferrer"}},[a._v("CNI 规约"),t("OutboundLink")],1),a._v("匹配，并且配置引用的任何所需的 CNI 插件都必须存在于 "),t("code",[a._v("--cni-bin-dir")]),a._v("（默认是 "),t("code",[a._v("/opt/cni/bin")]),a._v("）")]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#部署cni网络"}},[a._v("部署CNI网络")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-简介"}},[a._v("1.简介")])]),t("li",[t("a",{attrs:{href:"#_2-下载-cni"}},[a._v("2. 下载 CNI")])]),t("li",[t("a",{attrs:{href:"#_3-flannel-插件"}},[a._v("3. flannel 插件")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-flannel介绍"}},[a._v("3.1 Flannel介绍")])]),t("li",[t("a",{attrs:{href:"#_3-2-部署flannel"}},[a._v("3.2 部署flannel")])])])]),t("li",[t("a",{attrs:{href:"#_4-calico-插件"}},[a._v("4. Calico 插件")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-calco组件简介"}},[a._v("4.1 Calco组件简介")])]),t("li",[t("a",{attrs:{href:"#_4-2-calico-架构"}},[a._v("4.2 Calico 架构")])]),t("li",[t("a",{attrs:{href:"#_4-3-calico-部署步骤过程"}},[a._v("4.3 Calico 部署步骤过程")])]),t("li",[t("a",{attrs:{href:"#_4-4-部署-calico"}},[a._v("4.4 部署 calico")])])])]),t("li",[t("a",{attrs:{href:"#_5-通过系统服务-docker方式部署"}},[a._v("5. 通过系统服务+Docker方式部署")]),t("ul",[t("li",[t("a",{attrs:{href:"#_5-1-配置-service-文件"}},[a._v("5.1 配置 service 文件")])]),t("li",[t("a",{attrs:{href:"#_5-2-启动-kube-calico-服务"}},[a._v("5.2 启动 kube-calico 服务")])]),t("li",[t("a",{attrs:{href:"#_5-3-calico-客户端工具-calicoctl"}},[a._v("5.3 calico 客户端工具 calicoctl")])]),t("li",[t("a",{attrs:{href:"#_5-4-查看节点运行情况"}},[a._v("5.4 查看节点运行情况")])]),t("li",[t("a",{attrs:{href:"#_5-5-配置-ip-pool"}},[a._v("5.5 配置 IP Pool")])])])]),t("li",[t("a",{attrs:{href:"#_6-授权apiserver访问kubelet"}},[a._v("6. 授权Apiserver访问kubelet")])])])])])]),t("p"),a._v(" "),t("h2",{attrs:{id:"_2-下载-cni"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-下载-cni"}},[a._v("#")]),a._v(" 2. 下载 CNI")]),a._v(" "),t("p",[a._v("准备二进制文件")]),a._v(" "),t("p",[a._v("下载地址："),t("a",{attrs:{href:"https://github.com/containernetworking/plugins/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/containernetworking/plugins/releases"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("解压二进制包并移动到默认工作目录：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" /opt/cni/bin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" zxvf cni-plugins-linux-amd64-v0.8.6.tgz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" /opt/cni/bin\n")])])]),t("h2",{attrs:{id:"_3-flannel-插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-flannel-插件"}},[a._v("#")]),a._v(" 3. flannel 插件")]),a._v(" "),t("h3",{attrs:{id:"_3-1-flannel介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-flannel介绍"}},[a._v("#")]),a._v(" 3.1 Flannel介绍")]),a._v(" "),t("blockquote",[t("p",[a._v("以下内容转载自："),t("a",{attrs:{href:"https://www.cnblogs.com/itzgr/p/12558767.html#_label0",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.cnblogs.com/itzgr/p/12558767.html#_label0"),t("OutboundLink")],1)])]),a._v(" "),t("p",[a._v("Kubernetes的网络模型假定了所有Pod都在一个可以直接连通的扁平网络空间中。若需要实现这个网络假设，需要实现不同节点上的Docker容器之间的互相访问，然后运行Kubernetes。目前已经有多个开源组件支持容器网络模型。如Flannel、Open vSwitch、直接路由和Calico。")]),a._v(" "),t("p",[a._v("Flannel之所以可以搭建Kubernetes依赖的底层网络，是因为它能实现以下两点。")]),a._v(" "),t("ol",[t("li",[a._v("它能协助Kubernetes，给每一个Node上的Docker容器都分配互相不冲突的IP地址。")]),a._v(" "),t("li",[a._v("它能在这些IP地址之间建立一个覆盖网络（Overlay Network），通过这个覆盖网络，将数据包原封不动地传递到目标容器内。")])]),a._v(" "),t("p",[t("strong",[a._v("Flannel 架构图：")])]),a._v(" "),t("img",{staticStyle:{zoom:"75%"},attrs:{src:"https://media.zenghr.cn/blog/img/Flannel架构图.png",alt:"Flannel架构图"}}),a._v(" "),t("p",[a._v("如上图所示，Flannel首先创建了一个名为 "),t("code",[a._v("flannel0")]),a._v(" 的网桥，而且这个网桥的一端连接 "),t("code",[a._v("docker0")]),a._v(" 网桥，另一端连接一个叫作flanneld的服务进程。")]),a._v(" "),t("p",[a._v("flanneld进程上连etcd，利用etcd来管理可分配的IP地址段资源，同时监控etcd中每个Pod的实际地址，并在内存中建立了一个Pod节点路由表；")]),a._v(" "),t("p",[a._v("​\tflanneld进程下连docker0和物理网络，使用内存中的Pod节点路由表，将docker0发给它的数据包包装起来，利用物理网络的连接将数据包投递到目标flanneld上，从而完成Pod到Pod之间的直接地址通信。")]),a._v(" "),t("p",[a._v("​\tFlannel之间的底层通信协议的可选技术包括UDP、VxLan、AWS VPC等多种方式。通过源flanneld封包、目标flanneld解包，最终docker0收到的就是原始的数据，对容器应用来说是透明的，感觉不到中间Flannel的存在。")]),a._v(" "),t("p",[a._v("​\tFlannel每次分配的地址段都在同一个公共区域获取，从而实现不同Node上的Pod分配的IP不产生冲突。而且在Flannel分配好地址段后，其余操作由Docker完成的，Flannel通过修改Docker的启动参数将分配给它的地址段传递进去：")]),a._v(" "),t("p",[a._v("--bip=172.17.18.1/24")]),a._v(" "),t("p",[a._v("通过如上方式，Flannel就控制了每个Node上的docker0地址段的地址，从而保障了所有Pod的IP地址在同一个水平网络中且不产生冲突。")]),a._v(" "),t("p",[a._v("​\tFlannel完美地实现了对Kubernetes网络的支持，但是它引入了多个网络组件，在网络通信时需要转到flannel0网络接口，再转到用户态的flanneld程序，到对端后还需要走这个过程的反过程，所以也会引入一些网络的时延损耗。")]),a._v(" "),t("p",[a._v("另外，Flannel模型默认采用了UDP作为底层传输协议，UDP本身是非可靠协议，虽然两端的TCP实现了可靠传输，但在大流量、高并发的应用场景下还建议多次测试。")]),a._v(" "),t("h3",{attrs:{id:"_3-2-部署flannel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-部署flannel"}},[a._v("#")]),a._v(" 3.2 部署flannel")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# github 上的文件，可能会下载失败，可以本地下载上传至虚拟机")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换 docker 源")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s#quay.io/coreos/flannel:.*-amd64#registry.cn-shanghai.aliyuncs.com/gcr-k8s/flannel:v0.12.0-amd64#g"')]),a._v(" kube-flannel.yml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改ip配置要与 kube-controller 配置中的 cluster-cidr=172.20.0.0/16 一样")]),a._v("\nnet-conf.json: "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Network"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"172.20.0.0/16"')]),a._v(",\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Backend"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Type"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"vxlan"')]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动")]),a._v("\nkubectl apply "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" kube-flannel.yml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看")]),a._v("\nkubectl get pods "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kube-system\nkubectl get svc "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kube-system\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",[a._v("注：如果Node有多个网卡的话，参考 "),t("a",{attrs:{href:"https://github.com/kubernetes/kubernetes/issues/39701",target:"_blank",rel:"noopener noreferrer"}},[a._v("flannel issues39701"),t("OutboundLink")],1),a._v("， 目前需要在kube-flannel.yml中使用--iface参数指定集群主机内网网卡的名称， 否则可能会出现dns无法解析。容器无法通信的情况，需要将kube-flannel.yml下载到本地， flanneld启动参数加上--iface=iface-name")])]),a._v(" "),t("h2",{attrs:{id:"_4-calico-插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-calico-插件"}},[a._v("#")]),a._v(" 4. Calico 插件")]),a._v(" "),t("h3",{attrs:{id:"_4-1-calco组件简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-calco组件简介"}},[a._v("#")]),a._v(" 4.1 Calco组件简介")]),a._v(" "),t("p",[a._v("​\tCalico是一个基于BGP的纯三层的网络方案，与OpenStack、Kubernetes、AWS、GCE等云平台都能够良好地集成。Calico在每个计算节点都利用Linux Kernel实现了一个高效的vRouter来负责数据转发。每个vRouter都通过BGP1协议把在本节点上运行的容器的路由信息向整个Calico网络广播，并自动设置到达其他节点的路由转发规则。")]),a._v(" "),t("p",[a._v("​\tCalico保证所有容器之间的数据流量都是通过IP路由的方式完成互联互通的。Calico节点组网时可以直接利用数据中心的网络结构（L2或者L3），不需要额外的NAT、隧道或者Overlay Network，没有额外的封包解包，能够节约CPU运算，提高网络效率。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://media.zenghr.cn/blog/img/20200813/qUxtPP.png",alt:"qUxtPP"}})]),a._v(" "),t("h3",{attrs:{id:"_4-2-calico-架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-calico-架构"}},[a._v("#")]),a._v(" 4.2 Calico 架构")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://media.zenghr.cn/blog/img/20200813/0IZcpm.png",alt:"0IZcpm"}})]),a._v(" "),t("p",[a._v("Calico的主要组件：")]),a._v(" "),t("ul",[t("li",[a._v("Felix：Calico Agent，运行在每个Node上，负责为容器设置网络资源（IP地址、路由规则、iptables规则等），保证跨主机容器网络互通。")]),a._v(" "),t("li",[a._v("etcd：Calico使用的后端存储。")]),a._v(" "),t("li",[a._v("BGP Client：负责把Felix在各Node上设置的路由信息通过BGP协议广播到Calico网络。")]),a._v(" "),t("li",[a._v("Route Reflector：通过一个或者多个BGP Route Reflector来完成大规模集群的分级路由分发。")]),a._v(" "),t("li",[a._v("CalicoCtl：Calico命令行管理工具。")])]),a._v(" "),t("h3",{attrs:{id:"_4-3-calico-部署步骤过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-calico-部署步骤过程"}},[a._v("#")]),a._v(" 4.3 Calico 部署步骤过程")]),a._v(" "),t("p",[a._v("在Kubernetes中部署Calico的主要步骤如下：")]),a._v(" "),t("ol",[t("li",[a._v("修改Kubernetes服务的启动参数，并重启服务。")])]),a._v(" "),t("ul",[t("li",[t("ol",[t("li",[a._v("设置Master上kube-apiserver服务的启动参数："),t("code",[a._v("--allow-privileged=true")]),a._v("（因为calico-node需要以特权模式运行在各Node上）。")]),a._v(" "),t("li",[a._v("设置各Node上kubelet服务的启动参数："),t("code",[a._v("--networkplugin=cni")]),a._v("（使用CNI网络插件）。")])])])]),a._v(" "),t("ol",[t("li",[a._v("创建Calico服务，主要包括calico-node和calico policy controller。需要创建的资源对象如下：")])]),a._v(" "),t("ul",[t("li",[t("ol",[t("li",[a._v("创建ConfigMap calico-config，包含Calico所需的配置参数。")]),a._v(" "),t("li",[a._v("创建Secret calico-etcd-secrets，用于使用TLS方式连接etcd。")]),a._v(" "),t("li",[a._v("在每个Node上都运行calico/node容器，部署为DaemonSet。")]),a._v(" "),t("li",[a._v("在每个Node上都安装Calico CNI二进制文件和网络配置参数（由install-cni容器完成）。")]),a._v(" "),t("li",[a._v("部署一个名为calico/kube-policy-controller的Deployment，以对接Kubernetes集群中为Pod设置的Network Policy。")])])])]),a._v(" "),t("h3",{attrs:{id:"_4-4-部署-calico"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-部署-calico"}},[a._v("#")]),a._v(" 4.4 部署 calico")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 下载 yaml 文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://docs.projectcalico.org/v3.14/getting-started/kubernetes/installation/hosted/calico.yaml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改 - name: CALICO_IPV4POOL_CIDR value: 172.20.0.0/16")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s?192.168.0.0/16?172.20.0.0/16?g"')]),a._v(" canal.yaml\n")])])]),t("h4",{attrs:{id:"_4-4-1-需要修改如下几处配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-需要修改如下几处配置"}},[a._v("#")]),a._v(" 4.4.1 需要修改如下几处配置：")]),a._v(" "),t("p",[t("strong",[a._v("ConfigMap 配置修改")])]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ConfigMap\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" calico"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("config\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kube"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("system\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcd_endpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://192.168.10.102:2379"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcd_ca")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/calico-secrets/etcd-ca"')]),a._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# "/calico-secrets/etcd-ca"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcd_cert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"calico-secrets/etcd-cert"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# "/calico-secrets/etcd-cert"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcd_key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/calico-secrets/etcd-key"')]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# "/calico-secrets/etcd-key"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("typha_service_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"none"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("calico_backend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bird"')]),a._v("\n")])])]),t("p",[a._v("对主要参数说明如下：")]),a._v(" "),t("ul",[t("li",[a._v("etcd_endpoints：Calico使用etcd来保存网络拓扑和状态，该参数指定etcd服务的地址，可手动设置。")]),a._v(" "),t("li",[a._v("calico_backend：Calico的后端，默认为bird。")]),a._v(" "),t("li",[a._v("cni_network_config：符合CNI规范的网络配置。其中 "),t("code",[a._v("type=calico")]),a._v(" 表示kubelet将从 "),t("code",[a._v("/opt/cni/bin")]),a._v(" 目录下搜索名为calico的可执行文件，并调用它来完成容器网络的设置。ipam中的 "),t("code",[a._v("type=calico-ipam")]),a._v(" 表示kubelet将在 "),t("code",[a._v("/opt/cni/bin")]),a._v(" 目录下搜索名为calico-ipam的可执行文件，用于完成容器IP地址的分配。")])]),a._v(" "),t("p",[t("strong",[a._v("修改 Pods 使用的 "),t("code",[a._v("IP 网段")]),a._v(" , 配置文件默认使用 "),t("code",[a._v("192.168.0.0/16")]),a._v(" 网段")])]),a._v(" "),t("p",[t("strong",[a._v("Secret 配置修改")])]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Secret\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Opaque\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" calico"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("etcd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("secrets\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kube"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("system\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Example command for encoding a file contents: cat <file> | base64 -w 0")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果配置了TLS ，则需要设置相应的证书和密钥文件路径")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcd-key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" (cat /etc/kubernetes/ca/server/server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("key.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" base64 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("w 0) "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将输出结果填写在这")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcd-cert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" (cat /etc/kubernetes/ca/server/server.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" base64 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("w 0) "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将输出结果填写在这")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcd-ca")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" (cat /etc/kubernetes/ca/ca.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" base64 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("w 0) "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将输出结果填写在这")]),a._v("\n")])])]),t("p",[t("strong",[a._v("DaemonSet 配置修改")]),a._v("\n添加网卡发现规则")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" calico"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("node\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" calico/node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("v3.14.2\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("env")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# .../")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Auto-detect the BGP IP address.")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" IP\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"autodetect"')]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Calico 模式设置")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" CALICO_IPV4POOL_IPIP\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Always"')]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义ipv4自动发现网卡规则 ")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" IP_AUTODETECTION_METHOD\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"interface=enp.*"')]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# no effect. This should fall within `--cluster-cidr`.")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 需要修改此处，打开注释替换 pod ip")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" CALICO_IPV4POOL_CIDR\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"172.20.0.0/16"')]),a._v("\n")])])]),t("p",[a._v("在该Pod中包括如下两个容器：")]),a._v(" "),t("ul",[t("li",[a._v("install-cni：在Node上安装CNI二进制文件到 "),t("code",[a._v("/opt/cni/bin")]),a._v(" 目录下，并安装相应的网络配置文件到 "),t("code",[a._v("/etc/cni/net.d")]),a._v(" 目录下，设置为initContainers并在运行完成后退出。")]),a._v(" "),t("li",[a._v("calico-node：Calico服务程序，用于设置Pod的网络资源，保证Pod的网络与各Node互联互通。它还需要以hostNetwork模式运行，直接使用宿主机网络。")])]),a._v(" "),t("p",[a._v("calico-node服务的主要参数如下。")]),a._v(" "),t("ul",[t("li",[a._v("CALICO_IPV4POOL_CIDR：Calico IPAM的IP地址池，Pod的IP地址将从该池中进行分配。")]),a._v(" "),t("li",[a._v("CALICO_IPV4POOL_IPIP：是否启用IPIP模式。启用IPIP模式时，Calico将在Node上创建一个名为tunl0的虚拟隧道。")]),a._v(" "),t("li",[t("code",[a._v("IP_AUTODETECTION_METHOD")]),a._v('：获取Node IP地址的方式，默认使用第1个网络接口的IP地址，对于安装了多块网卡的Node，可以使用正则表达式选择正确的网卡，例如"interface=eth.*"表示选择名称以'),t("code",[a._v("eth")]),a._v("开头的网卡的IP地址。")]),a._v(" "),t("li",[a._v("FELIX_IPV6SUPPORT：是否启用IPv6。")]),a._v(" "),t("li",[a._v("FELIX_LOGSEVERITYSCREEN：日志级别。")]),a._v(" "),t("li",[a._v("securityContext.privileged=true：以特权模式运行。")])]),a._v(" "),t("p",[a._v("另外，如果启用RBAC权限控制，则可以设置ServiceAccount。")]),a._v(" "),t("p",[a._v("IP Pool可以使用两种模式：BGP或IPIP。使用IPIP模式时，设置 "),t("code",[a._v('CALICO_IPV4POOL_IPIP="always"')]),a._v(" ，不使用IPIP模式时，设置"),t("code",[a._v('CALICO_IPV4POOL_IPIP="off"')]),a._v(" ，此时将使用BGP模式。")]),a._v(" "),t("p",[t("strong",[a._v("calico-kube-controllers解析配置")])]),a._v(" "),t("p",[a._v("calico-kube-controllers容器，用于对接Kubernetes集群中为Pod设置的Network Policy")]),a._v(" "),t("p",[a._v("如果启用RBAC权限控制，则可以设置ServiceAccount。用户在Kubernetes集群中设置了Pod的Network Policy之后，calicokube-controllers就会自动通知各Node上的calico-node服务，在宿主机上设置相应的iptables规则，完成Pod间网络访问策略的设置。")]),a._v(" "),t("h4",{attrs:{id:"_4-4-2-修改完-yaml-文件-执行部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-修改完-yaml-文件-执行部署"}},[a._v("#")]),a._v(" 4.4.2 修改完 yaml 文件，执行部署")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 部署")]),a._v("\nkubectl apply "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" calico.yaml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看 calico pods")]),a._v("\nkubectl  get pods "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" kube-system\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看 node 是否正常，现在 node 服务正常了")]),a._v("\nkubectl get "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("node")]),a._v("\n\nNAME       \t\t\t STATUS   ROLES    AGE    VERSION\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.101   Ready    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("   4d4h   v1.18.6\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.102   Ready    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("   4d4h   v1.18.6\n\n")])])]),t("h2",{attrs:{id:"_5-通过系统服务-docker方式部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-通过系统服务-docker方式部署"}},[a._v("#")]),a._v(" 5. 通过系统服务+Docker方式部署")]),a._v(" "),t("h3",{attrs:{id:"_5-1-配置-service-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-配置-service-文件"}},[a._v("#")]),a._v(" 5.1 配置 service 文件")]),a._v(" "),t("p",[t("strong",[a._v("vim /lib/systemd/system/kube-calico.service")])]),a._v(" "),t("blockquote",[t("p",[a._v("注意修改 IP 以及证书位置")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("calico "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("node")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("After")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("docker.service\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Requires")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("docker.service\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("User")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("root\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PermissionsStartOnly")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ExecStart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/bin/docker run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--net")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("host "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--privileged")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("calico-node "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ETCD_ENDPOINTS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("https://192.168.10.102:2379 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ETCD_CA_CERT_FILE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/etc/kubernetes/ca/ca.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ETCD_CERT_FILE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/etc/kubernetes/ca/calico/calico.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ETCD_KEY_FILE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/etc/kubernetes/ca/calico/calico-key.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CALICO_LIBNETWORK_ENABLED")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CALICO_NETWORKING_BACKEND")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bird "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CALICO_DISABLE_FILE_LOGGING")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CALICO_IPV4POOL_CIDR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.20")]),a._v(".0.0/16 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CALICO_IPV4POOL_IPIP")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("off "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("FELIX_DEFAULTENDPOINTTOHOSTACTION")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ACCEPT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("FELIX_IPV6SUPPORT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("FELIX_LOGSEVERITYSCREEN")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("info "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("FELIX_IPINIPMTU")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1440")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("FELIX_HEALTHENABLED")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IP")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.101 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /etc/kubernetes/ca:/etc/kubernetes/ca "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /var/run/calico:/var/run/calico "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /lib/modules:/lib/modules "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /run/docker/plugins:/run/docker/plugins "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /var/run/docker.sock:/var/run/docker.sock "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /var/log/calico:/var/log/calico "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  calico/node:v3.14.2\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ExecStop")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/bin/docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" calico-node\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Restart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("RestartSec")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Install"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("WantedBy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("multi-user.target\n")])])]),t("h3",{attrs:{id:"_5-2-启动-kube-calico-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-启动-kube-calico-服务"}},[a._v("#")]),a._v(" 5.2 启动 kube-calico 服务")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("systemctl daemon-reload "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改配置重启的时候用")]),a._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" kube-calico.service\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" kube-calico start\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看日志")]),a._v("\njournalctl "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" kube-calico\n")])])]),t("h3",{attrs:{id:"_5-3-calico-客户端工具-calicoctl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-calico-客户端工具-calicoctl"}},[a._v("#")]),a._v(" 5.3 calico 客户端工具 calicoctl")]),a._v(" "),t("p",[t("strong",[a._v("下载 calicoctl 二进制文件, 下载地址："),t("a",{attrs:{href:"https://github.com/projectcalico/calicoctl/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/projectcalico/calicoctl/releases"),t("OutboundLink")],1)])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("755")]),a._v(" calicoctl\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" calicoctl /usr/local/bin/\n")])])]),t("h3",{attrs:{id:"_5-4-查看节点运行情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-查看节点运行情况"}},[a._v("#")]),a._v(" 5.4 查看节点运行情况")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("calicoctl "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("node")]),a._v(" status\nCalico process is running.\nIPv4 BGP status\n+---------------+-------------------+-------+----------+-------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" PEER ADDRESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     PEER TYPE     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" STATE "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  SINCE   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("    INFO     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n+---------------+-------------------+-------+----------+-------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.101 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" node-to-node mesh "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" up    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(":13:13 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Established "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n+---------------+-------------------+-------+----------+-------------+\nIPv6 BGP status\nNo IPv6 peers found.\n")])])]),t("p",[t("strong",[a._v("查看端口BGP 协议是通过TCP 连接来建立邻居的，因此可以用netstat 命令验证 BGP Peer")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("netstat")]),a._v(" -natp"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" ESTABLISHED"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("179")]),a._v("\ntcp        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.102:60959     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.103:179       ESTABLISHED "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("29680")]),a._v("/bird\n")])])]),t("h3",{attrs:{id:"_5-5-配置-ip-pool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-配置-ip-pool"}},[a._v("#")]),a._v(" 5.5 配置 IP Pool")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",[a._v("注：请看官方配置文件："),t("a",{attrs:{href:"https://docs.projectcalico.org/getting-started/clis/calicoctl/configure/overview",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://docs.projectcalico.org/getting-started/clis/calicoctl/configure/overview"),t("OutboundLink")],1)])]),a._v(" "),t("p",[a._v("默认情况下，"),t("code",[a._v("calicoctl")]),a._v("将在上查找配置文件"),t("code",[a._v("/etc/calico/calicoctl.cfg")]),a._v("。您可以将该"),t("code",[a._v("--config")]),a._v("选项与需要数据存储访问的命令一起使用，以覆盖此选项。该文件可以是YAML或JSON格式。它必须有效并且可由读取"),t("code",[a._v("calicoctl")]),a._v("。以下是一个YAML示例：")]),a._v(" "),t("p",[t("strong",[a._v("vim /etc/calico/calicoctl.cfg")])]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" projectcalico.org/v3\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" CalicoAPIConfig\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcdEndpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//192.168.10.102"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2379")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcdKeyFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /etc/kubernetes/ca/calico/calico"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("key.pem\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcdCertFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /etc/kubernetes/ca/calico/calico.pem\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("etcdCACertFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /etc/kubernetes/ca/ca.pem\n")])])]),t("p",[t("strong",[a._v("查看集群ippool情况")])]),a._v(" "),t("p",[t("strong",[a._v("calicoctl get ipPool -o yaml")])]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出内容如下")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" projectcalico.org/v3\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" IPPool\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("creationTimestamp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2020-08-14T10:38:44Z"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" default"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("ipv4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("ippool\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("resourceVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"13109"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("uid")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 3e3b1506"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("e9a8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("4d02"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("96f7"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("2ceb63ade2ea\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("blockSize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("26")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cidr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 172.20.0.0/16\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ipipMode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Never\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("natOutgoing")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nodeSelector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" all()\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("vxlanMode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Never\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" IPPoolList\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("resourceVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"57796"')]),a._v("\n")])])]),t("h2",{attrs:{id:"_6-授权apiserver访问kubelet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-授权apiserver访问kubelet"}},[a._v("#")]),a._v(" 6. 授权Apiserver访问kubelet")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /etc/kubernetes/server/cfg/apiserver-to-kubelet-rbac.yaml "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('EOF\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: "true"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - ""\n    resources:\n      - nodes/proxy\n      - nodes/stats\n      - nodes/log\n      - nodes/spec\n      - nodes/metrics\n      - pods/log\n    verbs:\n      - "*"\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: ""\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  启动")]),a._v("\nkubectl apply "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" apiserver-to-kubelet-rbac.yaml\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);