(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{392:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"理解-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解-string"}},[t._v("#")]),t._v(" 理解 String")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",[t._v("本文主要分析 String 包，以及StringBuffer、StringBuilder的操作，运行环境："),s("em",[t._v("jdk 1.8.0_212")])])]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://tech.meituan.com/2014/03/06/in-depth-understanding-string-intern.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解String#intern"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"string-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-概念"}},[t._v("#")]),t._v(" String 概念")]),t._v(" "),s("p",[s("strong",[t._v("String")]),t._v(" 类是代表字符串，Java中所有的字符字面量都是此类的实现；")]),t._v(" "),s("p",[t._v("内部使用 char 类型的数组存储数据，该数组被 "),s("strong",[t._v("final")]),t._v(" 修饰，代表该数组赋值初始化后就不能被修改，并且内部没有实行可以修改该数组的方法，因此 "),s("strong",[t._v("String是不可变的")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** The value is used for character storage. */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"不可变的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不可变的好处"}},[t._v("#")]),t._v(" 不可变的好处")]),t._v(" "),s("h3",{attrs:{id:"_1-string-pool-字符缓存池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-string-pool-字符缓存池"}},[t._v("#")]),t._v(" 1. String Pool 字符缓存池")]),t._v(" "),s("p",[t._v("如果一个 String 对象已经被创建过，那么就会从 String Pool 中引用，只有 String 是不可变的，才可能使用 String Pool，内存图如下👇")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://media.zenghr.cn/blog/img/20210416/zzGoFv76j7rA.png?imageslim",alt:"mark"}})]),t._v(" "),s("h3",{attrs:{id:"_2-线程安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程安全"}},[t._v("#")]),t._v(" 2. 线程安全")]),t._v(" "),s("p",[t._v("因为 "),s("strong",[t._v("String")]),t._v(" 不可变特性，所以 String 天生具备线程安全，可以在多个线程中使用")]),t._v(" "),s("h2",{attrs:{id:"string-stringbuffer-stringbuilder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-stringbuffer-stringbuilder"}},[t._v("#")]),t._v(" String，StringBuffer，StringBuilder")]),t._v(" "),s("h3",{attrs:{id:"_1-可变性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-可变性"}},[t._v("#")]),t._v(" 1. 可变性")]),t._v(" "),s("ul",[s("li",[t._v("String 不可变")]),t._v(" "),s("li",[t._v("StringBuffer 和 StringBuilder 可变")])]),t._v(" "),s("h3",{attrs:{id:"_2-线程安全-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程安全-2"}},[t._v("#")]),t._v(" 2. 线程安全")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),t._v(" 不可变，所以线程安全")]),t._v(" "),s("li",[s("strong",[t._v("StringBuffer")]),t._v(" 线程安全，内部使用 synchronized 实现")]),t._v(" "),s("li",[s("strong",[t._v("StringBuilder")]),t._v(" 线程不安全")])]),t._v(" "),s("h2",{attrs:{id:"stringbuffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringbuffer"}},[t._v("#")]),t._v(" StringBuffer")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",[s("strong",[t._v("StringBuffer(字符缓冲区)")]),t._v(" 可以当成是一个包装类，内部封装了一个字符数组，并提供相应的 增、删、改、查等操作方法，也可以称为 "),s("strong",[t._v("字符串容器")]),t._v("，由于 StringBuffer 是线程安全，所以"),s("strong",[t._v("效率比StringBuilder低")]),t._v("，所以我们平时优先使用 "),s("strong",[t._v("StringBuilder")])])]),t._v(" "),s("h4",{attrs:{id:"stringbuffer-构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringbuffer-构造方法"}},[t._v("#")]),t._v(" StringBuffer 构造方法")]),t._v(" "),s("ul",[s("li",[t._v("StringBuffer() ：初始容量是 "),s("strong",[t._v("16")]),t._v(" 的可变字符串")]),t._v(" "),s("li",[t._v("StringBuffer(int capacity) ：构造一个容量是 capacity 的可变字符串")])]),t._v(" "),s("h4",{attrs:{id:"stringbuffer和stringbuilder-常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringbuffer和stringbuilder-常用方法"}},[t._v("#")]),t._v(" StringBuffer和StringBuilder 常用方法")]),t._v(" "),s("p",[s("strong",[t._v("StringBuffer")]),t._v(" 主要操作是 "),s("code",[t._v("append")]),t._v(" 和 "),s("code",[t._v("insert")]),t._v(" 方法")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("append：")]),t._v(" 在原有的字符串后面追加数据")]),t._v(" "),s("li",[s("strong",[t._v("insert(int offset, String str)：")]),t._v(" 在指定位置插入字符串")]),t._v(" "),s("li",[s("strong",[t._v("delete(int start, int end)：")]),t._v(" 删除指定区间的字符串，含头不含尾")]),t._v(" "),s("li",[s("strong",[t._v("setCharAt(int index, char ch)：")]),t._v(" 替换指定位置的字符")]),t._v(" "),s("li",[s("strong",[t._v("replace(int start, int end, String str)：")]),t._v(" 替换指定区间的字符串")]),t._v(" "),s("li",[s("strong",[t._v("capacity()：")]),t._v(" 返回容量大小")])]),t._v(" "),s("blockquote",[s("p",[t._v("StringBuilder Api 和 StringBuffer Api一致，唯一不同就是线程安全与否")])]),t._v(" "),s("h2",{attrs:{id:"自动扩容源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动扩容源码分析"}},[t._v("#")]),t._v(" 自动扩容源码分析")]),t._v(" "),s("p",[t._v("StringBuffer 和 StringBuilder 调用 append 方法，都会调用 父类的 append 方法，父类的 append 方法源码如下👇 - (源码版本："),s("em",[s("strong",[t._v("JKD 1.8")])]),t._v(")")]),t._v(" "),s("h3",{attrs:{id:"append"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#append"}},[t._v("#")]),t._v(" append")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractStringBuilder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensureCapacityInternal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getChars")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"ensurecapacityinternal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ensurecapacityinternal"}},[t._v("#")]),t._v(" ensureCapacityInternal")]),t._v(" "),s("p",[t._v("可以看出核心的代码为 "),s("strong",[s("code",[t._v("ensureCapacityInternal")])]),t._v(" 方法，传入参数为，原有长度("),s("code",[t._v("count")]),t._v(") + 新字符串长度("),s("code",[t._v("len")]),t._v(")，点击查看 "),s("strong",[s("code",[t._v("ensureCapacityInternal")])]),t._v(" 源码👇")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensureCapacityInternal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" minimumCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// overflow-conscious code")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 新字符串长度 - 数组容量 value.length 大于 0 即超出最大容量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 则执行 数组拷贝，生成新的数组")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minimumCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minimumCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("ensureCapacityInternal")]),t._v(" 方法中，判断 如果 新字符串长度("),s("strong",[t._v("minimumCapacity")]),t._v(") - 数组容量 "),s("strong",[t._v("value.length")]),t._v(" 大于 0 即"),s("strong",[t._v("超出最大容量")]),t._v("，则执行 "),s("strong",[s("code",[t._v("newCapacity")])]),t._v(" 方法计算新的扩容长度，然后执行 "),s("strong",[t._v("Arrays.copyOf")]),t._v(" 生成新的字符数组， "),s("strong",[s("code",[t._v("newCapacity")])]),t._v(" 源码如下👇")]),t._v(" "),s("h3",{attrs:{id:"newcapacity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#newcapacity"}},[t._v("#")]),t._v(" newCapacity")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" minCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// overflow-conscious code")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先将 原有容量长度 << 1，相当于 乘于 2，翻倍，再加 +2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" newCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 新计算的 容量长度比新字符串长度小，那么直接将 新字符串长度 赋值成新的数组容量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" minCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        newCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" minCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 新的容量小于等于0 或者 新容量大小比数组最大长度大，则重新计算容量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则 直接返回上面计算的新的容量大小")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_ARRAY_SIZE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" newCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hugeCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" newCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("查看 "),s("strong",[t._v("newCapacity")]),t._v(" 源码则知道，先将原有容量大小 "),s("strong",[t._v("左移 1")]),t._v("，也就是容量翻倍，再 "),s("strong",[t._v("+2")]),t._v("，得出新的容量大小 "),s("strong",[s("code",[t._v("newCapacity")])]),t._v("。")]),t._v(" "),s("p",[t._v("再将新的容量 "),s("strong",[t._v("newCapacity")]),t._v(" 跟新字符串长度进行比较，如果比新字符串长度小，那么直接将 新字符串长度 "),s("strong",[t._v("赋值成新的数组容量")]),t._v(" "),s("strong",[s("code",[t._v("newCapacity = minCapacity;")])])]),t._v(" "),s("p",[t._v("最后再 校验一下，如果 "),s("strong",[t._v("新的容量小于等于0")]),t._v(" 或者 "),s("strong",[t._v("新容量大小比数组最大长度大")]),t._v("，就要执行 "),s("strong",[t._v("hugeCapacity")]),t._v(" 方法重新计算容量大小，否则 直接返回 新容量大小 "),s("strong",[t._v("newCapacity")])]),t._v(" "),s("p",[t._v("查看 "),s("strong",[t._v("hugeCapacity")]),t._v(" 方法源码👇")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hugeCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" minCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 新字符串长度 比 Integer 最大值还要大，则抛出异常")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" minCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// overflow")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutOfMemoryError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 新字符串长度 小于 最大数组长度，返回 新字符串长度，否则返回 最大数组长度")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_ARRAY_SIZE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" minCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_ARRAY_SIZE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("该方法主要判断新字符串是否"),s("strong",[t._v("超出 Integer 最大值")]),t._v("，超出则抛出异常")]),t._v(" "),s("p",[t._v("如果 新字符串长度 小于 最大数组长度，则返回 "),s("strong",[t._v("新字符串长度")]),t._v("，否则返回 "),s("strong",[t._v("最大数组长度")])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("blockquote",[s("p",[t._v("注：")]),t._v(" "),s("p",[t._v("Integer.MAX_VALUE(Integer 最大值)：2147483647")]),t._v(" "),s("p",[t._v("MAX_ARRAY_SIZE(数组最大长度)：Integer.MAX_VALUE - 8")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",[t._v("在原有容量大小的基础上 "),s("strong",[t._v("翻倍再+2")]),t._v(" 得出 "),s("strong",[t._v("newCapacity")]),t._v("，如果还是小于新字符串长度，直接将"),s("strong",[t._v("新字符串长度设置成新的容量")]),t._v("，否则使用翻倍后的容量")]),t._v(" "),s("p",[t._v("校验 "),s("strong",[t._v("newCapacity")]),t._v(" 后发现新计算的容量不合法 "),s("code",[t._v("小于0 或者 大于数组最大长度")]),t._v("，则需要根据新的字符串重新计算容量，合法就使用 "),s("strong",[t._v("newCapacity")]),t._v(" 作为新的容量，重新计算规则为：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("前提条件")]),t._v("：新的字符串长度不能超出 "),s("strong",[t._v("Integer")]),t._v(" 的最大值，则直接抛出异常 "),s("strong",[s("code",[t._v("OutOfMemoryError")])])]),t._v(" "),s("li",[t._v("在前提下，字符串长度比"),s("strong",[t._v("最大数组长度")]),t._v("大，直接使用字符串长度作为新的容量")]),t._v(" "),s("li",[t._v("否则使用 "),s("strong",[t._v("数组最大长度")]),t._v(" 作为新的容量")])])]),t._v(" "),s("h2",{attrs:{id:"string-intern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-intern"}},[t._v("#")]),t._v(" String.intern()")]),t._v(" "),s("p",[t._v("使用 "),s("strong",[t._v("String.intern()")]),t._v(" 可以保证相同内容的字符串变量引用同一的内存对象")]),t._v(" "),s("h3",{attrs:{id:"string-常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-常量池"}},[t._v("#")]),t._v(" String 常量池")]),t._v(" "),s("p",[s("strong",[t._v("String 常量池")]),t._v(" 也称为 缓存池，八大基本数据类型都有自己的缓存池，使用方法：")]),t._v(" "),s("ul",[s("li",[t._v("直接使用双引号声明出来 "),s("code",[t._v("String")]),t._v(" 对象会直接存储在 常量池中")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("new String()")]),t._v(" 创建的 String 对象，会在堆区生成一个String 对象，还会在常量池中生成 相应的字符串对象(如果常量池不存在该对象的话)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",[s("strong",[t._v('String s = new String("abc")')]),t._v(" 这个语句生成了几个对象，根据上面总结的可知，一共生成两个对象，常量池中的 "),s("strong",[t._v("abc")]),t._v(" 对象，堆区的 "),s("strong",[t._v("String")]),t._v(" 对象")])]),t._v(" "),s("h3",{attrs:{id:"intern-分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intern-分析"}},[t._v("#")]),t._v(" intern 分析")]),t._v(" "),s("p",[t._v("判断下面代码会输出什么结果👇")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    s3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("打印结果是：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("jdk6：")]),t._v(" false，false")]),t._v(" "),s("li",[s("strong",[t._v("jdk7：")]),t._v(" false，true")])]),t._v(" "),s("p",[t._v("如果我将 "),s("strong",[s("code",[t._v("intern()")])]),t._v(" 方法都往下移一句，会发生什么结果呢👇")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    s3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("打印结果：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("jdk6：")]),t._v(" false，false")]),t._v(" "),s("li",[s("strong",[t._v("jdk8：")]),t._v(" false，false")])]),t._v(" "),s("p",[s("strong",[t._v("JDK 1.6 分析")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://media.zenghr.cn/blog/img/20210419/v4xr7w1V4uuv.png?imageslim",alt:"mark"}})]),t._v(" "),s("p",[t._v("因为 jdk6中的常量池是放在 "),s("strong",[t._v("Perm")]),t._v("  区中的，"),s("strong",[t._v("Perm")]),t._v(" 区和正常的 "),s("strong",[t._v("JAVA Heap")]),t._v(" 区域是完全分开的")]),t._v(" "),s("p",[t._v("而我们 new 出来的 String 对象是在 "),s("strong",[t._v("堆区(Heap)")]),t._v(" 中的，所以拿一个 JAVA Heap 区域的对象地址和字符串常量池的对象地址进行比较肯定是不相同的，即使调用"),s("code",[t._v("String.intern")]),t._v("方法也是没有任何关系的")]),t._v(" "),s("p",[s("strong",[t._v("JDK 1.7 分析")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",[t._v("在 "),s("strong",[t._v("Jdk6")]),t._v(" 以及以前的版本中，字符串的常量池是放在堆的 Perm 区的，Perm 区是一个类静态的区域，主要存储一些加载类的信息，常量池，方法片段等内容")]),t._v(" "),s("p",[t._v("在 "),s("strong",[t._v("jdk7")]),t._v(" 的版本中，字符串常量池已经从 Perm 区移到正常的 "),s("strong",[t._v("Java Heap(堆)")]),t._v(" 区域了")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://media.zenghr.cn/blog/img/20210419/c2kp0NSnHDNu.png?imageslim",alt:"mark"}})]),t._v(" "),s("ul",[s("li",[t._v("我们先看 "),s("strong",[t._v("s和s2")]),t._v(' 两个对象，通过 new 创建的 String 对象，会在堆中生成String对象，以及常量池中的 "1" 对象，我们执行 '),s("strong",[s("code",[t._v("s.intern()")])]),t._v(" 方法时，就是 "),s("strong",[t._v("s对象")]),t._v(" 去常量池中寻找后发现 "),s("strong",[t._v('"1"')]),t._v(" 已经在常量池中了")]),t._v(" "),s("li",[t._v("接着执行 "),s("strong",[s("code",[t._v('s2 = "1"')])]),t._v(' ，生成一个引用指向常量池中的 "1" 对象，所以 '),s("strong",[t._v("s和s2")]),t._v(" 的引用地址不同，从图中我们可以清晰的看出")]),t._v(" "),s("li",[t._v("再看 "),s("strong",[t._v("s3和s4")]),t._v(" 字符串，"),s("strong",[t._v('String s3 = new String("1") + new String("1")')]),t._v(' 代码最终生成了两个对象，一个是常量池中的 "1"，以及堆中的 s3 引用对象 String，该对象的内容是 "11"，此时常量池中是没有 "11" 对象的')]),t._v(" "),s("li",[t._v("接着 "),s("strong",[s("code",[t._v("s3.intern()")])]),t._v(' 代码执行，将 s3 中引用的字符存储进常量池中，因为此时常量池中是没有 "11" 对象的，所以会在 常量池中生成一个 "11" 的对象，该过程跟 '),s("strong",[t._v("JDK 1.6")]),t._v(" 是一致的，但是在 "),s("strong",[t._v("JDK 1.7")]),t._v(" 中，常量池中可以存储堆中的地址引用")]),t._v(" "),s("li",[t._v("接着 "),s("strong",[t._v('String s4 = "11"')]),t._v(' ，会去常量池中创建，创建的时候会发现已经存在，因为常量池中 "11" 对象保存的是 s3 的地址引用，所以 s4 就指向 s3 所在的内存地址，因此最后 '),s("strong",[s("code",[t._v("s3 == s4")])]),t._v(" 的结果就是 "),s("strong",[t._v("true")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://media.zenghr.cn/blog/img/20210419/xyEBKcHqqqPY.png?imageslim",alt:"mark"}})]),t._v(" "),s("ul",[s("li",[t._v("看第二段代码，代码唯一的改变就是 intern 的位置顺序改变了，intern 方法位置变到 "),s("strong",[t._v('String s4 = "11"')]),t._v(" 后面")]),t._v(" "),s("li",[t._v("因此执行 "),s("strong",[t._v('String s4 = "11"')]),t._v(' 语句时，常量池中没有 "11" 的对象，所以 s4 会创建一个新的对象，而 s3 也是在堆中创建的对象，两个对象地址都不一致，所以 '),s("strong",[t._v("s3 == s4")]),t._v(" 的结果是 false")])]),t._v(" "),s("h3",{attrs:{id:"总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("jdk7 版本对 intern 操作和常量池都做了一定的修改")]),t._v(" "),s("ul",[s("li",[t._v("String 常量池 从 Perm 移到 Java Heap 区")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("String#intern")])]),t._v(" 方法时，如果存在堆中的对象，会"),s("strong",[t._v("直接保存对象的引用，而不会重新创建对象")]),t._v("。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);