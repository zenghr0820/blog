(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{428:function(s,e,t){"use strict";t.r(e);var r=t(2),i=Object(r.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"redis概念和基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis概念和基础"}},[s._v("#")]),s._v(" Redis概念和基础")]),s._v(" "),e("blockquote",[e("p",[s._v("Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。")])]),s._v(" "),e("h2",{attrs:{id:"什么是-redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-redis"}},[s._v("#")]),s._v(" 什么是 Redis")]),s._v(" "),e("p",[s._v("Redis是一款 "),e("strong",[s._v("内存高速缓存数据库")]),s._v(" 。Redis全称为："),e("strong",[s._v("Remote Dictionary Server")]),s._v("（远程数据服务），使用C语言编写，Redis是一个key-value存储系统（键值存储系统），支持丰富的数据类型，如：String、list、set、zset、hash。")]),s._v(" "),e("p",[s._v("Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。")]),s._v(" "),e("p",[e("strong",[s._v("Redis 定位是缓存，提高数据读写效率，减轻客户端数据访问压力")])]),s._v(" "),e("h2",{attrs:{id:"redis-有什么优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-有什么优势"}},[s._v("#")]),s._v(" Redis 有什么优势")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("性能极高")]),s._v(" – Redis能读的速度是110000次/s,写的速度是81000次/s 。")]),s._v(" "),e("li",[e("strong",[s._v("丰富的数据类型")]),s._v(" – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。")]),s._v(" "),e("li",[e("strong",[s._v("原子性")]),s._v(" – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过 MULTI 和 EXEC 指令包起来。")]),s._v(" "),e("li",[e("strong",[s._v("丰富的特性")]),s._v(" – Redis还支持 publish/subscribe, 通知, key 过期等等特性。")]),s._v(" "),e("li",[e("strong",[s._v("持久化")]),s._v(" - Redis支持RDB, AOF等持久化方式")])]),s._v(" "),e("h2",{attrs:{id:"redis-的使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-的使用场景"}},[s._v("#")]),s._v(" Redis 的使用场景")]),s._v(" "),e("blockquote",[e("p",[s._v("平时我们用到 redis 的地方蛮多的，下面就了解的应用场景做个总结")])]),s._v(" "),e("h3",{attrs:{id:"缓存热点数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存热点数据"}},[s._v("#")]),s._v(" 缓存热点数据")]),s._v(" "),e("p",[s._v("缓存是Redis最常见的应用场景，因为Redis读写性能优异，作为缓存使用时，一般有两种方式保存数据：")]),s._v(" "),e("ul",[e("li",[s._v("读取前，先去读Redis，如果没有数据，读取数据库，将数据拉入Redis。")]),s._v(" "),e("li",[s._v("插入数据时，同时写入Redis")])]),s._v(" "),e("h3",{attrs:{id:"限时业务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#限时业务"}},[s._v("#")]),s._v(" 限时业务")]),s._v(" "),e("p",[s._v("redis中可以使用 expire 命令设置一个键的生存时间，到时间后redis会删除它。利用这一特性可以运用在限时的优惠活动信息、手机验证码等业务场景")]),s._v(" "),e("h3",{attrs:{id:"点赞、好友等相互关系的存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点赞、好友等相互关系的存储"}},[s._v("#")]),s._v(" 点赞、好友等相互关系的存储")]),s._v(" "),e("p",[s._v("Redis set对外提供的功能与list类似是一个列表的功能，特殊之处在于set是可以自动排重的，当你需要存储一个列表数据，又不希望出现重复数据时，set是一个很好的选择，并且set提供了判断某个成员是否在一个set集合内的重要接口，这个也是list所不能提供的。 又或者在微博应用中，每个用户关注的人存在一个集合中，就很容易实现求两个人的共同好友功能。")]),s._v(" "),e("p",[s._v("这个在奶茶活动中有运用，就是利用set存储用户之间的点赞关联的，另外在点赞前判断是否点赞过就利用了 sismembe r方法，当时这个接口的响应时间控制在10毫秒内，十分高效")]),s._v(" "),e("h2",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29665317",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://zhuanlan.zhihu.com/p/29665317"),e("OutboundLink")],1)])]),s._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/40dbc78711c8",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.jianshu.com/p/40dbc78711c8"),e("OutboundLink")],1)])]),s._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.pdai.tech/md/db/nosql-redis/db-redis-introduce.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.pdai.tech/md/db/nosql-redis/db-redis-introduce.html"),e("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=i.exports}}]);