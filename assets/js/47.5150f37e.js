(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{374:function(t,e,s){"use strict";s.r(e);var a=s(2),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"部署node节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署node节点"}},[t._v("#")]),t._v(" 部署Node节点")]),t._v(" "),e("p",[e("code",[t._v("kubernetes master")]),t._v(" 节点包含的组件：")]),t._v(" "),e("ul",[e("li",[t._v("kubelet")]),t._v(" "),e("li",[t._v("kube-proxy")]),t._v(" "),e("li",[t._v("core-dns")])]),t._v(" "),e("h2",{attrs:{id:"一、创建工作目录并拷贝二进制文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、创建工作目录并拷贝二进制文件"}},[t._v("#")]),t._v(" 一、创建工作目录并拷贝二进制文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在所有worker node创建工作目录：")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /etc/kubernetes/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("bin,cfg,logs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从master节点拷贝：")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" kubernetes/server/bin\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" kubelet kube-proxy root@192.168.10.101:/etc/kubernetes/bin\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" kubelet kube-proxy root@192.168.10.103:/etc/kubernetes/bin\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分发 证书")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" -r /etc/kubernetes/ca root@192.168.10.101:/etc/kubernetes/\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" -r /etc/kubernetes/ca root@192.168.10.103:/etc/kubernetes/\n")])])]),e("h2",{attrs:{id:"二、部署kubelet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、部署kubelet"}},[t._v("#")]),t._v(" 二、部署kubelet")]),t._v(" "),e("p",[t._v("我们这里让kubelet使用引导token的方式认证，所以认证方式跟之前的组件不同，它的证书不是手动生成，而是由工作节点"),e("code",[t._v("TLS BootStrap")]),t._v(" 向 "),e("code",[t._v("api-server")]),t._v(" 请求，由主节点的"),e("code",[t._v("controller-manager")]),t._v(" 自动签发。")]),t._v(" "),e("h3",{attrs:{id:"_2-1-创建kubelet配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-创建kubelet配置文件"}},[t._v("#")]),t._v(" 2.1 创建kubelet配置文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要修改 hostname-override")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/kubernetes/cfg/kubelet.conf "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('EOF\nKUBELET_OPTS="--logtostderr=false '),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--v=2 "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--log-dir=/etc/kubernetes/logs "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--hostname-override=server01 "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--network-plugin=cni "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--cni-bin-dir=/opt/cni/bin "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--kubeconfig=/etc/kubernetes/cfg/kubelet.kubeconfig "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--bootstrap-kubeconfig=/etc/kubernetes/cfg/bootstrap.kubeconfig "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--config=/etc/kubernetes/cfg/kubelet-config.yml "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--cert-dir=/etc/kubernetes/ca "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v('\n--pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google-containers/pause-amd64:3.0"\nEOF')]),t._v("\n")])])]),e("p",[t._v("字段描述：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("--hostname-override")]),t._v("：显示名称，集群中唯一，需要修改成你之前设置主机名，我的是 server01")]),t._v(" "),e("li",[t._v("--network-plugin：启用CNI")]),t._v(" "),e("li",[t._v("--cni-bin-dir：实际的 CNI 插件可执行文件位置")]),t._v(" "),e("li",[t._v("--kubeconfig：用于连接apiserver")]),t._v(" "),e("li",[t._v("--bootstrap-kubeconfig：首次启动向apiserver申请证书")]),t._v(" "),e("li",[t._v("--config：配置参数文件")]),t._v(" "),e("li",[t._v("--cert-dir：kubelet证书生成目录")]),t._v(" "),e("li",[t._v("--pod-infra-container-image：管理Pod网络容器的镜像")])]),t._v(" "),e("h3",{attrs:{id:"_2-2-配置参数文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-配置参数文件"}},[t._v("#")]),t._v(" 2.2 配置参数文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/kubernetes/cfg/kubelet-config.yml "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io/v1beta1\naddress: 0.0.0.0\nport: 10250\nreadOnlyPort: 10255\ncgroupDriver: cgroupfs\nclusterDNS:\n- 10.0.0.2\nclusterDomain: cluster.local \nfailSwapOn: false\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    cacheTTL: 2m0s\n    enabled: true\n  x509:\n    clientCAFile: /etc/kubernetes/ca/ca.pem \nauthorization:\n  mode: Webhook\n  webhook:\n    cacheAuthorizedTTL: 5m0s\n    cacheUnauthorizedTTL: 30s\nevictionHard:\n  imagefs.available: 15%\n  memory.available: 100Mi\n  nodefs.available: 10%\n  nodefs.inodesFree: 5%\nmaxOpenFiles: 1000000\nmaxPods: 110\nEOF")]),t._v("\n")])])]),e("h3",{attrs:{id:"_2-3-生成bootstrap-kubeconfig文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-生成bootstrap-kubeconfig文件"}},[t._v("#")]),t._v(" 2.3 生成bootstrap.kubeconfig文件")]),t._v(" "),e("blockquote",[e("p",[t._v("这个配置是用来完成bootstrap token认证的，保存了像用户，token等重要的认证信息，这个文件可以借助kubectl命令生成：（也可以自己写配置）")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl 命令可以在 master 节点执行，也可以把 kubectl 命令拷贝到 node 节点")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" /usr/local/bin/kubectl root@192.168.10.101:/usr/local/bin\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定apiserver的地址和证书位置（ip自行修改）")]),t._v("\nkubectl config set-cluster kubernetes "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --certificate-authority"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/ca/ca.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --embed-certs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --server"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://192.168.10.102:6443 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --kubeconfig"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bootstrap.kubeconfig\n  \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置客户端认证参数(注意替换token)")]),t._v("\nkubectl config set-credentials kubelet-bootstrap "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --token"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("71dacbf4a541549a2426e3fae9b03a0f "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --kubeconfig"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bootstrap.kubeconfig\n        \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置上下文")]),t._v("\nkubectl config set-context default "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --cluster"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kubernetes "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --user"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kubelet-bootstrap "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --kubeconfig"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bootstrap.kubeconfig\n        \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置当前上下文")]),t._v("\nkubectl config use-context default --kubeconfig"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bootstrap.kubeconfig\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移动到配置文件路径")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" bootstrap.kubeconfig /etc/kubernetes/cfg\n        \n")])])]),e("h3",{attrs:{id:"_2-4-systemd管理kubelet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-systemd管理kubelet"}},[t._v("#")]),t._v(" 2.4 systemd管理kubelet")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib/systemd/system/kubelet.service "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n[Unit]\nDescription=Kubernetes Kubelet\nAfter=docker.service\n\n[Service]\nEnvironmentFile=/etc/kubernetes/cfg/kubelet.conf\nExecStart=/etc/kubernetes/bin/kubelet \\"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$KUBELET_OPTS")]),t._v("\nRestart=on-failure\nLimitNOFILE=65536\n\n[Install]\nWantedBy=multi-user.target\nEOF")]),t._v("\n")])])]),e("h3",{attrs:{id:"_2-5-启动并设置开机启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-启动并设置开机启动"}},[t._v("#")]),t._v(" 2.5 启动并设置开机启动")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("systemctl daemon-reload\nsystemctl start kubelet\nsystemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" kubelet\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看日志是否启动异常")]),t._v("\njournalctl -f -u kubelet\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" -100f /etc/kubernetes/logs/kubelet.ERROR\n")])])]),e("h3",{attrs:{id:"_2-6-批准kubelet证书申请并加入集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-批准kubelet证书申请并加入集群"}},[t._v("#")]),t._v(" 2.6 批准kubelet证书申请并加入集群")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#--------*在主节点执行*---------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看kubelet证书请求")]),t._v("\nkubectl get csr\nNAME            AGE    SIGNERNAME                                    REQUESTOR           CONDITION\nnode-csr-XXXX   6m3s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 批准申请")]),t._v("\n$ kubectl get csr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pending'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print $1}'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" kubectl certificate approve\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看节点")]),t._v("\nkubectl get "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v("\nNAME       STATUS     ROLES    AGE     VERSION\nserver01   NotReady   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   2m23s   v1.18.6\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#-----------------------------")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",[t._v("注：由于网络插件还没有部署，节点会没有准备就绪 NotReady")])]),t._v(" "),e("h2",{attrs:{id:"三、部署kube-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、部署kube-proxy"}},[t._v("#")]),t._v(" 三、部署kube-proxy")]),t._v(" "),e("h3",{attrs:{id:"_3-1-创建kube-proxy配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-创建kube-proxy配置文件"}},[t._v("#")]),t._v(" 3.1 创建kube-proxy配置文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/kubernetes/cfg/kube-proxy.conf "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('EOF\nKUBE_PROXY_OPTS="--logtostderr=false '),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--v=2 "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("\n--log-dir=/etc/kubernetes/logs "),e("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v('\n--config=/etc/kubernetes/cfg/kube-proxy-config.yml"\nEOF')]),t._v("\n")])])]),e("h3",{attrs:{id:"_3-2-配置参数文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-配置参数文件"}},[t._v("#")]),t._v(" 3.2 配置参数文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意修改 hostnameOverride 显示名称，集群中唯一")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/kubernetes/cfg/kube-proxy-config.yml "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nmetricsBindAddress: 0.0.0.0:10249\nclientConnection:\n  kubeconfig: /etc/kubernetes/cfg/kube-proxy.kubeconfig\nhostnameOverride: 192.168.10.101\nclusterCIDR: 10.0.0.0/24\nEOF")]),t._v("\n")])])]),e("h3",{attrs:{id:"_3-3-生成kube-proxy-kubeconfig文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-生成kube-proxy-kubeconfig文件"}},[t._v("#")]),t._v(" 3.3 生成kube-proxy.kubeconfig文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置集群参数（注意替换ip）")]),t._v("\nkubectl config set-cluster kubernetes "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --certificate-authority"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/ca/ca.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --embed-certs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --server"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://192.168.10.102:6443 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --kubeconfig"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kube-proxy.kubeconfig\n  \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端认证参数")]),t._v("\nkubectl config set-credentials kube-proxy "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --client-certificate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/ca/kube-proxy/kube-proxy.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --client-key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/ca/kube-proxy/kube-proxy-key.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --embed-certs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --kubeconfig"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kube-proxy.kubeconfig\n        \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置上下文参数")]),t._v("\nkubectl config set-context default "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --cluster"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kubernetes "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --user"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kube-proxy "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        --kubeconfig"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kube-proxy.kubeconfig\n        \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择上下文")]),t._v("\nkubectl config use-context default --kubeconfig"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kube-proxy.kubeconfig\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移动到合适位置")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" kube-proxy.kubeconfig /etc/kubernetes/cfg/\n")])])]),e("h3",{attrs:{id:"_3-4-systemd管理kube-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-systemd管理kube-proxy"}},[t._v("#")]),t._v(" 3.4 systemd管理kube-proxy")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib/systemd/system/kube-proxy.service "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n[Unit]\nDescription=Kubernetes Proxy\nAfter=network.target\n\n[Service]\nEnvironmentFile=/etc/kubernetes/cfg/kube-proxy.conf\nExecStart=/etc/kubernetes/bin/kube-proxy \\"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$KUBE_PROXY_OPTS")]),t._v("\nRestart=on-failure\nLimitNOFILE=65536\n\n[Install]\nWantedBy=multi-user.target\nEOF")]),t._v("\n")])])]),e("h3",{attrs:{id:"_3-5-启动并设置开机启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-启动并设置开机启动"}},[t._v("#")]),t._v(" 3.5 启动并设置开机启动")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("systemctl daemon-reload\nsystemctl start kube-proxy\nsystemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" kube-proxy\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看日志是否启动异常")]),t._v("\njournalctl -f -u kube-proxy\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" -100f /etc/kubernetes/logs/kube-proxy.ERROR\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);