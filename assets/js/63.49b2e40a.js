(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{411:function(s,t,a){"use strict";a.r(t);var e=a(2),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"创建tls证书和秘钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建tls证书和秘钥"}},[s._v("#")]),s._v(" 创建TLS证书和秘钥")]),s._v(" "),t("p",[t("strong",[s._v("如果您不想看认证授权的解释，请直接看")]),s._v(" "),t("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E5%AE%89%E8%A3%85-cfssl"}},[s._v("安装 CFSSL")])]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#创建tls证书和秘钥"}},[s._v("创建TLS证书和秘钥")]),t("ul",[t("li",[t("a",{attrs:{href:"#一、理解认证授权"}},[s._v("一、理解认证授权")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-为什么要认证"}},[s._v("1.1 为什么要认证")])]),t("li",[t("a",{attrs:{href:"#_1-2-概念梳理"}},[s._v("1.2 概念梳理")])]),t("li",[t("a",{attrs:{href:"#_1-3-什么是授权"}},[s._v("1.3 什么是授权")])])])]),t("li",[t("a",{attrs:{href:"#二、kubernetes的认证授权"}},[s._v("二、kubernetes的认证授权")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-kubernetes的认证"}},[s._v("2.1 kubernetes的认证")])]),t("li",[t("a",{attrs:{href:"#_2-2-kubernetes的授权"}},[s._v("2.2 kubernetes的授权")])]),t("li",[t("a",{attrs:{href:"#_2-3-kubernetes的admissioncontrol"}},[s._v("2.3 kubernetes的AdmissionControl")])])])]),t("li",[t("a",{attrs:{href:"#三、安装-cfssl"}},[s._v("三、安装 CFSSL")])]),t("li",[t("a",{attrs:{href:"#证书位置"}},[s._v("证书位置")])]),t("li",[t("a",{attrs:{href:"#四、创建-ca-根证书"}},[s._v("四、创建 CA (根证书)")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-创建-ca-配置文件"}},[s._v("4.1 创建 CA 配置文件")])]),t("li",[t("a",{attrs:{href:"#_4-2-创建-ca-证书签名请求"}},[s._v("4.2 创建 CA 证书签名请求")])]),t("li",[t("a",{attrs:{href:"#_4-3-生成-ca-证书和私钥"}},[s._v("4.3 生成 CA 证书和私钥")])])])]),t("li",[t("a",{attrs:{href:"#五、创建-etcd-证书"}},[s._v("五、创建 ETCD 证书")]),t("ul",[t("li",[t("a",{attrs:{href:"#_5-1-生成-etcd-证书配置"}},[s._v("5.1 生成 etcd 证书配置")])]),t("li",[t("a",{attrs:{href:"#_5-2-使用根证书-ca-pem-签发etcd证书"}},[s._v("5.2 使用根证书(ca.pem)签发etcd证书")])])])]),t("li",[t("a",{attrs:{href:"#六、创建-api-server-证书"}},[s._v("六、创建 Api-server 证书")]),t("ul",[t("li",[t("a",{attrs:{href:"#_6-1-生成-api-server-证书配置"}},[s._v("6.1 生成 Api-server 证书配置")])]),t("li",[t("a",{attrs:{href:"#_6-2-使用根证书-ca-pem-签发-apiserver-证书"}},[s._v("6.2 使用根证书(ca.pem)签发 apiserver 证书")])])])]),t("li",[t("a",{attrs:{href:"#七、创建-admin-证书"}},[s._v("七、创建 Admin 证书")]),t("ul",[t("li",[t("a",{attrs:{href:"#_7-1-生成-admin-证书配置"}},[s._v("7.1 生成 Admin 证书配置")])]),t("li",[t("a",{attrs:{href:"#_7-2-使用根证书-ca-pem-签发admin证书"}},[s._v("7.2 使用根证书(ca.pem)签发admin证书")])])])]),t("li",[t("a",{attrs:{href:"#八、创建-kube-proxy-证书"}},[s._v("八、创建 kube-proxy 证书")]),t("ul",[t("li",[t("a",{attrs:{href:"#_8-1-生成-kube-proxy-证书配置"}},[s._v("8.1 生成 kube-proxy 证书配置")])]),t("li",[t("a",{attrs:{href:"#_8-2-使用根证书-ca-pem-签发proxy证书"}},[s._v("8.2 使用根证书(ca.pem)签发proxy证书")])])])]),t("li",[t("a",{attrs:{href:"#九、分发证书"}},[s._v("九、分发证书")])]),t("li",[t("a",{attrs:{href:"#十、启用-tls-bootstrapping-机制"}},[s._v("十、启用 TLS Bootstrapping 机制")]),t("ul",[t("li",[t("a",{attrs:{href:"#_10-1-生成token认证文件"}},[s._v("10.1 生成token认证文件")])])])])])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"一、理解认证授权"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、理解认证授权"}},[s._v("#")]),s._v(" 一、理解认证授权")]),s._v(" "),t("blockquote",[t("p",[s._v("该段理解引用 "),t("a",{attrs:{href:"https://github.com/liuyi01/kubernetes-starter/blob/master/docs/3-kubernetes-with-ca.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("kubernetes-with-ca"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"_1-1-为什么要认证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-为什么要认证"}},[s._v("#")]),s._v(" 1.1 为什么要认证")]),s._v(" "),t("p",[s._v("想理解认证，我们得从认证解决什么问题、防止什么问题的发生入手。\n防止什么问题呢？是防止有人入侵你的集群，root你的机器后让我们集群依然安全吗？不是吧，root都到手了，那就为所欲为，防不胜防了。\n其实网络安全本身就是为了解决在某些假设成立的条件下如何防范的问题。比如一个非常重要的假设就是两个节点或者ip之间的通讯网络是不可信任的，可能会被第三方窃取，也可能会被第三方篡改。就像我们上学时候给心仪的女孩传纸条，传送的过程可能会被别的同学偷看，甚至内容可能会从我喜欢你修改成我不喜欢你了。当然这种假设不是随便想出来的，而是从网络技术现状和实际发生的问题中发现、总结出来的。kubernetes的认证也是从这个问题出发来实现的。")]),s._v(" "),t("h3",{attrs:{id:"_1-2-概念梳理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-概念梳理"}},[s._v("#")]),s._v(" 1.2 概念梳理")]),s._v(" "),t("p",[s._v("为了解决上面说的问题，kubernetes并不需要自己想办法，毕竟是网络安全层面的问题，是每个服务都会遇到的问题，业内也有成熟的方案来解决。这里我们一起了解一下业内方案和相关的概念。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("对称加密/非对称加密")]),s._v(" 这两个概念属于密码学的东西，对于没接触过的同学不太容易理解。可以参考知乎大神的生动讲解："),t("a",{attrs:{href:"https://www.zhihu.com/question/33645891/answer/57721969",target:"_blank",rel:"noopener noreferrer"}},[s._v("《如何用通俗易懂的话来解释非对称加密》"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("strong",[s._v("SSL/TLS")]),s._v(" 了解了对称加密和非对称加密后，我们就可以了解一下SSL/TLS了。同样，已经有大神总结了非常好的入门文章："),t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("《SSL/TLS协议运行机制的概述》"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"_1-3-什么是授权"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-什么是授权"}},[s._v("#")]),s._v(" 1.3 什么是授权")]),s._v(" "),t("p",[s._v("授权的概念就简单多了，就是什么人具有什么样的权限，一般通过角色作为纽带把他们组合在一起。也就是一个角色一边拥有多种权限，一边拥有多个人。这样就把人和权限建立了一个关系。")]),s._v(" "),t("h2",{attrs:{id:"二、kubernetes的认证授权"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、kubernetes的认证授权"}},[s._v("#")]),s._v(" 二、kubernetes的认证授权")]),s._v(" "),t("p",[s._v("Kubernetes集群的所有操作基本上都是通过kube-apiserver这个组件进行的，它提供HTTP RESTful形式的API供集群内外客户端调用。需要注意的是：认证授权过程只存在HTTPS形式的API中。也就是说，如果客户端使用HTTP连接到kube-apiserver，那么是不会进行认证授权的。所以说，可以这么设置，在集群内部组件间通信使用HTTP，集群外部就使用HTTPS，这样既增加了安全性，也不至于太复杂。\n对APIServer的访问要经过的三个步骤，前面两个是认证和授权，第三个是 Admission Control，它也能在一定程度上提高安全性，不过更多是资源管理方面的作用。")]),s._v(" "),t("h3",{attrs:{id:"_2-1-kubernetes的认证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-kubernetes的认证"}},[s._v("#")]),s._v(" 2.1 kubernetes的认证")]),s._v(" "),t("p",[s._v("kubernetes提供了多种认证方式，比如客户端证书、静态token、静态密码文件、ServiceAccountTokens等等。你可以同时使用一种或多种认证方式。只要通过任何一个都被认作是认证通过。下面我们就认识几个常见的认证方式。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("客户端证书认证")]),s._v(" 客户端证书认证叫作TLS双向认证，也就是服务器客户端互相验证证书的正确性，在都正确的情况下协调通信加密方案。 为了使用这个方案，api-server需要用--client-ca-file选项来开启。")]),s._v(" "),t("li",[t("strong",[s._v("引导Token")]),s._v(" 当我们有非常多的node节点时，手动为每个node节点配置TLS认证比较麻烦，这时就可以用到引导token的认证方式，前提是需要在api-server开启 experimental-bootstrap-token-auth 特性，客户端的token信息与预先定义的token匹配认证通过后，自动为node颁发证书。当然引导token是一种机制，可以用到各种场景中。")]),s._v(" "),t("li",[t("strong",[s._v("Service Account Tokens 认证")]),s._v(" 有些情况下，我们希望在pod内部访问api-server，获取集群的信息，甚至对集群进行改动。针对这种情况，kubernetes提供了一种特殊的认证方式：Service Account。 Service Account 和 pod、service、deployment 一样是 kubernetes 集群中的一种资源，用户也可以创建自己的 Service Account。 ServiceAccount 主要包含了三个内容：namespace、Token 和 CA。namespace 指定了 pod 所在的 namespace，CA 用于验证 apiserver 的证书，token 用作身份验证。它们都通过 mount 的方式保存在 pod 的文件系统中。")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-kubernetes的授权"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-kubernetes的授权"}},[s._v("#")]),s._v(" 2.2 kubernetes的授权")]),s._v(" "),t("p",[s._v("在Kubernetes1.6版本中新增角色访问控制机制（Role-Based Access，RBAC）让集群管理员可以针对特定使用者或服务账号的角色，进行更精确的资源访问控制。在RBAC中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。在一个组织中，角色是为了完成各种工作而创造，用户则依据它的责任和资格来被指派相应的角色，用户可以很容易地从一个角色被指派到另一个角色。 目前 Kubernetes 中有一系列的鉴权机制，因为Kubernetes社区的投入和偏好，相对于其它鉴权机制而言，RBAC是更好的选择。具体RBAC是如何体现在kubernetes系统中的我们会在后面的部署中逐步的深入了解。")]),s._v(" "),t("h3",{attrs:{id:"_2-3-kubernetes的admissioncontrol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-kubernetes的admissioncontrol"}},[s._v("#")]),s._v(" 2.3 kubernetes的AdmissionControl")]),s._v(" "),t("p",[s._v("AdmissionControl - 准入控制本质上为一段准入代码，在对kubernetes api的请求过程中，顺序为：先经过认证 & 授权，然后执行准入操作，最后对目标对象进行操作。这个准入代码在api-server中，而且必须被编译到二进制文件中才能被执行。 在对集群进行请求时，每个准入控制代码都按照一定顺序执行。如果有一个准入控制拒绝了此次请求，那么整个请求的结果将会立即返回，并提示用户相应的error信息。 常用组件（控制代码）如下：")]),s._v(" "),t("ul",[t("li",[s._v("AlwaysAdmit：允许所有请求")]),s._v(" "),t("li",[s._v("AlwaysDeny：禁止所有请求，多用于测试环境")]),s._v(" "),t("li",[s._v("ServiceAccount：它将serviceAccounts实现了自动化，它会辅助serviceAccount做一些事情，比如如果pod没有serviceAccount属性，它会自动添加一个default，并确保pod的serviceAccount始终存在")]),s._v(" "),t("li",[s._v("LimitRanger：他会观察所有的请求，确保没有违反已经定义好的约束条件，这些条件定义在namespace中LimitRange对象中。如果在kubernetes中使用LimitRange对象，则必须使用这个插件。")]),s._v(" "),t("li",[s._v("NamespaceExists：它会观察所有的请求，如果请求尝试创建一个不存在的namespace，则这个请求被拒绝。")])]),s._v(" "),t("h2",{attrs:{id:"三、安装-cfssl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、安装-cfssl"}},[s._v("#")]),s._v(" 三、安装 CFSSL")]),s._v(" "),t("p",[t("strong",[s._v("需要准备的证书：")])]),s._v(" "),t("ul",[t("li",[s._v("ca-key.pem")]),s._v(" "),t("li",[s._v("ca.pem")]),s._v(" "),t("li",[s._v("etcd-key.pem")]),s._v(" "),t("li",[s._v("etcd.pem")]),s._v(" "),t("li",[s._v("server-key.pem")]),s._v(" "),t("li",[s._v("server.pem")]),s._v(" "),t("li",[s._v("admin.pem")]),s._v(" "),t("li",[s._v("admin-key.pem")]),s._v(" "),t("li",[s._v("kube-proxy-key.pem")]),s._v(" "),t("li",[s._v("kube-proxy.pem")])]),s._v(" "),t("p",[t("strong",[s._v("使用证书的组件如下：")])]),s._v(" "),t("ul",[t("li",[s._v("etcd：使用 ca.pem、server-key.pem、server.pem")]),s._v(" "),t("li",[s._v("kube-apiserver：使用 ca.pem、server-key.pem、server.pem")]),s._v(" "),t("li",[s._v("kubelet：使用 ca.pem")]),s._v(" "),t("li",[s._v("kube-proxy：使用 ca.pem、kube-proxy-key.pem、kube-proxy.pem")]),s._v(" "),t("li",[s._v("kubectl：使用 ca.pem、admin-key.pem、admin.pem")]),s._v(" "),t("li",[s._v("kube-controller-manager：使用 ca-key.pem、ca.pem")])]),s._v(" "),t("p",[s._v("我们使用CFSSL来制作证书，它是cloudflare开发的一个开源的PKI工具，是一个完备的CA服务系统，可以签署、撤销证书等，覆盖了一个证书的整个生命周期，后面只用到了它的命令行工具。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",[s._v("注：一般情况下，K8S中证书只需要创建一次，以后在向集群中添加新节点时只要将/etc/kubernetes/ca目录下的证书拷贝到新节点上即可。")])]),s._v(" "),t("p",[s._v("cfssl是非常好用的CA工具，我们用它来生成证书和秘钥文件，"),t("strong",[s._v("直接使用二进制源码包安装：")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v(" --show-progress --https-only "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--timestamping")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n  \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改为可执行权限")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x cfssl_linux-amd64 cfssljson_linux-amd64\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#移动到bin目录")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" cfssl_linux-amd64 /usr/local/bin/cfssl\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" cfssljson_linux-amd64 /usr/local/bin/cfssljson\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#验证")]),s._v("\n$ cfssl version\n")])])]),t("h2",{attrs:{id:"证书位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#证书位置"}},[s._v("#")]),s._v(" 证书位置")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#所有证书相关的东西都放在这, 后面所有的证书都放在该目录下, 你可以自定义")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /etc/kubernetes/ca\n")])])]),t("h2",{attrs:{id:"四、创建-ca-根证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、创建-ca-根证书"}},[s._v("#")]),s._v(" 四、创建 CA (根证书)")]),s._v(" "),t("h3",{attrs:{id:"_4-1-创建-ca-配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建-ca-配置文件"}},[s._v("#")]),s._v(" 4.1 创建 CA 配置文件")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /etc/kubernetes/ca\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建如下的ca-config.json文件(* 也可以不执行该命令，直接创建下面👇的文件)")]),s._v("\ncfssl print-defaults config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ca-config.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改 ca-config.json 文件，如下：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" ca-config.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 过期时间设置成了 87600h")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"signing"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"default"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"expiry"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"87600h"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"profiles"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubernetes"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"usages"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"signing"')]),s._v(",\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key encipherment"')]),s._v(",\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"server auth"')]),s._v(",\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client auth"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"expiry"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"87600h"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),t("p",[s._v("字段说明")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("ca-config.json")]),s._v("：可以定义多个 profiles，分别指定不同的过期时间、使用场景等参数；后续在签名证书时使用某个 profile；")]),s._v(" "),t("li",[t("code",[s._v("signing")]),s._v("：表示该证书可用于签名其它证书；生成的 ca.pem 证书中 "),t("code",[s._v("CA=TRUE")]),s._v("；")]),s._v(" "),t("li",[t("code",[s._v("server auth")]),s._v("：表示client可以用该 CA 对server提供的证书进行验证；")]),s._v(" "),t("li",[t("code",[s._v("client auth")]),s._v("：表示server可以用该CA对client提供的证书进行验证；")])]),s._v(" "),t("h3",{attrs:{id:"_4-2-创建-ca-证书签名请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-创建-ca-证书签名请求"}},[s._v("#")]),s._v(" 4.2 创建 CA 证书签名请求")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建如下的ca-csr.json文件")]),s._v("\ncfssl print-defaults csr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ca-csr.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改 ca-csr.json 文件，如下：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" ca-csr.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ca-csr.josn 文件内容如下")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubernetes"')]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"algo"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rsa"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"size"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"names"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ST"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BeiJing"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"L"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BeiJing"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"O"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k8s"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OU"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"System"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ca"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"expiry"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"87600h"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("字段说明")]),s._v(" "),t("ul",[t("li",[s._v('"CN"：'),t("code",[s._v("Common Name")]),s._v("，kube-apiserver 从证书中提取该字段作为请求的用户名 (User Name)；浏览器使用该字段验证网站是否合法；")]),s._v(" "),t("li",[s._v('"O"：'),t("code",[s._v("Organization")]),s._v("，kube-apiserver 从证书中提取该字段作为请求用户所属的组 (Group)；")])]),s._v(" "),t("h3",{attrs:{id:"_4-3-生成-ca-证书和私钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-生成-ca-证书和私钥"}},[s._v("#")]),s._v(" 4.3 生成 CA 证书和私钥")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("cfssl gencert "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-initca")]),s._v(" ca-csr.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cfssljson "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-bare")]),s._v(" ca\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成完成后会有以下文件（我们最终想要的就是ca-key.pem和ca.pem，一个秘钥，一个证书）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem\n")])])]),t("h2",{attrs:{id:"五、创建-etcd-证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、创建-etcd-证书"}},[s._v("#")]),s._v(" 五、创建 ETCD 证书")]),s._v(" "),t("h3",{attrs:{id:"_5-1-生成-etcd-证书配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-生成-etcd-证书配置"}},[s._v("#")]),s._v(" 5.1 生成 etcd 证书配置")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# etcd证书放在这")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /etc/kubernetes/ca/etcd\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /etc/kubernetes/ca/etcd\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" etcd-csr.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件内容如下")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"etcd"')]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hosts"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.10.102"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"algo"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rsa"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"size"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"names"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ST"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Beijing"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"L"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"XS"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"O"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k8s"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OU"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"System"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("字段说明")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("hosts")]),s._v("：指定授权使用该证书的 "),t("strong",[s._v("IP 或域名列表")]),s._v("，如果有部署多个 etcd，那么就需要填入其他 etcd 的 "),t("strong",[s._v("IP 或域名列表")]),s._v("，我这里只部署一台所以就写一个☝️")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",[s._v("注：上述文件hosts字段中IP为所有etcd节点的集群内部通信IP，一个都不能少！为了方便后期扩容可以多写几个预留的IP。")])]),s._v(" "),t("h3",{attrs:{id:"_5-2-使用根证书-ca-pem-签发etcd证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-使用根证书-ca-pem-签发etcd证书"}},[s._v("#")]),s._v(" 5.2 使用根证书(ca.pem)签发etcd证书")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("cfssl gencert "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ca")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        -ca-key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca-key.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-config")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca-config.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-profile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubernetes etcd-csr.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cfssljson "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-bare")]),s._v(" etcd\n   \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跟之前类似生成三个文件etcd.csr是个中间证书请求文件，我们最终要的是etcd-key.pem和etcd.pem")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" etcd.csr  etcd-csr.json  etcd-key.pem  etcd.pem\n")])])]),t("h2",{attrs:{id:"六、创建-api-server-证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、创建-api-server-证书"}},[s._v("#")]),s._v(" 六、创建 Api-server 证书")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("controller-manager：")]),s._v(" 一般与api-server在同一台机器上，所以可以使用非安全端口与api-server通讯，不需要生成证书和私钥")]),s._v(" "),t("li",[t("strong",[s._v("scheduler：")]),s._v(" 一般与apiserver在同一台机器上，所以可以使用非安全端口与apiserver通讯。不需要生成证书和私钥。")])]),s._v(" "),t("h3",{attrs:{id:"_6-1-生成-api-server-证书配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-生成-api-server-证书配置"}},[s._v("#")]),s._v(" 6.1 生成 Api-server 证书配置")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# api-server证书放在这")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /etc/kubernetes/ca/server\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /etc/kubernetes/ca/server\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" server-csr.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内容如下")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubernetes"')]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hosts"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.0.0.1"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.10.101"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.10.102"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.10.103"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubernetes"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubernetes.default"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubernetes.default.svc"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubernetes.default.svc.cluster"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubernetes.default.svc.cluster.local"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"algo"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rsa"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"size"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"names"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ST"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Beijing"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"L"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"XS"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"O"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k8s"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OU"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"System"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("ul",[t("li",[t("strong",[t("code",[s._v("kubernetes")]),s._v(" 服务的服务 IP")]),s._v("（一般是 "),t("code",[s._v("kube-apiserver")]),s._v(" 指定的 "),t("code",[s._v("service-cluster-ip-range")]),s._v(" 网段的第一个IP，如 10.0.0.1）")])]),s._v(" "),t("h3",{attrs:{id:"_6-2-使用根证书-ca-pem-签发-apiserver-证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-使用根证书-ca-pem-签发-apiserver-证书"}},[s._v("#")]),s._v(" 6.2 使用根证书(ca.pem)签发 apiserver 证书")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("cfssl gencert "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ca")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        -ca-key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca-key.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-config")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca-config.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-profile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubernetes server-csr.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cfssljson "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-bare")]),s._v(" server\n        \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跟之前类似生成三个文件server.csr是个中间证书请求文件，我们最终要的是server-key.pem和server.pem")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" server-csr.json server.csr server.pem server-key.pem\n")])])]),t("h2",{attrs:{id:"七、创建-admin-证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、创建-admin-证书"}},[s._v("#")]),s._v(" 七、创建 Admin 证书")]),s._v(" "),t("h3",{attrs:{id:"_7-1-生成-admin-证书配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-生成-admin-证书配置"}},[s._v("#")]),s._v(" 7.1 生成 Admin 证书配置")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl证书放在这，由于kubectl相当于系统管理员，我们使用admin命名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /etc/kubernetes/ca/admin\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /etc/kubernetes/ca/admin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" admin-csr.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内容如下")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin"')]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hosts"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"algo"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rsa"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"size"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"names"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ST"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BeiJing"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"L"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BeiJing"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"O"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"system:masters"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OU"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"System"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_7-2-使用根证书-ca-pem-签发admin证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-使用根证书-ca-pem-签发admin证书"}},[s._v("#")]),s._v(" 7.2 使用根证书(ca.pem)签发admin证书")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("cfssl gencert "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ca")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        -ca-key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca-key.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-config")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca-config.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-profile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubernetes admin-csr.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cfssljson "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-bare")]),s._v(" admin\n        \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我们最终要的是admin-key.pem和admin.pem")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" admin.csr  admin-csr.json  admin-key.pem  admin.pem\n")])])]),t("h2",{attrs:{id:"八、创建-kube-proxy-证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八、创建-kube-proxy-证书"}},[s._v("#")]),s._v(" 八、创建 kube-proxy 证书")]),s._v(" "),t("h3",{attrs:{id:"_8-1-生成-kube-proxy-证书配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-生成-kube-proxy-证书配置"}},[s._v("#")]),s._v(" 8.1 生成 kube-proxy 证书配置")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# proxy证书放在这")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /etc/kubernetes/ca/kube-proxy\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /etc/kubernetes/ca/kube-proxy\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" kube-proxy-csr.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内容如下")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"system:kube-proxy"')]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hosts"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"algo"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rsa"')]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"size"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"names"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CN"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ST"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Beijing"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"L"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BeiJing"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"O"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k8s"')]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OU"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"System"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("字段说明：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("CN 指定该证书的 User 为 "),t("code",[s._v("system:kube-proxy")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("kube-apiserver")]),s._v(" 预定义的 RoleBinding "),t("code",[s._v("system:node-proxy")]),s._v(" 将User "),t("code",[s._v("system:kube-proxy")]),s._v(" 与 Role "),t("code",[s._v("system:node-proxier")]),s._v(" 绑定，授予了调用 "),t("code",[s._v("kube-api-server")]),s._v(" proxy的相关 API 的权限")])])]),s._v(" "),t("h3",{attrs:{id:"_8-2-使用根证书-ca-pem-签发proxy证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-使用根证书-ca-pem-签发proxy证书"}},[s._v("#")]),s._v(" 8.2 使用根证书(ca.pem)签发proxy证书")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("cfssl gencert "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ca")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        -ca-key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca-key.pem "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-config")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/kubernetes/ca/ca-config.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-profile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubernetes kube-proxy-csr.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cfssljson "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-bare")]),s._v(" kube-proxy\n        \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我们最终要的是kube-proxy-key.pem和kube-proxy.pem")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kube-proxy.csr  kube-proxy-csr.json  kube-proxy-key.pem  kube-proxy.pem\n")])])]),t("h2",{attrs:{id:"九、分发证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#九、分发证书"}},[s._v("#")]),s._v(" 九、分发证书")]),s._v(" "),t("p",[s._v("将生成的证书和秘钥文件（后缀名为"),t("code",[s._v(".pem")]),s._v("）拷贝到所有机器的 "),t("code",[s._v("/etc/kubernetes/ca")]),s._v(" 目录下备用；")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后查看生成的证书目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /etc/kubernetes/ca\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" admin  ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem  etcd  kube-proxy  apiserver\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分发证书")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" /etc/kubernetes/ca root@其他节点ip:/etc/kubernetes/\n")])])]),t("h2",{attrs:{id:"十、启用-tls-bootstrapping-机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十、启用-tls-bootstrapping-机制"}},[s._v("#")]),s._v(" 十、启用 TLS Bootstrapping 机制")]),s._v(" "),t("p",[s._v("TLS Bootstraping：Master apiserver启用TLS认证后，Node节点kubelet和kube-proxy要与kube-apiserver进行通信，必须使用CA签发的有效证书才可以，当Node节点很多时，这种客户端证书颁发需要大量工作，同样也会增加集群扩展复杂度。为了简化流程，Kubernetes引入了TLS bootstraping机制来自动颁发客户端证书，kubelet会以一个低权限用户自动向apiserver申请证书，kubelet的证书由apiserver动态签署。所以强烈建议在Node上使用这种方式，目前主要用于kubelet，kube-proxy还是由我们统一颁发一个证书。")]),s._v(" "),t("p",[t("strong",[s._v("TLS bootstraping 工作流程：")])]),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://media.zenghr.cn/blog/img/TLS bootstraping 工作流程.png",alt:"TLSbootstraping工作流程"}}),s._v(" "),t("h3",{attrs:{id:"_10-1-生成token认证文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-生成token认证文件"}},[s._v("#")]),s._v(" 10.1 生成token认证文件")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成随机token")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" /dev/urandom "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" od "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-An")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按照固定格式写入token.csv，注意替换token内容")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"734883758a7159caba1d9501c22f1408,kubelet-bootstrap,10001,'),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("system:kubelet-bootstrap"),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/kubernetes/ca/server/token.csv\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);