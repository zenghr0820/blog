const e=JSON.parse('{"key":"v-6a2abaab","path":"/Java/concurrency/01.Java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%90%86%E8%AE%BA.html","title":"Java 多线程","lang":"zh-CN","frontmatter":{"title":"Java 多线程","date":"2021-04-28T10:00:00.000Z","re":"2021-04-28-java-thread-theory","category":["Java"],"description":"本文用于理解学习多线程的理论基础以及代码实现 带着BAT大厂的面试问题去理解 描述进程和线程的区别; 如何理解并发和并行的区别; 多线程的出现是要解决什么问题？; 线程不安全是指什么？举例说明; 实现线程安全有哪些方法？; 进程的发明 最初的计算机只能执行一些特定的指令，用户输入一个指令，计算机做出一个操作，显然计算机大部分时间都在等待用户的指令，效率...","head":[["meta",{"property":"og:url","content":"https://blog.zenghr.cn/Java/concurrency/2021-04-28-java-thread-theory.html"}],["meta",{"property":"og:site_name","content":"Zenghr"}],["meta",{"property":"og:title","content":"Java 多线程"}],["meta",{"property":"og:description","content":"本文用于理解学习多线程的理论基础以及代码实现 带着BAT大厂的面试问题去理解 描述进程和线程的区别; 如何理解并发和并行的区别; 多线程的出现是要解决什么问题？; 线程不安全是指什么？举例说明; 实现线程安全有哪些方法？; 进程的发明 最初的计算机只能执行一些特定的指令，用户输入一个指令，计算机做出一个操作，显然计算机大部分时间都在等待用户的指令，效率..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Zenghr"}],["meta",{"property":"article:published_time","content":"2021-04-28T10:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 多线程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-04-28T10:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zenghr\\"}]}"]]},"headers":[{"level":2,"title":"带着BAT大厂的面试问题去理解","slug":"带着bat大厂的面试问题去理解","link":"#带着bat大厂的面试问题去理解","children":[]},{"level":2,"title":"进程的发明","slug":"进程的发明","link":"#进程的发明","children":[]},{"level":2,"title":"并发和并行的概念","slug":"并发和并行的概念","link":"#并发和并行的概念","children":[]},{"level":2,"title":"线程的出现","slug":"线程的出现","link":"#线程的出现","children":[]},{"level":2,"title":"进程和线程的区别","slug":"进程和线程的区别","link":"#进程和线程的区别","children":[]},{"level":2,"title":"线程不安全实例","slug":"线程不安全实例","link":"#线程不安全实例","children":[]},{"level":2,"title":"实现线程安全","slug":"实现线程安全","link":"#实现线程安全","children":[{"level":3,"title":"1. 互斥同步","slug":"_1-互斥同步","link":"#_1-互斥同步","children":[]}]}],"git":{},"readingTime":{"minutes":4.64,"words":1391},"filePathRelative":"Java/concurrency/01.Java多线程理论.md","localizedDate":"2021年4月28日","autoDesc":true,"excerpt":""}');export{e as data};
