import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as l,c as i,d as n,e as s,b as a,w as u,a as p}from"./app-d467fdcd.js";const r={},d=n("h1",{id:"springboot集成elasticsearch",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#springboot集成elasticsearch","aria-hidden":"true"},"#"),s(" SpringBoot集成Elasticsearch")],-1),k=n("p",null,"SpringBoot默认支持两种技术来和 ES 交互；",-1),v=n("ul",null,[n("li",null,[s("Jest（默认不生效） "),n("ul",null,[n("li",null,"需要导入jest的工具包（io.searchbox.client.JestClient）"),n("li",null,"从springboot 2.2.0以后被弃用")])]),n("li",null,"SpringData ElasticSearch")],-1),m=n("p",null,"版本适配说明:",-1),b={href:"https://github.com/spring-projects/spring-data-elasticsearch/blob/main/src/main/asciidoc/preface.adoc",target:"_blank",rel:"noopener noreferrer"},h=p(`<table><thead><tr><th>Spring Data Release Train</th><th>Spring Data Elasticsearch</th><th>Elasticsearch</th><th>Spring Framework</th><th>Spring Boot</th></tr></thead><tbody><tr><td>2021.1</td><td>4.3.x</td><td>7.13.4</td><td>5.3.x</td><td>2.5.x</td></tr><tr><td>2021.0 (Pascal)</td><td>4.2.x</td><td>7.12.0</td><td>5.3.x</td><td>2.5.x</td></tr><tr><td>2020.0 (Ockham)</td><td>4.1.x</td><td>7.9.3</td><td>5.3.2</td><td>2.4.x</td></tr><tr><td>Neumann</td><td>4.0.x</td><td>7.6.2</td><td>5.2.12</td><td>2.3.x</td></tr><tr><td>Moore</td><td>3.2.x</td><td>6.8.12</td><td>5.2.12</td><td>2.2.x</td></tr><tr><td>Lovelace</td><td>3.1.x</td><td>6.2.2</td><td>5.1.19</td><td>2.1.x</td></tr><tr><td>Kay</td><td>3.0.x</td><td>5.5.0</td><td>5.0.13</td><td>2.0.x</td></tr><tr><td>Ingalls</td><td>2.1.x</td><td>2.4.0</td><td>4.3.25</td><td>1.5.x</td></tr></tbody></table><h2 id="配置环境" tabindex="-1"><a class="header-anchor" href="#配置环境" aria-hidden="true">#</a> 配置环境</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>开发环境配置如下👇</p></div><table><thead><tr><th>框架</th><th>版本</th></tr></thead><tbody><tr><td>SpringBoot</td><td>2.5.3</td></tr><tr><td>Elasticsearch</td><td>7.14.0</td></tr><tr><td>Spring Data Elasticsearch</td><td>4.2.3</td></tr></tbody></table><h2 id="导入-pom-文件" tabindex="-1"><a class="header-anchor" href="#导入-pom-文件" aria-hidden="true">#</a> 导入 pom 文件</h2><p>我们想要在 SpringBoot 中集成 Elasticsearch，第一步☝️就是导入相应的 pom 文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 全文搜索配置</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">elasticsearch</span><span class="token punctuation">:</span>
    <span class="token key atrule">rest</span><span class="token punctuation">:</span>
      <span class="token key atrule">uris</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">9200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),g={href:"http://localhost:9200",target:"_blank",rel:"noopener noreferrer"},y=p(`<h2 id="开启注解" tabindex="-1"><a class="header-anchor" href="#开启注解" aria-hidden="true">#</a> 开启注解</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableElasticsearchRepositories</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;xx.xxx.xxx&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因为使用了 Spring-data 框架，所以需要开启注解扫描 Repository 类</p><h2 id="编写对应的-javabean" tabindex="-1"><a class="header-anchor" href="#编写对应的-javabean" aria-hidden="true">#</a> 编写对应的 JavaBean</h2><p>先定义一个 JavaBean 类，指定索引名和 <s>类型(type 即将废用)</s></p><blockquote><p><strong>注意：SpringBoot启动时会自动创建映射，但要注意如果已经存在相同的index</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Document</span><span class="token punctuation">(</span>indexName <span class="token operator">=</span> <span class="token string">&quot;strategy_es&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StrategyEs</span> <span class="token punctuation">{</span>
    <span class="token comment">//@Field 每个文档的字段配置（类型、是否分词、是否存储、分词器 ）</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Long</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>  <span class="token comment">// 攻略id</span>

    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>analyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> searchAnalyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Text</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>  <span class="token comment">// 攻略标题</span>

    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>analyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> searchAnalyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Text</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> subTitle<span class="token punctuation">;</span>  <span class="token comment">// 攻略标题</span>

    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>analyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> store <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> searchAnalyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Text</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> summary<span class="token punctuation">;</span> <span class="token comment">// 攻略简介</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="documnet-注解" tabindex="-1"><a class="header-anchor" href="#documnet-注解" aria-hidden="true">#</a> @Documnet 注解</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Document</span> <span class="token punctuation">{</span>
    <span class="token comment">// 索引名称</span>
    <span class="token class-name">String</span> <span class="token function">indexName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Deprecated</span>
    <span class="token keyword">boolean</span> <span class="token function">useServerConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Deprecated</span>
    <span class="token keyword">short</span> <span class="token function">shards</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Deprecated</span>
    <span class="token keyword">short</span> <span class="token function">replicas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Deprecated</span>
    <span class="token class-name">String</span> <span class="token function">refreshInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;1s&quot;</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Deprecated</span>
    <span class="token class-name">String</span> <span class="token function">indexStoreType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;fs&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token class-name">VersionType</span> <span class="token function">versionType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">VersionType</span><span class="token punctuation">.</span><span class="token constant">EXTERNAL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="field-注解" tabindex="-1"><a class="header-anchor" href="#field-注解" aria-hidden="true">#</a> @Field 注解</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Field</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// 自动检测属性的类型，可以根据实际情况自己设置</span>
    <span class="token class-name">FieldType</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Auto</span><span class="token punctuation">;</span>
	<span class="token comment">// 默认情况下分词，一般默认分词就好，除非这个字段你确定查询时不会用到</span>
    <span class="token keyword">boolean</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token comment">// 时间格式化</span>
    <span class="token class-name">DateFormat</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token class-name">DateFormat</span><span class="token punctuation">.</span>date_optional_time<span class="token punctuation">,</span> <span class="token class-name">DateFormat</span><span class="token punctuation">.</span>epoch_millis<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token comment">// 默认情况下不存储原文</span>
    <span class="token keyword">boolean</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token comment">// 指定字段搜索时使用的分词器</span>
    <span class="token class-name">String</span> <span class="token function">searchAnalyzer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// 指定分词器</span>
    <span class="token class-name">String</span> <span class="token function">analyzer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建-repository" tabindex="-1"><a class="header-anchor" href="#创建-repository" aria-hidden="true">#</a> 创建 Repository</h2><blockquote><p><strong>注意：</strong> 没有这一步，即便在实体上方设置@Document，SpringBoot 启动也不会创建 mapping</p></blockquote><p>Spring Data 的强大之处，就在于你不用写任何DAO处理，自动根据方法名或类的信息进行CRUD操作。只要你定义一个接口，然后继承Repository提供的一些子接口，就能具备各种基本的CRUD功能</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Repository</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StrategyEsRepository</span> <span class="token keyword">extends</span> <span class="token class-name">ElasticsearchRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StrategyEs</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>映射结构如下👇</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;_doc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;_class&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token property">&quot;doc_values&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;subTitle&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;summary&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="crud-操作" tabindex="-1"><a class="header-anchor" href="#crud-操作" aria-hidden="true">#</a> Crud 操作</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ElasticsearchTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">StrategyEsRepository</span> strategyEsRepository<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">createStrategyEsTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StrategyEs</span> strategyEs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StrategyEs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 添加 and 修改</span>
        strategyEsRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>strategyEs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        strategyEsRepository<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        strategyEsRepository<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>strategyEs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="elasticsearchresttemplate" tabindex="-1"><a class="header-anchor" href="#elasticsearchresttemplate" aria-hidden="true">#</a> ElasticsearchRestTemplate</h2><p>ES有两个模板，分别为<code>ElasticsearchRestTemplate</code>和 <s><code>ElasticsearchTemplate</code></s></p><p>分别对应于<strong>High Level REST Client</strong>和 <s><strong>Transport Client</strong>(弃用)</s>，两个模板都实现了<code>ElasticsearchOperations</code>接口，由于 ElasticsearchTemplate 弃用，因此使用时我们一般使用 <strong>ElasticsearchRestTemplate</strong></p><p><strong>注入模板</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">ElasticsearchRestTemplate</span> restTemplate<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crud-索引" tabindex="-1"><a class="header-anchor" href="#crud-索引" aria-hidden="true">#</a> Crud 索引</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">crudIndexTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建索引</span>
    restTemplate<span class="token punctuation">.</span><span class="token function">indexOps</span><span class="token punctuation">(</span><span class="token class-name">IndexCoordinates</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;es_test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 索引是否存在</span>
    restTemplate<span class="token punctuation">.</span><span class="token function">indexOps</span><span class="token punctuation">(</span>indexCoordinates<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 删除索引</span>
    restTemplate<span class="token punctuation">.</span><span class="token function">indexOps</span><span class="token punctuation">(</span>indexCoordinates<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),q={class:"hint-container tip"},x=n("p",{class:"hint-container-title"},"提示",-1),f=n("p",null,"至此，SpringBoot 集成 Elasticsearch 就算完成了，我们就可以用 Java 代码去操作我们的 Elasticsearch",-1),_=n("p",null,[n("strong",null,[s("其中因为 "),n("em",null,"旧版本的 Repository 中的 search 方法被废弃了"),s(" ，只能操作简单的 Crud 操作，复杂的查询就需要使用 ElasticsearchRestTemplate 了")])],-1),w=n("strong",null,"Spring Data Elasticsearch",-1);function E(S,T){const t=e("ExternalLinkIcon"),o=e("RouterLink");return l(),i("div",null,[d,k,v,m,n("p",null,[s("参考地址："),n("a",b,[s("https://github.com/spring-projects/spring-data-elasticsearch/blob/main/src/main/asciidoc/preface.adoc"),a(t)])]),h,n("blockquote",null,[n("p",null,[s("默认的地址就是："),n("a",g,[s("http://localhost:9200"),a(t)]),s(" 如果你的端口地址不一致或者你设置了账号密码验证，需要配置你的信息")])]),y,n("div",q,[x,f,_,n("p",null,[s("如需要查看 "),w,s(" 的复杂查询，请看："),a(o,{to:"/passages/2021-08-19-elasticsearch-complex-query.html"},{default:u(()=>[s("Elasticsearch - 复杂查询")]),_:1})])])])}const D=c(r,[["render",E],["__file","06.Elasticsearch-SpringBoot整合.html.vue"]]);export{D as default};
