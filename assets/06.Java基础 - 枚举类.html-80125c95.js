import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-2171d096.js";const e={},p=t(`<h1 id="java基础-枚举类" tabindex="-1"><a class="header-anchor" href="#java基础-枚举类" aria-hidden="true">#</a> Java基础 - 枚举类</h1><blockquote><p>本文介绍 Java 枚举类的相关知识</p></blockquote><h2 id="枚举类的介绍" tabindex="-1"><a class="header-anchor" href="#枚举类的介绍" aria-hidden="true">#</a> 枚举类的介绍</h2><p>Java 枚举是一个特殊的类，一般表示一组常量，比如一年的 4 个季节，一个年的 12 个月份，一个星期的 7 天，方向有东南西北等</p><h2 id="枚举类的使用规则" tabindex="-1"><a class="header-anchor" href="#枚举类的使用规则" aria-hidden="true">#</a> 枚举类的使用规则</h2><ul><li><p><strong>类的对象是确定的有限个数</strong></p></li><li><p><strong>当需要定义一组常量时，建议使用枚举</strong></p></li><li><p><strong>如果枚举类中只有一个对象，则可以作为单例模式的实现方法</strong></p></li><li><p><strong>枚举类不能被继承</strong></p></li><li><p><strong>枚举类不能被单独的new创建对象</strong></p></li><li><p><strong>枚举类的构造器是私有的</strong></p></li></ul><h2 id="枚举类的应用场景" tabindex="-1"><a class="header-anchor" href="#枚举类的应用场景" aria-hidden="true">#</a> 枚举类的应用场景</h2><ul><li><strong>星期：</strong> Monday（星期一）、Tuesday（星期二）、Wednesday（星期三）、Thursday（星期四）、Firday（星期五）、Saturday（星期六）、Sunday（星期日）</li><li><strong>性别：</strong> Man（男）、Woman（女）</li><li><strong>季节：</strong> Spring（春天）、Summer（夏天）、Autumn（秋天）、Winter（冬天）</li><li><strong>支付方式：</strong> Cash（现金）、WeChatPay（微信）、Alipay（支付宝）、BankCard（银行卡）、CreditCard（信用卡）</li><li><strong>订单状态：</strong> Nonpayment（未付款）、Paid（已付款）、Fulfilled（已配货）、Delivered（已发货）、Return（退货）、Checked（已确认）</li><li><strong>线程状态：</strong> Establish（创建）、Ready（就绪）、Run（运行）、Obstruct（阻塞）、Die（死亡）</li><li>等等……</li></ul><h2 id="使用案例" tabindex="-1"><a class="header-anchor" href="#使用案例" aria-hidden="true">#</a> 使用案例</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * redis的key的管理类
 * 约定：一个redis key 映射一个枚举实例
 */</span>
<span class="token annotation punctuation">@Getter</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">RedisKeys</span> <span class="token punctuation">{</span>
    <span class="token comment">//用户登录key 实例</span>
    <span class="token function">USER_LOGIN_TOKEN</span><span class="token punctuation">(</span><span class="token string">&quot;user_login_token&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">60L</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">//注册短信验证码key 实例</span>
    <span class="token function">REGIST_VERIFGY_CODE</span><span class="token punctuation">(</span><span class="token string">&quot;regist_verifgy_code&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60L</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> prefix<span class="token punctuation">;</span>  <span class="token comment">// key的前缀</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> time<span class="token punctuation">;</span>    <span class="token comment">//key有效时间， 单位是s</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisKeys</span><span class="token punctuation">(</span><span class="token class-name">String</span> prefix<span class="token punctuation">,</span> <span class="token class-name">Long</span> time<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prefix <span class="token operator">=</span> prefix<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>time <span class="token operator">=</span> time<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//拼接出完整redis的key</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> values<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>prefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> value <span class="token operator">:</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","06.Java基础 - 枚举类.html.vue"]]);export{d as default};
